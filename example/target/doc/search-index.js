var searchIndex={};
searchIndex["adder"] = {"doc":"","i":[[5,"load_wasm","adder","",null,[[],["result"]]]],"p":[]};
searchIndex["arrayref"] = {"doc":"This package contains just four macros, which enable the…","i":[[14,"array_ref","arrayref","You can use `array_ref` to generate an array reference to…",null,null],[14,"array_refs","","You can use `array_refs` to generate a series of array…",null,null],[14,"mut_array_refs","","You can use `mut_array_refs` to generate a series of…",null,null],[14,"array_mut_ref","","You can use `array_mut_ref` to generate a mutable array…",null,null]],"p":[]};
searchIndex["arrayvec"] = {"doc":"arrayvec provides the types `ArrayVec` and `ArrayString`:…","i":[[3,"ArrayString","arrayvec","A string with a fixed capacity.",null,null],[3,"CapacityError","","Error value indicating insufficient capacity",null,null],[3,"ArrayVec","","A vector with a fixed capacity.",null,null],[3,"IntoIter","","By-value iterator for `ArrayVec`.",null,null],[3,"Drain","","A draining iterator for `ArrayVec`.",null,null],[11,"new","","Create a new empty `ArrayString`.",0,[[],["arraystring"]]],[11,"len","","Return the length of the string.",0,[[["self"]],["usize"]]],[11,"from","","Create a new `ArrayString` from a `str`.",0,[[["str"]],[["result",["capacityerror"]],["capacityerror",["str"]]]]],[11,"from_byte_string","","Create a new `ArrayString` from a byte string literal.",0,[[["a"]],[["utf8error"],["result",["utf8error"]]]]],[11,"capacity","","Return the capacity of the `ArrayString`.",0,[[["self"]],["usize"]]],[11,"is_full","","Return if the `ArrayString` is completely filled.",0,[[["self"]],["bool"]]],[11,"push","","Adds the given char to the end of the string.",0,[[["self"],["char"]]]],[11,"try_push","","Adds the given char to the end of the string.",0,[[["self"],["char"]],[["capacityerror",["char"]],["result",["capacityerror"]]]]],[11,"push_str","","Adds the given string slice to the end of the string.",0,[[["str"],["self"]]]],[11,"try_push_str","","Adds the given string slice to the end of the string.",0,[[["self"],["str"]],[["result",["capacityerror"]],["capacityerror",["str"]]]]],[11,"pop","","Removes the last character from the string and returns it.",0,[[["self"]],[["option",["char"]],["char"]]]],[11,"truncate","","Shortens this `ArrayString` to the specified length.",0,[[["self"],["usize"]]]],[11,"remove","","Removes a `char` from this `ArrayString` at a byte…",0,[[["self"],["usize"]],["char"]]],[11,"clear","","Make the string empty.",0,[[["self"]]]],[11,"set_len","","Set the strings’s length.",0,[[["self"],["usize"]]]],[11,"as_str","","Return a string slice of the whole `ArrayString`.",0,[[["self"]],["str"]]],[11,"new","","Create a new `CapacityError` from `element`.",1,[[["t"]],["capacityerror"]]],[11,"element","","Extract the overflowing element",1,[[],["t"]]],[11,"simplify","","Convert into a `CapacityError` that does not carry an…",1,[[],["capacityerror"]]],[8,"Array","","Trait for fixed size arrays.",null,null],[16,"Item","","The array’s element type",2,null],[18,"CAPACITY","","The array's element capacity",2,null],[10,"as_slice","","",2,[[["self"]]]],[10,"as_mut_slice","","",2,[[["self"]]]],[11,"new","","Create a new empty `ArrayVec`.",3,[[],["arrayvec"]]],[11,"len","","Return the number of elements in the `ArrayVec`.",3,[[["self"]],["usize"]]],[11,"capacity","","Return the capacity of the `ArrayVec`.",3,[[["self"]],["usize"]]],[11,"is_full","","Return if the `ArrayVec` is completely filled.",3,[[["self"]],["bool"]]],[11,"remaining_capacity","","Returns the capacity left in the `ArrayVec`.",3,[[["self"]],["usize"]]],[11,"push","","Push `element` to the end of the vector.",3,[[["self"]]]],[11,"try_push","","Push `element` to the end of the vector.",3,[[["self"]],[["result",["capacityerror"]],["capacityerror"]]]],[11,"push_unchecked","","Push `element` to the end of the vector without checking…",3,[[["self"]]]],[11,"insert","","Insert `element` at position `index`.",3,[[["self"],["usize"]]]],[11,"try_insert","","Insert `element` at position `index`.",3,[[["self"],["usize"]],[["result",["capacityerror"]],["capacityerror"]]]],[11,"pop","","Remove the last element in the vector and return it.",3,[[["self"]],["option"]]],[11,"swap_remove","","Remove the element at `index` and swap the last element…",3,[[["self"],["usize"]]]],[11,"swap_pop","","Remove the element at `index` and swap the last element…",3,[[["self"],["usize"]],["option"]]],[11,"remove","","Remove the element at `index` and shift down the following…",3,[[["self"],["usize"]]]],[11,"pop_at","","Remove the element at `index` and shift down the following…",3,[[["self"],["usize"]],["option"]]],[11,"truncate","","Shortens the vector, keeping the first `len` elements and…",3,[[["self"],["usize"]]]],[11,"clear","","Remove all elements in the vector.",3,[[["self"]]]],[11,"retain","","Retains only the elements specified by the predicate.",3,[[["self"],["f"]]]],[11,"set_len","","Set the vector’s length without dropping or moving out…",3,[[["self"],["usize"]]]],[11,"try_extend_from_slice","","Copy and appends all elements in a slice to the `ArrayVec`.",3,[[["self"]],[["capacityerror"],["result",["capacityerror"]]]]],[11,"drain","","Create a draining iterator that removes the specified…",3,[[["self"],["r"]],["drain"]]],[11,"into_inner","","Return the inner fixed size array, if it is full to its…",3,[[],["result"]]],[11,"dispose","","Dispose of `self` (same as drop)",3,[[]]],[11,"as_slice","","Return a slice containing all elements of the vector.",3,[[["self"]]]],[11,"as_mut_slice","","Return a mutable slice containing all elements of the…",3,[[["self"]]]],[11,"as_ptr","","Return a raw pointer to the vector's buffer.",3,[[["self"]]]],[11,"as_mut_ptr","","Return a raw mutable pointer to the vector's buffer.",3,[[["self"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"from","","",3,[[],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"deref","","",0,[[["self"]],["str"]]],[11,"deref","","",3,[[["self"]]]],[11,"deref_mut","","",0,[[["self"]],["str"]]],[11,"deref_mut","","",3,[[["self"]]]],[11,"from","","",3,[[["a"]],["self"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"]],["bool"]]],[11,"eq","","",0,[[["str"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"ne","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"eq","","",3,[[["self"]],["bool"]]],[11,"eq","","",3,[[["self"]],["bool"]]],[11,"cmp","","",0,[[["self"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["capacityerror"]],["ordering"]]],[11,"cmp","","",3,[[["arrayvec"],["self"]],["ordering"]]],[11,"partial_cmp","","",0,[[["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["self"]],["bool"]]],[11,"le","","",0,[[["self"]],["bool"]]],[11,"gt","","",0,[[["self"]],["bool"]]],[11,"ge","","",0,[[["self"]],["bool"]]],[11,"partial_cmp","","",0,[[["str"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["str"],["self"]],["bool"]]],[11,"le","","",0,[[["str"],["self"]],["bool"]]],[11,"gt","","",0,[[["str"],["self"]],["bool"]]],[11,"ge","","",0,[[["str"],["self"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["capacityerror"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"le","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"gt","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"ge","","",1,[[["self"],["capacityerror"]],["bool"]]],[11,"partial_cmp","","",3,[[["arrayvec"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",3,[[["self"]],["bool"]]],[11,"le","","",3,[[["self"]],["bool"]]],[11,"ge","","",3,[[["self"]],["bool"]]],[11,"gt","","",3,[[["self"]],["bool"]]],[11,"from_str","","",0,[[["str"]],["result"]]],[11,"drop","","",3,[[["self"]]]],[11,"drop","","",4,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"hash","","",0,[[["self"],["h"]]]],[11,"hash","","",3,[[["self"],["h"]]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"size_hint","","",4,[[["self"]]]],[11,"next","","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,[[["self"]]]],[11,"from_iter","","",3,[[["intoiterator"]],["self"]]],[11,"into_iter","","",3,[[],["intoiter"]]],[11,"next_back","","",4,[[["self"]],["option"]]],[11,"next_back","","",5,[[["self"]],["option"]]],[11,"extend","","",3,[[["intoiterator"],["self"]]]],[11,"write_char","","",0,[[["self"],["char"]],["result"]]],[11,"write_str","","",0,[[["str"],["self"]],["result"]]],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"as_ref","","",3,[[["self"]]]],[11,"as_mut","","",3,[[["self"]]]],[11,"clone","","",0,[[["self"]],["arraystring"]]],[11,"clone_from","","",0,[[["self"],["self"]]]],[11,"clone","","",1,[[["self"]],["capacityerror"]]],[11,"clone","","",4,[[["self"]],["intoiter"]]],[11,"clone","","",3,[[["self"]],["self"]]],[11,"clone_from","","",3,[[["self"],["self"]]]],[11,"default","","Return an empty `ArrayString`",0,[[],["arraystring"]]],[11,"default","","Return an empty array",3,[[],["arrayvec"]]],[11,"borrow","","",0,[[["self"]],["str"]]],[11,"borrow","","",3,[[["self"]]]],[11,"borrow_mut","","",3,[[["self"]]]],[18,"CAPACITY","","The array's element capacity",2,null]],"p":[[3,"ArrayString"],[3,"CapacityError"],[8,"Array"],[3,"ArrayVec"],[3,"IntoIter"],[3,"Drain"]]};
searchIndex["bincode"] = {"doc":"Bincode is a crate for encoding and decoding using a tiny…","i":[[3,"Config","bincode","A configuration builder whose options Bincode will use…",null,null],[4,"ErrorKind","","The kind of error that can be produced during a…",null,null],[13,"Io","","If the error stems from the reader/writer that is being…",0,null],[13,"InvalidUtf8Encoding","","Returned if the deserializer attempts to deserialize a…",0,null],[13,"InvalidBoolEncoding","","Returned if the deserializer attempts to deserialize a…",0,null],[13,"InvalidCharEncoding","","Returned if the deserializer attempts to deserialize a…",0,null],[13,"InvalidTagEncoding","","Returned if the deserializer attempts to deserialize the…",0,null],[13,"DeserializeAnyNotSupported","","Serde has a deserialize_any method that lets the format…",0,null],[13,"SizeLimit","","If (de)serializing a message takes more than the provided…",0,null],[13,"SequenceMustHaveLength","","Bincode can not encode sequences of unknown length (like…",0,null],[13,"Custom","","A custom error message from Serde.",0,null],[5,"config","","Get a default configuration object.",null,[[],["config"]]],[5,"serialize_into","","Serializes an object directly into a `Writer` using the…",null,[[["w"],["t"]],["result"]]],[5,"serialize","","Serializes a serializable object into a `Vec` of bytes…",null,[[["t"]],[["result",["vec"]],["vec",["u8"]]]]],[5,"deserialize_from","","Deserializes an object directly from a `Read`er using the…",null,[[["r"]],["result"]]],[5,"deserialize_from_custom","","Deserializes an object from a custom `BincodeRead`er using…",null,[[["r"]],["result"]]],[5,"deserialize","","Deserializes a slice of bytes into an instance of `T`…",null,[[],["result"]]],[5,"serialized_size","","Returns the size that an object would be if serialized…",null,[[["t"]],[["result",["u64"]],["u64"]]]],[11,"no_limit","","Sets the byte limit to be unlimited. This is the default.",1,[[["self"]],["self"]]],[11,"limit","","Sets the byte limit to `limit`.",1,[[["self"],["u64"]],["self"]]],[11,"little_endian","","Sets the endianness to little-endian This is the default.",1,[[["self"]],["self"]]],[11,"big_endian","","Sets the endianness to big-endian",1,[[["self"]],["self"]]],[11,"native_endian","","Sets the endianness to the the machine-native endianness",1,[[["self"]],["self"]]],[11,"serialize","","Serializes a serializable object into a `Vec` of bytes…",1,[[["t"],["self"]],[["result",["vec"]],["vec",["u8"]]]]],[11,"serialized_size","","Returns the size that an object would be if serialized…",1,[[["t"],["self"]],[["result",["u64"]],["u64"]]]],[11,"serialize_into","","Serializes an object directly into a `Writer` using this…",1,[[["t"],["self"],["write"]],["result"]]],[11,"deserialize","","Deserializes a slice of bytes into an instance of `T`…",1,[[["self"]],[["result"],["deserialize"]]]],[11,"deserialize_seed","","Deserializes a slice of bytes with state `seed` using this…",1,[[["deserializeseed"],["self"]],["result"]]],[11,"deserialize_from","","Deserializes an object directly from a `Read`er using this…",1,[[["read"],["self"]],[["result"],["deserializeowned"]]]],[11,"deserialize_from_seed","","Deserializes an object directly from a `Read`er with state…",1,[[["deserializeseed"],["read"],["self"]],["result"]]],[11,"deserialize_from_custom","","Deserializes an object from a custom `BincodeRead`er using…",1,[[["self"],["bincoderead"]],[["result"],["deserializeowned"]]]],[11,"deserialize_from_custom_seed","","Deserializes an object from a custom `BincodeRead`er with…",1,[[["deserializeseed"],["self"],["bincoderead"]],["result"]]],[6,"Error","","An error that can be produced during (de)serializing.",null,null],[6,"Result","","The result of a serialization or deserialization operation.",null,null],[8,"BincodeRead","","An optional Read trait for advanced Bincode usage.",null,null],[10,"forward_read_str","","Forwards reading `length` bytes of a string on to the…",2,[[["self"],["usize"],["v"]],["result"]]],[10,"get_byte_buffer","","Return the first `length` bytes of the internal byte buffer.",2,[[["self"],["usize"]],[["result",["vec"]],["vec",["u8"]]]]],[10,"forward_read_bytes","","Forwards reading `length` bytes on to the serde reader.",2,[[["self"],["usize"],["v"]],["result"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",3,[[["error"]],["error"]]],[11,"clone","","",1,[[["self"]],["config"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"cause","","",0,[[["self"]],[["option",["error"]],["error"]]]],[11,"custom","","",3,[[["display"]],["self"]]],[11,"custom","","",3,[[["display"]],["error"]]]],"p":[[4,"ErrorKind"],[3,"Config"],[8,"BincodeRead"],[6,"Error"]]};
searchIndex["bitflags"] = {"doc":"A typesafe bitmask flag generator useful for sets of…","i":[[14,"bitflags","bitflags","The macro used to generate the flag structure.",null,null]],"p":[]};
searchIndex["blake2b_simd"] = {"doc":"GitHub crates.io Build Status","i":[[3,"Params","blake2b_simd","A parameter builder that exposes all the non-default…",null,null],[3,"State","","An incremental hasher for BLAKE2b.",null,null],[3,"Hash","","A finalized BLAKE2 hash, with constant-time equality.",null,null],[5,"blake2b","","Compute the BLAKE2b hash of a slice of bytes all at once,…",null,[[],["hash"]]],[0,"blake2bp","","BLAKE2bp, a variant of BLAKE2b that uses SIMD more…",null,null],[3,"Params","blake2b_simd::blake2bp","A parameter builder for BLAKE2bp, just like the `Params`…",null,null],[3,"State","","An incremental hasher for BLAKE2bp, just like the `State`…",null,null],[5,"blake2bp","","Compute the BLAKE2bp hash of a slice of bytes all at once,…",null,[[],["hash"]]],[11,"new","","Equivalent to `Params::default()`.",0,[[],["self"]]],[11,"hash","","Hash an input all at once with these parameters.",0,[[["self"]],["hash"]]],[11,"to_state","","Construct a BLAKE2bp `State` object based on these…",0,[[["self"]],["state"]]],[11,"hash_length","","Set the length of the final hash, from 1 to `OUTBYTES`…",0,[[["self"],["usize"]],["self"]]],[11,"key","","Use a secret key, so that BLAKE2bp acts as a MAC. The…",0,[[["self"]],["self"]]],[11,"new","","Equivalent to `State::default()` or…",1,[[],["self"]]],[11,"update","","Add input to the hash. You can call `update` any number of…",1,[[["self"]],["self"]]],[11,"finalize","","Finalize the state and return a `Hash`. This method is…",1,[[["self"]],["hash"]]],[11,"count","","Return the total number of bytes input so far.",1,[[["self"]],["u128"]]],[0,"many","blake2b_simd","Interfaces for hashing multiple inputs at once, using SIMD…",null,null],[3,"HashManyJob","blake2b_simd::many","A job for the [`hash_many`] function. After calling…",null,null],[5,"degree","","The parallelism degree of the implementation, detected at…",null,[[],["usize"]]],[5,"update_many","","Update any number of `State` objects at once.",null,[[["i"]]]],[5,"hash_many","","Hash any number of complete inputs all at once.",null,[[["i"]]]],[17,"MAX_DEGREE","","The largest possible value of `degree` on the target…",null,null],[11,"new","","Construct a new `HashManyJob` from a set of hashing…",2,[[["params"]],["self"]]],[11,"to_hash","","Get the hash from a finished job. If you call this before…",2,[[["self"]],["hash"]]],[17,"OUTBYTES","blake2b_simd","The max hash length.",null,null],[17,"KEYBYTES","","The max key length.",null,null],[17,"SALTBYTES","","The max salt length.",null,null],[17,"PERSONALBYTES","","The max personalization length.",null,null],[17,"BLOCKBYTES","","The number input bytes passed to each call to the…",null,null],[11,"new","","Equivalent to `Params::default()`.",3,[[],["self"]]],[11,"hash","","Hash an input all at once with these parameters.",3,[[["self"]],["hash"]]],[11,"to_state","","Construct a `State` object based on these parameters, for…",3,[[["self"]],["state"]]],[11,"hash_length","","Set the length of the final hash in bytes, from 1 to…",3,[[["self"],["usize"]],["self"]]],[11,"key","","Use a secret key, so that BLAKE2 acts as a MAC. The…",3,[[["self"]],["self"]]],[11,"salt","","At most `SALTBYTES` (16). Shorter salts are padded with…",3,[[["self"]],["self"]]],[11,"personal","","At most `PERSONALBYTES` (16). Shorter personalizations are…",3,[[["self"]],["self"]]],[11,"fanout","","From 0 (meaning unlimited) to 255. The default is 1…",3,[[["self"],["u8"]],["self"]]],[11,"max_depth","","From 0 (meaning BLAKE2X B2 hashes), through 1 (the…",3,[[["self"],["u8"]],["self"]]],[11,"max_leaf_length","","From 0 (the default, meaning unlimited or sequential) to…",3,[[["self"],["u32"]],["self"]]],[11,"node_offset","","From 0 (the default, meaning first, leftmost, leaf, or…",3,[[["self"],["u64"]],["self"]]],[11,"node_depth","","From 0 (the default, meaning leaf or sequential) to 255.",3,[[["self"],["u8"]],["self"]]],[11,"inner_hash_length","","From 0 (the default, meaning sequential) to `OUTBYTES` (64).",3,[[["self"],["usize"]],["self"]]],[11,"last_node","","Indicates the rightmost node in a row. This can also be…",3,[[["self"],["bool"]],["self"]]],[11,"new","","Equivalent to `State::default()` or…",4,[[],["self"]]],[11,"update","","Add input to the hash. You can call `update` any number of…",4,[[["self"]],["self"]]],[11,"finalize","","Finalize the state and return a `Hash`. This method is…",4,[[["self"]],["hash"]]],[11,"set_last_node","","Set a flag indicating that this is the last node of its…",4,[[["self"],["bool"]],["self"]]],[11,"count","","Return the total number of bytes input so far.",4,[[["self"]],["u128"]]],[11,"as_bytes","","Convert the hash to a byte slice. Note that if you're…",5,[[["self"]]]],[11,"as_array","","Convert the hash to a byte array. Note that if you're…",5,[[["self"]]]],[11,"to_hex","","Convert the hash to a lowercase hexadecimal `ArrayString`.",5,[[["self"]],["arraystring"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","blake2b_simd::blake2bp","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","blake2b_simd::many","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"as_ref","blake2b_simd","",5,[[["self"]]]],[11,"clone","blake2b_simd::blake2bp","",0,[[["self"]],["params"]]],[11,"clone","","",1,[[["self"]],["state"]]],[11,"clone","blake2b_simd::many","",2,[[["self"]],["hashmanyjob"]]],[11,"clone","blake2b_simd","",3,[[["self"]],["params"]]],[11,"clone","","",4,[[["self"]],["state"]]],[11,"clone","","",5,[[["self"]],["hash"]]],[11,"default","blake2b_simd::blake2bp","",0,[[],["self"]]],[11,"default","","",1,[[],["self"]]],[11,"default","blake2b_simd","",3,[[],["self"]]],[11,"default","","",4,[[],["self"]]],[11,"eq","","",5,[[["hash"],["self"]],["bool"]]],[11,"eq","","",5,[[["self"]],["bool"]]],[11,"fmt","blake2b_simd::blake2bp","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","blake2b_simd::many","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","blake2b_simd","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"write","blake2b_simd::blake2bp","",1,[[["self"]],[["usize"],["result",["usize"]]]]],[11,"flush","","",1,[[["self"]],["result"]]],[11,"write","blake2b_simd","",4,[[["self"]],[["usize"],["result",["usize"]]]]],[11,"flush","","",4,[[["self"]],["result"]]]],"p":[[3,"Params"],[3,"State"],[3,"HashManyJob"],[3,"Params"],[3,"State"],[3,"Hash"]]};
searchIndex["byteorder"] = {"doc":"This crate provides convenience methods for encoding and…","i":[[4,"BigEndian","byteorder","Defines big-endian serialization.",null,null],[4,"LittleEndian","","Defines little-endian serialization.",null,null],[6,"BE","","A type alias for [`BigEndian`].",null,null],[6,"LE","","A type alias for [`LittleEndian`].",null,null],[6,"NetworkEndian","","Defines network byte order serialization.",null,null],[6,"NativeEndian","","Defines system native-endian serialization.",null,null],[8,"ReadBytesExt","","Extends [`Read`] with methods for reading numbers. (For…",null,null],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[["self"]],[["result",["u8"]],["u8"]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[["self"]],[["i8"],["result",["i8"]]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[["self"]],[["u16"],["result",["u16"]]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[["self"]],[["result",["i16"]],["i16"]]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[["self"]],[["i32"],["result",["i32"]]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[["self"]],[["i32"],["result",["i32"]]]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,[[["self"]],[["u64"],["result",["u64"]]]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[["self"]],[["i64"],["result",["i64"]]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[["self"]],[["u64"],["result",["u64"]]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[["self"]],[["i64"],["result",["i64"]]]]],[11,"read_u128","","Reads an unsigned 128 bit integer from the underlying…",0,[[["self"]],[["u128"],["result",["u128"]]]]],[11,"read_i128","","Reads a signed 128 bit integer from the underlying reader.",0,[[["self"]],[["i128"],["result",["i128"]]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],[["u64"],["result",["u64"]]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],[["i64"],["result",["i64"]]]]],[11,"read_uint128","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],[["u128"],["result",["u128"]]]]],[11,"read_int128","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],[["i128"],["result",["i128"]]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",0,[[["self"]],[["f32"],["result",["f32"]]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",0,[[["self"]],[["result",["f64"]],["f64"]]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u128_into","","Reads a sequence of unsigned 128 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i8_into","","Reads a sequence of signed 8 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i128_into","","Reads a sequence of signed 128 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes)…",0,[[["self"]],["result"]]],[11,"read_f32_into_unchecked","","DEPRECATED.",0,[[["self"]],["result"]]],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes)…",0,[[["self"]],["result"]]],[11,"read_f64_into_unchecked","","DEPRECATED.",0,[[["self"]],["result"]]],[8,"WriteBytesExt","","Extends [`Write`] with methods for writing numbers. (For…",null,null],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["self"],["u8"]],["result"]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["self"],["i8"]],["result"]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[["u16"],["self"]],["result"]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["self"],["i16"]],["result"]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[["i64"],["self"]],["result"]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["i64"],["self"]],["result"]]],[11,"write_u128","","Writes an unsigned 128 bit integer to the underlying writer.",1,[[["self"],["u128"]],["result"]]],[11,"write_i128","","Writes a signed 128 bit integer to the underlying writer.",1,[[["self"],["i128"]],["result"]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["u64"],["usize"]],["result"]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["i64"],["self"],["usize"]],["result"]]],[11,"write_uint128","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["usize"],["u128"]],["result"]]],[11,"write_int128","","Writes a signed n-bytes integer to the underlying writer.",1,[[["self"],["i128"],["usize"]],["result"]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",1,[[["f32"],["self"]],["result"]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",1,[[["self"],["f64"]],["result"]]],[8,"ByteOrder","","`ByteOrder` describes types that can serialize integers as…",null,null],[10,"read_u16","","Reads an unsigned 16 bit integer from `buf`.",2,[[],["u16"]]],[11,"read_u24","","Reads an unsigned 24 bit integer from `buf`, stored in u32.",2,[[],["u32"]]],[10,"read_u32","","Reads an unsigned 32 bit integer from `buf`.",2,[[],["u32"]]],[11,"read_u48","","Reads an unsigned 48 bit integer from `buf`, stored in u64.",2,[[],["u64"]]],[10,"read_u64","","Reads an unsigned 64 bit integer from `buf`.",2,[[],["u64"]]],[10,"read_u128","","Reads an unsigned 128 bit integer from `buf`.",2,[[],["u128"]]],[10,"read_uint","","Reads an unsigned n-bytes integer from `buf`.",2,[[["usize"]],["u64"]]],[10,"read_uint128","","Reads an unsigned n-bytes integer from `buf`.",2,[[["usize"]],["u128"]]],[10,"write_u16","","Writes an unsigned 16 bit integer `n` to `buf`.",2,[[["u16"]]]],[11,"write_u24","","Writes an unsigned 24 bit integer `n` to `buf`, stored in…",2,[[["u32"]]]],[10,"write_u32","","Writes an unsigned 32 bit integer `n` to `buf`.",2,[[["u32"]]]],[11,"write_u48","","Writes an unsigned 48 bit integer `n` to `buf`, stored in…",2,[[["u64"]]]],[10,"write_u64","","Writes an unsigned 64 bit integer `n` to `buf`.",2,[[["u64"]]]],[10,"write_u128","","Writes an unsigned 128 bit integer `n` to `buf`.",2,[[["u128"]]]],[10,"write_uint","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,[[["usize"],["u64"]]]],[10,"write_uint128","","Writes an unsigned integer `n` to `buf` using only `nbytes`.",2,[[["usize"],["u128"]]]],[11,"read_i16","","Reads a signed 16 bit integer from `buf`.",2,[[],["i16"]]],[11,"read_i24","","Reads a signed 24 bit integer from `buf`, stored in i32.",2,[[],["i32"]]],[11,"read_i32","","Reads a signed 32 bit integer from `buf`.",2,[[],["i32"]]],[11,"read_i48","","Reads a signed 48 bit integer from `buf`, stored in i64.",2,[[],["i64"]]],[11,"read_i64","","Reads a signed 64 bit integer from `buf`.",2,[[],["i64"]]],[11,"read_i128","","Reads a signed 128 bit integer from `buf`.",2,[[],["i128"]]],[11,"read_int","","Reads a signed n-bytes integer from `buf`.",2,[[["usize"]],["i64"]]],[11,"read_int128","","Reads a signed n-bytes integer from `buf`.",2,[[["usize"]],["i128"]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",2,[[],["f32"]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",2,[[],["f64"]]],[11,"write_i16","","Writes a signed 16 bit integer `n` to `buf`.",2,[[["i16"]]]],[11,"write_i24","","Writes a signed 24 bit integer `n` to `buf`, stored in i32.",2,[[["i32"]]]],[11,"write_i32","","Writes a signed 32 bit integer `n` to `buf`.",2,[[["i32"]]]],[11,"write_i48","","Writes a signed 48 bit integer `n` to `buf`, stored in i64.",2,[[["i64"]]]],[11,"write_i64","","Writes a signed 64 bit integer `n` to `buf`.",2,[[["i64"]]]],[11,"write_i128","","Writes a signed 128 bit integer `n` to `buf`.",2,[[["i128"]]]],[11,"write_int","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,[[["i64"],["usize"]]]],[11,"write_int128","","Writes a signed integer `n` to `buf` using only `nbytes`.",2,[[["i128"],["usize"]]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",2,[[["f32"]]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",2,[[["f64"]]]],[10,"read_u16_into","","Reads unsigned 16 bit integers from `src` into `dst`.",2,[[]]],[10,"read_u32_into","","Reads unsigned 32 bit integers from `src` into `dst`.",2,[[]]],[10,"read_u64_into","","Reads unsigned 64 bit integers from `src` into `dst`.",2,[[]]],[10,"read_u128_into","","Reads unsigned 128 bit integers from `src` into `dst`.",2,[[]]],[11,"read_i16_into","","Reads signed 16 bit integers from `src` to `dst`.",2,[[]]],[11,"read_i32_into","","Reads signed 32 bit integers from `src` into `dst`.",2,[[]]],[11,"read_i64_into","","Reads signed 64 bit integers from `src` into `dst`.",2,[[]]],[11,"read_i128_into","","Reads signed 128 bit integers from `src` into `dst`.",2,[[]]],[11,"read_f32_into","","Reads IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"read_f32_into_unchecked","","DEPRECATED.",2,[[]]],[11,"read_f64_into","","Reads IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"read_f64_into_unchecked","","DEPRECATED.",2,[[]]],[10,"write_u16_into","","Writes unsigned 16 bit integers from `src` into `dst`.",2,[[]]],[10,"write_u32_into","","Writes unsigned 32 bit integers from `src` into `dst`.",2,[[]]],[10,"write_u64_into","","Writes unsigned 64 bit integers from `src` into `dst`.",2,[[]]],[10,"write_u128_into","","Writes unsigned 128 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i8_into","","Writes signed 8 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i16_into","","Writes signed 16 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i32_into","","Writes signed 32 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i64_into","","Writes signed 64 bit integers from `src` into `dst`.",2,[[]]],[11,"write_i128_into","","Writes signed 128 bit integers from `src` into `dst`.",2,[[]]],[11,"write_f32_into","","Writes IEEE754 single-precision (4 bytes) floating point…",2,[[]]],[11,"write_f64_into","","Writes IEEE754 double-precision (8 bytes) floating point…",2,[[]]],[10,"from_slice_u16","","Converts the given slice of unsigned 16 bit integers to a…",2,[[]]],[10,"from_slice_u32","","Converts the given slice of unsigned 32 bit integers to a…",2,[[]]],[10,"from_slice_u64","","Converts the given slice of unsigned 64 bit integers to a…",2,[[]]],[10,"from_slice_u128","","Converts the given slice of unsigned 128 bit integers to a…",2,[[]]],[11,"from_slice_i16","","Converts the given slice of signed 16 bit integers to a…",2,[[]]],[11,"from_slice_i32","","Converts the given slice of signed 32 bit integers to a…",2,[[]]],[11,"from_slice_i64","","Converts the given slice of signed 64 bit integers to a…",2,[[]]],[11,"from_slice_i128","","Converts the given slice of signed 128 bit integers to a…",2,[[]]],[10,"from_slice_f32","","Converts the given slice of IEEE754 single-precision (4…",2,[[]]],[10,"from_slice_f64","","Converts the given slice of IEEE754 double-precision (8…",2,[[]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"read_u16","","",3,[[],["u16"]]],[11,"read_u32","","",3,[[],["u32"]]],[11,"read_u64","","",3,[[],["u64"]]],[11,"read_u128","","",3,[[],["u128"]]],[11,"read_uint","","",3,[[["usize"]],["u64"]]],[11,"read_uint128","","",3,[[["usize"]],["u128"]]],[11,"write_u16","","",3,[[["u16"]]]],[11,"write_u32","","",3,[[["u32"]]]],[11,"write_u64","","",3,[[["u64"]]]],[11,"write_u128","","",3,[[["u128"]]]],[11,"write_uint","","",3,[[["usize"],["u64"]]]],[11,"write_uint128","","",3,[[["usize"],["u128"]]]],[11,"read_u16_into","","",3,[[]]],[11,"read_u32_into","","",3,[[]]],[11,"read_u64_into","","",3,[[]]],[11,"read_u128_into","","",3,[[]]],[11,"write_u16_into","","",3,[[]]],[11,"write_u32_into","","",3,[[]]],[11,"write_u64_into","","",3,[[]]],[11,"write_u128_into","","",3,[[]]],[11,"from_slice_u16","","",3,[[]]],[11,"from_slice_u32","","",3,[[]]],[11,"from_slice_u64","","",3,[[]]],[11,"from_slice_u128","","",3,[[]]],[11,"from_slice_f32","","",3,[[]]],[11,"from_slice_f64","","",3,[[]]],[11,"read_u16","","",4,[[],["u16"]]],[11,"read_u32","","",4,[[],["u32"]]],[11,"read_u64","","",4,[[],["u64"]]],[11,"read_u128","","",4,[[],["u128"]]],[11,"read_uint","","",4,[[["usize"]],["u64"]]],[11,"read_uint128","","",4,[[["usize"]],["u128"]]],[11,"write_u16","","",4,[[["u16"]]]],[11,"write_u32","","",4,[[["u32"]]]],[11,"write_u64","","",4,[[["u64"]]]],[11,"write_u128","","",4,[[["u128"]]]],[11,"write_uint","","",4,[[["usize"],["u64"]]]],[11,"write_uint128","","",4,[[["usize"],["u128"]]]],[11,"read_u16_into","","",4,[[]]],[11,"read_u32_into","","",4,[[]]],[11,"read_u64_into","","",4,[[]]],[11,"read_u128_into","","",4,[[]]],[11,"write_u16_into","","",4,[[]]],[11,"write_u32_into","","",4,[[]]],[11,"write_u64_into","","",4,[[]]],[11,"write_u128_into","","",4,[[]]],[11,"from_slice_u16","","",4,[[]]],[11,"from_slice_u32","","",4,[[]]],[11,"from_slice_u64","","",4,[[]]],[11,"from_slice_u128","","",4,[[]]],[11,"from_slice_f32","","",4,[[]]],[11,"from_slice_f64","","",4,[[]]],[11,"clone","","",3,[[["self"]],["bigendian"]]],[11,"clone","","",4,[[["self"]],["littleendian"]]],[11,"default","","",3,[[],["bigendian"]]],[11,"default","","",4,[[],["littleendian"]]],[11,"cmp","","",3,[[["bigendian"],["self"]],["ordering"]]],[11,"cmp","","",4,[[["self"],["littleendian"]],["ordering"]]],[11,"eq","","",3,[[["bigendian"],["self"]],["bool"]]],[11,"eq","","",4,[[["self"],["littleendian"]],["bool"]]],[11,"partial_cmp","","",3,[[["bigendian"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",4,[[["self"],["littleendian"]],[["ordering"],["option",["ordering"]]]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",0,[[["self"]],[["result",["u8"]],["u8"]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",0,[[["self"]],[["i8"],["result",["i8"]]]]],[11,"read_u16","","Reads an unsigned 16 bit integer from the underlying reader.",0,[[["self"]],[["u16"],["result",["u16"]]]]],[11,"read_i16","","Reads a signed 16 bit integer from the underlying reader.",0,[[["self"]],[["result",["i16"]],["i16"]]]],[11,"read_u24","","Reads an unsigned 24 bit integer from the underlying reader.",0,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"read_i24","","Reads a signed 24 bit integer from the underlying reader.",0,[[["self"]],[["i32"],["result",["i32"]]]]],[11,"read_u32","","Reads an unsigned 32 bit integer from the underlying reader.",0,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"read_i32","","Reads a signed 32 bit integer from the underlying reader.",0,[[["self"]],[["i32"],["result",["i32"]]]]],[11,"read_u48","","Reads an unsigned 48 bit integer from the underlying reader.",0,[[["self"]],[["u64"],["result",["u64"]]]]],[11,"read_i48","","Reads a signed 48 bit integer from the underlying reader.",0,[[["self"]],[["i64"],["result",["i64"]]]]],[11,"read_u64","","Reads an unsigned 64 bit integer from the underlying reader.",0,[[["self"]],[["u64"],["result",["u64"]]]]],[11,"read_i64","","Reads a signed 64 bit integer from the underlying reader.",0,[[["self"]],[["i64"],["result",["i64"]]]]],[11,"read_u128","","Reads an unsigned 128 bit integer from the underlying…",0,[[["self"]],[["u128"],["result",["u128"]]]]],[11,"read_i128","","Reads a signed 128 bit integer from the underlying reader.",0,[[["self"]],[["i128"],["result",["i128"]]]]],[11,"read_uint","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],[["u64"],["result",["u64"]]]]],[11,"read_int","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],[["i64"],["result",["i64"]]]]],[11,"read_uint128","","Reads an unsigned n-bytes integer from the underlying…",0,[[["self"],["usize"]],[["u128"],["result",["u128"]]]]],[11,"read_int128","","Reads a signed n-bytes integer from the underlying reader.",0,[[["self"],["usize"]],[["i128"],["result",["i128"]]]]],[11,"read_f32","","Reads a IEEE754 single-precision (4 bytes) floating point…",0,[[["self"]],[["f32"],["result",["f32"]]]]],[11,"read_f64","","Reads a IEEE754 double-precision (8 bytes) floating point…",0,[[["self"]],[["result",["f64"]],["f64"]]]],[11,"read_u16_into","","Reads a sequence of unsigned 16 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u32_into","","Reads a sequence of unsigned 32 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u64_into","","Reads a sequence of unsigned 64 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_u128_into","","Reads a sequence of unsigned 128 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i8_into","","Reads a sequence of signed 8 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i16_into","","Reads a sequence of signed 16 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i32_into","","Reads a sequence of signed 32 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i64_into","","Reads a sequence of signed 64 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_i128_into","","Reads a sequence of signed 128 bit integers from the…",0,[[["self"]],["result"]]],[11,"read_f32_into","","Reads a sequence of IEEE754 single-precision (4 bytes)…",0,[[["self"]],["result"]]],[11,"read_f32_into_unchecked","","DEPRECATED.",0,[[["self"]],["result"]]],[11,"read_f64_into","","Reads a sequence of IEEE754 double-precision (8 bytes)…",0,[[["self"]],["result"]]],[11,"read_f64_into_unchecked","","DEPRECATED.",0,[[["self"]],["result"]]],[11,"write_u8","","Writes an unsigned 8 bit integer to the underlying writer.",1,[[["self"],["u8"]],["result"]]],[11,"write_i8","","Writes a signed 8 bit integer to the underlying writer.",1,[[["self"],["i8"]],["result"]]],[11,"write_u16","","Writes an unsigned 16 bit integer to the underlying writer.",1,[[["u16"],["self"]],["result"]]],[11,"write_i16","","Writes a signed 16 bit integer to the underlying writer.",1,[[["self"],["i16"]],["result"]]],[11,"write_u24","","Writes an unsigned 24 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i24","","Writes a signed 24 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u32","","Writes an unsigned 32 bit integer to the underlying writer.",1,[[["self"],["u32"]],["result"]]],[11,"write_i32","","Writes a signed 32 bit integer to the underlying writer.",1,[[["self"],["i32"]],["result"]]],[11,"write_u48","","Writes an unsigned 48 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i48","","Writes a signed 48 bit integer to the underlying writer.",1,[[["i64"],["self"]],["result"]]],[11,"write_u64","","Writes an unsigned 64 bit integer to the underlying writer.",1,[[["self"],["u64"]],["result"]]],[11,"write_i64","","Writes a signed 64 bit integer to the underlying writer.",1,[[["i64"],["self"]],["result"]]],[11,"write_u128","","Writes an unsigned 128 bit integer to the underlying writer.",1,[[["self"],["u128"]],["result"]]],[11,"write_i128","","Writes a signed 128 bit integer to the underlying writer.",1,[[["self"],["i128"]],["result"]]],[11,"write_uint","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["u64"],["usize"]],["result"]]],[11,"write_int","","Writes a signed n-bytes integer to the underlying writer.",1,[[["i64"],["self"],["usize"]],["result"]]],[11,"write_uint128","","Writes an unsigned n-bytes integer to the underlying writer.",1,[[["self"],["usize"],["u128"]],["result"]]],[11,"write_int128","","Writes a signed n-bytes integer to the underlying writer.",1,[[["self"],["i128"],["usize"]],["result"]]],[11,"write_f32","","Writes a IEEE754 single-precision (4 bytes) floating point…",1,[[["f32"],["self"]],["result"]]],[11,"write_f64","","Writes a IEEE754 double-precision (8 bytes) floating point…",1,[[["self"],["f64"]],["result"]]]],"p":[[8,"ReadBytesExt"],[8,"WriteBytesExt"],[8,"ByteOrder"],[4,"BigEndian"],[4,"LittleEndian"]]};
searchIndex["cfg_if"] = {"doc":"A macro for defining `#[cfg]` if-else statements.","i":[[14,"cfg_if","cfg_if","The main macro provided by this crate. See crate…",null,null]],"p":[]};
searchIndex["constant_time_eq"] = {"doc":"","i":[[5,"constant_time_eq","constant_time_eq","Compares two equal-sized byte strings in constant time.",null,[[],["bool"]]],[5,"constant_time_eq_16","","Compares two 128-bit byte strings in constant time.",null,[[],["bool"]]],[5,"constant_time_eq_32","","Compares two 256-bit byte strings in constant time.",null,[[],["bool"]]],[5,"constant_time_eq_64","","Compares two 512-bit byte strings in constant time.",null,[[],["bool"]]]],"p":[]};
searchIndex["cranelift_bforest"] = {"doc":"A forest of B+-trees.","i":[[3,"Map","cranelift_bforest","B-tree mapping from `K` to `V`.",null,null],[3,"MapCursor","","A position in a `Map` used to navigate and modify the…",null,null],[3,"MapForest","","Memory pool for a forest of `Map` instances.",null,null],[3,"MapIter","","An iterator visiting the key-value pairs of a `Map`.",null,null],[3,"Set","","B-tree representing an ordered set of `K`s using `C` for…",null,null],[3,"SetCursor","","A position in a `Set` used to navigate and modify the…",null,null],[3,"SetForest","","Memory pool for a forest of `Set` instances.",null,null],[3,"SetIter","","An iterator visiting the elements of a `Set`.",null,null],[11,"new","","Create a new empty forest.",0,[[],["self"]]],[11,"clear","","Clear all maps in the forest.",0,[[["self"]]]],[11,"new","","Make an empty map.",1,[[],["self"]]],[11,"is_empty","","Is this an empty map?",1,[[["self"]],["bool"]]],[11,"get","","Get the value stored for `key`.",1,[[["c"],["mapforest"],["self"],["k"]],["option"]]],[11,"get_or_less","","Look up the value stored for `key`.",1,[[["c"],["mapforest"],["self"],["k"]],["option"]]],[11,"insert","","Insert `key, value` into the map and return the old value…",1,[[["c"],["mapforest"],["self"],["k"],["v"]],["option"]]],[11,"remove","","Remove `key` from the map and return the removed value for…",1,[[["mapforest"],["self"],["k"],["c"]],["option"]]],[11,"clear","","Remove all entries.",1,[[["self"],["mapforest"]]]],[11,"retain","","Retains only the elements specified by the predicate.",1,[[["self"],["f"],["mapforest"]]]],[11,"cursor","","Create a cursor for navigating this map. The cursor is…",1,[[["mapforest"],["self"],["c"]],[["mapcursor"],["comparator"]]]],[11,"iter","","Create an iterator traversing this map. The iterator type…",1,[[["self"],["mapforest"]],["mapiter"]]],[11,"is_empty","","Is this cursor pointing to an empty map?",2,[[["self"]],["bool"]]],[11,"next","","Move cursor to the next key-value pair and return it.",2,[[["self"]],["option"]]],[11,"prev","","Move cursor to the previous key-value pair and return it.",2,[[["self"]],["option"]]],[11,"key","","Get the current key, or `None` if the cursor is at the end.",2,[[["self"]],["option"]]],[11,"value","","Get the current value, or `None` if the cursor is at the…",2,[[["self"]],["option"]]],[11,"value_mut","","Get a mutable reference to the current value, or `None` if…",2,[[["self"]],[["option"],["v"]]]],[11,"goto","","Move this cursor to `key`.",2,[[["self"],["k"]],["option"]]],[11,"goto_first","","Move this cursor to the first element.",2,[[["self"]],["option"]]],[11,"insert","","Insert `(key, value))` into the map and leave the cursor…",2,[[["self"],["k"],["v"]],["option"]]],[11,"remove","","Remove the current entry (if any) and return the mapped…",2,[[["self"]],["option"]]],[11,"new","","Create a new empty forest.",3,[[],["self"]]],[11,"clear","","Clear all sets in the forest.",3,[[["self"]]]],[11,"new","","Make an empty set.",4,[[],["self"]]],[11,"is_empty","","Is this an empty set?",4,[[["self"]],["bool"]]],[11,"contains","","Does the set contain `key`?.",4,[[["setforest"],["c"],["self"],["k"]],["bool"]]],[11,"insert","","Try to insert `key` into the set.",4,[[["setforest"],["self"],["k"],["c"]],["bool"]]],[11,"remove","","Remove `key` from the set and return true.",4,[[["setforest"],["self"],["k"],["c"]],["bool"]]],[11,"clear","","Remove all entries.",4,[[["self"],["setforest"]]]],[11,"retain","","Retains only the elements specified by the predicate.",4,[[["self"],["f"],["setforest"]]]],[11,"cursor","","Create a cursor for navigating this set. The cursor is…",4,[[["self"],["setforest"],["c"]],[["comparator"],["setcursor"]]]],[11,"iter","","Create an iterator traversing this set. The iterator type…",4,[[["self"],["setforest"]],["setiter"]]],[11,"is_empty","","Is this cursor pointing to an empty set?",5,[[["self"]],["bool"]]],[11,"next","","Move cursor to the next element and return it.",5,[[["self"]],["option"]]],[11,"prev","","Move cursor to the previous element and return it.",5,[[["self"]],["option"]]],[11,"elem","","Get the current element, or `None` if the cursor is at the…",5,[[["self"]],["option"]]],[11,"goto","","Move this cursor to `elem`.",5,[[["self"],["k"]],["bool"]]],[11,"goto_first","","Move this cursor to the first element.",5,[[["self"]],["option"]]],[11,"insert","","Try to insert `elem` into the set and leave the cursor at…",5,[[["self"],["k"]],["bool"]]],[11,"remove","","Remove the current element (if any) and return it. This…",5,[[["self"]],["option"]]],[8,"Comparator","","Key comparator.",null,null],[10,"cmp","","Compare keys `a` and `b`.",6,[[["self"],["k"]],["ordering"]]],[11,"search","","Binary search for `k` in an ordered slice.",6,[[["self"],["k"]],[["result",["usize","usize"]],["usize"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into_iter","","",7,[[],["i"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into_iter","","",8,[[],["i"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"next","","",7,[[["self"]],["option"]]],[11,"next","","",8,[[["self"]],["option"]]],[11,"clone","","",1,[[["self"]],["map"]]],[11,"clone","","",4,[[["self"]],["set"]]],[11,"default","","",1,[[],["self"]]],[11,"default","","",4,[[],["self"]]]],"p":[[3,"MapForest"],[3,"Map"],[3,"MapCursor"],[3,"SetForest"],[3,"Set"],[3,"SetCursor"],[8,"Comparator"],[3,"MapIter"],[3,"SetIter"]]};
searchIndex["cranelift_codegen"] = {"doc":"Cranelift code generation library.","i":[[0,"packed_option","cranelift_codegen","Compact representation of `Option<T>` for types with a…",null,null],[8,"ReservedValue","cranelift_codegen::packed_option","Types that have a reserved value which can't be created…",null,null],[10,"reserved_value","","Create an instance of the reserved value.",0,[[],["self"]]],[3,"PackedOption","","Packed representation of `Option<T>`.",null,null],[3,"Context","cranelift_codegen","Persistent data structures and compilation pipeline.",null,null],[12,"func","","The function we're compiling.",1,null],[12,"cfg","","The control flow graph of `func`.",1,null],[12,"domtree","","Dominator tree for `func`.",1,null],[12,"regalloc","","Register allocation context.",1,null],[12,"loop_analysis","","Loop analysis of `func`.",1,null],[12,"redundant_reload_remover","","Redundant-reload remover context.",1,null],[3,"ValueLocRange","","Value location range.",null,null],[12,"loc","","The ValueLoc containing a ValueLabel during this range.",2,null],[12,"start","","The start of the range.",2,null],[12,"end","","The end of the range.",2,null],[4,"CodegenError","","A compilation error.",null,null],[13,"Verifier","","A list of IR verifier errors.",3,null],[13,"ImplLimitExceeded","","An implementation limit was exceeded.",3,null],[13,"CodeTooLarge","","The code size for the function is too large.",3,null],[5,"legalize_function","","Legalize `func` for `isa`.",null,[[["function"],["controlflowgraph"],["targetisa"]]]],[0,"binemit","","Binary machine code emission.",null,null],[3,"MemoryCodeSink","cranelift_codegen::binemit","A `CodeSink` that writes binary machine code directly into…",null,null],[12,"info","","Information about the generated code and read-only data.",4,null],[3,"NullRelocSink","","A `RelocSink` implementation that does nothing, which is…",null,null],[3,"NullStackmapSink","","Placeholder StackmapSink that does nothing.",null,null],[3,"NullTrapSink","","A `TrapSink` implementation that does nothing, which is…",null,null],[3,"Stackmap","","Wrapper class for longer bit vectors that cannot be…",null,null],[3,"RegDiversions","","Keep track of diversions in an EBB.",null,null],[3,"CodeInfo","","Container for information about a vector of compiled code…",null,null],[12,"code_size","","Number of bytes of machine code (the code starts at offset…",5,null],[12,"jumptables_size","","Number of bytes of jumptables.",5,null],[12,"rodata_size","","Number of bytes of rodata.",5,null],[12,"total_size","","Number of bytes in total.",5,null],[4,"Reloc","","Relocation kinds for every ISA",null,null],[13,"Abs4","","absolute 4-byte",6,null],[13,"Abs8","","absolute 8-byte",6,null],[13,"X86PCRel4","","x86 PC-relative 4-byte",6,null],[13,"X86PCRelRodata4","","x86 PC-relative 4-byte offset to trailing rodata",6,null],[13,"X86CallPCRel4","","x86 call to PC-relative 4-byte",6,null],[13,"X86CallPLTRel4","","x86 call to PLT-relative 4-byte",6,null],[13,"X86GOTPCRel4","","x86 GOT PC-relative 4-byte",6,null],[13,"Arm32Call","","Arm32 call target",6,null],[13,"Arm64Call","","Arm64 call target",6,null],[13,"RiscvCall","","RISC-V call target",6,null],[5,"relax_branches","","Relax branches and compute the final layout of EBB headers…",null,[[["function"],["dominatortree"],["targetisa"],["controlflowgraph"]],[["codeinfo"],["codegenresult",["codeinfo"]]]]],[5,"shrink_instructions","","Pick the smallest valid encodings for instructions.",null,[[["function"],["targetisa"]]]],[5,"bad_encoding","","Report a bad encoding error.",null,[[["inst"],["function"]]]],[5,"emit_function","","Emit a function to `sink`, given an instruction emitter…",null,[[["cs"],["targetisa"],["ei"],["function"]]]],[11,"new","","Create a new memory code sink that writes a function to…",4,[[["stackmapsink"],["trapsink"],["relocsink"]],["self"]]],[11,"from_values","","Create a stackmap based on where references are located on…",7,[[["function"],["targetisa"]],["self"]]],[11,"from_slice","","Create a vec of Bitsets from a slice of bools.",7,[[],["self"]]],[11,"get_bit","","Returns a specified bit.",7,[[["self"],["usize"]],["bool"]]],[6,"CodeOffset","","Offset in bytes from the beginning of the function.",null,null],[6,"Addend","","Addend to add to the symbol value.",null,null],[8,"RelocSink","","A trait for receiving relocations for code that is emitted…",null,null],[10,"reloc_ebb","","Add a relocation referencing an EBB at the current offset.",8,[[["reloc"],["codeoffset"],["self"]]]],[10,"reloc_external","","Add a relocation referencing an external symbol at the…",8,[[["reloc"],["addend"],["codeoffset"],["self"],["externalname"]]]],[10,"reloc_constant","","Add a relocation referencing a constant.",8,[[["reloc"],["constantoffset"],["codeoffset"],["self"]]]],[10,"reloc_jt","","Add a relocation referencing a jump table.",8,[[["reloc"],["jumptable"],["codeoffset"],["self"]]]],[8,"StackmapSink","","A trait for emitting stackmaps.",null,null],[10,"add_stackmap","","Output a bitmap of the stack representing the live…",9,[[["self"],["codeoffset"],["stackmap"]]]],[8,"TrapSink","","A trait for receiving trap codes and offsets.",null,null],[10,"trap","","Add trap information for a specific offset.",10,[[["codeoffset"],["trapcode"],["self"],["sourceloc"]]]],[8,"CodeSink","","Abstract interface for adding bytes to the code segment.",null,null],[10,"offset","","Get the current position.",11,[[["self"]],["codeoffset"]]],[10,"put1","","Add 1 byte to the code section.",11,[[["self"],["u8"]]]],[10,"put2","","Add 2 bytes to the code section.",11,[[["u16"],["self"]]]],[10,"put4","","Add 4 bytes to the code section.",11,[[["self"],["u32"]]]],[10,"put8","","Add 8 bytes to the code section.",11,[[["self"],["u64"]]]],[10,"reloc_ebb","","Add a relocation referencing an EBB at the current offset.",11,[[["reloc"],["self"],["codeoffset"]]]],[10,"reloc_external","","Add a relocation referencing an external symbol plus the…",11,[[["reloc"],["addend"],["self"],["externalname"]]]],[10,"reloc_constant","","Add a relocation referencing a constant.",11,[[["reloc"],["self"],["constantoffset"]]]],[10,"reloc_jt","","Add a relocation referencing a jump table.",11,[[["reloc"],["self"],["jumptable"]]]],[10,"trap","","Add trap information for the current offset.",11,[[["trapcode"],["self"],["sourceloc"]]]],[10,"begin_jumptables","","Machine code output is complete, jump table data may follow.",11,[[["self"]]]],[10,"begin_rodata","","Jump table output is complete, raw read-only data may…",11,[[["self"]]]],[10,"end_codegen","","Read-only data output is complete, we're done.",11,[[["self"]]]],[10,"add_stackmap","","Add a stackmap at the current code offset.",11,[[["targetisa"],["self"],["function"]]]],[11,"jumptables","","Offset of any relocatable jump tables, or equal to rodata…",5,[[["self"]],["codeoffset"]]],[11,"rodata","","Offset of any copyable read-only data, or equal to…",5,[[["self"]],["codeoffset"]]],[0,"cfg_printer","cranelift_codegen","The `CFGPrinter` utility.",null,null],[3,"CFGPrinter","cranelift_codegen::cfg_printer","A utility for pretty-printing the CFG of a `Function`.",null,null],[11,"new","","Create a new CFGPrinter.",12,[[["function"]],["self"]]],[11,"write","","Write the CFG for this function to `w`.",12,[[["self"],["write"]],["result"]]],[0,"cursor","cranelift_codegen","Cursor library.",null,null],[3,"FuncCursor","cranelift_codegen::cursor","Function cursor.",null,null],[12,"func","","The referenced function.",13,null],[3,"EncCursor","","Encoding cursor.",null,null],[12,"func","","The referenced function.",14,null],[12,"isa","","The target ISA that will be used to encode instructions.",14,null],[4,"CursorPosition","","The possible positions of a cursor.",null,null],[13,"Nowhere","","Cursor is not pointing anywhere. No instructions can be…",15,null],[13,"At","","Cursor is pointing at an existing instruction. New…",15,null],[13,"Before","","Cursor is before the beginning of an EBB. No instructions…",15,null],[13,"After","","Cursor is pointing after the end of an EBB. New…",15,null],[8,"Cursor","","All cursor types implement the `Cursor` which provides…",null,null],[10,"position","","Get the current cursor position.",16,[[["self"]],["cursorposition"]]],[10,"set_position","","Set the current position.",16,[[["cursorposition"],["self"]]]],[10,"srcloc","","Get the source location that should be assigned to new…",16,[[["self"]],["sourceloc"]]],[10,"set_srcloc","","Set the source location that should be assigned to new…",16,[[["self"],["sourceloc"]]]],[10,"layout","","Borrow a reference to the function layout that this cursor…",16,[[["self"]],["layout"]]],[10,"layout_mut","","Borrow a mutable reference to the function layout that…",16,[[["self"]],["layout"]]],[11,"with_srcloc","","Exchange this cursor for one with a set source location.",16,[[["sourceloc"]],["self"]]],[11,"at_position","","Rebuild this cursor positioned at `pos`.",16,[[["cursorposition"]],["self"]]],[11,"at_inst","","Rebuild this cursor positioned at `inst`.",16,[[["inst"]],["self"]]],[11,"at_first_insertion_point","","Rebuild this cursor positioned at the first insertion…",16,[[["ebb"]],["self"]]],[11,"at_first_inst","","Rebuild this cursor positioned at the first instruction in…",16,[[["ebb"]],["self"]]],[11,"at_last_inst","","Rebuild this cursor positioned at the last instruction in…",16,[[["ebb"]],["self"]]],[11,"after_inst","","Rebuild this cursor positioned after `inst`.",16,[[["inst"]],["self"]]],[11,"at_top","","Rebuild this cursor positioned at the top of `ebb`.",16,[[["ebb"]],["self"]]],[11,"at_bottom","","Rebuild this cursor positioned at the bottom of `ebb`.",16,[[["ebb"]],["self"]]],[11,"current_ebb","","Get the EBB corresponding to the current position.",16,[[["self"]],[["option",["ebb"]],["ebb"]]]],[11,"current_inst","","Get the instruction corresponding to the current position,…",16,[[["self"]],[["option",["inst"]],["inst"]]]],[11,"goto_after_inst","","Go to the position after a specific instruction, which…",16,[[["self"],["inst"]]]],[11,"goto_inst","","Go to a specific instruction which must be inserted in the…",16,[[["self"],["inst"]]]],[11,"goto_first_insertion_point","","Go to the position for inserting instructions at the…",16,[[["self"],["ebb"]]]],[11,"goto_first_inst","","Go to the first instruction in `ebb`.",16,[[["self"],["ebb"]]]],[11,"goto_last_inst","","Go to the last instruction in `ebb`.",16,[[["self"],["ebb"]]]],[11,"goto_top","","Go to the top of `ebb` which must be inserted into the…",16,[[["self"],["ebb"]]]],[11,"goto_bottom","","Go to the bottom of `ebb` which must be inserted into the…",16,[[["self"],["ebb"]]]],[11,"next_ebb","","Go to the top of the next EBB in layout order and return it.",16,[[["self"]],[["option",["ebb"]],["ebb"]]]],[11,"prev_ebb","","Go to the bottom of the previous EBB in layout order and…",16,[[["self"]],[["option",["ebb"]],["ebb"]]]],[11,"next_inst","","Move to the next instruction in the same EBB and return it.",16,[[["self"]],[["option",["inst"]],["inst"]]]],[11,"prev_inst","","Move to the previous instruction in the same EBB and…",16,[[["self"]],[["option",["inst"]],["inst"]]]],[11,"insert_inst","","Insert an instruction at the current position.",16,[[["self"],["inst"]]]],[11,"remove_inst","","Remove the instruction under the cursor.",16,[[["self"]],["inst"]]],[11,"remove_inst_and_step_back","","Remove the instruction under the cursor.",16,[[["self"]],["inst"]]],[11,"insert_ebb","","Insert an EBB at the current position and switch to it.",16,[[["self"],["ebb"]]]],[11,"new","","Create a new `FuncCursor` pointing nowhere.",13,[[["function"]],["self"]]],[11,"use_srcloc","","Use the source location of `inst` for future instructions.",13,[[["self"],["inst"]]]],[11,"ins","","Create an instruction builder that inserts an instruction…",13,[[["self"]],[["insertbuilder",["funccursor"]],["funccursor"]]]],[11,"new","","Create a new `EncCursor` pointing nowhere.",14,[[["targetisa"],["function"]],["self"]]],[11,"use_srcloc","","Use the source location of `inst` for future instructions.",14,[[["self"],["inst"]]]],[11,"ins","","Create an instruction builder that will insert an encoded…",14,[[["self"]],[["enccursor"],["insertbuilder",["enccursor"]]]]],[11,"built_inst","","Get the last built instruction.",14,[[["self"]],["inst"]]],[11,"display_inst","","Return an object that can display `inst`.",14,[[["self"],["inst"]],["displayinst"]]],[0,"dbg","cranelift_codegen","Debug tracing helpers.",null,null],[3,"DisplayList","cranelift_codegen::dbg","Helper for printing lists.",null,null],[12,"0","","",17,null],[7,"LOG_FILENAME_PREFIX","","Prefix added to the log file names, just before the thread…",null,null],[0,"dominator_tree","cranelift_codegen","A Dominator Tree represented as mappings of Ebbs to their…",null,null],[3,"DominatorTree","cranelift_codegen::dominator_tree","The dominator tree for a single function.",null,null],[3,"DominatorTreePreorder","","Optional pre-order information that can be computed for a…",null,null],[3,"ChildIter","","An iterator that enumerates the direct children of an EBB…",null,null],[11,"is_reachable","","Is `ebb` reachable from the entry block?",18,[[["ebb"],["self"]],["bool"]]],[11,"cfg_postorder","","Get the CFG post-order of EBBs that was used to compute…",18,[[["self"]]]],[11,"idom","","Returns the immediate dominator of `ebb`.",18,[[["ebb"],["self"]],[["inst"],["option",["inst"]]]]],[11,"rpo_cmp","","Compare two program points relative to a reverse…",18,[[["a"],["layout"],["self"],["b"]],["ordering"]]],[11,"dominates","","Returns `true` if `a` dominates `b`.",18,[[["a"],["layout"],["self"],["b"]],["bool"]]],[11,"last_dominator","","Find the last instruction in `a` that dominates `b`. If no…",18,[[["ebb"],["layout"],["self"],["b"]],[["inst"],["option",["inst"]]]]],[11,"common_dominator","","Compute the common dominator of two basic blocks.",18,[[["layout"],["self"],["basicblock"]],["basicblock"]]],[11,"new","","Allocate a new blank dominator tree. Use `compute` to…",18,[[],["self"]]],[11,"with_function","","Allocate and compute a dominator tree.",18,[[["controlflowgraph"],["function"]],["self"]]],[11,"compute","","Reset and compute a CFG post-order and dominator tree.",18,[[["self"],["controlflowgraph"],["function"]]]],[11,"clear","","Clear the data structures used to represent the dominator…",18,[[["self"]]]],[11,"is_valid","","Check if the dominator tree is in a valid state.",18,[[["self"]],["bool"]]],[11,"recompute_split_ebb","","When splitting an `Ebb` using `Layout::split_ebb`, you can…",18,[[["ebb"],["self"],["inst"]]]],[11,"new","","Create a new blank `DominatorTreePreorder`.",19,[[],["self"]]],[11,"compute","","Recompute this data structure to match `domtree`.",19,[[["layout"],["self"],["dominatortree"]]]],[11,"children","","Get an iterator over the direct children of `ebb` in the…",19,[[["ebb"],["self"]],["childiter"]]],[11,"dominates","","Fast, constant time dominance check with EBB granularity.",19,[[["ebb"],["self"]],["bool"]]],[11,"pre_cmp_ebb","","Compare two EBBs according to the dominator pre-order.",19,[[["ebb"],["self"]],["ordering"]]],[11,"pre_cmp","","Compare two program points according to the dominator tree…",19,[[["a"],["layout"],["self"],["b"]],["ordering"]]],[11,"pre_cmp_def","","Compare two value defs according to the dominator tree…",19,[[["function"],["self"],["value"]],["ordering"]]],[0,"flowgraph","cranelift_codegen","A control flow graph represented as mappings of extended…",null,null],[3,"BasicBlock","cranelift_codegen::flowgraph","A basic block denoted by its enclosing Ebb and last…",null,null],[12,"ebb","","Enclosing Ebb key.",20,null],[12,"inst","","Last instruction in the basic block.",20,null],[3,"ControlFlowGraph","","The Control Flow Graph maintains a mapping of ebbs to…",null,null],[3,"PredIter","","An iterator over EBB predecessors. The iterator type is…",null,null],[6,"SuccIter","","An iterator over EBB successors. The iterator type is `Ebb`.",null,null],[11,"new","","Convenient method to construct new BasicBlock.",20,[[["ebb"],["inst"]],["self"]]],[11,"new","","Allocate a new blank control flow graph.",21,[[],["self"]]],[11,"clear","","Clear all data structures in this control flow graph.",21,[[["self"]]]],[11,"with_function","","Allocate and compute the control flow graph for `func`.",21,[[["function"]],["self"]]],[11,"compute","","Compute the control flow graph of `func`.",21,[[["self"],["function"]]]],[11,"recompute_ebb","","Recompute the control flow graph of `ebb`.",21,[[["ebb"],["self"],["function"]]]],[11,"pred_iter","","Get an iterator over the CFG predecessors to `ebb`.",21,[[["ebb"],["self"]],["prediter"]]],[11,"succ_iter","","Get an iterator over the CFG successors to `ebb`.",21,[[["ebb"],["self"]],["succiter"]]],[11,"is_valid","","Check if the CFG is in a valid state.",21,[[["self"]],["bool"]]],[0,"ir","cranelift_codegen","Representation of Cranelift IR functions.",null,null],[0,"condcodes","cranelift_codegen::ir","Condition codes for the Cranelift code generator.",null,null],[8,"CondCode","cranelift_codegen::ir::condcodes","Common traits of condition codes.",null,null],[10,"inverse","","Get the inverse condition code of `self`.",22,[[],["self"]]],[10,"reverse","","Get the reversed condition code for `self`.",22,[[],["self"]]],[4,"IntCC","","Condition code for comparing integers.",null,null],[13,"Equal","","`==`.",23,null],[13,"NotEqual","","`!=`.",23,null],[13,"SignedLessThan","","Signed `<`.",23,null],[13,"SignedGreaterThanOrEqual","","Signed `>=`.",23,null],[13,"SignedGreaterThan","","Signed `>`.",23,null],[13,"SignedLessThanOrEqual","","Signed `<=`.",23,null],[13,"UnsignedLessThan","","Unsigned `<`.",23,null],[13,"UnsignedGreaterThanOrEqual","","Unsigned `>=`.",23,null],[13,"UnsignedGreaterThan","","Unsigned `>`.",23,null],[13,"UnsignedLessThanOrEqual","","Unsigned `<=`.",23,null],[13,"Overflow","","Signed Overflow.",23,null],[13,"NotOverflow","","Signed No Overflow.",23,null],[4,"FloatCC","","Condition code for comparing floating point numbers.",null,null],[13,"Ordered","","EQ | LT | GT",24,null],[13,"Unordered","","UN",24,null],[13,"Equal","","EQ",24,null],[13,"NotEqual","","The C '!=' operator is the inverse of '==': `NotEqual`. UN…",24,null],[13,"OrderedNotEqual","","LT | GT",24,null],[13,"UnorderedOrEqual","","UN | EQ",24,null],[13,"LessThan","","LT",24,null],[13,"LessThanOrEqual","","LT | EQ",24,null],[13,"GreaterThan","","GT",24,null],[13,"GreaterThanOrEqual","","GT | EQ",24,null],[13,"UnorderedOrLessThan","","UN | LT",24,null],[13,"UnorderedOrLessThanOrEqual","","UN | LT | EQ",24,null],[13,"UnorderedOrGreaterThan","","UN | GT",24,null],[13,"UnorderedOrGreaterThanOrEqual","","UN | GT | EQ",24,null],[3,"InsertBuilder","cranelift_codegen::ir","Builder that inserts an instruction at the current position.",null,null],[3,"ReplaceBuilder","","Instruction builder that replaces an existing instruction.",null,null],[3,"AbiParam","","Function parameter or return value descriptor.",null,null],[12,"value_type","","Type of the argument value.",25,null],[12,"purpose","","Special purpose of argument, or `Normal`.",25,null],[12,"extension","","Method for extending argument to a full register.",25,null],[12,"location","","ABI-specific location of this argument, or `Unassigned`…",25,null],[3,"ExtFuncData","","An external function.",null,null],[12,"name","","Name of the external function.",26,null],[12,"signature","","Call signature of function.",26,null],[12,"colocated","","Will this function be defined nearby, such that it will…",26,null],[3,"Signature","","Function signature.",null,null],[12,"params","","The arguments passed to the function.",27,null],[12,"returns","","Values returned from the function.",27,null],[12,"call_conv","","Calling convention.",27,null],[3,"FrameLayout","","Frame items layout for (prologue/epilogue) instructions.",null,null],[12,"initial","","Initial frame layout.",28,null],[12,"instructions","","Instruction frame layout (changes). Because the map will…",28,null],[3,"HeapData","","Information about a heap declaration.",null,null],[12,"base","","The address of the start of the heap's storage.",29,null],[12,"min_size","","Guaranteed minimum heap size in bytes. Heap accesses…",29,null],[12,"offset_guard_size","","Size in bytes of the offset-guard pages following the heap.",29,null],[12,"style","","Heap style, with additional style-specific info.",29,null],[12,"index_type","","The index type for the heap.",29,null],[3,"MemFlags","","Flags for memory operations like load/store.",null,null],[3,"ProgramPoint","","A `ProgramPoint` represents a position in a function where…",null,null],[3,"SourceLoc","","A source location.",null,null],[3,"TableData","","Information about a table declaration.",null,null],[12,"base_gv","","Global value giving the address of the start of the table.",30,null],[12,"min_size","","Guaranteed minimum table size in elements. Table accesses…",30,null],[12,"bound_gv","","Global value giving the current bound of the table, in…",30,null],[12,"element_size","","The size of a table element, in bytes.",30,null],[12,"index_type","","The index type for the table.",30,null],[3,"ValueLabel","","Marked with a label value.",null,null],[3,"ValueLabelStart","","A label of a Value.",null,null],[12,"from","","Source location when it is in effect",31,null],[12,"label","","The label index.",31,null],[4,"ArgumentExtension","","Function argument extension options.",null,null],[13,"None","","No extension, high bits are indeterminate.",32,null],[13,"Uext","","Unsigned extension: high bits in register are 0.",32,null],[13,"Sext","","Signed extension: high bits in register replicate sign bit.",32,null],[4,"ArgumentPurpose","","The special purpose of a function argument.",null,null],[13,"Normal","","A normal user program value passed to or from a function.",33,null],[13,"StructReturn","","Struct return pointer.",33,null],[13,"Link","","The link register.",33,null],[13,"FramePointer","","The frame pointer.",33,null],[13,"CalleeSaved","","A callee-saved register.",33,null],[13,"VMContext","","A VM context pointer.",33,null],[13,"SignatureId","","A signature identifier.",33,null],[13,"StackLimit","","A stack limit pointer.",33,null],[4,"ExternalName","","The name of an external is either a reference to a…",null,null],[13,"User","","A name in a user-defined symbol table. Cranelift does not…",34,null],[12,"namespace","cranelift_codegen::ir::ExternalName","Arbitrary.",34,null],[12,"index","","Arbitrary.",34,null],[13,"TestCase","cranelift_codegen::ir","A test case function name of up to 10 ascii characters.…",34,null],[12,"length","cranelift_codegen::ir::ExternalName","How many of the bytes in `ascii` are valid?",34,null],[12,"ascii","","Ascii bytes of the name.",34,null],[13,"LibCall","cranelift_codegen::ir","A well-known runtime library function.",34,null],[4,"FrameLayoutChange","","Change in the frame layout information.",null,null],[13,"CallFrameAddressAt","","Base CallFrameAddress (CFA) pointer moved to different…",35,null],[12,"reg","cranelift_codegen::ir::FrameLayoutChange","CFA register.",35,null],[12,"offset","","CFA offset.",35,null],[13,"RegAt","cranelift_codegen::ir","Register saved at.",35,null],[12,"reg","cranelift_codegen::ir::FrameLayoutChange","Saved register.",35,null],[12,"cfa_offset","","Offset in the frame (offset from CFA).",35,null],[13,"ReturnAddressAt","cranelift_codegen::ir","Return address saved at.",35,null],[12,"cfa_offset","cranelift_codegen::ir::FrameLayoutChange","Offset in the frame (offset from CFA).",35,null],[13,"Preserve","cranelift_codegen::ir","The entire frame layout must be preserved somewhere to be…",35,null],[13,"Restore","","Restore the entire frame layout from a corresponding prior…",35,null],[4,"GlobalValueData","","Information about a global value declaration.",null,null],[13,"VMContext","","Value is the address of the VM context struct.",36,null],[13,"Load","","Value is pointed to by another global value.",36,null],[12,"base","cranelift_codegen::ir::GlobalValueData","The base pointer global value.",36,null],[12,"offset","","Offset added to the base pointer before doing the load.",36,null],[12,"global_type","","Type of the loaded value.",36,null],[12,"readonly","","Specifies whether the memory that this refers to is…",36,null],[13,"IAddImm","cranelift_codegen::ir","Value is an offset from another global value.",36,null],[12,"base","cranelift_codegen::ir::GlobalValueData","The base pointer global value.",36,null],[12,"offset","","Byte offset to be added to the value.",36,null],[12,"global_type","","Type of the iadd.",36,null],[13,"Symbol","cranelift_codegen::ir","Value is symbolic, meaning it's a name which will be…",36,null],[12,"name","cranelift_codegen::ir::GlobalValueData","The symbolic name.",36,null],[12,"offset","","Offset from the symbol. This can be used instead of…",36,null],[12,"colocated","","Will this symbol be defined nearby, such that it will…",36,null],[4,"HeapStyle","cranelift_codegen::ir","Style of heap including style-specific information.",null,null],[13,"Dynamic","","A dynamic heap can be relocated to a different base…",37,null],[12,"bound_gv","cranelift_codegen::ir::HeapStyle","Global value providing the current bound of the heap in…",37,null],[13,"Static","cranelift_codegen::ir","A static heap has a fixed base address and a number of…",37,null],[12,"bound","cranelift_codegen::ir::HeapStyle","Heap bound in bytes. The offset-guard pages are allocated…",37,null],[4,"LibCall","cranelift_codegen::ir","The name of a runtime library routine.",null,null],[13,"Probestack","","probe for stack overflow. These are emitted for functions…",38,null],[13,"CeilF32","","ceil.f32",38,null],[13,"CeilF64","","ceil.f64",38,null],[13,"FloorF32","","floor.f32",38,null],[13,"FloorF64","","floor.f64",38,null],[13,"TruncF32","","trunc.f32",38,null],[13,"TruncF64","","frunc.f64",38,null],[13,"NearestF32","","nearest.f32",38,null],[13,"NearestF64","","nearest.f64",38,null],[13,"Memcpy","","libc.memcpy",38,null],[13,"Memset","","libc.memset",38,null],[13,"Memmove","","libc.memmove",38,null],[4,"ExpandedProgramPoint","","An expanded program point directly exposes the variants,…",null,null],[13,"Inst","","An instruction in the function.",39,null],[13,"Ebb","","An EBB header.",39,null],[4,"TrapCode","","A trap code describing the reason for a trap.",null,null],[13,"StackOverflow","","The current stack space was exhausted.",40,null],[13,"HeapOutOfBounds","","A `heap_addr` instruction detected an out-of-bounds error.",40,null],[13,"TableOutOfBounds","","A `table_addr` instruction detected an out-of-bounds error.",40,null],[13,"OutOfBounds","","Other bounds checking error.",40,null],[13,"IndirectCallToNull","","Indirect call to a null table entry.",40,null],[13,"BadSignature","","Signature mismatch on indirect call.",40,null],[13,"IntegerOverflow","","An integer arithmetic operation caused an overflow.",40,null],[13,"IntegerDivisionByZero","","An integer division by zero.",40,null],[13,"BadConversionToInteger","","Failed float-to-int conversion.",40,null],[13,"UnreachableCodeReached","","Code that was supposed to have been unreachable was reached.",40,null],[13,"Interrupt","","Execution has potentially run too long and may be…",40,null],[13,"User","","A user-defined trap code.",40,null],[4,"ArgumentLoc","","Function argument location.",null,null],[13,"Unassigned","","This argument has not been assigned to a location yet.",41,null],[13,"Reg","","Argument is passed in a register.",41,null],[13,"Stack","","Argument is passed on the stack, at the given byte offset…",41,null],[4,"ValueLoc","","Value location.",null,null],[13,"Unassigned","","This value has not been assigned to a location yet.",42,null],[13,"Reg","","Value is assigned to a register.",42,null],[13,"Stack","","Value is assigned to a stack slot.",42,null],[4,"ValueLabelAssignments","","Value label assignements: label starts or value aliases.",null,null],[13,"Starts","","Original value labels assigned at transform.",43,null],[13,"Alias","","A value alias to original value.",43,null],[12,"from","cranelift_codegen::ir::ValueLabelAssignments","Source location when it is in effect",43,null],[12,"value","","The label index.",43,null],[5,"get_libcall_funcref","cranelift_codegen::ir","Get a function reference for `libcall` in `func`,…",null,[[["function"],["libcall"],["inst"],["targetisa"],["callconv"]],["funcref"]]],[5,"get_probestack_funcref","","Get a function reference for the probestack function in…",null,[[["function"],["regunit"],["targetisa"],["type"]],["funcref"]]],[11,"new","","Create a new builder which inserts instructions at `pos`.…",44,[[["iib"]],["self"]]],[11,"with_results","","Reuse result values in `reuse`.",44,[[["array"]],["insertreusebuilder"]]],[11,"with_result","","Reuse a single result value.",44,[[["value"]],["insertreusebuilder"]]],[11,"new","","Create a `ReplaceBuilder` that will overwrite `inst`.",45,[[["inst"],["dataflowgraph"]],["self"]]],[0,"constant","","Constants",null,null],[3,"ConstantData","cranelift_codegen::ir::constant","This type describes the actual constant data. Note that…",null,null],[3,"ConstantPoolEntry","","Inner type for storing data and offset together in the…",null,null],[3,"ConstantPool","","Maintains the mapping between a constant handle (i.e.…",null,null],[6,"ConstantOffset","","This type describes an offset in bytes within a constant…",null,null],[11,"len","","Return the number of bytes in the constant.",46,[[["self"]],["usize"]]],[11,"into_vec","","Convert the data to a vector.",46,[[],[["vec",["u8"]],["u8"]]]],[11,"iter","","Iterate over the constant's bytes.",46,[[["self"]],[["iter",["u8"]],["u8"]]]],[11,"append","","Add new bytes to the constant data.",46,[[],["self"]]],[11,"expand_to","","Expand the size of the constant data to `expected_size`…",46,[[["usize"]],["self"]]],[11,"len","","Return the size of the constant at this entry.",47,[[["self"]],["usize"]]],[11,"set_offset","","Assign a new offset to the constant at this entry.",47,[[["self"],["constantoffset"]]]],[11,"new","","Create a new constant pool instance.",48,[[],["self"]]],[11,"clear","","Empty the constant pool of all data.",48,[[["self"]]]],[11,"insert","","Insert constant data into the pool, returning a handle for…",48,[[["self"],["constantdata"]],["constant"]]],[11,"get","","Retrieve the constant data given a handle.",48,[[["constant"],["self"]],["constantdata"]]],[11,"set_offset","","Assign an offset to a given constant, where the offset is…",48,[[["self"],["constant"],["constantoffset"]]]],[11,"get_offset","","Retrieve the offset of a given constant, where the offset…",48,[[["constant"],["self"]],["constantoffset"]]],[11,"iter","","Iterate over the constants in insertion order.",48,[[["self"]]]],[11,"entries_mut","","Iterate over mutable entries in the constant pool in…",48,[[["self"]]]],[11,"len","","Return the number of constants in the pool.",48,[[["self"]],["usize"]]],[11,"byte_size","","Return the combined size of all of the constant values in…",48,[[["self"]],["usize"]]],[0,"dfg","cranelift_codegen::ir","Data flow graph tracking Instructions, Values, and EBBs.",null,null],[3,"DataFlowGraph","cranelift_codegen::ir::dfg","A data flow graph defines all instructions and extended…",null,null],[12,"value_lists","","Memory pool of value lists.",49,null],[12,"signatures","","Function signature table. These signatures are referenced…",49,null],[12,"old_signatures","","The pre-legalization signature for each entry in…",49,null],[12,"ext_funcs","","External function references. These are functions that can…",49,null],[12,"values_labels","","Saves Value labels.",49,null],[12,"constants","","Constants used within the function",49,null],[12,"immediates","","Stores large immediates that otherwise will not fit on…",49,null],[3,"Values","","Iterator over all Values in a DFG",null,null],[3,"DisplayInst","","Object that can display an instruction.",null,null],[4,"ValueDef","","Where did a value come from?",null,null],[13,"Result","","Value is the n'th result of an instruction.",50,null],[13,"Param","","Value is the n'th parameter to an EBB.",50,null],[11,"new","","Create a new empty `DataFlowGraph`.",49,[[],["self"]]],[11,"clear","","Clear everything.",49,[[["self"]]]],[11,"num_insts","","Get the total number of instructions created in this…",49,[[["self"]],["usize"]]],[11,"inst_is_valid","","Returns `true` if the given instruction reference is valid.",49,[[["self"],["inst"]],["bool"]]],[11,"num_ebbs","","Get the total number of extended basic blocks created in…",49,[[["self"]],["usize"]]],[11,"ebb_is_valid","","Returns `true` if the given ebb reference is valid.",49,[[["ebb"],["self"]],["bool"]]],[11,"num_values","","Get the total number of values.",49,[[["self"]],["usize"]]],[11,"collect_debug_info","","Starts collection of debug information.",49,[[["self"]]]],[11,"values","","Get an iterator over all values.",49,[[["self"]],["values"]]],[11,"value_is_valid","","Check if a value reference is valid.",49,[[["self"],["value"]],["bool"]]],[11,"value_type","","Get the type of a value.",49,[[["self"],["value"]],["type"]]],[11,"value_def","","Get the definition of a value.",49,[[["self"],["value"]],["valuedef"]]],[11,"value_is_attached","","Determine if `v` is an attached instruction result / EBB…",49,[[["self"],["value"]],["bool"]]],[11,"resolve_aliases","","Resolve value aliases.",49,[[["self"],["value"]],["value"]]],[11,"resolve_aliases_in_arguments","","Resolve all aliases among inst's arguments.",49,[[["self"],["inst"]]]],[11,"change_to_alias","","Turn a value into an alias of another.",49,[[["self"],["value"]]]],[11,"replace_with_aliases","","Replace the results of one instruction with aliases to the…",49,[[["self"],["inst"]]]],[11,"unwrap_inst","","Unwrap the instruction where the value was defined, or…",50,[[["self"]],["inst"]]],[11,"unwrap_ebb","","Unwrap the EBB there the parameter is defined, or panic.",50,[[["self"]],["ebb"]]],[11,"pp","","Get the program point where the value was defined.",50,[[],["expandedprogrampoint"]]],[11,"num","","Get the number component of this definition.",50,[[],["usize"]]],[11,"make_inst","","Create a new instruction.",49,[[["self"],["instructiondata"]],["inst"]]],[11,"display_inst","","Returns an object that displays `inst`.",49,[[["into",["option"]],["inst"],["option",["targetisa"]],["self"]],["displayinst"]]],[11,"inst_args","","Get all value arguments on `inst` as a slice.",49,[[["self"],["inst"]]]],[11,"inst_args_mut","","Get all value arguments on `inst` as a mutable slice.",49,[[["self"],["inst"]]]],[11,"inst_fixed_args","","Get the fixed value arguments on `inst` as a slice.",49,[[["self"],["inst"]]]],[11,"inst_fixed_args_mut","","Get the fixed value arguments on `inst` as a mutable slice.",49,[[["self"],["inst"]]]],[11,"inst_variable_args","","Get the variable value arguments on `inst` as a slice.",49,[[["self"],["inst"]]]],[11,"inst_variable_args_mut","","Get the variable value arguments on `inst` as a mutable…",49,[[["self"],["inst"]]]],[11,"make_inst_results","","Create result values for an instruction that produces…",49,[[["self"],["inst"],["type"]],["usize"]]],[11,"make_inst_results_reusing","","Create result values for `inst`, reusing the provided…",49,[[["inst"],["self"],["type"],["i"]],["usize"]]],[11,"replace","","Create a `ReplaceBuilder` that will replace `inst` with a…",49,[[["self"],["inst"]],["replacebuilder"]]],[11,"detach_results","","Detach the list of result values from `inst` and return it.",49,[[["self"],["inst"]],["valuelist"]]],[11,"clear_results","","Clear the list of result values from `inst`.",49,[[["self"],["inst"]]]],[11,"attach_result","","Attach an existing value to the result value list for…",49,[[["self"],["inst"],["value"]]]],[11,"replace_result","","Replace an instruction result with a new value of type…",49,[[["self"],["type"],["value"]],["value"]]],[11,"append_result","","Append a new instruction result value to `inst`.",49,[[["self"],["inst"],["type"]],["value"]]],[11,"append_inst_arg","","Append a new value argument to an instruction.",49,[[["self"],["inst"],["value"]]]],[11,"first_result","","Get the first result of an instruction.",49,[[["self"],["inst"]],["value"]]],[11,"has_results","","Test if `inst` has any result values currently.",49,[[["self"],["inst"]],["bool"]]],[11,"inst_results","","Return all the results of an instruction.",49,[[["self"],["inst"]]]],[11,"call_signature","","Get the call signature of a direct or indirect call…",49,[[["self"],["inst"]],[["sigref"],["option",["sigref"]]]]],[11,"analyze_branch","","Check if `inst` is a branch.",49,[[["self"],["inst"]],["branchinfo"]]],[11,"compute_result_type","","Compute the type of an instruction result from opcode…",49,[[["usize"],["inst"],["type"],["self"]],[["type"],["option",["type"]]]]],[11,"ctrl_typevar","","Get the controlling type variable, or `INVALID` if `inst`…",49,[[["self"],["inst"]],["type"]]],[11,"make_ebb","","Create a new basic block.",49,[[["self"]],["ebb"]]],[11,"num_ebb_params","","Get the number of parameters on `ebb`.",49,[[["ebb"],["self"]],["usize"]]],[11,"ebb_params","","Get the parameters on `ebb`.",49,[[["ebb"],["self"]]]],[11,"append_ebb_param","","Append a parameter with type `ty` to `ebb`.",49,[[["ebb"],["self"],["type"]],["value"]]],[11,"swap_remove_ebb_param","","Removes `val` from `ebb`'s parameters by swapping it with…",49,[[["self"],["value"]],["usize"]]],[11,"remove_ebb_param","","Removes `val` from `ebb`'s parameters by a standard linear…",49,[[["self"],["value"]]]],[11,"attach_ebb_param","","Append an existing value to `ebb`'s parameters.",49,[[["ebb"],["self"],["value"]]]],[11,"replace_ebb_param","","Replace an EBB parameter with a new value of type `ty`.",49,[[["self"],["type"],["value"]],["value"]]],[11,"detach_ebb_params","","Detach all the parameters from `ebb` and return them as a…",49,[[["ebb"],["self"]],["valuelist"]]],[11,"make_inst_results_for_parser","","Create result values for `inst`, reusing the provided…",49,[[["inst"],["self"],["type"]],["usize"]]],[11,"append_ebb_param_for_parser","","Similar to `append_ebb_param`, append a parameter with…",49,[[["ebb"],["self"],["type"],["value"]]]],[11,"make_value_alias_for_serialization","","Create a new value alias. This is only for use by the…",49,[[["self"],["value"]]]],[11,"value_alias_dest_for_serialization","","If `v` is already defined as an alias, return its…",49,[[["self"],["value"]],[["value"],["option",["value"]]]]],[11,"set_alias_type_for_parser","","Compute the type of an alias. This is only for use in the…",49,[[["self"],["value"]],["bool"]]],[11,"make_invalid_value_for_parser","","Create an invalid value, to pad the index space. This is…",49,[[["self"]]]],[11,"value_is_valid_for_parser","","Check if a value reference is valid, while being aware of…",49,[[["self"],["value"]],["bool"]]],[0,"entities","cranelift_codegen::ir","Cranelift IR entity references.",null,null],[3,"Ebb","cranelift_codegen::ir::entities","An opaque reference to an extended basic block in a…",null,null],[3,"Value","","An opaque reference to an SSA value.",null,null],[3,"Inst","","An opaque reference to an instruction in a `Function`.",null,null],[3,"StackSlot","","An opaque reference to a stack slot.",null,null],[3,"GlobalValue","","An opaque reference to a global value.",null,null],[3,"Constant","","An opaque reference to a constant.",null,null],[3,"Immediate","","An opaque reference to an immediate.",null,null],[3,"JumpTable","","An opaque reference to a jump table.",null,null],[3,"FuncRef","","An opaque reference to another `Function`.",null,null],[3,"SigRef","","An opaque reference to a function `Signature`.",null,null],[3,"Heap","","An opaque reference to a heap.",null,null],[3,"Table","","An opaque reference to a WebAssembly table.",null,null],[4,"AnyEntity","","An opaque reference to any of the entities defined in this…",null,null],[13,"Function","","The whole function.",51,null],[13,"Ebb","","An extended basic block.",51,null],[13,"Inst","","An instruction.",51,null],[13,"Value","","An SSA value.",51,null],[13,"StackSlot","","A stack slot.",51,null],[13,"GlobalValue","","A Global value.",51,null],[13,"JumpTable","","A jump table.",51,null],[13,"FuncRef","","An external function.",51,null],[13,"SigRef","","A function call signature.",51,null],[13,"Heap","","A heap.",51,null],[13,"Table","","A table.",51,null],[11,"from_u32","","Return the underlying index value as a `u32`.",52,[[["u32"]],["self"]]],[11,"as_u32","","Return the underlying index value as a `u32`.",52,[[],["u32"]]],[11,"with_number","","Create a new EBB reference from its number. This…",52,[[["u32"]],["option"]]],[11,"from_u32","","Return the underlying index value as a `u32`.",53,[[["u32"]],["self"]]],[11,"as_u32","","Return the underlying index value as a `u32`.",53,[[],["u32"]]],[11,"with_number","","Create a value from its number representation. This is the…",53,[[["u32"]],["option"]]],[11,"from_u32","","Return the underlying index value as a `u32`.",54,[[["u32"]],["self"]]],[11,"as_u32","","Return the underlying index value as a `u32`.",54,[[],["u32"]]],[11,"from_u32","","Return the underlying index value as a `u32`.",55,[[["u32"]],["self"]]],[11,"as_u32","","Return the underlying index value as a `u32`.",55,[[],["u32"]]],[11,"with_number","","Create a new stack slot reference from its number.",55,[[["u32"]],["option"]]],[11,"from_u32","","Return the underlying index value as a `u32`.",56,[[["u32"]],["self"]]],[11,"as_u32","","Return the underlying index value as a `u32`.",56,[[],["u32"]]],[11,"with_number","","Create a new global value reference from its number.",56,[[["u32"]],["option"]]],[11,"from_u32","","Return the underlying index value as a `u32`.",57,[[["u32"]],["self"]]],[11,"as_u32","","Return the underlying index value as a `u32`.",57,[[],["u32"]]],[11,"with_number","","Create a const reference from its number.",57,[[["u32"]],["option"]]],[11,"from_u32","","Return the underlying index value as a `u32`.",58,[[["u32"]],["self"]]],[11,"as_u32","","Return the underlying index value as a `u32`.",58,[[],["u32"]]],[11,"with_number","","Create an immediate reference from its number.",58,[[["u32"]],["option"]]],[11,"from_u32","","Return the underlying index value as a `u32`.",59,[[["u32"]],["self"]]],[11,"as_u32","","Return the underlying index value as a `u32`.",59,[[],["u32"]]],[11,"with_number","","Create a new jump table reference from its number.",59,[[["u32"]],["option"]]],[11,"from_u32","","Return the underlying index value as a `u32`.",60,[[["u32"]],["self"]]],[11,"as_u32","","Return the underlying index value as a `u32`.",60,[[],["u32"]]],[11,"with_number","","Create a new external function reference from its number.",60,[[["u32"]],["option"]]],[11,"from_u32","","Return the underlying index value as a `u32`.",61,[[["u32"]],["self"]]],[11,"as_u32","","Return the underlying index value as a `u32`.",61,[[],["u32"]]],[11,"with_number","","Create a new function signature reference from its number.",61,[[["u32"]],["option"]]],[11,"from_u32","","Return the underlying index value as a `u32`.",62,[[["u32"]],["self"]]],[11,"as_u32","","Return the underlying index value as a `u32`.",62,[[],["u32"]]],[11,"with_number","","Create a new heap reference from its number.",62,[[["u32"]],["option"]]],[11,"from_u32","","Return the underlying index value as a `u32`.",63,[[["u32"]],["self"]]],[11,"as_u32","","Return the underlying index value as a `u32`.",63,[[],["u32"]]],[11,"with_number","","Create a new table reference from its number.",63,[[["u32"]],["option"]]],[11,"new","cranelift_codegen::ir","Create a new blank signature.",27,[[["callconv"]],["self"]]],[11,"clear","","Clear the signature so it is identical to a fresh one…",27,[[["self"],["callconv"]]]],[11,"display","","Return an object that can display `self` with correct…",27,[[["into",["option"]],["option",["reginfo"]],["self"]],["displaysignature"]]],[11,"special_param_index","","Find the index of a presumed unique special-purpose…",27,[[["self"],["argumentpurpose"]],[["usize"],["option",["usize"]]]]],[11,"special_return_index","","Find the index of a presumed unique special-purpose…",27,[[["self"],["argumentpurpose"]],[["usize"],["option",["usize"]]]]],[11,"uses_special_param","","Does this signature have a parameter whose…",27,[[["self"],["argumentpurpose"]],["bool"]]],[11,"uses_special_return","","Does this signature have a return whose `ArgumentPurpose`…",27,[[["self"],["argumentpurpose"]],["bool"]]],[11,"num_special_params","","How many special parameters does this function have?",27,[[["self"]],["usize"]]],[11,"num_special_returns","","How many special returns does this function have?",27,[[["self"]],["usize"]]],[11,"uses_struct_return_param","","Does this signature take an struct return pointer parameter?",27,[[["self"]],["bool"]]],[11,"is_multi_return","","Does this return more than one normal value? (Pre-struct…",27,[[["self"]],["bool"]]],[11,"new","","Create a parameter with default flags.",25,[[["type"]],["self"]]],[11,"special","","Create a special-purpose parameter that is not (yet) bound…",25,[[["type"],["argumentpurpose"]],["self"]]],[11,"special_reg","","Create a parameter for a special-purpose register.",25,[[["type"],["argumentpurpose"],["regunit"]],["self"]]],[11,"uext","","Convert `self` to a parameter with the `uext` flag set.",25,[[],["self"]]],[11,"sext","","Convert `self` to a parameter type with the `sext` flag set.",25,[[],["self"]]],[11,"display","","Return an object that can display `self` with correct…",25,[[["into",["option"]],["option",["reginfo"]],["self"]],["displayabiparam"]]],[11,"testcase","","Creates a new external name from a sequence of bytes.…",34,[[["asref"]],["self"]]],[11,"user","","Create a new external name from user-provided integer…",34,[[["u32"]],["self"]]],[11,"new","","Create instance of FrameLayout.",28,[[],["self"]]],[11,"clear","","Clear the structure.",28,[[["self"]]]],[0,"function","","Intermediate representation of a function.",null,null],[3,"Function","cranelift_codegen::ir::function","A function.",null,null],[12,"name","","Name of this function. Mostly used by `.clif` files.",64,null],[12,"signature","","Signature of this function.",64,null],[12,"old_signature","","The old signature of this function, before the most recent…",64,null],[12,"stack_slots","","Stack slots allocated in this function.",64,null],[12,"global_values","","Global values referenced.",64,null],[12,"heaps","","Heaps referenced.",64,null],[12,"tables","","Tables referenced.",64,null],[12,"jump_tables","","Jump tables used in this function.",64,null],[12,"dfg","","Data flow graph containing the primary definition of all…",64,null],[12,"layout","","Layout of EBBs and instructions in the function body.",64,null],[12,"encodings","","Encoding recipe and bits for the legal instructions.…",64,null],[12,"locations","","Location assigned to every value.",64,null],[12,"entry_diversions","","Non-default locations assigned to value at the entry of…",64,null],[12,"offsets","","Code offsets of the EBB headers.",64,null],[12,"jt_offsets","","Code offsets of Jump Table headers.",64,null],[12,"srclocs","","Source locations.",64,null],[12,"prologue_end","","Instruction that marks the end (inclusive) of the…",64,null],[12,"frame_layout","","Frame layout for the instructions.",64,null],[3,"DisplayFunctionAnnotations","","Additional annotations for function display.",null,null],[12,"isa","","Enable ISA annotations.",65,null],[12,"value_ranges","","Enable value labels annotations.",65,null],[3,"DisplayFunction","","Wrapper type capable of displaying a `Function` with…",null,null],[3,"InstOffsetIter","","Iterator returning instruction offsets and sizes:…",null,null],[11,"with_name_signature","","Create a function with the given name and signature.",64,[[["signature"],["externalname"]],["self"]]],[11,"clear","","Clear all data structures in this function.",64,[[["self"]]]],[11,"new","","Create a new empty, anonymous function with a Fast calling…",64,[[],["self"]]],[11,"create_jump_table","","Creates a jump table in the function, to be used by…",64,[[["jumptabledata"],["self"]],["jumptable"]]],[11,"create_stack_slot","","Creates a stack slot in the function, to be used by…",64,[[["self"],["stackslotdata"]],["stackslot"]]],[11,"import_signature","","Adds a signature which can later be used to declare an…",64,[[["self"],["signature"]],["sigref"]]],[11,"import_function","","Declare an external function import.",64,[[["self"],["extfuncdata"]],["funcref"]]],[11,"create_global_value","","Declares a global value accessible to the function.",64,[[["self"],["globalvaluedata"]],["globalvalue"]]],[11,"create_heap","","Declares a heap accessible to the function.",64,[[["heapdata"],["self"]],["heap"]]],[11,"create_table","","Declares a table accessible to the function.",64,[[["self"],["tabledata"]],["table"]]],[11,"display","","Return an object that can display this function with…",64,[[["option",["targetisa"]],["into",["option"]],["self"]],["displayfunction"]]],[11,"display_with","","Return an object that can display this function with…",64,[[["displayfunctionannotations"],["self"]],["displayfunction"]]],[11,"special_param","","Find a presumed unique special-purpose function parameter…",64,[[["self"],["argumentpurpose"]],[["value"],["option",["value"]]]]],[11,"inst_offsets","","Get an iterator over the instructions in `ebb`, including…",64,[[["ebb"],["encinfo"],["self"]],["instoffsetiter"]]],[11,"update_encoding","","Wrapper around `encode` which assigns `inst` the resulting…",64,[[["self"],["inst"],["targetisa"]],[["legalize"],["result",["legalize"]]]]],[11,"encode","","Wrapper around `TargetIsa::encode` for encoding an…",64,[[["targetisa"],["self"],["inst"]],[["result",["encoding","legalize"]],["legalize"],["encoding"]]]],[11,"collect_debug_info","","Starts collection of debug information.",64,[[["self"]]]],[11,"change_branch_destination","","Changes the destination of a jump or branch instruction.…",64,[[["ebb"],["self"],["inst"]]]],[11,"is_ebb_basic","","Checks that the specified EBB can be encoded as a basic…",64,[[["ebb"],["self"]],["result"]]],[11,"is_leaf","","Returns true if the function is function that doesn't call…",64,[[["self"]],["bool"]]],[11,"symbol_name","cranelift_codegen::ir","Assume that `self` is an `GlobalValueData::Symbol` and…",36,[[["self"]],["externalname"]]],[11,"global_type","","Return the type of this global.",36,[[["self"],["targetisa"]],["type"]]],[0,"immediates","","Immediate operands for Cranelift instructions",null,null],[3,"Imm64","cranelift_codegen::ir::immediates","64-bit immediate signed integer operand.",null,null],[3,"Uimm64","","64-bit immediate unsigned integer operand.",null,null],[3,"Uimm32","","A 32-bit unsigned integer immediate operand.",null,null],[3,"V128Imm","","A 128-bit immediate operand.",null,null],[12,"0","","",66,null],[3,"Offset32","","32-bit signed immediate offset.",null,null],[3,"Ieee32","","An IEEE binary32 immediate floating point value,…",null,null],[3,"Ieee64","","An IEEE binary64 immediate floating point value,…",null,null],[6,"Uimm8","","8-bit unsigned integer immediate operand.",null,null],[8,"IntoBytes","","Convert a type into a vector of bytes; all implementors in…",null,null],[10,"into_bytes","","Return the little-endian byte representation of the…",67,[[],[["vec",["u8"]],["u8"]]]],[11,"new","","Create a new `Imm64` representing the signed number `x`.",68,[[["i64"]],["self"]]],[11,"wrapping_neg","","Return self negated.",68,[[],["self"]]],[11,"new","","Create a new `Uimm64` representing the unsigned number `x`.",69,[[["u64"]],["self"]]],[11,"wrapping_neg","","Return self negated.",69,[[],["self"]]],[11,"bytes","","Iterate over the bytes in the constant.",66,[[["self"]]]],[11,"to_vec","","Convert the immediate into a vector.",66,[[],[["vec",["u8"]],["u8"]]]],[11,"as_slice","","Convert the immediate into a slice.",66,[[["self"]]]],[11,"new","","Create a new `Offset32` representing the signed number `x`.",70,[[["i32"]],["self"]]],[11,"try_from_i64","","Create a new `Offset32` representing the signed number `x`…",70,[[["i64"]],["option"]]],[11,"try_add_i64","","Add in the signed number `x` if possible.",70,[[["i64"]],["option"]]],[11,"with_bits","","Create a new `Ieee32` containing the bits of `x`.",71,[[["u32"]],["self"]]],[11,"pow2","","Create an `Ieee32` number representing `2.0^n`.",71,[[["into",["i32"]],["i32"]],["self"]]],[11,"fcvt_to_sint_negative_overflow","","Create an `Ieee32` number representing the greatest…",71,[[["into",["i32"]],["i32"]],["self"]]],[11,"neg","","Return self negated.",71,[[],["self"]]],[11,"with_float","","Create a new `Ieee32` representing the number `x`.",71,[[["f32"]],["self"]]],[11,"bits","","Get the bitwise representation.",71,[[],["u32"]]],[11,"with_bits","","Create a new `Ieee64` containing the bits of `x`.",72,[[["u64"]],["self"]]],[11,"pow2","","Create an `Ieee64` number representing `2.0^n`.",72,[[["i64"],["into",["i64"]]],["self"]]],[11,"fcvt_to_sint_negative_overflow","","Create an `Ieee64` number representing the greatest…",72,[[["i64"],["into",["i64"]]],["self"]]],[11,"neg","","Return self negated.",72,[[],["self"]]],[11,"with_float","","Create a new `Ieee64` representing the number `x`.",72,[[["f64"]],["self"]]],[11,"bits","","Get the bitwise representation.",72,[[],["u64"]]],[0,"instructions","cranelift_codegen::ir","Instruction formats and opcodes.",null,null],[3,"VariableArgs","cranelift_codegen::ir::instructions","A variable list of `Value` operands used for function call…",null,null],[3,"OpcodeConstraints","","Value type constraints for a given opcode.",null,null],[3,"ValueTypeSet","","A value type set describes the permitted set of types for…",null,null],[12,"lanes","","Allowed lane sizes",73,null],[12,"ints","","Allowed int widths",73,null],[12,"floats","","Allowed float widths",73,null],[12,"bools","","Allowed bool widths",73,null],[12,"refs","","Allowed ref widths",73,null],[4,"InstructionFormat","","An instruction format",null,null],[13,"Binary","","Binary(imms=(), vals=2)",74,null],[13,"BinaryImm","","BinaryImm(imms=(imm: ir::immediates::Imm64), vals=1)",74,null],[13,"Branch","","Branch(imms=(destination: ir::Ebb), vals=1)",74,null],[13,"BranchFloat","","BranchFloat(imms=(cond: ir::condcodes::FloatCC,…",74,null],[13,"BranchIcmp","","BranchIcmp(imms=(cond: ir::condcodes::IntCC, destination:…",74,null],[13,"BranchInt","","BranchInt(imms=(cond: ir::condcodes::IntCC, destination:…",74,null],[13,"BranchTable","","BranchTable(imms=(destination: ir::Ebb, table:…",74,null],[13,"BranchTableBase","","BranchTableBase(imms=(table: ir::JumpTable), vals=0)",74,null],[13,"BranchTableEntry","","BranchTableEntry(imms=(imm: ir::immediates::Uimm8, table:…",74,null],[13,"Call","","Call(imms=(func_ref: ir::FuncRef), vals=0)",74,null],[13,"CallIndirect","","CallIndirect(imms=(sig_ref: ir::SigRef), vals=1)",74,null],[13,"CondTrap","","CondTrap(imms=(code: ir::TrapCode), vals=1)",74,null],[13,"CopySpecial","","CopySpecial(imms=(src: isa::RegUnit, dst: isa::RegUnit),…",74,null],[13,"CopyToSsa","","CopyToSsa(imms=(src: isa::RegUnit), vals=0)",74,null],[13,"ExtractLane","","ExtractLane(imms=(lane: ir::immediates::Uimm8), vals=1)",74,null],[13,"FloatCompare","","FloatCompare(imms=(cond: ir::condcodes::FloatCC), vals=2)",74,null],[13,"FloatCond","","FloatCond(imms=(cond: ir::condcodes::FloatCC), vals=1)",74,null],[13,"FloatCondTrap","","FloatCondTrap(imms=(cond: ir::condcodes::FloatCC, code:…",74,null],[13,"FuncAddr","","FuncAddr(imms=(func_ref: ir::FuncRef), vals=0)",74,null],[13,"HeapAddr","","HeapAddr(imms=(heap: ir::Heap, imm:…",74,null],[13,"IndirectJump","","IndirectJump(imms=(table: ir::JumpTable), vals=1)",74,null],[13,"InsertLane","","InsertLane(imms=(lane: ir::immediates::Uimm8), vals=2)",74,null],[13,"IntCompare","","IntCompare(imms=(cond: ir::condcodes::IntCC), vals=2)",74,null],[13,"IntCompareImm","","IntCompareImm(imms=(cond: ir::condcodes::IntCC, imm:…",74,null],[13,"IntCond","","IntCond(imms=(cond: ir::condcodes::IntCC), vals=1)",74,null],[13,"IntCondTrap","","IntCondTrap(imms=(cond: ir::condcodes::IntCC, code:…",74,null],[13,"IntSelect","","IntSelect(imms=(cond: ir::condcodes::IntCC), vals=3)",74,null],[13,"Jump","","Jump(imms=(destination: ir::Ebb), vals=0)",74,null],[13,"Load","","Load(imms=(flags: ir::MemFlags, offset:…",74,null],[13,"LoadComplex","","LoadComplex(imms=(flags: ir::MemFlags, offset:…",74,null],[13,"MultiAry","","MultiAry(imms=(), vals=0)",74,null],[13,"NullAry","","NullAry(imms=(), vals=0)",74,null],[13,"RegFill","","RegFill(imms=(src: ir::StackSlot, dst: isa::RegUnit),…",74,null],[13,"RegMove","","RegMove(imms=(src: isa::RegUnit, dst: isa::RegUnit), vals=1)",74,null],[13,"RegSpill","","RegSpill(imms=(src: isa::RegUnit, dst: ir::StackSlot),…",74,null],[13,"Shuffle","","Shuffle(imms=(mask: ir::Immediate), vals=2)",74,null],[13,"StackLoad","","StackLoad(imms=(stack_slot: ir::StackSlot, offset:…",74,null],[13,"StackStore","","StackStore(imms=(stack_slot: ir::StackSlot, offset:…",74,null],[13,"Store","","Store(imms=(flags: ir::MemFlags, offset:…",74,null],[13,"StoreComplex","","StoreComplex(imms=(flags: ir::MemFlags, offset:…",74,null],[13,"TableAddr","","TableAddr(imms=(table: ir::Table, offset:…",74,null],[13,"Ternary","","Ternary(imms=(), vals=3)",74,null],[13,"Trap","","Trap(imms=(code: ir::TrapCode), vals=0)",74,null],[13,"Unary","","Unary(imms=(), vals=1)",74,null],[13,"UnaryBool","","UnaryBool(imms=(imm: bool), vals=0)",74,null],[13,"UnaryConst","","UnaryConst(imms=(constant_handle: ir::Constant), vals=0)",74,null],[13,"UnaryGlobalValue","","UnaryGlobalValue(imms=(global_value: ir::GlobalValue),…",74,null],[13,"UnaryIeee32","","UnaryIeee32(imms=(imm: ir::immediates::Ieee32), vals=0)",74,null],[13,"UnaryIeee64","","UnaryIeee64(imms=(imm: ir::immediates::Ieee64), vals=0)",74,null],[13,"UnaryImm","","UnaryImm(imms=(imm: ir::immediates::Imm64), vals=0)",74,null],[4,"InstructionData","","",null,null],[13,"Binary","","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"args","","",75,null],[13,"BinaryImm","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"arg","","",75,null],[12,"imm","","",75,null],[13,"Branch","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"args","","",75,null],[12,"destination","","",75,null],[13,"BranchFloat","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"args","","",75,null],[12,"cond","","",75,null],[12,"destination","","",75,null],[13,"BranchIcmp","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"args","","",75,null],[12,"cond","","",75,null],[12,"destination","","",75,null],[13,"BranchInt","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"args","","",75,null],[12,"cond","","",75,null],[12,"destination","","",75,null],[13,"BranchTable","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"arg","","",75,null],[12,"destination","","",75,null],[12,"table","","",75,null],[13,"BranchTableBase","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"table","","",75,null],[13,"BranchTableEntry","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"args","","",75,null],[12,"imm","","",75,null],[12,"table","","",75,null],[13,"Call","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"args","","",75,null],[12,"func_ref","","",75,null],[13,"CallIndirect","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"args","","",75,null],[12,"sig_ref","","",75,null],[13,"CondTrap","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"arg","","",75,null],[12,"code","","",75,null],[13,"CopySpecial","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"src","","",75,null],[12,"dst","","",75,null],[13,"CopyToSsa","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"src","","",75,null],[13,"ExtractLane","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"arg","","",75,null],[12,"lane","","",75,null],[13,"FloatCompare","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"args","","",75,null],[12,"cond","","",75,null],[13,"FloatCond","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"arg","","",75,null],[12,"cond","","",75,null],[13,"FloatCondTrap","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"arg","","",75,null],[12,"cond","","",75,null],[12,"code","","",75,null],[13,"FuncAddr","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"func_ref","","",75,null],[13,"HeapAddr","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"arg","","",75,null],[12,"heap","","",75,null],[12,"imm","","",75,null],[13,"IndirectJump","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"arg","","",75,null],[12,"table","","",75,null],[13,"InsertLane","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"args","","",75,null],[12,"lane","","",75,null],[13,"IntCompare","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"args","","",75,null],[12,"cond","","",75,null],[13,"IntCompareImm","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"arg","","",75,null],[12,"cond","","",75,null],[12,"imm","","",75,null],[13,"IntCond","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"arg","","",75,null],[12,"cond","","",75,null],[13,"IntCondTrap","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"arg","","",75,null],[12,"cond","","",75,null],[12,"code","","",75,null],[13,"IntSelect","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"args","","",75,null],[12,"cond","","",75,null],[13,"Jump","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"args","","",75,null],[12,"destination","","",75,null],[13,"Load","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"arg","","",75,null],[12,"flags","","",75,null],[12,"offset","","",75,null],[13,"LoadComplex","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"args","","",75,null],[12,"flags","","",75,null],[12,"offset","","",75,null],[13,"MultiAry","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"args","","",75,null],[13,"NullAry","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[13,"RegFill","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"arg","","",75,null],[12,"src","","",75,null],[12,"dst","","",75,null],[13,"RegMove","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"arg","","",75,null],[12,"src","","",75,null],[12,"dst","","",75,null],[13,"RegSpill","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"arg","","",75,null],[12,"src","","",75,null],[12,"dst","","",75,null],[13,"Shuffle","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"args","","",75,null],[12,"mask","","",75,null],[13,"StackLoad","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"stack_slot","","",75,null],[12,"offset","","",75,null],[13,"StackStore","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"arg","","",75,null],[12,"stack_slot","","",75,null],[12,"offset","","",75,null],[13,"Store","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"args","","",75,null],[12,"flags","","",75,null],[12,"offset","","",75,null],[13,"StoreComplex","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"args","","",75,null],[12,"flags","","",75,null],[12,"offset","","",75,null],[13,"TableAddr","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"arg","","",75,null],[12,"table","","",75,null],[12,"offset","","",75,null],[13,"Ternary","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"args","","",75,null],[13,"Trap","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"code","","",75,null],[13,"Unary","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"arg","","",75,null],[13,"UnaryBool","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"imm","","",75,null],[13,"UnaryConst","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"constant_handle","","",75,null],[13,"UnaryGlobalValue","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"global_value","","",75,null],[13,"UnaryIeee32","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"imm","","",75,null],[13,"UnaryIeee64","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"imm","","",75,null],[13,"UnaryImm","cranelift_codegen::ir::instructions","",75,null],[12,"opcode","cranelift_codegen::ir::instructions::InstructionData","",75,null],[12,"imm","","",75,null],[4,"Opcode","cranelift_codegen::ir::instructions","An instruction opcode.",null,null],[13,"Jump","","`jump EBB, args`. (Jump)",76,null],[13,"Fallthrough","","`fallthrough EBB, args`. (Jump)",76,null],[13,"Brz","","`brz c, EBB, args`. (Branch) Type inferred from `c`.",76,null],[13,"Brnz","","`brnz c, EBB, args`. (Branch) Type inferred from `c`.",76,null],[13,"BrIcmp","","`br_icmp Cond, x, y, EBB, args`. (BranchIcmp) Type…",76,null],[13,"Brif","","`brif Cond, f, EBB, args`. (BranchInt)",76,null],[13,"Brff","","`brff Cond, f, EBB, args`. (BranchFloat)",76,null],[13,"BrTable","","`br_table x, EBB, JT`. (BranchTable) Type inferred from `x`.",76,null],[13,"JumpTableEntry","","`entry = jump_table_entry x, addr, Size, JT`.…",76,null],[13,"JumpTableBase","","`addr = jump_table_base JT`. (BranchTableBase)",76,null],[13,"IndirectJumpTableBr","","`indirect_jump_table_br addr, JT`. (IndirectJump) Type…",76,null],[13,"Debugtrap","","`debugtrap`. (NullAry)",76,null],[13,"Trap","","`trap code`. (Trap)",76,null],[13,"Trapz","","`trapz c, code`. (CondTrap) Type inferred from `c`.",76,null],[13,"ResumableTrap","","`resumable_trap code`. (Trap)",76,null],[13,"Trapnz","","`trapnz c, code`. (CondTrap) Type inferred from `c`.",76,null],[13,"Trapif","","`trapif Cond, f, code`. (IntCondTrap)",76,null],[13,"Trapff","","`trapff Cond, f, code`. (FloatCondTrap)",76,null],[13,"Return","","`return rvals`. (MultiAry)",76,null],[13,"FallthroughReturn","","`fallthrough_return rvals`. (MultiAry)",76,null],[13,"Call","","`rvals = call FN, args`. (Call)",76,null],[13,"CallIndirect","","`rvals = call_indirect SIG, callee, args`. (CallIndirect)…",76,null],[13,"FuncAddr","","`addr = func_addr FN`. (FuncAddr)",76,null],[13,"Load","","`a = load MemFlags, p, Offset`. (Load)",76,null],[13,"LoadComplex","","`a = load_complex MemFlags, args, Offset`. (LoadComplex)",76,null],[13,"Store","","`store MemFlags, x, p, Offset`. (Store) Type inferred from…",76,null],[13,"StoreComplex","","`store_complex MemFlags, x, args, Offset`. (StoreComplex)…",76,null],[13,"Uload8","","`a = uload8 MemFlags, p, Offset`. (Load)",76,null],[13,"Uload8Complex","","`a = uload8_complex MemFlags, args, Offset`. (LoadComplex)",76,null],[13,"Sload8","","`a = sload8 MemFlags, p, Offset`. (Load)",76,null],[13,"Sload8Complex","","`a = sload8_complex MemFlags, args, Offset`. (LoadComplex)",76,null],[13,"Istore8","","`istore8 MemFlags, x, p, Offset`. (Store) Type inferred…",76,null],[13,"Istore8Complex","","`istore8_complex MemFlags, x, args, Offset`.…",76,null],[13,"Uload16","","`a = uload16 MemFlags, p, Offset`. (Load)",76,null],[13,"Uload16Complex","","`a = uload16_complex MemFlags, args, Offset`. (LoadComplex)",76,null],[13,"Sload16","","`a = sload16 MemFlags, p, Offset`. (Load)",76,null],[13,"Sload16Complex","","`a = sload16_complex MemFlags, args, Offset`. (LoadComplex)",76,null],[13,"Istore16","","`istore16 MemFlags, x, p, Offset`. (Store) Type inferred…",76,null],[13,"Istore16Complex","","`istore16_complex MemFlags, x, args, Offset`.…",76,null],[13,"Uload32","","`a = uload32 MemFlags, p, Offset`. (Load) Type inferred…",76,null],[13,"Uload32Complex","","`a = uload32_complex MemFlags, args, Offset`. (LoadComplex)",76,null],[13,"Sload32","","`a = sload32 MemFlags, p, Offset`. (Load) Type inferred…",76,null],[13,"Sload32Complex","","`a = sload32_complex MemFlags, args, Offset`. (LoadComplex)",76,null],[13,"Istore32","","`istore32 MemFlags, x, p, Offset`. (Store) Type inferred…",76,null],[13,"Istore32Complex","","`istore32_complex MemFlags, x, args, Offset`. (StoreComplex)",76,null],[13,"StackLoad","","`a = stack_load SS, Offset`. (StackLoad)",76,null],[13,"StackStore","","`stack_store x, SS, Offset`. (StackStore) Type inferred…",76,null],[13,"StackAddr","","`addr = stack_addr SS, Offset`. (StackLoad)",76,null],[13,"GlobalValue","","`a = global_value GV`. (UnaryGlobalValue)",76,null],[13,"SymbolValue","","`a = symbol_value GV`. (UnaryGlobalValue)",76,null],[13,"HeapAddr","","`addr = heap_addr H, p, Size`. (HeapAddr)",76,null],[13,"GetPinnedReg","","`addr = get_pinned_reg`. (NullAry)",76,null],[13,"SetPinnedReg","","`set_pinned_reg addr`. (Unary) Type inferred from `addr`.",76,null],[13,"TableAddr","","`addr = table_addr T, p, Offset`. (TableAddr)",76,null],[13,"Iconst","","`a = iconst N`. (UnaryImm)",76,null],[13,"F32const","","`a = f32const N`. (UnaryIeee32)",76,null],[13,"F64const","","`a = f64const N`. (UnaryIeee64)",76,null],[13,"Bconst","","`a = bconst N`. (UnaryBool)",76,null],[13,"Vconst","","`a = vconst N`. (UnaryConst)",76,null],[13,"Shuffle","","`a = shuffle a, b, mask`. (Shuffle) Type inferred from `a`.",76,null],[13,"Null","","`a = null`. (NullAry)",76,null],[13,"Nop","","`nop`. (NullAry)",76,null],[13,"Select","","`a = select c, x, y`. (Ternary) Type inferred from `x`.",76,null],[13,"Selectif","","`a = selectif cc, flags, x, y`. (IntSelect)",76,null],[13,"Bitselect","","`a = bitselect c, x, y`. (Ternary) Type inferred from `x`.",76,null],[13,"Copy","","`a = copy x`. (Unary) Type inferred from `x`.",76,null],[13,"Spill","","`a = spill x`. (Unary) Type inferred from `x`.",76,null],[13,"Fill","","`a = fill x`. (Unary) Type inferred from `x`.",76,null],[13,"FillNop","","`a = fill_nop x`. (Unary) Type inferred from `x`.",76,null],[13,"Regmove","","`regmove x, src, dst`. (RegMove) Type inferred from `x`.",76,null],[13,"CopySpecial","","`copy_special src, dst`. (CopySpecial)",76,null],[13,"CopyToSsa","","`a = copy_to_ssa src`. (CopyToSsa)",76,null],[13,"CopyNop","","`a = copy_nop x`. (Unary) Type inferred from `x`.",76,null],[13,"AdjustSpDown","","`adjust_sp_down delta`. (Unary) Type inferred from `delta`.",76,null],[13,"AdjustSpUpImm","","`adjust_sp_up_imm Offset`. (UnaryImm)",76,null],[13,"AdjustSpDownImm","","`adjust_sp_down_imm Offset`. (UnaryImm)",76,null],[13,"IfcmpSp","","`f = ifcmp_sp addr`. (Unary) Type inferred from `addr`.",76,null],[13,"Regspill","","`regspill x, src, SS`. (RegSpill) Type inferred from `x`.",76,null],[13,"Regfill","","`regfill x, SS, dst`. (RegFill) Type inferred from `x`.",76,null],[13,"Safepoint","","`safepoint args`. (MultiAry)",76,null],[13,"Vsplit","","`lo, hi = vsplit x`. (Unary) Type inferred from `x`.",76,null],[13,"Vconcat","","`a = vconcat x, y`. (Binary) Type inferred from `x`.",76,null],[13,"Vselect","","`a = vselect c, x, y`. (Ternary) Type inferred from `x`.",76,null],[13,"VanyTrue","","`s = vany_true a`. (Unary) Type inferred from `a`.",76,null],[13,"VallTrue","","`s = vall_true a`. (Unary) Type inferred from `a`.",76,null],[13,"Splat","","`a = splat x`. (Unary)",76,null],[13,"Insertlane","","`a = insertlane x, Idx, y`. (InsertLane) Type inferred…",76,null],[13,"Extractlane","","`a = extractlane x, Idx`. (ExtractLane) Type inferred from…",76,null],[13,"Icmp","","`a = icmp Cond, x, y`. (IntCompare) Type inferred from `x`.",76,null],[13,"IcmpImm","","`a = icmp_imm Cond, x, Y`. (IntCompareImm) Type inferred…",76,null],[13,"Ifcmp","","`f = ifcmp x, y`. (Binary) Type inferred from `x`.",76,null],[13,"IfcmpImm","","`f = ifcmp_imm x, Y`. (BinaryImm) Type inferred from `x`.",76,null],[13,"Iadd","","`a = iadd x, y`. (Binary) Type inferred from `x`.",76,null],[13,"UaddSat","","`a = uadd_sat x, y`. (Binary) Type inferred from `x`.",76,null],[13,"SaddSat","","`a = sadd_sat x, y`. (Binary) Type inferred from `x`.",76,null],[13,"Isub","","`a = isub x, y`. (Binary) Type inferred from `x`.",76,null],[13,"UsubSat","","`a = usub_sat x, y`. (Binary) Type inferred from `x`.",76,null],[13,"SsubSat","","`a = ssub_sat x, y`. (Binary) Type inferred from `x`.",76,null],[13,"Ineg","","`a = ineg x`. (Unary) Type inferred from `x`.",76,null],[13,"Imul","","`a = imul x, y`. (Binary) Type inferred from `x`.",76,null],[13,"Umulhi","","`a = umulhi x, y`. (Binary) Type inferred from `x`.",76,null],[13,"Smulhi","","`a = smulhi x, y`. (Binary) Type inferred from `x`.",76,null],[13,"Udiv","","`a = udiv x, y`. (Binary) Type inferred from `x`.",76,null],[13,"Sdiv","","`a = sdiv x, y`. (Binary) Type inferred from `x`.",76,null],[13,"Urem","","`a = urem x, y`. (Binary) Type inferred from `x`.",76,null],[13,"Srem","","`a = srem x, y`. (Binary) Type inferred from `x`.",76,null],[13,"IaddImm","","`a = iadd_imm x, Y`. (BinaryImm) Type inferred from `x`.",76,null],[13,"ImulImm","","`a = imul_imm x, Y`. (BinaryImm) Type inferred from `x`.",76,null],[13,"UdivImm","","`a = udiv_imm x, Y`. (BinaryImm) Type inferred from `x`.",76,null],[13,"SdivImm","","`a = sdiv_imm x, Y`. (BinaryImm) Type inferred from `x`.",76,null],[13,"UremImm","","`a = urem_imm x, Y`. (BinaryImm) Type inferred from `x`.",76,null],[13,"SremImm","","`a = srem_imm x, Y`. (BinaryImm) Type inferred from `x`.",76,null],[13,"IrsubImm","","`a = irsub_imm x, Y`. (BinaryImm) Type inferred from `x`.",76,null],[13,"IaddCin","","`a = iadd_cin x, y, c_in`. (Ternary) Type inferred from `y`.",76,null],[13,"IaddIfcin","","`a = iadd_ifcin x, y, c_in`. (Ternary) Type inferred from…",76,null],[13,"IaddCout","","`a, c_out = iadd_cout x, y`. (Binary) Type inferred from…",76,null],[13,"IaddIfcout","","`a, c_out = iadd_ifcout x, y`. (Binary) Type inferred from…",76,null],[13,"IaddCarry","","`a, c_out = iadd_carry x, y, c_in`. (Ternary) Type…",76,null],[13,"IaddIfcarry","","`a, c_out = iadd_ifcarry x, y, c_in`. (Ternary) Type…",76,null],[13,"IsubBin","","`a = isub_bin x, y, b_in`. (Ternary) Type inferred from `y`.",76,null],[13,"IsubIfbin","","`a = isub_ifbin x, y, b_in`. (Ternary) Type inferred from…",76,null],[13,"IsubBout","","`a, b_out = isub_bout x, y`. (Binary) Type inferred from…",76,null],[13,"IsubIfbout","","`a, b_out = isub_ifbout x, y`. (Binary) Type inferred from…",76,null],[13,"IsubBorrow","","`a, b_out = isub_borrow x, y, b_in`. (Ternary) Type…",76,null],[13,"IsubIfborrow","","`a, b_out = isub_ifborrow x, y, b_in`. (Ternary) Type…",76,null],[13,"Band","","`a = band x, y`. (Binary) Type inferred from `x`.",76,null],[13,"Bor","","`a = bor x, y`. (Binary) Type inferred from `x`.",76,null],[13,"Bxor","","`a = bxor x, y`. (Binary) Type inferred from `x`.",76,null],[13,"Bnot","","`a = bnot x`. (Unary) Type inferred from `x`.",76,null],[13,"BandNot","","`a = band_not x, y`. (Binary) Type inferred from `x`.",76,null],[13,"BorNot","","`a = bor_not x, y`. (Binary) Type inferred from `x`.",76,null],[13,"BxorNot","","`a = bxor_not x, y`. (Binary) Type inferred from `x`.",76,null],[13,"BandImm","","`a = band_imm x, Y`. (BinaryImm) Type inferred from `x`.",76,null],[13,"BorImm","","`a = bor_imm x, Y`. (BinaryImm) Type inferred from `x`.",76,null],[13,"BxorImm","","`a = bxor_imm x, Y`. (BinaryImm) Type inferred from `x`.",76,null],[13,"Rotl","","`a = rotl x, y`. (Binary) Type inferred from `x`.",76,null],[13,"Rotr","","`a = rotr x, y`. (Binary) Type inferred from `x`.",76,null],[13,"RotlImm","","`a = rotl_imm x, Y`. (BinaryImm) Type inferred from `x`.",76,null],[13,"RotrImm","","`a = rotr_imm x, Y`. (BinaryImm) Type inferred from `x`.",76,null],[13,"Ishl","","`a = ishl x, y`. (Binary) Type inferred from `x`.",76,null],[13,"Ushr","","`a = ushr x, y`. (Binary) Type inferred from `x`.",76,null],[13,"Sshr","","`a = sshr x, y`. (Binary) Type inferred from `x`.",76,null],[13,"IshlImm","","`a = ishl_imm x, Y`. (BinaryImm) Type inferred from `x`.",76,null],[13,"UshrImm","","`a = ushr_imm x, Y`. (BinaryImm) Type inferred from `x`.",76,null],[13,"SshrImm","","`a = sshr_imm x, Y`. (BinaryImm) Type inferred from `x`.",76,null],[13,"Bitrev","","`a = bitrev x`. (Unary) Type inferred from `x`.",76,null],[13,"Clz","","`a = clz x`. (Unary) Type inferred from `x`.",76,null],[13,"Cls","","`a = cls x`. (Unary) Type inferred from `x`.",76,null],[13,"Ctz","","`a = ctz x`. (Unary) Type inferred from `x`.",76,null],[13,"Popcnt","","`a = popcnt x`. (Unary) Type inferred from `x`.",76,null],[13,"Fcmp","","`a = fcmp Cond, x, y`. (FloatCompare) Type inferred from…",76,null],[13,"Ffcmp","","`f = ffcmp x, y`. (Binary) Type inferred from `x`.",76,null],[13,"Fadd","","`a = fadd x, y`. (Binary) Type inferred from `x`.",76,null],[13,"Fsub","","`a = fsub x, y`. (Binary) Type inferred from `x`.",76,null],[13,"Fmul","","`a = fmul x, y`. (Binary) Type inferred from `x`.",76,null],[13,"Fdiv","","`a = fdiv x, y`. (Binary) Type inferred from `x`.",76,null],[13,"Sqrt","","`a = sqrt x`. (Unary) Type inferred from `x`.",76,null],[13,"Fma","","`a = fma x, y, z`. (Ternary) Type inferred from `y`.",76,null],[13,"Fneg","","`a = fneg x`. (Unary) Type inferred from `x`.",76,null],[13,"Fabs","","`a = fabs x`. (Unary) Type inferred from `x`.",76,null],[13,"Fcopysign","","`a = fcopysign x, y`. (Binary) Type inferred from `x`.",76,null],[13,"Fmin","","`a = fmin x, y`. (Binary) Type inferred from `x`.",76,null],[13,"Fmax","","`a = fmax x, y`. (Binary) Type inferred from `x`.",76,null],[13,"Ceil","","`a = ceil x`. (Unary) Type inferred from `x`.",76,null],[13,"Floor","","`a = floor x`. (Unary) Type inferred from `x`.",76,null],[13,"Trunc","","`a = trunc x`. (Unary) Type inferred from `x`.",76,null],[13,"Nearest","","`a = nearest x`. (Unary) Type inferred from `x`.",76,null],[13,"IsNull","","`a = is_null x`. (Unary) Type inferred from `x`.",76,null],[13,"Trueif","","`a = trueif Cond, f`. (IntCond)",76,null],[13,"Trueff","","`a = trueff Cond, f`. (FloatCond)",76,null],[13,"Bitcast","","`a = bitcast x`. (Unary)",76,null],[13,"RawBitcast","","`a = raw_bitcast x`. (Unary)",76,null],[13,"ScalarToVector","","`a = scalar_to_vector s`. (Unary)",76,null],[13,"Breduce","","`a = breduce x`. (Unary)",76,null],[13,"Bextend","","`a = bextend x`. (Unary)",76,null],[13,"Bint","","`a = bint x`. (Unary)",76,null],[13,"Bmask","","`a = bmask x`. (Unary)",76,null],[13,"Ireduce","","`a = ireduce x`. (Unary)",76,null],[13,"Uextend","","`a = uextend x`. (Unary)",76,null],[13,"Sextend","","`a = sextend x`. (Unary)",76,null],[13,"Fpromote","","`a = fpromote x`. (Unary)",76,null],[13,"Fdemote","","`a = fdemote x`. (Unary)",76,null],[13,"FcvtToUint","","`a = fcvt_to_uint x`. (Unary)",76,null],[13,"FcvtToUintSat","","`a = fcvt_to_uint_sat x`. (Unary)",76,null],[13,"FcvtToSint","","`a = fcvt_to_sint x`. (Unary)",76,null],[13,"FcvtToSintSat","","`a = fcvt_to_sint_sat x`. (Unary)",76,null],[13,"FcvtFromUint","","`a = fcvt_from_uint x`. (Unary)",76,null],[13,"FcvtFromSint","","`a = fcvt_from_sint x`. (Unary)",76,null],[13,"Isplit","","`lo, hi = isplit x`. (Unary) Type inferred from `x`.",76,null],[13,"Iconcat","","`a = iconcat lo, hi`. (Binary) Type inferred from `lo`.",76,null],[13,"X86Udivmodx","","`q, r = x86_udivmodx nlo, nhi, d`. (Ternary) Type inferred…",76,null],[13,"X86Sdivmodx","","`q, r = x86_sdivmodx nlo, nhi, d`. (Ternary) Type inferred…",76,null],[13,"X86Umulx","","`resLo, resHi = x86_umulx argL, argR`. (Binary) Type…",76,null],[13,"X86Smulx","","`resLo, resHi = x86_smulx argL, argR`. (Binary) Type…",76,null],[13,"X86Cvtt2si","","`a = x86_cvtt2si x`. (Unary)",76,null],[13,"X86Fmin","","`a = x86_fmin x, y`. (Binary) Type inferred from `x`.",76,null],[13,"X86Fmax","","`a = x86_fmax x, y`. (Binary) Type inferred from `x`.",76,null],[13,"X86Push","","`x86_push x`. (Unary) Type inferred from `x`.",76,null],[13,"X86Pop","","`x = x86_pop`. (NullAry)",76,null],[13,"X86Bsr","","`y, rflags = x86_bsr x`. (Unary) Type inferred from `x`.",76,null],[13,"X86Bsf","","`y, rflags = x86_bsf x`. (Unary) Type inferred from `x`.",76,null],[13,"X86Pshufd","","`a = x86_pshufd a, i`. (ExtractLane) Type inferred from `a`.",76,null],[13,"X86Pshufb","","`a = x86_pshufb a, b`. (Binary) Type inferred from `a`.",76,null],[13,"X86Pextr","","`a = x86_pextr x, Idx`. (ExtractLane) Type inferred from…",76,null],[13,"X86Pinsr","","`a = x86_pinsr x, Idx, y`. (InsertLane) Type inferred from…",76,null],[13,"X86Insertps","","`a = x86_insertps x, Idx, y`. (InsertLane) Type inferred…",76,null],[13,"X86Movsd","","`a = x86_movsd x, y`. (Binary) Type inferred from `x`.",76,null],[13,"X86Movlhps","","`a = x86_movlhps x, y`. (Binary) Type inferred from `x`.",76,null],[13,"X86Psll","","`a = x86_psll x, y`. (Binary) Type inferred from `x`.",76,null],[13,"X86Psrl","","`a = x86_psrl x, y`. (Binary) Type inferred from `x`.",76,null],[13,"X86Psra","","`a = x86_psra x, y`. (Binary) Type inferred from `x`.",76,null],[13,"X86Ptest","","`f = x86_ptest x, y`. (Binary) Type inferred from `x`.",76,null],[13,"X86Pmaxs","","`a = x86_pmaxs x, y`. (Binary) Type inferred from `x`.",76,null],[13,"X86Pmaxu","","`a = x86_pmaxu x, y`. (Binary) Type inferred from `x`.",76,null],[13,"X86Pmins","","`a = x86_pmins x, y`. (Binary) Type inferred from `x`.",76,null],[13,"X86Pminu","","`a = x86_pminu x, y`. (Binary) Type inferred from `x`.",76,null],[4,"BranchInfo","","Information about branch and jump instructions.",null,null],[13,"NotABranch","","This is not a branch or jump instruction. This instruction…",77,null],[13,"SingleDest","","This is a branch or jump to a single destination EBB,…",77,null],[13,"Table","","This is a jump table branch which can have many…",77,null],[4,"CallInfo","","Information about call instructions.",null,null],[13,"NotACall","","This is not a call instruction.",78,null],[13,"Direct","","This is a direct call to an external function declared in…",78,null],[13,"Indirect","","This is an indirect call with the specified signature. See…",78,null],[4,"ResolvedConstraint","","The type constraint on a value argument once the…",null,null],[13,"Bound","","The operand is bound to a known type.",79,null],[13,"Free","","The operand type can vary freely within the given set.",79,null],[6,"ValueList","","Some instructions use an external list of argument values…",null,null],[6,"ValueListPool","","Memory pool for holding value lists. See `ValueList`.",null,null],[11,"opcode","","Get the opcode of this instruction.",75,[[["self"]],["opcode"]]],[11,"typevar_operand","","Get the controlling type variable operand.",75,[[["valuelistpool"],["self"]],[["value"],["option",["value"]]]]],[11,"arguments","","Get the value arguments to this instruction.",75,[[["self"],["valuelistpool"]]]],[11,"arguments_mut","","Get mutable references to the value arguments to this…",75,[[["self"],["valuelistpool"]]]],[11,"take_value_list","","Take out the value list with all the value arguments and…",75,[[["self"]],[["option",["valuelist"]],["valuelist"]]]],[11,"put_value_list","","Put back a value list.",75,[[["self"],["valuelist"]]]],[11,"eq","","Compare two `InstructionData` for equality.",75,[[["valuelistpool"],["self"]],["bool"]]],[11,"hash","","Hash an `InstructionData`.",75,[[["valuelistpool"],["self"],["h"]]]],[11,"is_terminator","","True for instructions that terminate the EBB",76,[[],["bool"]]],[11,"is_branch","","True for all branch or jump instructions.",76,[[],["bool"]]],[11,"is_indirect_branch","","True for all indirect branch or jump instructions.",76,[[],["bool"]]],[11,"is_call","","Is this a call instruction?",76,[[],["bool"]]],[11,"is_return","","Is this a return instruction?",76,[[],["bool"]]],[11,"is_ghost","","Is this a ghost instruction?",76,[[],["bool"]]],[11,"can_load","","Can this instruction read from memory?",76,[[],["bool"]]],[11,"can_store","","Can this instruction write to memory?",76,[[],["bool"]]],[11,"can_trap","","Can this instruction cause a trap?",76,[[],["bool"]]],[11,"other_side_effects","","Does this instruction have other side effects besides…",76,[[],["bool"]]],[11,"writes_cpu_flags","","Does this instruction write to CPU flags?",76,[[],["bool"]]],[11,"format","","Get the instruction format for this opcode.",76,[[],["instructionformat"]]],[11,"constraints","","Get the constraint descriptor for this opcode. Panic if…",76,[[],["opcodeconstraints"]]],[11,"new","","Create an empty argument list.",80,[[],["self"]]],[11,"push","","Add an argument to the end.",80,[[["self"],["value"]]]],[11,"is_empty","","Check if the list is empty.",80,[[["self"]],["bool"]]],[11,"into_value_list","","Convert this to a value list in `pool` with `fixed`…",80,[[["valuelistpool"]],["valuelist"]]],[11,"analyze_branch","","Return information about the destination of a branch or…",75,[[["valuelistpool"],["self"]],["branchinfo"]]],[11,"branch_destination","","Get the single destination of this branch instruction, if…",75,[[["self"]],[["ebb"],["option",["ebb"]]]]],[11,"branch_destination_mut","","Get a mutable reference to the single destination of this…",75,[[["self"]],[["ebb"],["option",["ebb"]]]]],[11,"analyze_call","","Return information about a call instruction.",75,[[["valuelistpool"],["self"]],["callinfo"]]],[11,"use_typevar_operand","","Can the controlling type variable for this opcode be…",81,[[],["bool"]]],[11,"requires_typevar_operand","","Is it necessary to look at the designated value input…",81,[[],["bool"]]],[11,"num_fixed_results","","Get the number of fixed result values produced by this…",81,[[],["usize"]]],[11,"num_fixed_value_arguments","","Get the number of fixed input values required by this…",81,[[],["usize"]]],[11,"result_type","","Get the value type of result number `n`, having resolved…",81,[[["type"],["usize"]],["type"]]],[11,"value_argument_constraint","","Get the value type of input value number `n`, having…",81,[[["type"],["usize"]],["resolvedconstraint"]]],[11,"ctrl_typeset","","Get the typeset of allowed types for the controlling type…",81,[[],[["valuetypeset"],["option",["valuetypeset"]]]]],[11,"is_polymorphic","","Is this instruction polymorphic?",81,[[],["bool"]]],[11,"contains","","Does `typ` belong to this set?",73,[[["type"]],["bool"]]],[11,"example","","Get an example member of this type set.",73,[[],["type"]]],[0,"jumptable","cranelift_codegen::ir","Jump table representation.",null,null],[3,"JumpTableData","cranelift_codegen::ir::jumptable","Contents of a jump table.",null,null],[11,"new","","Create a new empty jump table.",82,[[],["self"]]],[11,"with_capacity","","Create a new empty jump table with the specified capacity.",82,[[["usize"]],["self"]]],[11,"len","","Get the number of table entries.",82,[[["self"]],["usize"]]],[11,"push_entry","","Append a table entry.",82,[[["ebb"],["self"]]]],[11,"branches_to","","Checks if any of the entries branch to `ebb`.",82,[[["ebb"],["self"]],["bool"]]],[11,"as_slice","","Access the whole table as a slice.",82,[[["self"]]]],[11,"as_mut_slice","","Access the whole table as a mutable slice.",82,[[["self"]]]],[11,"iter","","Returns an iterator over the table.",82,[[["self"]],[["ebb"],["iter",["ebb"]]]]],[11,"iter_mut","","Returns an iterator that allows modifying each value.",82,[[["self"]],[["ebb"],["itermut",["ebb"]]]]],[0,"layout","cranelift_codegen::ir","Function layout.",null,null],[3,"Layout","cranelift_codegen::ir::layout","The `Layout` struct determines the layout of EBBs and…",null,null],[3,"Ebbs","","Iterate over EBBs in layout order. See `Layout::ebbs()`.",null,null],[3,"Insts","","Iterate over instructions in an EBB in layout order. See…",null,null],[11,"new","","Create a new empty `Layout`.",83,[[],["self"]]],[11,"clear","","Clear the layout.",83,[[["self"]]]],[11,"ebb_capacity","","Returns the capacity of the `EbbData` map.",83,[[["self"]],["usize"]]],[11,"is_ebb_inserted","","Is `ebb` currently part of the layout?",83,[[["ebb"],["self"]],["bool"]]],[11,"append_ebb","","Insert `ebb` as the last EBB in the layout.",83,[[["ebb"],["self"]]]],[11,"insert_ebb","","Insert `ebb` in the layout before the existing EBB `before`.",83,[[["ebb"],["self"]]]],[11,"insert_ebb_after","","Insert `ebb` in the layout after the existing EBB `after`.",83,[[["ebb"],["self"]]]],[11,"remove_ebb","","Remove `ebb` from the layout.",83,[[["ebb"],["self"]]]],[11,"ebbs","","Return an iterator over all EBBs in layout order.",83,[[["self"]],["ebbs"]]],[11,"entry_block","","Get the function's entry block. This is simply the first…",83,[[["self"]],[["ebb"],["option",["ebb"]]]]],[11,"last_ebb","","Get the last EBB in the layout.",83,[[["self"]],[["ebb"],["option",["ebb"]]]]],[11,"prev_ebb","","Get the block preceding `ebb` in the layout order.",83,[[["ebb"],["self"]],[["ebb"],["option",["ebb"]]]]],[11,"next_ebb","","Get the block following `ebb` in the layout order.",83,[[["ebb"],["self"]],[["ebb"],["option",["ebb"]]]]],[11,"inst_ebb","","Get the EBB containing `inst`, or `None` if `inst` is not…",83,[[["self"],["inst"]],[["ebb"],["option",["ebb"]]]]],[11,"pp_ebb","","Get the EBB containing the program point `pp`. Panic if…",83,[[["self"],["pp"]],["ebb"]]],[11,"append_inst","","Append `inst` to the end of `ebb`.",83,[[["ebb"],["self"],["inst"]]]],[11,"first_inst","","Fetch an ebb's first instruction.",83,[[["ebb"],["self"]],[["inst"],["option",["inst"]]]]],[11,"last_inst","","Fetch an ebb's last instruction.",83,[[["ebb"],["self"]],[["inst"],["option",["inst"]]]]],[11,"next_inst","","Fetch the instruction following `inst`.",83,[[["self"],["inst"]],[["inst"],["option",["inst"]]]]],[11,"prev_inst","","Fetch the instruction preceding `inst`.",83,[[["self"],["inst"]],[["inst"],["option",["inst"]]]]],[11,"insert_inst","","Insert `inst` before the instruction `before` in the same…",83,[[["self"],["inst"]]]],[11,"remove_inst","","Remove `inst` from the layout.",83,[[["self"],["inst"]]]],[11,"ebb_insts","","Iterate over the instructions in `ebb` in layout order.",83,[[["ebb"],["self"]],["insts"]]],[11,"split_ebb","","Split the EBB containing `before` in two.",83,[[["ebb"],["self"],["inst"]]]],[11,"for_inst","cranelift_codegen::ir","Get the well-known library call name to use as a…",38,[[["opcode"],["type"]],["option"]]],[11,"new","","Create a new empty set of flags.",84,[[],["self"]]],[11,"trusted","","Create a set of flags representing an access from a…",84,[[],["self"]]],[11,"set_by_name","","Set a flag bit by name.",84,[[["str"],["self"]],["bool"]]],[11,"notrap","","Test if the `notrap` flag is set.",84,[[],["bool"]]],[11,"set_notrap","","Set the `notrap` flag.",84,[[["self"]]]],[11,"aligned","","Test if the `aligned` flag is set.",84,[[],["bool"]]],[11,"set_aligned","","Set the `aligned` flag.",84,[[["self"]]]],[11,"readonly","","Test if the `readonly` flag is set.",84,[[],["bool"]]],[11,"set_readonly","","Set the `readonly` flag.",84,[[["self"]]]],[11,"unwrap_inst","","Get the instruction we know is inside.",39,[[],["inst"]]],[11,"new","","Create a new source location with the given bits.",85,[[["u32"]],["self"]]],[11,"is_default","","Is this the default source location?",85,[[],["bool"]]],[11,"bits","","Read the bits of this source location.",85,[[],["u32"]]],[0,"stackslot","","Stack slots.",null,null],[3,"StackSlotData","cranelift_codegen::ir::stackslot","Contents of a stack slot.",null,null],[12,"kind","","The kind of stack slot.",86,null],[12,"size","","Size of stack slot in bytes.",86,null],[12,"offset","","Offset of stack slot relative to the stack pointer in the…",86,null],[3,"StackSlots","","Stack frame manager.",null,null],[12,"frame_size","","The total size of the stack frame.",87,null],[4,"StackSlotKind","","The kind of a stack slot.",null,null],[13,"SpillSlot","","A spill slot. This is a stack slot created by the register…",88,null],[13,"ExplicitSlot","","An explicit stack slot. This is a chunk of stack memory…",88,null],[13,"IncomingArg","","An incoming function argument.",88,null],[13,"OutgoingArg","","An outgoing function argument.",88,null],[13,"StructReturnSlot","","Space allocated in the caller's frame for the callee's…",88,null],[13,"EmergencySlot","","An emergency spill slot.",88,null],[6,"StackSize","","The size of an object on the stack, or the size of a stack…",null,null],[6,"StackOffset","","A stack offset.",null,null],[11,"new","","Create a stack slot with the specified byte size.",86,[[["stacksize"],["stackslotkind"]],["self"]]],[11,"alignment","","Get the alignment in bytes of this stack slot given the…",86,[[["stacksize"],["self"]],["stacksize"]]],[11,"new","","Create an empty stack slot manager.",87,[[],["self"]]],[11,"clear","","Clear out everything.",87,[[["self"]]]],[11,"push","","Allocate a new stack slot.",87,[[["self"],["stackslotdata"]],["stackslot"]]],[11,"is_valid","","Check if `ss` is a valid stack slot reference.",87,[[["stackslot"],["self"]],["bool"]]],[11,"iter","","Get an iterator over all the stack slot keys.",87,[[["self"]],[["stackslot"],["iter",["stackslot","stackslotdata"]],["stackslotdata"]]]],[11,"iter_mut","","Get an iterator over all the stack slot keys, mutable…",87,[[["self"]],[["stackslot"],["stackslotdata"],["itermut",["stackslot","stackslotdata"]]]]],[11,"values","","Get an iterator over all the stack slot records.",87,[[["self"]],[["iter",["stackslotdata"]],["stackslotdata"]]]],[11,"values_mut","","Get an iterator over all the stack slot records, mutable…",87,[[["self"]],[["stackslotdata"],["itermut",["stackslotdata"]]]]],[11,"keys","","Get an iterator over all the stack slot keys.",87,[[["self"]],[["stackslot"],["keys",["stackslot"]]]]],[11,"next_key","","Get a reference to the next stack slot that would be…",87,[[["self"]],["stackslot"]]],[11,"make_spill_slot","","Create a new spill slot for spilling values of type `ty`.",87,[[["self"],["type"]],["stackslot"]]],[11,"make_incoming_arg","","Create a stack slot representing an incoming function…",87,[[["self"],["type"],["stackoffset"]],["stackslot"]]],[11,"get_outgoing_arg","","Get a stack slot representing an outgoing argument.",87,[[["self"],["type"],["stackoffset"]],["stackslot"]]],[11,"get_emergency_slot","","Get an emergency spill slot that can be used to store a…",87,[[["self"],["type"]],["stackslot"]]],[0,"types","cranelift_codegen::ir","Common types for the Cranelift code generator.",null,null],[3,"Type","cranelift_codegen::ir::types","The type of an SSA value.",null,null],[17,"INVALID","","Not a valid type. Can't be loaded or stored. Can't be part…",null,null],[17,"IFLAGS","","CPU flags representing the result of an integer…",null,null],[17,"FFLAGS","","CPU flags representing the result of a floating point…",null,null],[17,"B1","","A boolean type with 1 bits.",null,null],[17,"B8","","A boolean type with 8 bits.",null,null],[17,"B16","","A boolean type with 16 bits.",null,null],[17,"B32","","A boolean type with 32 bits.",null,null],[17,"B64","","A boolean type with 64 bits.",null,null],[17,"B128","","A boolean type with 128 bits.",null,null],[17,"I8","","An integer type with 8 bits. WARNING: arithmetic on 8bit…",null,null],[17,"I16","","An integer type with 16 bits. WARNING: arithmetic on 16bit…",null,null],[17,"I32","","An integer type with 32 bits.",null,null],[17,"I64","","An integer type with 64 bits.",null,null],[17,"I128","","An integer type with 128 bits.",null,null],[17,"F32","","A 32-bit floating point type represented in the IEEE…",null,null],[17,"F64","","A 64-bit floating point type represented in the IEEE…",null,null],[17,"R32","","An opaque reference type with 32 bits.",null,null],[17,"R64","","An opaque reference type with 64 bits.",null,null],[17,"B8X8","","A SIMD vector with 8 lanes containing a `b8` each.",null,null],[17,"B16X4","","A SIMD vector with 4 lanes containing a `b16` each.",null,null],[17,"B32X2","","A SIMD vector with 2 lanes containing a `b32` each.",null,null],[17,"I8X8","","A SIMD vector with 8 lanes containing a `i8` each.",null,null],[17,"I16X4","","A SIMD vector with 4 lanes containing a `i16` each.",null,null],[17,"I32X2","","A SIMD vector with 2 lanes containing a `i32` each.",null,null],[17,"F32X2","","A SIMD vector with 2 lanes containing a `f32` each.",null,null],[17,"B8X16","","A SIMD vector with 16 lanes containing a `b8` each.",null,null],[17,"B16X8","","A SIMD vector with 8 lanes containing a `b16` each.",null,null],[17,"B32X4","","A SIMD vector with 4 lanes containing a `b32` each.",null,null],[17,"B64X2","","A SIMD vector with 2 lanes containing a `b64` each.",null,null],[17,"I8X16","","A SIMD vector with 16 lanes containing a `i8` each.",null,null],[17,"I16X8","","A SIMD vector with 8 lanes containing a `i16` each.",null,null],[17,"I32X4","","A SIMD vector with 4 lanes containing a `i32` each.",null,null],[17,"I64X2","","A SIMD vector with 2 lanes containing a `i64` each.",null,null],[17,"F32X4","","A SIMD vector with 4 lanes containing a `f32` each.",null,null],[17,"F64X2","","A SIMD vector with 2 lanes containing a `f64` each.",null,null],[17,"B8X32","","A SIMD vector with 32 lanes containing a `b8` each.",null,null],[17,"B16X16","","A SIMD vector with 16 lanes containing a `b16` each.",null,null],[17,"B32X8","","A SIMD vector with 8 lanes containing a `b32` each.",null,null],[17,"B64X4","","A SIMD vector with 4 lanes containing a `b64` each.",null,null],[17,"B128X2","","A SIMD vector with 2 lanes containing a `b128` each.",null,null],[17,"I8X32","","A SIMD vector with 32 lanes containing a `i8` each.",null,null],[17,"I16X16","","A SIMD vector with 16 lanes containing a `i16` each.",null,null],[17,"I32X8","","A SIMD vector with 8 lanes containing a `i32` each.",null,null],[17,"I64X4","","A SIMD vector with 4 lanes containing a `i64` each.",null,null],[17,"I128X2","","A SIMD vector with 2 lanes containing a `i128` each.",null,null],[17,"F32X8","","A SIMD vector with 8 lanes containing a `f32` each.",null,null],[17,"F64X4","","A SIMD vector with 4 lanes containing a `f64` each.",null,null],[17,"B8X64","","A SIMD vector with 64 lanes containing a `b8` each.",null,null],[17,"B16X32","","A SIMD vector with 32 lanes containing a `b16` each.",null,null],[17,"B32X16","","A SIMD vector with 16 lanes containing a `b32` each.",null,null],[17,"B64X8","","A SIMD vector with 8 lanes containing a `b64` each.",null,null],[17,"B128X4","","A SIMD vector with 4 lanes containing a `b128` each.",null,null],[17,"I8X64","","A SIMD vector with 64 lanes containing a `i8` each.",null,null],[17,"I16X32","","A SIMD vector with 32 lanes containing a `i16` each.",null,null],[17,"I32X16","","A SIMD vector with 16 lanes containing a `i32` each.",null,null],[17,"I64X8","","A SIMD vector with 8 lanes containing a `i64` each.",null,null],[17,"I128X4","","A SIMD vector with 4 lanes containing a `i128` each.",null,null],[17,"F32X16","","A SIMD vector with 16 lanes containing a `f32` each.",null,null],[17,"F64X8","","A SIMD vector with 8 lanes containing a `f64` each.",null,null],[11,"lane_type","","Get the lane type of this SIMD vector type.",89,[[],["self"]]],[11,"lane_of","","The type transformation that returns the lane type of a…",89,[[],["self"]]],[11,"log2_lane_bits","","Get log_2 of the number of bits in a lane.",89,[[],["u8"]]],[11,"lane_bits","","Get the number of bits in a lane.",89,[[],["u8"]]],[11,"int","","Get an integer type with the requested number of bits.",89,[[["u16"]],["option"]]],[11,"as_bool_pedantic","","Get a type with the same number of lanes as this type, but…",89,[[],["self"]]],[11,"as_bool","","Get a type with the same number of lanes as this type, but…",89,[[],["self"]]],[11,"half_width","","Get a type with the same number of lanes as this type, but…",89,[[],["option"]]],[11,"double_width","","Get a type with the same number of lanes as this type, but…",89,[[],["option"]]],[11,"is_invalid","","Is this the INVALID type?",89,[[],["bool"]]],[11,"is_special","","Is this a special type?",89,[[],["bool"]]],[11,"is_lane","","Is this a lane type?",89,[[],["bool"]]],[11,"is_vector","","Is this a SIMD vector type?",89,[[],["bool"]]],[11,"is_bool","","Is this a scalar boolean type?",89,[[],["bool"]]],[11,"is_int","","Is this a scalar integer type?",89,[[],["bool"]]],[11,"is_float","","Is this a scalar floating point type?",89,[[],["bool"]]],[11,"is_flags","","Is this a CPU flags type?",89,[[],["bool"]]],[11,"is_ref","","Is this a ref type?",89,[[],["bool"]]],[11,"log2_lane_count","","Get log_2 of the number of lanes in this SIMD vector type.",89,[[],["u8"]]],[11,"lane_count","","Get the number of lanes in this SIMD vector type.",89,[[],["u16"]]],[11,"bits","","Get the total number of bits used to represent this type.",89,[[],["u16"]]],[11,"bytes","","Get the number of bytes used to store this type in memory.",89,[[],["u32"]]],[11,"by","","Get a SIMD vector type with `n` times more lanes than this…",89,[[["u16"]],["option"]]],[11,"half_vector","","Get a SIMD vector with half the number of lanes.",89,[[],["option"]]],[11,"index","","Index of this type, for use with hash tables etc.",89,[[],["usize"]]],[11,"wider_or_equal","","True iff:",89,[[],["bool"]]],[11,"triple_pointer_type","","Return the pointer type for the given target triple.",89,[[["triple"]],["self"]]],[11,"is_assigned","cranelift_codegen::ir","Is this an assigned location? (That is, not `Unassigned`).",42,[[],["bool"]]],[11,"unwrap_reg","","Get the register unit of this location, or panic.",42,[[],["regunit"]]],[11,"unwrap_stack","","Get the stack slot of this location, or panic.",42,[[],["stackslot"]]],[11,"display","","Return an object that can display this value location,…",42,[[["into",["option"]],["option",["reginfo"]]],["displayvalueloc"]]],[11,"is_assigned","","Is this an assigned location? (That is, not `Unassigned`).",41,[[],["bool"]]],[11,"is_reg","","Is this a register location?",41,[[],["bool"]]],[11,"is_stack","","Is this a stack location?",41,[[],["bool"]]],[11,"display","","Return an object that can display this argument location,…",41,[[["into",["option"]],["option",["reginfo"]]],["displayargumentloc"]]],[6,"FrameLayoutChanges","","Set of frame layout changes.",null,null],[6,"ValueLocations","","Map of value locations.",null,null],[6,"JumpTables","","Map of jump tables.",null,null],[6,"InstEncodings","","Map of instruction encodings.",null,null],[6,"EbbOffsets","","Code offsets for EBBs.",null,null],[6,"JumpTableOffsets","","Code offsets for Jump Tables.",null,null],[6,"SourceLocs","","Source locations for instructions.",null,null],[8,"InstBuilder","","Convenience methods for building instructions.",null,null],[11,"jump","","Jump.",90,[[["ebb"]],["inst"]]],[11,"fallthrough","","Fall through to the next EBB.",90,[[["ebb"]],["inst"]]],[11,"brz","","Branch when zero.",90,[[["value"],["ebb"]],["inst"]]],[11,"brnz","","Branch when non-zero.",90,[[["value"],["ebb"]],["inst"]]],[11,"br_icmp","","Compare scalar integers and branch.",90,[[["into",["intcc"]],["value"],["ebb"],["intcc"]],["inst"]]],[11,"brif","","Branch when condition is true in integer CPU flags.",90,[[["into",["intcc"]],["value"],["ebb"],["intcc"]],["inst"]]],[11,"brff","","Branch when condition is true in floating point CPU flags.",90,[[["floatcc"],["value"],["ebb"],["into",["floatcc"]]],["inst"]]],[11,"br_table","","Indirect branch via jump table.",90,[[["value"],["ebb"],["jumptable"]],["inst"]]],[11,"jump_table_entry","","Get an entry from a jump table.",90,[[["jumptable"],["value"],["into",["uimm8"]],["uimm8"]],["value"]]],[11,"jump_table_base","","Get the absolute base address of a jump table.",90,[[["jumptable"],["type"]],["value"]]],[11,"indirect_jump_table_br","","Branch indirectly via a jump table entry.",90,[[["value"],["jumptable"]],["inst"]]],[11,"debugtrap","","Encodes an assembly debug trap.",90,[[],["inst"]]],[11,"trap","","Terminate execution unconditionally.",90,[[["trapcode"],["into",["trapcode"]]],["inst"]]],[11,"trapz","","Trap when zero.",90,[[["trapcode"],["value"],["into",["trapcode"]]],["inst"]]],[11,"resumable_trap","","A resumable trap.",90,[[["trapcode"],["into",["trapcode"]]],["inst"]]],[11,"trapnz","","Trap when non-zero.",90,[[["trapcode"],["value"],["into",["trapcode"]]],["inst"]]],[11,"trapif","","Trap when condition is true in integer CPU flags.",90,[[["into",["intcc"]],["value"],["into",["trapcode"]],["intcc"],["trapcode"]],["inst"]]],[11,"trapff","","Trap when condition is true in floating point CPU flags.",90,[[["floatcc"],["value"],["into",["trapcode"]],["trapcode"],["into",["floatcc"]]],["inst"]]],[11,"return_","","Return from the function.",90,[[],["inst"]]],[11,"fallthrough_return","","Return from the function by fallthrough.",90,[[],["inst"]]],[11,"call","","Direct function call.",90,[[["funcref"]],["inst"]]],[11,"call_indirect","","Indirect function call.",90,[[["sigref"],["value"]],["inst"]]],[11,"func_addr","","Get the address of a function.",90,[[["funcref"],["type"]],["value"]]],[11,"load","","Load from memory at `p + Offset`.",90,[[["into",["memflags"]],["memflags"],["value"],["type"],["into",["offset32"]],["offset32"]],["value"]]],[11,"load_complex","","Load from memory at `sum(args) + Offset`.",90,[[["into",["memflags"]],["memflags"],["type"],["into",["offset32"]],["offset32"]],["value"]]],[11,"store","","Store `x` to memory at `p + Offset`.",90,[[["into",["memflags"]],["memflags"],["value"],["into",["offset32"]],["offset32"]],["inst"]]],[11,"store_complex","","Store `x` to memory at `sum(args) + Offset`.",90,[[["into",["memflags"]],["memflags"],["value"],["into",["offset32"]],["offset32"]],["inst"]]],[11,"uload8","","Load 8 bits from memory at `p + Offset` and zero-extend.",90,[[["into",["memflags"]],["memflags"],["value"],["type"],["into",["offset32"]],["offset32"]],["value"]]],[11,"uload8_complex","","Load 8 bits from memory at `sum(args) + Offset` and…",90,[[["into",["memflags"]],["memflags"],["type"],["into",["offset32"]],["offset32"]],["value"]]],[11,"sload8","","Load 8 bits from memory at `p + Offset` and sign-extend.",90,[[["into",["memflags"]],["memflags"],["value"],["type"],["into",["offset32"]],["offset32"]],["value"]]],[11,"sload8_complex","","Load 8 bits from memory at `sum(args) + Offset` and…",90,[[["into",["memflags"]],["memflags"],["type"],["into",["offset32"]],["offset32"]],["value"]]],[11,"istore8","","Store the low 8 bits of `x` to memory at `p + Offset`.",90,[[["into",["memflags"]],["memflags"],["value"],["into",["offset32"]],["offset32"]],["inst"]]],[11,"istore8_complex","","Store the low 8 bits of `x` to memory at `sum(args) +…",90,[[["into",["memflags"]],["memflags"],["value"],["into",["offset32"]],["offset32"]],["inst"]]],[11,"uload16","","Load 16 bits from memory at `p + Offset` and zero-extend.",90,[[["into",["memflags"]],["memflags"],["value"],["type"],["into",["offset32"]],["offset32"]],["value"]]],[11,"uload16_complex","","Load 16 bits from memory at `sum(args) + Offset` and…",90,[[["into",["memflags"]],["memflags"],["type"],["into",["offset32"]],["offset32"]],["value"]]],[11,"sload16","","Load 16 bits from memory at `p + Offset` and sign-extend.",90,[[["into",["memflags"]],["memflags"],["value"],["type"],["into",["offset32"]],["offset32"]],["value"]]],[11,"sload16_complex","","Load 16 bits from memory at `sum(args) + Offset` and…",90,[[["into",["memflags"]],["memflags"],["type"],["into",["offset32"]],["offset32"]],["value"]]],[11,"istore16","","Store the low 16 bits of `x` to memory at `p + Offset`.",90,[[["into",["memflags"]],["memflags"],["value"],["into",["offset32"]],["offset32"]],["inst"]]],[11,"istore16_complex","","Store the low 16 bits of `x` to memory at `sum(args) +…",90,[[["into",["memflags"]],["memflags"],["value"],["into",["offset32"]],["offset32"]],["inst"]]],[11,"uload32","","Load 32 bits from memory at `p + Offset` and zero-extend.",90,[[["into",["memflags"]],["memflags"],["value"],["into",["offset32"]],["offset32"]],["value"]]],[11,"uload32_complex","","Load 32 bits from memory at `sum(args) + Offset` and…",90,[[["into",["memflags"]],["memflags"],["into",["offset32"]],["offset32"]],["value"]]],[11,"sload32","","Load 32 bits from memory at `p + Offset` and sign-extend.",90,[[["into",["memflags"]],["memflags"],["value"],["into",["offset32"]],["offset32"]],["value"]]],[11,"sload32_complex","","Load 32 bits from memory at `sum(args) + Offset` and…",90,[[["into",["memflags"]],["memflags"],["into",["offset32"]],["offset32"]],["value"]]],[11,"istore32","","Store the low 32 bits of `x` to memory at `p + Offset`.",90,[[["into",["memflags"]],["memflags"],["value"],["into",["offset32"]],["offset32"]],["inst"]]],[11,"istore32_complex","","Store the low 32 bits of `x` to memory at `sum(args) +…",90,[[["into",["memflags"]],["memflags"],["value"],["into",["offset32"]],["offset32"]],["inst"]]],[11,"stack_load","","Load a value from a stack slot at the constant offset.",90,[[["stackslot"],["type"],["into",["offset32"]],["offset32"]],["value"]]],[11,"stack_store","","Store a value to a stack slot at a constant offset.",90,[[["value"],["stackslot"],["into",["offset32"]],["offset32"]],["inst"]]],[11,"stack_addr","","Get the address of a stack slot.",90,[[["stackslot"],["type"],["into",["offset32"]],["offset32"]],["value"]]],[11,"global_value","","Compute the value of global GV.",90,[[["globalvalue"],["type"]],["value"]]],[11,"symbol_value","","Compute the value of global GV, which is a symbolic value.",90,[[["globalvalue"],["type"]],["value"]]],[11,"heap_addr","","Bounds check and compute absolute address of heap memory.",90,[[["value"],["uimm32"],["type"],["heap"],["into",["uimm32"]]],["value"]]],[11,"get_pinned_reg","","Gets the content of the pinned register, when it's enabled.",90,[[["type"]],["value"]]],[11,"set_pinned_reg","","Sets the content of the pinned register, when it's enabled.",90,[[["value"]],["inst"]]],[11,"table_addr","","Bounds check and compute absolute address of a table entry.",90,[[["table"],["value"],["type"],["into",["offset32"]],["offset32"]],["value"]]],[11,"iconst","","Integer constant.",90,[[["into",["imm64"]],["imm64"],["type"]],["value"]]],[11,"f32const","","Floating point constant.",90,[[["into",["ieee32"]],["ieee32"]],["value"]]],[11,"f64const","","Floating point constant.",90,[[["into",["ieee64"]],["ieee64"]],["value"]]],[11,"bconst","","Boolean constant.",90,[[["bool"],["into",["bool"]],["type"]],["value"]]],[11,"vconst","","SIMD vector constant.",90,[[["into",["constant"]],["constant"],["type"]],["value"]]],[11,"shuffle","","SIMD vector shuffle.",90,[[["immediate"],["value"],["into",["immediate"]]],["value"]]],[11,"null","","Null constant value for reference types.",90,[[["type"]],["value"]]],[11,"nop","","Just a dummy instruction.",90,[[],["inst"]]],[11,"select","","Conditional select.",90,[[["value"]],["value"]]],[11,"selectif","","Conditional select, dependent on integer condition codes.",90,[[["into",["intcc"]],["value"],["type"],["intcc"]],["value"]]],[11,"bitselect","","Conditional select of bits.",90,[[["value"]],["value"]]],[11,"copy","","Register-register copy.",90,[[["value"]],["value"]]],[11,"spill","","Spill a register value to a stack slot.",90,[[["value"]],["value"]]],[11,"fill","","Load a register value from a stack slot.",90,[[["value"]],["value"]]],[11,"fill_nop","","This is identical to `fill`, except it has no encoding,…",90,[[["value"]],["value"]]],[11,"regmove","","Temporarily divert `x` from `src` to `dst`.",90,[[["value"],["regunit"],["into",["regunit"]]],["inst"]]],[11,"copy_special","","Copies the contents of ''src'' register to ''dst'' register.",90,[[["regunit"],["into",["regunit"]]],["inst"]]],[11,"copy_to_ssa","","Copies the contents of ''src'' register to ''a'' SSA name.",90,[[["into",["regunit"]],["regunit"],["type"]],["value"]]],[11,"copy_nop","","Stack-slot-to-the-same-stack-slot copy, which is…",90,[[["value"]],["value"]]],[11,"adjust_sp_down","","Subtracts `delta` offset value from the stack pointer…",90,[[["value"]],["inst"]]],[11,"adjust_sp_up_imm","","Adds `Offset` immediate offset value to the stack pointer…",90,[[["into",["imm64"]],["imm64"]],["inst"]]],[11,"adjust_sp_down_imm","","Subtracts `Offset` immediate offset value from the stack…",90,[[["into",["imm64"]],["imm64"]],["inst"]]],[11,"ifcmp_sp","","Compare `addr` with the stack pointer and set the CPU flags.",90,[[["value"]],["value"]]],[11,"regspill","","Temporarily divert `x` from `src` to `SS`.",90,[[["value"],["regunit"],["into",["regunit"]],["stackslot"]],["inst"]]],[11,"regfill","","Temporarily divert `x` from `SS` to `dst`.",90,[[["value"],["regunit"],["stackslot"],["into",["regunit"]]],["inst"]]],[11,"safepoint","","This instruction will provide live reference values at a…",90,[[],["inst"]]],[11,"vsplit","","Split a vector into two halves.",90,[[["value"]]]],[11,"vconcat","","Vector concatenation.",90,[[["value"]],["value"]]],[11,"vselect","","Vector lane select.",90,[[["value"]],["value"]]],[11,"vany_true","","Reduce a vector to a scalar boolean.",90,[[["value"]],["value"]]],[11,"vall_true","","Reduce a vector to a scalar boolean.",90,[[["value"]],["value"]]],[11,"splat","","Vector splat.",90,[[["value"],["type"]],["value"]]],[11,"insertlane","","Insert `y` as lane `Idx` in x.",90,[[["value"],["into",["uimm8"]],["uimm8"]],["value"]]],[11,"extractlane","","Extract lane `Idx` from `x`.",90,[[["value"],["into",["uimm8"]],["uimm8"]],["value"]]],[11,"icmp","","Integer comparison.",90,[[["into",["intcc"]],["value"],["intcc"]],["value"]]],[11,"icmp_imm","","Compare scalar integer to a constant.",90,[[["into",["intcc"]],["value"],["intcc"],["into",["imm64"]],["imm64"]],["value"]]],[11,"ifcmp","","Compare scalar integers and return flags.",90,[[["value"]],["value"]]],[11,"ifcmp_imm","","Compare scalar integer to a constant and return flags.",90,[[["value"],["into",["imm64"]],["imm64"]],["value"]]],[11,"iadd","","Wrapping integer addition: `a := x + y \\pmod{2^B}`.",90,[[["value"]],["value"]]],[11,"uadd_sat","","Add with unsigned saturation.",90,[[["value"]],["value"]]],[11,"sadd_sat","","Add with signed saturation.",90,[[["value"]],["value"]]],[11,"isub","","Wrapping integer subtraction: `a := x - y \\pmod{2^B}`.",90,[[["value"]],["value"]]],[11,"usub_sat","","Subtract with unsigned saturation.",90,[[["value"]],["value"]]],[11,"ssub_sat","","Subtract with signed saturation.",90,[[["value"]],["value"]]],[11,"ineg","","Integer negation: `a := -x \\pmod{2^B}`.",90,[[["value"]],["value"]]],[11,"imul","","Wrapping integer multiplication: `a := x y \\pmod{2^B}`.",90,[[["value"]],["value"]]],[11,"umulhi","","Unsigned integer multiplication, producing the high half…",90,[[["value"]],["value"]]],[11,"smulhi","","Signed integer multiplication, producing the high half of…",90,[[["value"]],["value"]]],[11,"udiv","","Unsigned integer division: `a := \\lfloor {x \\over y}…",90,[[["value"]],["value"]]],[11,"sdiv","","Signed integer division rounded toward zero: `a :=…",90,[[["value"]],["value"]]],[11,"urem","","Unsigned integer remainder.",90,[[["value"]],["value"]]],[11,"srem","","Signed integer remainder. The result has the sign of the…",90,[[["value"]],["value"]]],[11,"iadd_imm","","Add immediate integer.",90,[[["value"],["into",["imm64"]],["imm64"]],["value"]]],[11,"imul_imm","","Integer multiplication by immediate constant.",90,[[["value"],["into",["imm64"]],["imm64"]],["value"]]],[11,"udiv_imm","","Unsigned integer division by an immediate constant.",90,[[["value"],["into",["imm64"]],["imm64"]],["value"]]],[11,"sdiv_imm","","Signed integer division by an immediate constant.",90,[[["value"],["into",["imm64"]],["imm64"]],["value"]]],[11,"urem_imm","","Unsigned integer remainder with immediate divisor.",90,[[["value"],["into",["imm64"]],["imm64"]],["value"]]],[11,"srem_imm","","Signed integer remainder with immediate divisor.",90,[[["value"],["into",["imm64"]],["imm64"]],["value"]]],[11,"irsub_imm","","Immediate reverse wrapping subtraction: `a := Y - x…",90,[[["value"],["into",["imm64"]],["imm64"]],["value"]]],[11,"iadd_cin","","Add integers with carry in.",90,[[["value"]],["value"]]],[11,"iadd_ifcin","","Add integers with carry in.",90,[[["value"]],["value"]]],[11,"iadd_cout","","Add integers with carry out.",90,[[["value"]]]],[11,"iadd_ifcout","","Add integers with carry out.",90,[[["value"]]]],[11,"iadd_carry","","Add integers with carry in and out.",90,[[["value"]]]],[11,"iadd_ifcarry","","Add integers with carry in and out.",90,[[["value"]]]],[11,"isub_bin","","Subtract integers with borrow in.",90,[[["value"]],["value"]]],[11,"isub_ifbin","","Subtract integers with borrow in.",90,[[["value"]],["value"]]],[11,"isub_bout","","Subtract integers with borrow out.",90,[[["value"]]]],[11,"isub_ifbout","","Subtract integers with borrow out.",90,[[["value"]]]],[11,"isub_borrow","","Subtract integers with borrow in and out.",90,[[["value"]]]],[11,"isub_ifborrow","","Subtract integers with borrow in and out.",90,[[["value"]]]],[11,"band","","Bitwise and.",90,[[["value"]],["value"]]],[11,"bor","","Bitwise or.",90,[[["value"]],["value"]]],[11,"bxor","","Bitwise xor.",90,[[["value"]],["value"]]],[11,"bnot","","Bitwise not.",90,[[["value"]],["value"]]],[11,"band_not","","Bitwise and not.",90,[[["value"]],["value"]]],[11,"bor_not","","Bitwise or not.",90,[[["value"]],["value"]]],[11,"bxor_not","","Bitwise xor not.",90,[[["value"]],["value"]]],[11,"band_imm","","Bitwise and with immediate.",90,[[["value"],["into",["imm64"]],["imm64"]],["value"]]],[11,"bor_imm","","Bitwise or with immediate.",90,[[["value"],["into",["imm64"]],["imm64"]],["value"]]],[11,"bxor_imm","","Bitwise xor with immediate.",90,[[["value"],["into",["imm64"]],["imm64"]],["value"]]],[11,"rotl","","Rotate left.",90,[[["value"]],["value"]]],[11,"rotr","","Rotate right.",90,[[["value"]],["value"]]],[11,"rotl_imm","","Rotate left by immediate.",90,[[["value"],["into",["imm64"]],["imm64"]],["value"]]],[11,"rotr_imm","","Rotate right by immediate.",90,[[["value"],["into",["imm64"]],["imm64"]],["value"]]],[11,"ishl","","Integer shift left. Shift the bits in `x` towards the MSB…",90,[[["value"]],["value"]]],[11,"ushr","","Unsigned shift right. Shift bits in `x` towards the LSB by…",90,[[["value"]],["value"]]],[11,"sshr","","Signed shift right. Shift bits in `x` towards the LSB by…",90,[[["value"]],["value"]]],[11,"ishl_imm","","Integer shift left by immediate.",90,[[["value"],["into",["imm64"]],["imm64"]],["value"]]],[11,"ushr_imm","","Unsigned shift right by immediate.",90,[[["value"],["into",["imm64"]],["imm64"]],["value"]]],[11,"sshr_imm","","Signed shift right by immediate.",90,[[["value"],["into",["imm64"]],["imm64"]],["value"]]],[11,"bitrev","","Reverse the bits of a integer.",90,[[["value"]],["value"]]],[11,"clz","","Count leading zero bits.",90,[[["value"]],["value"]]],[11,"cls","","Count leading sign bits.",90,[[["value"]],["value"]]],[11,"ctz","","Count trailing zeros.",90,[[["value"]],["value"]]],[11,"popcnt","","Population count",90,[[["value"]],["value"]]],[11,"fcmp","","Floating point comparison.",90,[[["floatcc"],["value"],["into",["floatcc"]]],["value"]]],[11,"ffcmp","","Floating point comparison returning flags.",90,[[["value"]],["value"]]],[11,"fadd","","Floating point addition.",90,[[["value"]],["value"]]],[11,"fsub","","Floating point subtraction.",90,[[["value"]],["value"]]],[11,"fmul","","Floating point multiplication.",90,[[["value"]],["value"]]],[11,"fdiv","","Floating point division.",90,[[["value"]],["value"]]],[11,"sqrt","","Floating point square root.",90,[[["value"]],["value"]]],[11,"fma","","Floating point fused multiply-and-add.",90,[[["value"]],["value"]]],[11,"fneg","","Floating point negation.",90,[[["value"]],["value"]]],[11,"fabs","","Floating point absolute value.",90,[[["value"]],["value"]]],[11,"fcopysign","","Floating point copy sign.",90,[[["value"]],["value"]]],[11,"fmin","","Floating point minimum, propagating NaNs.",90,[[["value"]],["value"]]],[11,"fmax","","Floating point maximum, propagating NaNs.",90,[[["value"]],["value"]]],[11,"ceil","","Round floating point round to integral, towards positive…",90,[[["value"]],["value"]]],[11,"floor","","Round floating point round to integral, towards negative…",90,[[["value"]],["value"]]],[11,"trunc","","Round floating point round to integral, towards zero.",90,[[["value"]],["value"]]],[11,"nearest","","Round floating point round to integral, towards nearest…",90,[[["value"]],["value"]]],[11,"is_null","","Reference verification.",90,[[["value"]],["value"]]],[11,"trueif","","Test integer CPU flags for a specific condition.",90,[[["into",["intcc"]],["intcc"],["value"]],["value"]]],[11,"trueff","","Test floating point CPU flags for a specific condition.",90,[[["floatcc"],["value"],["into",["floatcc"]]],["value"]]],[11,"bitcast","","Reinterpret the bits in `x` as a different type.",90,[[["value"],["type"]],["value"]]],[11,"raw_bitcast","","Cast the bits in `x` as a different type of the same bit…",90,[[["value"],["type"]],["value"]]],[11,"scalar_to_vector","","Scalar To Vector -- move a value out of a scalar register…",90,[[["value"],["type"]],["value"]]],[11,"breduce","","Convert `x` to a smaller boolean type in the…",90,[[["value"],["type"]],["value"]]],[11,"bextend","","Convert `x` to a larger boolean type in the…",90,[[["value"],["type"]],["value"]]],[11,"bint","","Convert `x` to an integer.",90,[[["value"],["type"]],["value"]]],[11,"bmask","","Convert `x` to an integer mask.",90,[[["value"],["type"]],["value"]]],[11,"ireduce","","Convert `x` to a smaller integer type by dropping high bits.",90,[[["value"],["type"]],["value"]]],[11,"uextend","","Convert `x` to a larger integer type by zero-extending.",90,[[["value"],["type"]],["value"]]],[11,"sextend","","Convert `x` to a larger integer type by sign-extending.",90,[[["value"],["type"]],["value"]]],[11,"fpromote","","Convert `x` to a larger floating point format.",90,[[["value"],["type"]],["value"]]],[11,"fdemote","","Convert `x` to a smaller floating point format.",90,[[["value"],["type"]],["value"]]],[11,"fcvt_to_uint","","Convert floating point to unsigned integer.",90,[[["value"],["type"]],["value"]]],[11,"fcvt_to_uint_sat","","Convert floating point to unsigned integer as fcvt_to_uint…",90,[[["value"],["type"]],["value"]]],[11,"fcvt_to_sint","","Convert floating point to signed integer.",90,[[["value"],["type"]],["value"]]],[11,"fcvt_to_sint_sat","","Convert floating point to signed integer as fcvt_to_sint…",90,[[["value"],["type"]],["value"]]],[11,"fcvt_from_uint","","Convert unsigned integer to floating point.",90,[[["value"],["type"]],["value"]]],[11,"fcvt_from_sint","","Convert signed integer to floating point.",90,[[["value"],["type"]],["value"]]],[11,"isplit","","Split an integer into low and high parts.",90,[[["value"]]]],[11,"iconcat","","Concatenate low and high bits to form a larger integer type.",90,[[["value"]],["value"]]],[11,"x86_udivmodx","","Extended unsigned division.",90,[[["value"]]]],[11,"x86_sdivmodx","","Extended signed division.",90,[[["value"]]]],[11,"x86_umulx","","Unsigned integer multiplication, producing a double-length…",90,[[["value"]]]],[11,"x86_smulx","","Signed integer multiplication, producing a double-length…",90,[[["value"]]]],[11,"x86_cvtt2si","","Convert with truncation floating point to signed integer.",90,[[["value"],["type"]],["value"]]],[11,"x86_fmin","","Floating point minimum with x86 semantics.",90,[[["value"]],["value"]]],[11,"x86_fmax","","Floating point maximum with x86 semantics.",90,[[["value"]],["value"]]],[11,"x86_push","","Pushes a value onto the stack.",90,[[["value"]],["inst"]]],[11,"x86_pop","","Pops a value from the stack.",90,[[["type"]],["value"]]],[11,"x86_bsr","","Bit Scan Reverse -- returns the bit-index of the most…",90,[[["value"]]]],[11,"x86_bsf","","Bit Scan Forwards -- returns the bit-index of the least…",90,[[["value"]]]],[11,"x86_pshufd","","Packed Shuffle Doublewords -- copies data from either…",90,[[["value"],["into",["uimm8"]],["uimm8"]],["value"]]],[11,"x86_pshufb","","Packed Shuffle Bytes -- re-orders data in an extended…",90,[[["value"]],["value"]]],[11,"x86_pextr","","Extract lane `Idx` from `x`. The lane index, `Idx`, is an…",90,[[["value"],["into",["uimm8"]],["uimm8"]],["value"]]],[11,"x86_pinsr","","Insert `y` into `x` at lane `Idx`. The lane index, `Idx`,…",90,[[["value"],["into",["uimm8"]],["uimm8"]],["value"]]],[11,"x86_insertps","","Insert a lane of `y` into `x` at using `Idx` to encode…",90,[[["value"],["into",["uimm8"]],["uimm8"]],["value"]]],[11,"x86_movsd","","Move the low 64 bits of the float vector `y` to the low 64…",90,[[["value"]],["value"]]],[11,"x86_movlhps","","Move the low 64 bits of the float vector `y` to the high…",90,[[["value"]],["value"]]],[11,"x86_psll","","Shift Packed Data Left Logical -- This implements the…",90,[[["value"]],["value"]]],[11,"x86_psrl","","Shift Packed Data Right Logical -- This implements the…",90,[[["value"]],["value"]]],[11,"x86_psra","","Shift Packed Data Right Arithmetic -- This implements the…",90,[[["value"]],["value"]]],[11,"x86_ptest","","Logical Compare -- PTEST will set the ZF flag if all bits…",90,[[["value"]],["value"]]],[11,"x86_pmaxs","","Maximum of Packed Signed Integers -- Compare signed…",90,[[["value"]],["value"]]],[11,"x86_pmaxu","","Maximum of Packed Unsigned Integers -- Compare unsigned…",90,[[["value"]],["value"]]],[11,"x86_pmins","","Minimum of Packed Signed Integers -- Compare signed…",90,[[["value"]],["value"]]],[11,"x86_pminu","","Minimum of Packed Unsigned Integers -- Compare unsigned…",90,[[["value"]],["value"]]],[11,"Binary","","Binary(imms=(), vals=2)",90,[[["opcode"],["type"],["value"]]]],[11,"BinaryImm","","BinaryImm(imms=(imm: ir::immediates::Imm64), vals=1)",90,[[["value"],["opcode"],["type"],["imm64"]]]],[11,"Branch","","Branch(imms=(destination: ir::Ebb), vals=1)",90,[[["ebb"],["valuelist"],["opcode"],["type"]]]],[11,"BranchFloat","","BranchFloat(imms=(cond: ir::condcodes::FloatCC,…",90,[[["floatcc"],["ebb"],["valuelist"],["opcode"],["type"]]]],[11,"BranchIcmp","","BranchIcmp(imms=(cond: ir::condcodes::IntCC, destination:…",90,[[["ebb"],["valuelist"],["intcc"],["opcode"],["type"]]]],[11,"BranchInt","","BranchInt(imms=(cond: ir::condcodes::IntCC, destination:…",90,[[["ebb"],["valuelist"],["intcc"],["opcode"],["type"]]]],[11,"BranchTable","","BranchTable(imms=(destination: ir::Ebb, table:…",90,[[["value"],["ebb"],["opcode"],["type"],["jumptable"]]]],[11,"BranchTableBase","","BranchTableBase(imms=(table: ir::JumpTable), vals=0)",90,[[["opcode"],["type"],["jumptable"]]]],[11,"BranchTableEntry","","BranchTableEntry(imms=(imm: ir::immediates::Uimm8, table:…",90,[[["jumptable"],["value"],["opcode"],["type"],["uimm8"]]]],[11,"Call","","Call(imms=(func_ref: ir::FuncRef), vals=0)",90,[[["funcref"],["valuelist"],["opcode"],["type"]]]],[11,"CallIndirect","","CallIndirect(imms=(sig_ref: ir::SigRef), vals=1)",90,[[["sigref"],["valuelist"],["opcode"],["type"]]]],[11,"CondTrap","","CondTrap(imms=(code: ir::TrapCode), vals=1)",90,[[["trapcode"],["opcode"],["type"],["value"]]]],[11,"CopySpecial","","CopySpecial(imms=(src: isa::RegUnit, dst: isa::RegUnit),…",90,[[["regunit"],["opcode"],["type"]]]],[11,"CopyToSsa","","CopyToSsa(imms=(src: isa::RegUnit), vals=0)",90,[[["opcode"],["type"],["regunit"]]]],[11,"ExtractLane","","ExtractLane(imms=(lane: ir::immediates::Uimm8), vals=1)",90,[[["value"],["opcode"],["type"],["uimm8"]]]],[11,"FloatCompare","","FloatCompare(imms=(cond: ir::condcodes::FloatCC), vals=2)",90,[[["floatcc"],["opcode"],["type"],["value"]]]],[11,"FloatCond","","FloatCond(imms=(cond: ir::condcodes::FloatCC), vals=1)",90,[[["floatcc"],["opcode"],["type"],["value"]]]],[11,"FloatCondTrap","","FloatCondTrap(imms=(cond: ir::condcodes::FloatCC, code:…",90,[[["floatcc"],["trapcode"],["opcode"],["type"],["value"]]]],[11,"FuncAddr","","FuncAddr(imms=(func_ref: ir::FuncRef), vals=0)",90,[[["opcode"],["type"],["funcref"]]]],[11,"HeapAddr","","HeapAddr(imms=(heap: ir::Heap, imm:…",90,[[["uimm32"],["heap"],["opcode"],["type"],["value"]]]],[11,"IndirectJump","","IndirectJump(imms=(table: ir::JumpTable), vals=1)",90,[[["value"],["opcode"],["type"],["jumptable"]]]],[11,"InsertLane","","InsertLane(imms=(lane: ir::immediates::Uimm8), vals=2)",90,[[["value"],["opcode"],["type"],["uimm8"]]]],[11,"IntCompare","","IntCompare(imms=(cond: ir::condcodes::IntCC), vals=2)",90,[[["intcc"],["opcode"],["type"],["value"]]]],[11,"IntCompareImm","","IntCompareImm(imms=(cond: ir::condcodes::IntCC, imm:…",90,[[["value"],["intcc"],["opcode"],["type"],["imm64"]]]],[11,"IntCond","","IntCond(imms=(cond: ir::condcodes::IntCC), vals=1)",90,[[["intcc"],["opcode"],["type"],["value"]]]],[11,"IntCondTrap","","IntCondTrap(imms=(cond: ir::condcodes::IntCC, code:…",90,[[["value"],["intcc"],["opcode"],["type"],["trapcode"]]]],[11,"IntSelect","","IntSelect(imms=(cond: ir::condcodes::IntCC), vals=3)",90,[[["intcc"],["opcode"],["type"],["value"]]]],[11,"Jump","","Jump(imms=(destination: ir::Ebb), vals=0)",90,[[["ebb"],["valuelist"],["opcode"],["type"]]]],[11,"Load","","Load(imms=(flags: ir::MemFlags, offset:…",90,[[["value"],["memflags"],["opcode"],["type"],["offset32"]]]],[11,"LoadComplex","","LoadComplex(imms=(flags: ir::MemFlags, offset:…",90,[[["memflags"],["valuelist"],["opcode"],["type"],["offset32"]]]],[11,"MultiAry","","MultiAry(imms=(), vals=0)",90,[[["opcode"],["type"],["valuelist"]]]],[11,"NullAry","","NullAry(imms=(), vals=0)",90,[[["opcode"],["type"]]]],[11,"RegFill","","RegFill(imms=(src: ir::StackSlot, dst: isa::RegUnit),…",90,[[["regunit"],["stackslot"],["opcode"],["type"],["value"]]]],[11,"RegMove","","RegMove(imms=(src: isa::RegUnit, dst: isa::RegUnit), vals=1)",90,[[["regunit"],["opcode"],["type"],["value"]]]],[11,"RegSpill","","RegSpill(imms=(src: isa::RegUnit, dst: ir::StackSlot),…",90,[[["regunit"],["stackslot"],["opcode"],["type"],["value"]]]],[11,"Shuffle","","Shuffle(imms=(mask: ir::Immediate), vals=2)",90,[[["immediate"],["opcode"],["type"],["value"]]]],[11,"StackLoad","","StackLoad(imms=(stack_slot: ir::StackSlot, offset:…",90,[[["stackslot"],["opcode"],["type"],["offset32"]]]],[11,"StackStore","","StackStore(imms=(stack_slot: ir::StackSlot, offset:…",90,[[["value"],["stackslot"],["opcode"],["type"],["offset32"]]]],[11,"Store","","Store(imms=(flags: ir::MemFlags, offset:…",90,[[["value"],["memflags"],["opcode"],["type"],["offset32"]]]],[11,"StoreComplex","","StoreComplex(imms=(flags: ir::MemFlags, offset:…",90,[[["memflags"],["valuelist"],["opcode"],["type"],["offset32"]]]],[11,"TableAddr","","TableAddr(imms=(table: ir::Table, offset:…",90,[[["table"],["value"],["opcode"],["type"],["offset32"]]]],[11,"Ternary","","Ternary(imms=(), vals=3)",90,[[["opcode"],["type"],["value"]]]],[11,"Trap","","Trap(imms=(code: ir::TrapCode), vals=0)",90,[[["trapcode"],["opcode"],["type"]]]],[11,"Unary","","Unary(imms=(), vals=1)",90,[[["opcode"],["type"],["value"]]]],[11,"UnaryBool","","UnaryBool(imms=(imm: bool), vals=0)",90,[[["opcode"],["type"],["bool"]]]],[11,"UnaryConst","","UnaryConst(imms=(constant_handle: ir::Constant), vals=0)",90,[[["opcode"],["type"],["constant"]]]],[11,"UnaryGlobalValue","","UnaryGlobalValue(imms=(global_value: ir::GlobalValue),…",90,[[["opcode"],["type"],["globalvalue"]]]],[11,"UnaryIeee32","","UnaryIeee32(imms=(imm: ir::immediates::Ieee32), vals=0)",90,[[["opcode"],["type"],["ieee32"]]]],[11,"UnaryIeee64","","UnaryIeee64(imms=(imm: ir::immediates::Ieee64), vals=0)",90,[[["opcode"],["type"],["ieee64"]]]],[11,"UnaryImm","","UnaryImm(imms=(imm: ir::immediates::Imm64), vals=0)",90,[[["opcode"],["type"],["imm64"]]]],[8,"InstBuilderBase","","Base trait for instruction builders.",null,null],[10,"data_flow_graph","","Get an immutable reference to the data flow graph that…",91,[[["self"]],["dataflowgraph"]]],[10,"data_flow_graph_mut","","Get a mutable reference to the data flow graph that will…",91,[[["self"]],["dataflowgraph"]]],[10,"build","","Insert an instruction and return a reference to it,…",91,[[["instructiondata"],["type"]]]],[8,"InstInserterBase","","Base trait for instruction inserters.",null,null],[10,"data_flow_graph","","Get an immutable reference to the data flow graph.",92,[[["self"]],["dataflowgraph"]]],[10,"data_flow_graph_mut","","Get a mutable reference to the data flow graph.",92,[[["self"]],["dataflowgraph"]]],[10,"insert_built_inst","","Insert a new instruction which belongs to the DFG.",92,[[["type"],["inst"]],["dataflowgraph"]]],[8,"ProgramOrder","","Context for ordering program points.",null,null],[10,"cmp","","Compare the program points `a` and `b` relative to this…",93,[[["a"],["self"],["b"]],["ordering"]]],[10,"is_ebb_gap","","Is the range from `inst` to `ebb` just the gap between…",93,[[["ebb"],["self"],["inst"]],["bool"]]],[11,"from_u32","","Return the underlying index value as a `u32`.",94,[[["u32"]],["self"]]],[11,"as_u32","","Return the underlying index value as a `u32`.",94,[[],["u32"]]],[0,"isa","cranelift_codegen","Instruction Set Architectures.",null,null],[3,"BranchRange","cranelift_codegen::isa","Constraints on the range of a branch instruction.",null,null],[12,"origin","","Offset in bytes from the address of the branch instruction…",95,null],[12,"bits","","Number of bits in the signed byte displacement encoded in…",95,null],[3,"OperandConstraint","","Register constraint for a single value operand or…",null,null],[12,"kind","","The kind of constraint.",96,null],[12,"regclass","","The register class of the operand.",96,null],[3,"RecipeConstraints","","Value operand constraints for an encoding recipe.",null,null],[12,"ins","","Constraints for the instruction's fixed value operands.",97,null],[12,"outs","","Constraints for the instruction's fixed results.",97,null],[12,"fixed_ins","","Are any of the input constraints `FixedReg` or `FixedTied`?",97,null],[12,"fixed_outs","","Are any of the output constraints `FixedReg` or `FixedTied`?",97,null],[12,"tied_ops","","Are any of the input/output constraints `Tied` (but not…",97,null],[12,"clobbers_flags","","Does this instruction clobber the CPU flags?",97,null],[3,"EncInfo","","Information about all the encodings in this ISA.",null,null],[12,"constraints","","Constraints on value operands per recipe.",98,null],[12,"sizing","","Code size information per recipe.",98,null],[12,"names","","Names of encoding recipes.",98,null],[3,"Encoding","","Bits needed to encode an instruction as binary machine code.",null,null],[3,"StackBaseMask","","Bit mask of supported stack bases.",null,null],[12,"0","","",99,null],[3,"StackRef","","A method for referencing a stack slot in the current stack…",null,null],[12,"base","","The base register to use for addressing.",100,null],[12,"offset","","Immediate offset from the base register to the first byte…",100,null],[3,"Builder","","Builder for a `TargetIsa`. Modify the ISA-specific…",null,null],[3,"TargetFrontendConfig","","This struct provides information that a frontend may need…",null,null],[12,"default_call_conv","","The default calling convention of the target.",101,null],[12,"pointer_width","","The pointer width of the target.",101,null],[4,"CallConv","","Calling convention identifiers.",null,null],[13,"Fast","","Best performance, not ABI-stable",102,null],[13,"Cold","","Smallest caller code size, not ABI-stable",102,null],[13,"SystemV","","System V-style convention used on many platforms",102,null],[13,"WindowsFastcall","","Windows \"fastcall\" convention, also used for x64 and ARM",102,null],[13,"BaldrdashSystemV","","SpiderMonkey WebAssembly convention on systems using…",102,null],[13,"BaldrdashWindows","","SpiderMonkey WebAssembly convention on Windows",102,null],[13,"Probestack","","Specialized convention for the probestack function",102,null],[4,"ConstraintKind","","The different kinds of operand constraints.",null,null],[13,"Reg","","This operand or result must be a register from the given…",103,null],[13,"FixedReg","","This operand or result must be a fixed register.",103,null],[13,"Tied","","This result value must use the same register as an input…",103,null],[13,"FixedTied","","This operand must be a fixed register, and it has a tied…",103,null],[13,"Stack","","This operand must be a value in a stack slot.",103,null],[4,"StackBase","","Generic base register for referencing stack slots.",null,null],[13,"SP","","Use the stack pointer.",104,null],[13,"FP","","Use the frame pointer (if one is present).",104,null],[13,"Zone","","Use an explicit zone pointer in a general-purpose register.",104,null],[4,"LookupError","","Describes reason for target lookup failure",null,null],[13,"SupportDisabled","","Support for this target was disabled in the current build.",105,null],[13,"Unsupported","","Support for this target has not yet been implemented.",105,null],[5,"base_size","","Returns the base size of the Recipe, assuming it's fixed.…",null,[[["regdiversions"],["function"],["inst"],["encoding"],["recipesizing"]],["u8"]]],[5,"lookup","","Look for an ISA for the given `triple`. Return a builder…",null,[[["triple"]],[["result",["builder","lookuperror"]],["lookuperror"],["builder"]]]],[5,"lookup_by_name","","Look for a supported ISA with the given `name`. Return a…",null,[[["str"]],[["result",["builder","lookuperror"]],["lookuperror"],["builder"]]]],[11,"triple_default","","Return the default calling convention for the given target…",102,[[["triple"]],["self"]]],[11,"for_libcall","","Returns the calling convention used for libcalls for the…",102,[[["targetisa"]],["self"]]],[11,"extends_windows_fastcall","","Is the calling convention extending the Windows Fastcall…",102,[[],["bool"]]],[11,"extends_baldrdash","","Is the calling convention extending the Baldrdash ABI?",102,[[],["bool"]]],[11,"satisfied","","Check if this operand constraint is satisfied by the given…",96,[[["self"],["valueloc"]],["bool"]]],[11,"satisfied","","Check that these constraints are satisfied by the operands…",97,[[["regdiversions"],["inst"],["self"],["function"]],["bool"]]],[11,"contains","","Determine if this branch range can represent the range…",95,[[["codeoffset"]],["bool"]]],[11,"new","","Create a new `Encoding` containing `(recipe, bits)`.",106,[[["u16"]],["self"]]],[11,"recipe","","Get the recipe number in this encoding.",106,[[],["usize"]]],[11,"bits","","Get the recipe-specific encoding bits.",106,[[],["u16"]]],[11,"is_legal","","Is this a legal encoding, or the default placeholder?",106,[[],["bool"]]],[11,"operand_constraints","","Get the value operand constraints for `enc` if it is a…",98,[[["self"],["encoding"]],[["option",["recipeconstraints"]],["recipeconstraints"]]]],[11,"display","","Create an object that can display an ISA-dependent…",98,[[["self"],["encoding"]],["displayencoding"]]],[11,"byte_size","","Get the size in bytes of `inst`, if it were encoded with…",98,[[["regdiversions"],["inst"],["encoding"],["self"],["function"]],["codeoffset"]]],[11,"branch_range","","Get the branch range that is supported by `enc`, if any.",98,[[["self"],["encoding"]],[["option",["branchrange"]],["branchrange"]]]],[0,"registers","","Data structures describing the registers in an ISA.",null,null],[3,"RegBank","cranelift_codegen::isa::registers","The register units in a target ISA are divided into…",null,null],[12,"name","","The name of this register bank as defined in the ISA's DSL…",107,null],[12,"first_unit","","The first register unit in this bank.",107,null],[12,"units","","The total number of register units in this bank.",107,null],[12,"names","","Array of specially named register units. This array can be…",107,null],[12,"prefix","","Name prefix to use for those register units in the bank…",107,null],[12,"first_toprc","","Index of the first top-level register class in this bank.",107,null],[12,"num_toprcs","","Number of top-level register classes in this bank.",107,null],[12,"pressure_tracking","","Is register pressure tracking enabled for this bank?",107,null],[3,"RegClassData","","Data about a register class.",null,null],[12,"name","","The name of the register class.",108,null],[12,"index","","The index of this class in the ISA's RegInfo description.",108,null],[12,"width","","How many register units to allocate per register.",108,null],[12,"bank","","Index of the register bank this class belongs to.",108,null],[12,"toprc","","Index of the top-level register class contains this one.",108,null],[12,"first","","The first register unit in this class.",108,null],[12,"subclasses","","Bit-mask of sub-classes of this register class, including…",108,null],[12,"mask","","Mask of register units in the class. If `width > 1`, the…",108,null],[12,"info","","The global `RegInfo` instance containing this register…",108,null],[12,"pinned_reg","","The \"pinned\" register of the associated register bank.",108,null],[3,"RegClassIndex","","A small reference to a register class.",null,null],[3,"RegInfo","","Information about the registers in an ISA.",null,null],[12,"banks","","All register banks, ordered by their `first_unit`. The…",109,null],[12,"classes","","All register classes ordered topologically so a sub-class…",109,null],[3,"DisplayRegUnit","","Temporary object that holds enough information to print a…",null,null],[5,"regs_overlap","","Test of two registers overlap.",null,[[["regclass"],["regunit"]],["bool"]]],[6,"RegUnit","","Register units are the smallest units of register…",null,null],[6,"RegClassMask","","A bit mask indexed by register classes.",null,null],[6,"RegUnitMask","","A bit mask indexed by register units.",null,null],[6,"RegClass","","A register class reference.",null,null],[11,"intersect_index","","Get the register class index corresponding to the…",108,[[["regclass"],["self"]],[["option",["regclassindex"]],["regclassindex"]]]],[11,"intersect","","Get the intersection of `self` and `other`.",108,[[["regclass"],["self"]],[["regclass"],["option",["regclass"]]]]],[11,"has_subclass","","Returns true if `other` is a subclass of this register…",108,[[["regclassindex"],["self"],["into",["regclassindex"]]],["bool"]]],[11,"toprc","","Get the top-level register class containing this class.",108,[[["self"]],["regclass"]]],[11,"unit","","Get a specific register unit in this class.",108,[[["self"],["usize"]],["regunit"]]],[11,"contains","","Does this register class contain `regunit`?",108,[[["self"],["regunit"]],["bool"]]],[11,"is_pinned_reg","","If the pinned register is used, is the given regunit the…",108,[[["regunit"],["self"],["bool"]],["bool"]]],[11,"bank_containing_regunit","","Get the register bank holding `regunit`.",109,[[["self"],["regunit"]],[["regbank"],["option",["regbank"]]]]],[11,"parse_regunit","","Try to parse a regunit name. The name is not expected to…",109,[[["str"],["self"]],[["option",["regunit"]],["regunit"]]]],[11,"display_regunit","","Make a temporary object that can display a register unit.",109,[[["self"],["regunit"]],["displayregunit"]]],[11,"rc","","Get the register class corresponding to `idx`.",109,[[["regclassindex"],["self"]],["regclass"]]],[11,"toprc","","Get the top-level register class containing the `idx` class.",109,[[["regclassindex"],["self"]],["regclass"]]],[11,"masked","cranelift_codegen::isa","Get a reference to the stack slot `ss` using one of the…",100,[[["stackslot"],["stackbasemask"],["stackslots"]],["option"]]],[11,"sp","","Get a reference to `ss` using the stack pointer as a base.",100,[[["stackslot"],["stackslots"]],["self"]]],[11,"contains","","Check if this mask contains the `base` variant.",99,[[["stackbase"]],["bool"]]],[6,"Legalize","","After determining that an instruction doesn't have an…",null,null],[8,"TargetIsa","","Methods that are specialized to a target ISA. Implies a…",null,null],[10,"name","","Get the name of this ISA.",110,[[["self"]],["str"]]],[10,"triple","","Get the target triple that was used to make this trait…",110,[[["self"]],["triple"]]],[10,"flags","","Get the ISA-independent flags that were used to make this…",110,[[["self"]],["flags"]]],[11,"default_call_conv","","Get the default calling convention of this target.",110,[[["self"]],["callconv"]]],[11,"pointer_type","","Get the pointer type of this ISA.",110,[[["self"]],["type"]]],[11,"pointer_width","","Get the width of pointers on this ISA.",110,[[["self"]],["pointerwidth"]]],[11,"pointer_bits","","Get the width of pointers on this ISA, in units of bits.",110,[[["self"]],["u8"]]],[11,"pointer_bytes","","Get the width of pointers on this ISA, in units of bytes.",110,[[["self"]],["u8"]]],[11,"frontend_config","","Get the information needed by frontends producing…",110,[[["self"]],["targetfrontendconfig"]]],[11,"uses_cpu_flags","","Does the CPU implement scalar comparisons using a CPU…",110,[[["self"]],["bool"]]],[11,"uses_complex_addresses","","Does the CPU implement multi-register addressing?",110,[[["self"]],["bool"]]],[10,"register_info","","Get a data structure describing the registers in this ISA.",110,[[["self"]],["reginfo"]]],[10,"legal_encodings","","Returns an iterator over legal encodings for the…",110,[[["function"],["type"],["self"],["instructiondata"]],["encodings"]]],[11,"encode","","Encode an instruction after determining it is legal.",110,[[["instructiondata"],["function"],["type"],["self"]],[["result",["encoding","legalize"]],["legalize"],["encoding"]]]],[10,"encoding_info","","Get a data structure describing the instruction encodings…",110,[[["self"]],["encinfo"]]],[10,"legalize_signature","","Legalize a function signature.",110,[[["cow"],["self"],["bool"]]]],[10,"regclass_for_abi_type","","Get the register class that should be used to represent an…",110,[[["type"],["self"]],["regclass"]]],[10,"allocatable_registers","","Get the set of allocatable registers that can be used when…",110,[[["function"],["self"]],["registerset"]]],[11,"prologue_epilogue","","Compute the stack layout and insert prologue and epilogue…",110,[[["function"],["self"]],["codegenresult"]]],[10,"emit_function_to_memory","","Emit a whole function into memory.",110,[[["function"],["memorycodesink"],["self"]]]],[10,"unsigned_add_overflow_condition","","IntCC condition for Unsigned Addition Overflow (Carry).",110,[[["self"]],["intcc"]]],[10,"unsigned_sub_overflow_condition","","IntCC condition for Unsigned Subtraction Overflow…",110,[[["self"]],["intcc"]]],[11,"emit_unwind_info","","Emit unwind information for the given function.",110,[[["function"],["vec"],["self"]]]],[11,"finish","","Combine the ISA-specific settings with the provided…",111,[[["flags"]],[["box",["targetisa"]],["targetisa"]]]],[11,"pointer_type","","Get the pointer type of this target.",101,[[],["type"]]],[11,"pointer_bits","","Get the width of pointers on this target, in units of bits.",101,[[],["u8"]]],[11,"pointer_bytes","","Get the width of pointers on this target, in units of bytes.",101,[[],["u8"]]],[0,"loop_analysis","cranelift_codegen","A loop analysis represented as mappings of loops to their…",null,null],[3,"Loop","cranelift_codegen::loop_analysis","A opaque reference to a code loop.",null,null],[3,"LoopAnalysis","","Loop tree information for a single function.",null,null],[11,"from_u32","","Return the underlying index value as a `u32`.",112,[[["u32"]],["self"]]],[11,"as_u32","","Return the underlying index value as a `u32`.",112,[[],["u32"]]],[11,"new","","Allocate a new blank loop analysis struct. Use `compute`…",113,[[],["self"]]],[11,"loops","","Returns all the loops contained in a function.",113,[[["self"]],[["loop"],["keys",["loop"]]]]],[11,"loop_header","","Returns the header EBB of a particular loop.",113,[[["loop"],["self"]],["ebb"]]],[11,"loop_parent","","Return the eventual parent of a loop in the loop tree.",113,[[["loop"],["self"]],[["loop"],["option",["loop"]]]]],[11,"is_in_loop","","Determine if an Ebb belongs to a loop by running a finger…",113,[[["ebb"],["loop"],["self"]],["bool"]]],[11,"is_child_loop","","Determines if a loop is contained in another loop.",113,[[["loop"],["self"]],["bool"]]],[11,"compute","","Detects the loops in a function. Needs the control flow…",113,[[["controlflowgraph"],["dominatortree"],["self"],["function"]]]],[11,"is_valid","","Check if the loop analysis is in a valid state.",113,[[["self"]],["bool"]]],[11,"clear","","Clear all the data structures contained in the loop…",113,[[["self"]]]],[0,"print_errors","cranelift_codegen","Utility routines for pretty-printing error messages.",null,null],[5,"pretty_verifier_error","cranelift_codegen::print_errors","Pretty-print a verifier error.",null,[[["verifiererrors"],["targetisa"],["function"],["option",["targetisa"]],["box",["funcwriter"]],["option",["box"]]],["string"]]],[5,"pretty_error","","Pretty-print a Cranelift error.",null,[[["targetisa"],["function"],["option",["targetisa"]],["codegenerror"]],["string"]]],[0,"settings","cranelift_codegen","Shared settings module.",null,null],[3,"Builder","cranelift_codegen::settings","Collect settings values based on a template.",null,null],[3,"PredicateView","","A reference to just the boolean predicates of a settings…",null,null],[3,"Flags","","Flags group `shared`.",null,null],[3,"FlagsOrIsa","","Wrapper containing flags and optionally a `TargetIsa`…",null,null],[12,"flags","","Flags are always present.",114,null],[12,"isa","","The ISA may not be present.",114,null],[4,"SetError","","An error produced when changing a setting.",null,null],[13,"BadName","","No setting by this name exists.",115,null],[13,"BadType","","Type mismatch for setting (e.g., setting an enum setting…",115,null],[13,"BadValue","","This is not a valid value for this setting.",115,null],[4,"OptLevel","","Values for `shared.opt_level`.",null,null],[13,"None","","`none`.",116,null],[13,"Speed","","`speed`.",116,null],[13,"SpeedAndSize","","`speed_and_size`.",116,null],[4,"LibcallCallConv","","Values for `shared.libcall_call_conv`.",null,null],[13,"IsaDefault","","`isa_default`.",117,null],[13,"Fast","","`fast`.",117,null],[13,"Cold","","`cold`.",117,null],[13,"SystemV","","`system_v`.",117,null],[13,"WindowsFastcall","","`windows_fastcall`.",117,null],[13,"BaldrdashSystemV","","`baldrdash_system_v`.",117,null],[13,"BaldrdashWindows","","`baldrdash_windows`.",117,null],[13,"Probestack","","`probestack`.",117,null],[5,"builder","","Create a `settings::Builder` for the shared settings group.",null,[[],["builder"]]],[0,"detail","","Implementation details for generated code.",null,null],[3,"Template","cranelift_codegen::settings::detail","An instruction group template.",null,null],[12,"name","","Name of the instruction group.",118,null],[12,"descriptors","","List of setting descriptors.",118,null],[12,"enumerators","","Union of all enumerators.",118,null],[12,"hash_table","","Hash table of settings.",118,null],[12,"defaults","","Default values.",118,null],[12,"presets","","Pairs of (mask, value) for presets.",118,null],[3,"Descriptor","","A setting descriptor holds the information needed to…",null,null],[12,"name","","Lower snake-case name of setting as defined in meta.",119,null],[12,"offset","","Offset of byte containing this setting.",119,null],[12,"detail","","Additional details, depending on the kind of setting.",119,null],[4,"Detail","","The different kind of settings along with descriptor bits…",null,null],[13,"Bool","","A boolean setting only uses one bit, numbered from LSB.",120,null],[12,"bit","cranelift_codegen::settings::detail::Detail","0-7.",120,null],[13,"Num","cranelift_codegen::settings::detail","A numerical setting uses the whole byte.",120,null],[13,"Enum","","An Enum setting uses a range of enumerators.",120,null],[12,"last","cranelift_codegen::settings::detail::Detail","Numerical value of last enumerator, allowing for 1-256…",120,null],[12,"enumerators","","First enumerator in the ENUMERATORS table.",120,null],[13,"Preset","cranelift_codegen::settings::detail","A preset is not an individual setting, it is a collection…",120,null],[11,"enums","","Get enumerators corresponding to a `Details::Enum`.",118,[[["u16"],["self"],["u8"]]]],[11,"format_toml_value","","Format a setting value as a TOML string. This is mostly…",118,[[["detail"],["formatter"],["self"],["u8"]],["result"]]],[11,"is_preset","","Check if a detail is a Detail::Preset. Useful because the…",120,[[],["bool"]]],[6,"SetResult","cranelift_codegen::settings","A result returned when changing a setting.",null,null],[8,"Configurable","","A string-based configurator for settings groups.",null,null],[10,"set","","Set the string value of any setting by name.",121,[[["str"],["self"]],["setresult"]]],[10,"enable","","Enable a boolean setting or apply a preset.",121,[[["str"],["self"]],["setresult"]]],[11,"new","","Create a new builder with defaults and names from the…",122,[[["template"]],["self"]]],[11,"state_for","","Extract contents of builder once everything is configured.",122,[[["str"]],["box"]]],[11,"new","","Create a new view of a precomputed predicate vector.",123,[[],["self"]]],[11,"test","","Check a numbered predicate.",123,[[["usize"]],["bool"]]],[11,"new","","Create flags shared settings group.",124,[[["builder"]],["self"]]],[11,"predicate_view","","Get a view of the boolean predicates.",124,[[["self"]],["predicateview"]]],[11,"opt_level","","Optimization level:",124,[[["self"]],["optlevel"]]],[11,"libcall_call_conv","","Defines the calling convention to use for LibCalls call…",124,[[["self"]],["libcallcallconv"]]],[11,"baldrdash_prologue_words","","Number of pointer-sized words pushed by the baldrdash…",124,[[["self"]],["u8"]]],[11,"probestack_size_log2","","The log2 of the size of the stack guard region.",124,[[["self"]],["u8"]]],[11,"enable_verifier","","Run the Cranelift IR verifier at strategic times during…",124,[[["self"]],["bool"]]],[11,"is_pic","","Enable Position-Independent Code generation",124,[[["self"]],["bool"]]],[11,"colocated_libcalls","","Use colocated libcalls.",124,[[["self"]],["bool"]]],[11,"avoid_div_traps","","Generate explicit checks around native division…",124,[[["self"]],["bool"]]],[11,"enable_float","","Enable the use of floating-point instructions",124,[[["self"]],["bool"]]],[11,"enable_nan_canonicalization","","Enable NaN canonicalization",124,[[["self"]],["bool"]]],[11,"enable_pinned_reg","","Enable the use of the pinned register.",124,[[["self"]],["bool"]]],[11,"use_pinned_reg_as_heap_base","","Use the pinned register as the heap base.",124,[[["self"]],["bool"]]],[11,"enable_simd","","Enable the use of SIMD instructions.",124,[[["self"]],["bool"]]],[11,"enable_atomics","","Enable the use of atomic instructions",124,[[["self"]],["bool"]]],[11,"enable_safepoints","","Enable safepoint instruction insertions.",124,[[["self"]],["bool"]]],[11,"allones_funcaddrs","","Emit not-yet-relocated function addresses as all-ones bit…",124,[[["self"]],["bool"]]],[11,"probestack_enabled","","Enable the use of stack probes, for calling conventions…",124,[[["self"]],["bool"]]],[11,"probestack_func_adjusts_sp","","Set this to true of the stack probe function modifies the…",124,[[["self"]],["bool"]]],[11,"jump_tables_enabled","","Enable the use of jump tables in generated machine code.",124,[[["self"]],["bool"]]],[0,"timing","cranelift_codegen","Pass timing.",null,null],[3,"PassTimes","cranelift_codegen::timing","Accumulated timing for all passes.",null,null],[3,"TimingToken","","A timing token is responsible for timing the currently…",null,null],[5,"add_to_current","","Add `timings` to the accumulated timings for the current…",null,[[["passtimes"]]]],[5,"take_current","","Take the current accumulated pass timings and reset the…",null,[[],["passtimes"]]],[5,"process_file","","Processing test file",null,[[],["timingtoken"]]],[5,"parse_text","","Parsing textual Cranelift IR",null,[[],["timingtoken"]]],[5,"wasm_translate_module","","Translate WASM module",null,[[],["timingtoken"]]],[5,"wasm_translate_function","","Translate WASM function",null,[[],["timingtoken"]]],[5,"verifier","","Verify Cranelift IR",null,[[],["timingtoken"]]],[5,"verify_cssa","","Verify CSSA",null,[[],["timingtoken"]]],[5,"verify_liveness","","Verify live ranges",null,[[],["timingtoken"]]],[5,"verify_locations","","Verify value locations",null,[[],["timingtoken"]]],[5,"verify_flags","","Verify CPU flags",null,[[],["timingtoken"]]],[5,"compile","","Compilation passes",null,[[],["timingtoken"]]],[5,"flowgraph","","Control flow graph",null,[[],["timingtoken"]]],[5,"domtree","","Dominator tree",null,[[],["timingtoken"]]],[5,"loop_analysis","","Loop analysis",null,[[],["timingtoken"]]],[5,"postopt","","Post-legalization rewriting",null,[[],["timingtoken"]]],[5,"preopt","","Pre-legalization rewriting",null,[[],["timingtoken"]]],[5,"dce","","Dead code elimination",null,[[],["timingtoken"]]],[5,"legalize","","Legalization",null,[[],["timingtoken"]]],[5,"gvn","","Global value numbering",null,[[],["timingtoken"]]],[5,"licm","","Loop invariant code motion",null,[[],["timingtoken"]]],[5,"unreachable_code","","Remove unreachable blocks",null,[[],["timingtoken"]]],[5,"regalloc","","Register allocation",null,[[],["timingtoken"]]],[5,"ra_liveness","","RA liveness analysis",null,[[],["timingtoken"]]],[5,"ra_cssa","","RA coalescing CSSA",null,[[],["timingtoken"]]],[5,"ra_spilling","","RA spilling",null,[[],["timingtoken"]]],[5,"ra_reload","","RA reloading",null,[[],["timingtoken"]]],[5,"ra_coloring","","RA coloring",null,[[],["timingtoken"]]],[5,"prologue_epilogue","","Prologue/epilogue insertion",null,[[],["timingtoken"]]],[5,"shrink_instructions","","Instruction encoding shrinking",null,[[],["timingtoken"]]],[5,"relax_branches","","Branch relaxation",null,[[],["timingtoken"]]],[5,"binemit","","Binary machine code emission",null,[[],["timingtoken"]]],[5,"layout_renumber","","Layout full renumbering",null,[[],["timingtoken"]]],[5,"canonicalize_nans","","Canonicalization of NaNs",null,[[],["timingtoken"]]],[0,"verifier","cranelift_codegen","A verifier for ensuring that functions are well formed. It…",null,null],[3,"VerifierError","cranelift_codegen::verifier","A verifier error.",null,null],[12,"location","","The entity causing the verifier error.",125,null],[12,"context","","Optionally provide some context for the given location;…",125,null],[12,"message","","The error message.",125,null],[3,"VerifierErrors","","List of verifier errors.",null,null],[12,"0","","",126,null],[5,"verify_cssa","","Verify conventional SSA form for `func`.",null,[[["liveness"],["controlflowgraph"],["dominatortree"],["virtregs"],["verifiererrors"],["function"]],["verifierstepresult"]]],[5,"verify_liveness","","Verify liveness information for `func`.",null,[[["liveness"],["controlflowgraph"],["targetisa"],["verifiererrors"],["function"]],["verifierstepresult"]]],[5,"verify_locations","","Verify value locations for `func`.",null,[[["liveness"],["controlflowgraph"],["option",["liveness"]],["targetisa"],["function"],["verifiererrors"]],["verifierstepresult"]]],[5,"verify_function","","Verify `func`.",null,[[["into",["flagsorisa"]],["flagsorisa"],["function"]],["verifierresult"]]],[5,"verify_context","","Verify `func` after checking the integrity of associated…",null,[[["into",["flagsorisa"]],["controlflowgraph"],["dominatortree"],["flagsorisa"],["verifiererrors"],["function"]],["verifierstepresult"]]],[6,"VerifierStepResult","","Result of a step in the verification process.",null,null],[6,"VerifierResult","","Result of a verification operation.",null,null],[11,"new","","Return a new `VerifierErrors` struct.",126,[[],["self"]]],[11,"is_empty","","Return whether no errors were reported.",126,[[["self"]],["bool"]]],[11,"has_error","","Return whether one or more errors were reported.",126,[[["self"]],["bool"]]],[11,"as_result","","Return a `VerifierStepResult` that is fatal if at least…",126,[[["self"]],["verifierstepresult"]]],[11,"report","","Report an error, adding it to the list of errors.",126,[[["self"]]]],[11,"fatal","","Report a fatal error and return `Err`.",126,[[["self"]],["verifierstepresult"]]],[11,"nonfatal","","Report a non-fatal error and return `Ok`.",126,[[["self"]],["verifierstepresult"]]],[0,"write","cranelift_codegen","Converting Cranelift IR to text.",null,null],[3,"PlainWriter","cranelift_codegen::write","A `PlainWriter` that doesn't decorate the function.",null,null],[5,"write_function","","Write `func` to `w` as equivalent text. Use `isa` to emit…",null,[[["function"],["displayfunctionannotations"],["write"]],["result"]]],[5,"decorate_function","","Writes `func` to `w` as text. write_function_plain is…",null,[[["fw"],["write"],["displayfunctionannotations"],["function"]],["result"]]],[5,"write_ebb_header","","Write out the basic block header, outdented:",null,[[["ebb"],["usize"],["write"],["targetisa"],["option",["targetisa"]],["function"]],["result"]]],[5,"write_operands","","Write the operands of `inst` to `w` with a prepended space.",null,[[["inst"],["write"],["dataflowgraph"],["option",["targetisa"]],["targetisa"]],["result"]]],[8,"FuncWriter","","A `FuncWriter` used to decorate functions during printing.",null,null],[10,"write_ebb_header","","Write the extended basic block header for the current…",127,[[["ebb"],["usize"],["write"],["targetisa"],["self"],["option",["targetisa"]],["function"]],["result"]]],[10,"write_instruction","","Write the given `inst` to `w`.",127,[[["secondarymap"],["targetisa"],["option",["targetisa"]],["inst"],["write"],["usize"],["self"],["function"]],["result"]]],[11,"write_preamble","","Write the preamble to `w`. By default, this uses…",127,[[["write"],["option",["reginfo"]],["self"],["reginfo"],["function"]],[["error"],["result",["bool","error"]],["bool"]]]],[11,"super_preamble","","Default impl of `write_preamble`",127,[[["write"],["option",["reginfo"]],["self"],["reginfo"],["function"]],[["error"],["result",["bool","error"]],["bool"]]]],[11,"write_entity_definition","","Write an entity definition defined in the preamble to `w`.",127,[[["anyentity"],["write"],["self"],["display"],["function"]],["result"]]],[11,"super_entity_definition","","Default impl of `write_entity_definition`",127,[[["anyentity"],["write"],["self"],["display"],["function"]],["result"]]],[11,"new","cranelift_codegen","Allocate a new compilation context.",1,[[],["self"]]],[11,"for_function","","Allocate a new compilation context with an existing…",1,[[["function"]],["self"]]],[11,"clear","","Clear all data structures in this context.",1,[[["self"]]]],[11,"compile_and_emit","","Compile the function, and emit machine code into a…",1,[[["vec"],["trapsink"],["relocsink"],["targetisa"],["stackmapsink"],["self"]],[["codeinfo"],["codegenresult",["codeinfo"]]]]],[11,"compile","","Compile the function.",1,[[["self"],["targetisa"]],[["codeinfo"],["codegenresult",["codeinfo"]]]]],[11,"emit_to_memory","","Emit machine code directly into raw memory.",1,[[["trapsink"],["relocsink"],["targetisa"],["stackmapsink"],["self"]],["codeinfo"]]],[11,"emit_unwind_info","","Emit unwind information.",1,[[["vec"],["self"],["targetisa"]]]],[11,"verify","","Run the verifier on the function.",1,[[["into",["flagsorisa"]],["flagsorisa"],["self"]],["verifierresult"]]],[11,"verify_if","","Run the verifier only if the `enable_verifier` setting is…",1,[[["into",["flagsorisa"]],["flagsorisa"],["self"]],["codegenresult"]]],[11,"verify_locations","","Run the locations verifier on the function.",1,[[["self"],["targetisa"]],["verifierresult"]]],[11,"verify_locations_if","","Run the locations verifier only if the `enable_verifier`…",1,[[["self"],["targetisa"]],["codegenresult"]]],[11,"dce","","Perform dead-code elimination on the function.",1,[[["into",["flagsorisa"]],["self"],["flagsorisa"]],["codegenresult"]]],[11,"preopt","","Perform pre-legalization rewrites on the function.",1,[[["self"],["targetisa"]],["codegenresult"]]],[11,"canonicalize_nans","","Perform NaN canonicalizing rewrites on the function.",1,[[["self"],["targetisa"]],["codegenresult"]]],[11,"legalize","","Run the legalizer for `isa` on the function.",1,[[["self"],["targetisa"]],["codegenresult"]]],[11,"postopt","","Perform post-legalization rewrites on the function.",1,[[["self"],["targetisa"]],["codegenresult"]]],[11,"compute_cfg","","Compute the control flow graph.",1,[[["self"]]]],[11,"compute_domtree","","Compute dominator tree.",1,[[["self"]]]],[11,"compute_loop_analysis","","Compute the loop analysis.",1,[[["self"]]]],[11,"flowgraph","","Compute the control flow graph and dominator tree.",1,[[["self"]]]],[11,"simple_gvn","","Perform simple GVN on the function.",1,[[["into",["flagsorisa"]],["self"],["flagsorisa"]],["codegenresult"]]],[11,"licm","","Perform LICM on the function.",1,[[["self"],["targetisa"]],["codegenresult"]]],[11,"eliminate_unreachable_code","","Perform unreachable code elimination.",1,[[["foi"],["self"]],["codegenresult"]]],[11,"regalloc","","Run the register allocator.",1,[[["self"],["targetisa"]],["codegenresult"]]],[11,"prologue_epilogue","","Insert prologue and epilogues after computing the stack…",1,[[["self"],["targetisa"]],["codegenresult"]]],[11,"redundant_reload_remover","","Do redundant-reload removal after allocation of both…",1,[[["self"],["targetisa"]],["codegenresult"]]],[11,"shrink_instructions","","Run the instruction shrinking pass.",1,[[["self"],["targetisa"]],["codegenresult"]]],[11,"relax_branches","","Run the branch relaxation pass and return information…",1,[[["self"],["targetisa"]],[["codeinfo"],["codegenresult",["codeinfo"]]]]],[11,"build_value_labels_ranges","","Builds ranges and location for specified value labels.",1,[[["self"],["targetisa"]],[["codegenresult",["valuelabelsranges"]],["valuelabelsranges"]]]],[11,"new","cranelift_codegen::binemit","Create a new empty diversion tracker.",128,[[],["self"]]],[11,"clear","","Clear the content of the diversions, to reset the state of…",128,[[["self"]]]],[11,"is_empty","","Are there any diversions?",128,[[["self"]],["bool"]]],[11,"diversion","","Get the current diversion of `value`, if any.",128,[[["self"],["value"]],[["diversion"],["option",["diversion"]]]]],[11,"iter","","Get all current diversions.",128,[[["self"]],[["iter",["value","diversion"]],["diversion"],["value"]]]],[11,"get","","Get the current location for `value`. Fall back to the…",128,[[["valuelocations"],["self"],["value"]],["valueloc"]]],[11,"reg","","Get the current register location for `value`, or panic if…",128,[[["valuelocations"],["self"],["value"]],["regunit"]]],[11,"stack","","Get the current stack location for `value`, or panic if…",128,[[["valuelocations"],["self"],["value"]],["stackslot"]]],[11,"regmove","","Record a register -> register move.",128,[[["regunit"],["self"],["value"]]]],[11,"regspill","","Record a register -> stack move.",128,[[["stackslot"],["regunit"],["self"],["value"]]]],[11,"regfill","","Record a stack -> register move.",128,[[["stackslot"],["regunit"],["self"],["value"]]]],[11,"apply","","Apply the effect of `inst`.",128,[[["self"],["instructiondata"]]]],[11,"remove","","Drop any recorded move for `value`.",128,[[["self"],["value"]],[["valueloc"],["option",["valueloc"]]]]],[11,"at_ebb","","Resets the state of the current diversions to the recorded…",128,[[["ebb"],["self"],["entryregdiversions"]]]],[11,"save_for_ebb","","Copy the current state of the diversions, and save it for…",128,[[["ebb"],["self"],["entryregdiversions"]]]],[11,"check_ebb_entry","","Check that the recorded entry for a given `ebb` matches…",128,[[["ebb"],["entryregdiversions"],["self"]],["bool"]]],[11,"display","","Return an object that can display the diversions.",128,[[["into",["option"]],["option",["reginfo"]],["self"]],["displaydiversions"]]],[6,"ValueLabelsRanges","cranelift_codegen","Resulting map of Value labels and their ranges/locations.",null,null],[6,"CodegenResult","","A convenient alias for a `Result` that uses `CodegenError`…",null,null],[17,"VERSION","","Version number of this crate.",null,null],[11,"from","cranelift_codegen::packed_option","",129,[[["t"]],["t"]]],[11,"from","","",129,[[],["t"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"into","","",129,[[],["u"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,[[["self"],["t"]]]],[11,"from","cranelift_codegen","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"from","cranelift_codegen::binemit","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"into","","",130,[[],["u"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"into","","",131,[[],["u"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"into","","",132,[[],["u"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"into","","",128,[[],["u"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,[[["self"],["t"]]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"from","cranelift_codegen::cfg_printer","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"from","cranelift_codegen::cursor","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"into","","",13,[[],["u"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"into","","",14,[[],["u"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"into","","",15,[[],["u"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"from","cranelift_codegen::dbg","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"to_string","","",17,[[["self"]],["string"]]],[11,"from","cranelift_codegen::dominator_tree","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"into","","",19,[[],["u"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"into_iter","","",133,[[],["i"]]],[11,"into","","",133,[[],["u"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"from","cranelift_codegen::flowgraph","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"into_iter","","",134,[[],["i"]]],[11,"into","","",134,[[],["u"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"from","cranelift_codegen::ir::condcodes","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"into","","",23,[[],["u"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"to_string","","",23,[[["self"]],["string"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"to_string","","",24,[[["self"]],["string"]]],[11,"from","cranelift_codegen::ir","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"into","","",44,[[],["u"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"into","","",45,[[],["u"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"to_string","","",25,[[["self"]],["string"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"into","","",26,[[],["u"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"to_string","","",26,[[["self"]],["string"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"to_string","","",27,[[["self"]],["string"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"to_string","","",29,[[["self"]],["string"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"into","","",84,[[],["u"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,[[["self"],["t"]]]],[11,"to_string","","",84,[[["self"]],["string"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"into","","",135,[[],["u"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,[[["self"],["t"]]]],[11,"to_string","","",135,[[["self"]],["string"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"into","","",85,[[],["u"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,[[["self"],["t"]]]],[11,"to_string","","",85,[[["self"]],["string"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"into","","",30,[[],["u"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"to_string","","",30,[[["self"]],["string"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"into","","",94,[[],["u"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,[[["self"],["t"]]]],[11,"to_string","","",94,[[["self"]],["string"]]],[11,"key","","",94,[[["self"]],["t"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"into","","",31,[[],["u"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"into","","",32,[[],["u"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"into","","",33,[[],["u"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"to_string","","",33,[[["self"]],["string"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"into","","",34,[[],["u"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"to_string","","",34,[[["self"]],["string"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"into","","",35,[[],["u"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"into","","",36,[[],["u"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"to_string","","",36,[[["self"]],["string"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"into","","",37,[[],["u"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"into","","",38,[[],["u"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"to_string","","",38,[[["self"]],["string"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"into","","",39,[[],["u"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"to_string","","",39,[[["self"]],["string"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"into","","",40,[[],["u"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"to_string","","",40,[[["self"]],["string"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"into","","",41,[[],["u"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"into","","",42,[[],["u"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"into","","",43,[[],["u"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"from","cranelift_codegen::ir::constant","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"into","","",46,[[],["u"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"to_string","","",46,[[["self"]],["string"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"into","","",47,[[],["u"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"into","","",48,[[],["u"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"from","cranelift_codegen::ir::dfg","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"into","","",49,[[],["u"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"into_iter","","",136,[[],["i"]]],[11,"into","","",136,[[],["u"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"into","","",137,[[],["u"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"to_string","","",137,[[["self"]],["string"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"into","","",50,[[],["u"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"from","cranelift_codegen::ir::entities","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"into","","",52,[[],["u"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"to_string","","",52,[[["self"]],["string"]]],[11,"key","","",52,[[["self"]],["t"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"into","","",53,[[],["u"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"to_string","","",53,[[["self"]],["string"]]],[11,"key","","",53,[[["self"]],["t"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"into","","",54,[[],["u"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"to_string","","",54,[[["self"]],["string"]]],[11,"key","","",54,[[["self"]],["t"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"into","","",55,[[],["u"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"to_string","","",55,[[["self"]],["string"]]],[11,"key","","",55,[[["self"]],["t"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"into","","",56,[[],["u"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"to_string","","",56,[[["self"]],["string"]]],[11,"key","","",56,[[["self"]],["t"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"into","","",57,[[],["u"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"to_string","","",57,[[["self"]],["string"]]],[11,"key","","",57,[[["self"]],["t"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"into","","",58,[[],["u"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"to_string","","",58,[[["self"]],["string"]]],[11,"key","","",58,[[["self"]],["t"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"into","","",59,[[],["u"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"to_string","","",59,[[["self"]],["string"]]],[11,"key","","",59,[[["self"]],["t"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"into","","",60,[[],["u"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"to_string","","",60,[[["self"]],["string"]]],[11,"key","","",60,[[["self"]],["t"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"into","","",61,[[],["u"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"to_string","","",61,[[["self"]],["string"]]],[11,"key","","",61,[[["self"]],["t"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"into","","",62,[[],["u"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"to_string","","",62,[[["self"]],["string"]]],[11,"key","","",62,[[["self"]],["t"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"into","","",63,[[],["u"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"to_string","","",63,[[["self"]],["string"]]],[11,"key","","",63,[[["self"]],["t"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"into","","",51,[[],["u"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"to_string","","",51,[[["self"]],["string"]]],[11,"from","cranelift_codegen::ir::function","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"into","","",64,[[],["u"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"to_string","","",64,[[["self"]],["string"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"into","","",65,[[],["u"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"into","","",138,[[],["u"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"to_string","","",138,[[["self"]],["string"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"into_iter","","",139,[[],["i"]]],[11,"into","","",139,[[],["u"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"from","cranelift_codegen::ir::immediates","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"into","","",68,[[],["u"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,[[["self"],["t"]]]],[11,"to_string","","",68,[[["self"]],["string"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"into","","",69,[[],["u"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"to_string","","",69,[[["self"]],["string"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"into","","",140,[[],["u"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,[[["self"],["t"]]]],[11,"to_string","","",140,[[["self"]],["string"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"into","","",66,[[],["u"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"into","","",70,[[],["u"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"to_string","","",70,[[["self"]],["string"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"into","","",71,[[],["u"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"to_string","","",71,[[["self"]],["string"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"into","","",72,[[],["u"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"to_string","","",72,[[["self"]],["string"]]],[11,"from","cranelift_codegen::ir::instructions","",80,[[["t"]],["t"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"into","","",80,[[],["u"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,[[["self"],["t"]]]],[11,"to_string","","",80,[[["self"]],["string"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"into","","",81,[[],["u"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,[[["self"],["t"]]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"into","","",73,[[],["u"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"into","","",74,[[],["u"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"into","","",75,[[],["u"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"into","","",76,[[],["u"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"to_string","","",76,[[["self"]],["string"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"into","","",77,[[],["u"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"into","","",78,[[],["u"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"into","","",79,[[],["u"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,[[["self"],["t"]]]],[11,"from","cranelift_codegen::ir::jumptable","",82,[[["t"]],["t"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"into","","",82,[[],["u"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,[[["self"],["t"]]]],[11,"to_string","","",82,[[["self"]],["string"]]],[11,"from","cranelift_codegen::ir::layout","",83,[[["t"]],["t"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"into","","",83,[[],["u"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,[[["self"],["t"]]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"into_iter","","",141,[[],["i"]]],[11,"into","","",141,[[],["u"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"into_iter","","",142,[[],["i"]]],[11,"into","","",142,[[],["u"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"from","cranelift_codegen::ir::stackslot","",86,[[["t"]],["t"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"into","","",86,[[],["u"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,[[["self"],["t"]]]],[11,"to_string","","",86,[[["self"]],["string"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"into","","",87,[[],["u"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,[[["self"],["t"]]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"into","","",88,[[],["u"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,[[["self"],["t"]]]],[11,"to_string","","",88,[[["self"]],["string"]]],[11,"from","cranelift_codegen::ir::types","",89,[[["t"]],["t"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"into","","",89,[[],["u"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,[[["self"],["t"]]]],[11,"to_string","","",89,[[["self"]],["string"]]],[11,"from","cranelift_codegen::isa","",95,[[["t"]],["t"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"into","","",95,[[],["u"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,[[["self"],["t"]]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"into","","",96,[[],["u"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"into","","",97,[[],["u"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,[[["self"],["t"]]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"into","","",98,[[],["u"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,[[["self"],["t"]]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"into","","",106,[[],["u"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,[[["self"],["t"]]]],[11,"to_string","","",106,[[["self"]],["string"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"into","","",99,[[],["u"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,[[["self"],["t"]]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"into","","",100,[[],["u"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,[[["self"],["t"]]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"into","","",111,[[],["u"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"into","","",101,[[],["u"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,[[["self"],["t"]]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"into","","",102,[[],["u"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,[[["self"],["t"]]]],[11,"to_string","","",102,[[["self"]],["string"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"into","","",103,[[],["u"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,[[["self"],["t"]]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"into","","",104,[[],["u"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,[[["self"],["t"]]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"into","","",105,[[],["u"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,[[["self"],["t"]]]],[11,"to_string","","",105,[[["self"]],["string"]]],[11,"from","cranelift_codegen::isa::registers","",107,[[["t"]],["t"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"into","","",107,[[],["u"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"into","","",108,[[],["u"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"to_string","","",108,[[["self"]],["string"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"into","","",143,[[],["u"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,[[["self"],["t"]]]],[11,"to_string","","",143,[[["self"]],["string"]]],[11,"key","","",143,[[["self"]],["t"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"into","","",109,[[],["u"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,[[["self"],["t"]]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"into","","",144,[[],["u"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"to_string","","",144,[[["self"]],["string"]]],[11,"from","cranelift_codegen::loop_analysis","",112,[[["t"]],["t"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"into","","",112,[[],["u"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,[[["self"],["t"]]]],[11,"to_string","","",112,[[["self"]],["string"]]],[11,"key","","",112,[[["self"]],["t"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"into","","",113,[[],["u"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"from","cranelift_codegen::settings","",122,[[["t"]],["t"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"into","","",122,[[],["u"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,[[["self"],["t"]]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"into","","",123,[[],["u"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,[[["self"],["t"]]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"into","","",124,[[],["u"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,[[["self"],["t"]]]],[11,"to_string","","",124,[[["self"]],["string"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"into","","",114,[[],["u"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,[[["self"],["t"]]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"into","","",115,[[],["u"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"to_string","","",115,[[["self"]],["string"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"into","","",116,[[],["u"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,[[["self"],["t"]]]],[11,"to_string","","",116,[[["self"]],["string"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"into","","",117,[[],["u"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,[[["self"],["t"]]]],[11,"to_string","","",117,[[["self"]],["string"]]],[11,"from","cranelift_codegen::settings::detail","",118,[[["t"]],["t"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"into","","",118,[[],["u"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"into","","",119,[[],["u"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"into","","",120,[[],["u"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,[[["self"],["t"]]]],[11,"from","cranelift_codegen::timing","",145,[[["t"]],["t"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"into","","",145,[[],["u"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"to_string","","",145,[[["self"]],["string"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"into","","",146,[[],["u"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"from","cranelift_codegen::verifier","",125,[[["t"]],["t"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"into","","",125,[[],["u"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,[[["self"],["t"]]]],[11,"to_string","","",125,[[["self"]],["string"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"into","","",126,[[],["u"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,[[["self"],["t"]]]],[11,"to_string","","",126,[[["self"]],["string"]]],[11,"from","cranelift_codegen::write","",147,[[["t"]],["t"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"into","","",147,[[],["u"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"partial_cmp","cranelift_codegen::packed_option","",129,[[["self"],["packedoption"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",129,[[["self"],["packedoption"]],["bool"]]],[11,"le","","",129,[[["self"],["packedoption"]],["bool"]]],[11,"gt","","",129,[[["self"],["packedoption"]],["bool"]]],[11,"ge","","",129,[[["self"],["packedoption"]],["bool"]]],[11,"default","","Create a default packed option representing `None`.",129,[[],["packedoption"]]],[11,"into","","",129,[[],["option"]]],[11,"hash","","",129,[[["self"],["__h"]]]],[11,"fmt","","",129,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"from","","Convert an option into its packed equivalent.",129,[[["option"]],["packedoption"]]],[11,"from","","Convert `t` into a packed `Some(x)`.",129,[[["t"]],["packedoption"]]],[11,"cmp","","",129,[[["self"],["packedoption"]],["ordering"]]],[11,"eq","","",129,[[["self"],["packedoption"]],["bool"]]],[11,"ne","","",129,[[["self"],["packedoption"]],["bool"]]],[11,"clone","","",129,[[["self"]],["packedoption"]]],[11,"from_str","cranelift_codegen::ir::condcodes","",24,[[["str"]],[["floatcc"],["result",["floatcc"]]]]],[11,"from_str","","",23,[[["str"]],[["result",["intcc"]],["intcc"]]]],[11,"fmt","","",24,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",23,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"hash","","",23,[[["self"],["__h"]]]],[11,"hash","","",24,[[["self"],["__h"]]]],[11,"fmt","","",24,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",23,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"inverse","","",24,[[],["floatcc"]]],[11,"reverse","","",24,[[],["floatcc"]]],[11,"inverse","","",23,[[],["intcc"]]],[11,"reverse","","",23,[[],["intcc"]]],[11,"clone","","",24,[[["self"]],["floatcc"]]],[11,"clone","","",23,[[["self"]],["intcc"]]],[11,"eq","","",24,[[["floatcc"],["self"]],["bool"]]],[11,"eq","","",23,[[["self"],["intcc"]],["bool"]]],[11,"reloc_ebb","cranelift_codegen::binemit","",130,[[["reloc"],["u32"],["self"]]]],[11,"reloc_external","","",130,[[["reloc"],["u32"],["i64"],["self"],["externalname"]]]],[11,"reloc_constant","","",130,[[["reloc"],["constantoffset"],["codeoffset"],["self"]]]],[11,"reloc_jt","","",130,[[["reloc"],["u32"],["jumptable"],["self"]]]],[11,"trap","","",132,[[["codeoffset"],["trapcode"],["self"],["sourceloc"]]]],[11,"add_stackmap","","",131,[[["self"],["codeoffset"],["stackmap"]]]],[11,"offset","","",4,[[["self"]],["codeoffset"]]],[11,"put1","","",4,[[["self"],["u8"]]]],[11,"put2","","",4,[[["u16"],["self"]]]],[11,"put4","","",4,[[["self"],["u32"]]]],[11,"put8","","",4,[[["self"],["u64"]]]],[11,"reloc_ebb","","",4,[[["reloc"],["self"],["codeoffset"]]]],[11,"reloc_external","","",4,[[["reloc"],["addend"],["self"],["externalname"]]]],[11,"reloc_constant","","",4,[[["reloc"],["self"],["constantoffset"]]]],[11,"reloc_jt","","",4,[[["reloc"],["self"],["jumptable"]]]],[11,"trap","","",4,[[["trapcode"],["self"],["sourceloc"]]]],[11,"begin_jumptables","","",4,[[["self"]]]],[11,"begin_rodata","","",4,[[["self"]]]],[11,"end_codegen","","",4,[[["self"]]]],[11,"add_stackmap","","",4,[[["targetisa"],["self"],["function"]]]],[11,"position","cranelift_codegen::cursor","",13,[[["self"]],["cursorposition"]]],[11,"set_position","","",13,[[["cursorposition"],["self"]]]],[11,"srcloc","","",13,[[["self"]],["sourceloc"]]],[11,"set_srcloc","","",13,[[["self"],["sourceloc"]]]],[11,"layout","","",13,[[["self"]],["layout"]]],[11,"layout_mut","","",13,[[["self"]],["layout"]]],[11,"position","","",14,[[["self"]],["cursorposition"]]],[11,"set_position","","",14,[[["cursorposition"],["self"]]]],[11,"srcloc","","",14,[[["self"]],["sourceloc"]]],[11,"set_srcloc","","",14,[[["self"],["sourceloc"]]]],[11,"layout","","",14,[[["self"]],["layout"]]],[11,"layout_mut","","",14,[[["self"]],["layout"]]],[11,"data_flow_graph","cranelift_codegen::ir","",44,[[["self"]],["dataflowgraph"]]],[11,"data_flow_graph_mut","","",44,[[["self"]],["dataflowgraph"]]],[11,"build","","",44,[[["instructiondata"],["type"]]]],[11,"data_flow_graph","","",45,[[["self"]],["dataflowgraph"]]],[11,"data_flow_graph_mut","","",45,[[["self"]],["dataflowgraph"]]],[11,"build","","",45,[[["instructiondata"],["type"]]]],[11,"into_bytes","cranelift_codegen::ir::immediates","",68,[[],[["vec",["u8"]],["u8"]]]],[11,"into_bytes","","",71,[[],[["vec",["u8"]],["u8"]]]],[11,"into_bytes","","",72,[[],[["vec",["u8"]],["u8"]]]],[11,"cmp","cranelift_codegen::ir::layout","",83,[[["a"],["self"],["b"]],["ordering"]]],[11,"is_ebb_gap","","",83,[[["ebb"],["self"],["inst"]],["bool"]]],[11,"set","cranelift_codegen::isa","",111,[[["str"],["self"]],["setresult"]]],[11,"enable","","",111,[[["str"],["self"]],["setresult"]]],[11,"enable","cranelift_codegen::settings","",122,[[["str"],["self"]],["setresult"]]],[11,"set","","",122,[[["str"],["self"]],["setresult"]]],[11,"write_instruction","cranelift_codegen::write","",147,[[["secondarymap"],["targetisa"],["option",["targetisa"]],["inst"],["write"],["usize"],["self"],["function"]],["result"]]],[11,"write_ebb_header","","",147,[[["ebb"],["usize"],["write"],["targetisa"],["self"],["option",["targetisa"]],["function"]],["result"]]],[11,"deref","cranelift_codegen::ir::instructions","",80,[[["self"]]]],[11,"deref_mut","","",80,[[["self"]]]],[11,"from","cranelift_codegen::ir::constant","",46,[[["vec",["u8"]],["u8"]],["self"]]],[11,"from","","",46,[[],["self"]]],[11,"from","","",46,[[["v128imm"]],["self"]]],[11,"from","cranelift_codegen::ir::entities","",51,[[["ebb"]],["self"]]],[11,"from","","",51,[[["inst"]],["self"]]],[11,"from","","",51,[[["value"]],["self"]]],[11,"from","","",51,[[["stackslot"]],["self"]]],[11,"from","","",51,[[["globalvalue"]],["self"]]],[11,"from","","",51,[[["jumptable"]],["self"]]],[11,"from","","",51,[[["funcref"]],["self"]]],[11,"from","","",51,[[["sigref"]],["self"]]],[11,"from","","",51,[[["heap"]],["self"]]],[11,"from","","",51,[[["table"]],["self"]]],[11,"from","cranelift_codegen::ir::function","",65,[[["option",["targetisa"]],["targetisa"]],["displayfunctionannotations"]]],[11,"from","cranelift_codegen::ir::immediates","",68,[[["i64"]],["self"]]],[11,"from","","",69,[[["u64"]],["self"]]],[11,"from","","",140,[[["u32"]],["self"]]],[11,"from","","",66,[[],["self"]]],[11,"from","","",70,[[["i32"]],["self"]]],[11,"from","","",71,[[["f32"]],["self"]]],[11,"from","","",72,[[["f64"]],["self"]]],[11,"from","","",72,[[["u64"]],["self"]]],[11,"from","cranelift_codegen::ir::instructions","",74,[[["instructiondata"]],["self"]]],[11,"from","cranelift_codegen::ir","",135,[[["inst"]],["self"]]],[11,"from","","",135,[[["ebb"]],["self"]]],[11,"from","","",135,[[["valuedef"]],["self"]]],[11,"from","","",39,[[["inst"]],["self"]]],[11,"from","","",39,[[["ebb"]],["self"]]],[11,"from","","",39,[[["valuedef"]],["self"]]],[11,"from","","",39,[[["programpoint"]],["self"]]],[11,"from","cranelift_codegen::isa::registers","",143,[[["regclass"]],["self"]]],[11,"from","cranelift_codegen::settings","",114,[[["flags"]],["flagsorisa"]]],[11,"from","","",114,[[["targetisa"]],["flagsorisa"]]],[11,"from","cranelift_codegen::verifier","",125,[[],["self"]]],[11,"from","","",125,[[],["self"]]],[11,"from","","",126,[[["verifiererror"],["vec",["verifiererror"]]],["self"]]],[11,"from","cranelift_codegen","",3,[[["verifiererrors"]],["self"]]],[11,"fmt","cranelift_codegen::binemit","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen::cursor","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen::flowgraph","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen::ir::constant","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen::ir::dfg","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen::ir::entities","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen::ir","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen::ir::function","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen::ir::immediates","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",140,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen::ir::instructions","",74,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen::ir","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",135,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen::ir::stackslot","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen::ir","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen::ir::types","",89,[[["formatter"],["self"]],["result"]]],[11,"fmt","cranelift_codegen::ir","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen::isa","",102,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",103,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",106,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen::isa::registers","",108,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",143,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen::isa","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",104,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen::loop_analysis","",112,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen::settings","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen::verifier","",125,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen::binemit","Display trait implementation drops the arch, since its…",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen::cfg_printer","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","cranelift_codegen::dbg","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen::ir::constant","Print the constant data in hexadecimal format, e.g.…",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen::ir::dfg","",137,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen::ir::entities","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen::ir","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen::ir::function","",138,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen::ir","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen::ir::immediates","",68,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",140,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",71,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",72,[[["formatter"],["self"]],["result"]]],[11,"fmt","cranelift_codegen::ir::instructions","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",80,[[["formatter"],["self"]],["result"]]],[11,"fmt","cranelift_codegen::ir::jumptable","",82,[[["formatter"],["self"]],["result"]]],[11,"fmt","cranelift_codegen::ir","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",135,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen::ir::stackslot","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen::ir","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","cranelift_codegen::ir::types","",89,[[["formatter"],["self"]],["result"]]],[11,"fmt","cranelift_codegen::ir","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen::isa","",102,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",106,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen::isa::registers","",108,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",143,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",144,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen::isa","",105,[[["formatter"],["self"]],["result"]]],[11,"fmt","cranelift_codegen::loop_analysis","",112,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen::settings","",115,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen::timing","",145,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen::verifier","",125,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",126,[[["formatter"],["self"]],["result"]]],[11,"fmt","cranelift_codegen","",3,[[["formatter"],["self"]],["result"]]],[11,"eq","cranelift_codegen::binemit","",6,[[["self"],["reloc"]],["bool"]]],[11,"eq","","",5,[[["codeinfo"],["self"]],["bool"]]],[11,"ne","","",5,[[["codeinfo"],["self"]],["bool"]]],[11,"eq","cranelift_codegen::cursor","",15,[[["cursorposition"],["self"]],["bool"]]],[11,"ne","","",15,[[["cursorposition"],["self"]],["bool"]]],[11,"eq","cranelift_codegen::flowgraph","",20,[[["self"],["basicblock"]],["bool"]]],[11,"ne","","",20,[[["self"],["basicblock"]],["bool"]]],[11,"eq","cranelift_codegen::ir::constant","",46,[[["constantdata"],["self"]],["bool"]]],[11,"ne","","",46,[[["constantdata"],["self"]],["bool"]]],[11,"eq","cranelift_codegen::ir::dfg","",50,[[["self"],["valuedef"]],["bool"]]],[11,"ne","","",50,[[["self"],["valuedef"]],["bool"]]],[11,"eq","cranelift_codegen::ir::entities","",52,[[["self"],["ebb"]],["bool"]]],[11,"ne","","",52,[[["self"],["ebb"]],["bool"]]],[11,"eq","","",53,[[["value"],["self"]],["bool"]]],[11,"ne","","",53,[[["value"],["self"]],["bool"]]],[11,"eq","","",54,[[["inst"],["self"]],["bool"]]],[11,"ne","","",54,[[["inst"],["self"]],["bool"]]],[11,"eq","","",55,[[["self"],["stackslot"]],["bool"]]],[11,"ne","","",55,[[["self"],["stackslot"]],["bool"]]],[11,"eq","","",56,[[["globalvalue"],["self"]],["bool"]]],[11,"ne","","",56,[[["globalvalue"],["self"]],["bool"]]],[11,"eq","","",57,[[["self"],["constant"]],["bool"]]],[11,"ne","","",57,[[["self"],["constant"]],["bool"]]],[11,"eq","","",58,[[["self"],["immediate"]],["bool"]]],[11,"ne","","",58,[[["self"],["immediate"]],["bool"]]],[11,"eq","","",59,[[["jumptable"],["self"]],["bool"]]],[11,"ne","","",59,[[["jumptable"],["self"]],["bool"]]],[11,"eq","","",60,[[["funcref"],["self"]],["bool"]]],[11,"ne","","",60,[[["funcref"],["self"]],["bool"]]],[11,"eq","","",61,[[["sigref"],["self"]],["bool"]]],[11,"ne","","",61,[[["sigref"],["self"]],["bool"]]],[11,"eq","","",62,[[["heap"],["self"]],["bool"]]],[11,"ne","","",62,[[["heap"],["self"]],["bool"]]],[11,"eq","","",63,[[["table"],["self"]],["bool"]]],[11,"ne","","",63,[[["table"],["self"]],["bool"]]],[11,"eq","","",51,[[["anyentity"],["self"]],["bool"]]],[11,"ne","","",51,[[["anyentity"],["self"]],["bool"]]],[11,"eq","cranelift_codegen::ir","",27,[[["signature"],["self"]],["bool"]]],[11,"ne","","",27,[[["signature"],["self"]],["bool"]]],[11,"eq","","",25,[[["abiparam"],["self"]],["bool"]]],[11,"ne","","",25,[[["abiparam"],["self"]],["bool"]]],[11,"eq","","",32,[[["self"],["argumentextension"]],["bool"]]],[11,"eq","","",33,[[["argumentpurpose"],["self"]],["bool"]]],[11,"eq","","",34,[[["self"],["externalname"]],["bool"]]],[11,"ne","","",34,[[["self"],["externalname"]],["bool"]]],[11,"eq","","",35,[[["self"],["framelayoutchange"]],["bool"]]],[11,"ne","","",35,[[["self"],["framelayoutchange"]],["bool"]]],[11,"eq","cranelift_codegen::ir::immediates","",68,[[["imm64"],["self"]],["bool"]]],[11,"ne","","",68,[[["imm64"],["self"]],["bool"]]],[11,"eq","","",69,[[["uimm64"],["self"]],["bool"]]],[11,"ne","","",69,[[["uimm64"],["self"]],["bool"]]],[11,"eq","","",140,[[["self"],["uimm32"]],["bool"]]],[11,"ne","","",140,[[["self"],["uimm32"]],["bool"]]],[11,"eq","","",66,[[["v128imm"],["self"]],["bool"]]],[11,"ne","","",66,[[["v128imm"],["self"]],["bool"]]],[11,"eq","","",70,[[["offset32"],["self"]],["bool"]]],[11,"ne","","",70,[[["offset32"],["self"]],["bool"]]],[11,"eq","","",71,[[["self"],["ieee32"]],["bool"]]],[11,"ne","","",71,[[["self"],["ieee32"]],["bool"]]],[11,"eq","","",72,[[["self"],["ieee64"]],["bool"]]],[11,"ne","","",72,[[["self"],["ieee64"]],["bool"]]],[11,"eq","cranelift_codegen::ir::instructions","",74,[[["instructionformat"],["self"]],["bool"]]],[11,"eq","","",76,[[["opcode"],["self"]],["bool"]]],[11,"eq","","",73,[[["valuetypeset"],["self"]],["bool"]]],[11,"ne","","",73,[[["valuetypeset"],["self"]],["bool"]]],[11,"eq","","",79,[[["self"],["resolvedconstraint"]],["bool"]]],[11,"ne","","",79,[[["self"],["resolvedconstraint"]],["bool"]]],[11,"eq","cranelift_codegen::ir","",38,[[["self"],["libcall"]],["bool"]]],[11,"eq","","",84,[[["self"],["memflags"]],["bool"]]],[11,"ne","","",84,[[["self"],["memflags"]],["bool"]]],[11,"eq","","",135,[[["programpoint"],["self"]],["bool"]]],[11,"ne","","",135,[[["programpoint"],["self"]],["bool"]]],[11,"eq","","",39,[[["expandedprogrampoint"],["self"]],["bool"]]],[11,"ne","","",39,[[["expandedprogrampoint"],["self"]],["bool"]]],[11,"eq","","",85,[[["self"],["sourceloc"]],["bool"]]],[11,"ne","","",85,[[["self"],["sourceloc"]],["bool"]]],[11,"eq","cranelift_codegen::ir::stackslot","",88,[[["self"],["stackslotkind"]],["bool"]]],[11,"eq","","",86,[[["self"],["stackslotdata"]],["bool"]]],[11,"ne","","",86,[[["self"],["stackslotdata"]],["bool"]]],[11,"eq","","",87,[[["self"],["stackslots"]],["bool"]]],[11,"ne","","",87,[[["self"],["stackslots"]],["bool"]]],[11,"eq","cranelift_codegen::ir","",40,[[["trapcode"],["self"]],["bool"]]],[11,"ne","","",40,[[["trapcode"],["self"]],["bool"]]],[11,"eq","cranelift_codegen::ir::types","",89,[[["self"],["type"]],["bool"]]],[11,"ne","","",89,[[["self"],["type"]],["bool"]]],[11,"eq","cranelift_codegen::ir","",42,[[["self"],["valueloc"]],["bool"]]],[11,"ne","","",42,[[["self"],["valueloc"]],["bool"]]],[11,"eq","","",41,[[["self"],["argumentloc"]],["bool"]]],[11,"ne","","",41,[[["self"],["argumentloc"]],["bool"]]],[11,"eq","","",94,[[["valuelabel"],["self"]],["bool"]]],[11,"ne","","",94,[[["valuelabel"],["self"]],["bool"]]],[11,"eq","cranelift_codegen::isa","",102,[[["self"],["callconv"]],["bool"]]],[11,"eq","","",96,[[["self"],["operandconstraint"]],["bool"]]],[11,"ne","","",96,[[["self"],["operandconstraint"]],["bool"]]],[11,"eq","","",103,[[["constraintkind"],["self"]],["bool"]]],[11,"ne","","",103,[[["constraintkind"],["self"]],["bool"]]],[11,"eq","","",97,[[["recipeconstraints"],["self"]],["bool"]]],[11,"ne","","",97,[[["recipeconstraints"],["self"]],["bool"]]],[11,"eq","","",106,[[["encoding"],["self"]],["bool"]]],[11,"ne","","",106,[[["encoding"],["self"]],["bool"]]],[11,"eq","cranelift_codegen::isa::registers","",108,[[["self"]],["bool"]]],[11,"eq","","",143,[[["self"],["regclassindex"]],["bool"]]],[11,"ne","","",143,[[["self"],["regclassindex"]],["bool"]]],[11,"eq","cranelift_codegen::isa","",104,[[["self"],["stackbase"]],["bool"]]],[11,"eq","","",99,[[["stackbasemask"],["self"]],["bool"]]],[11,"ne","","",99,[[["stackbasemask"],["self"]],["bool"]]],[11,"eq","","",105,[[["self"],["lookuperror"]],["bool"]]],[11,"eq","cranelift_codegen::loop_analysis","",112,[[["self"],["loop"]],["bool"]]],[11,"ne","","",112,[[["self"],["loop"]],["bool"]]],[11,"eq","cranelift_codegen::settings","",115,[[["seterror"],["self"]],["bool"]]],[11,"ne","","",115,[[["seterror"],["self"]],["bool"]]],[11,"eq","","",116,[[["optlevel"],["self"]],["bool"]]],[11,"eq","","",117,[[["self"],["libcallcallconv"]],["bool"]]],[11,"eq","cranelift_codegen::verifier","",125,[[["self"],["verifiererror"]],["bool"]]],[11,"ne","","",125,[[["self"],["verifiererror"]],["bool"]]],[11,"eq","","",126,[[["verifiererrors"],["self"]],["bool"]]],[11,"ne","","",126,[[["verifiererrors"],["self"]],["bool"]]],[11,"eq","cranelift_codegen","",3,[[["self"],["codegenerror"]],["bool"]]],[11,"ne","","",3,[[["self"],["codegenerror"]],["bool"]]],[11,"eq","","",2,[[["self"],["valuelocrange"]],["bool"]]],[11,"ne","","",2,[[["self"],["valuelocrange"]],["bool"]]],[11,"cmp","cranelift_codegen::ir::entities","",52,[[["self"],["ebb"]],["ordering"]]],[11,"cmp","","",53,[[["value"],["self"]],["ordering"]]],[11,"cmp","","",54,[[["inst"],["self"]],["ordering"]]],[11,"cmp","","",57,[[["self"],["constant"]],["ordering"]]],[11,"partial_cmp","","",52,[[["self"],["ebb"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",52,[[["self"],["ebb"]],["bool"]]],[11,"le","","",52,[[["self"],["ebb"]],["bool"]]],[11,"gt","","",52,[[["self"],["ebb"]],["bool"]]],[11,"ge","","",52,[[["self"],["ebb"]],["bool"]]],[11,"partial_cmp","","",53,[[["value"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",53,[[["value"],["self"]],["bool"]]],[11,"le","","",53,[[["value"],["self"]],["bool"]]],[11,"gt","","",53,[[["value"],["self"]],["bool"]]],[11,"ge","","",53,[[["value"],["self"]],["bool"]]],[11,"partial_cmp","","",54,[[["inst"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",54,[[["inst"],["self"]],["bool"]]],[11,"le","","",54,[[["inst"],["self"]],["bool"]]],[11,"gt","","",54,[[["inst"],["self"]],["bool"]]],[11,"ge","","",54,[[["inst"],["self"]],["bool"]]],[11,"partial_cmp","","",57,[[["self"],["constant"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",57,[[["self"],["constant"]],["bool"]]],[11,"le","","",57,[[["self"],["constant"]],["bool"]]],[11,"gt","","",57,[[["self"],["constant"]],["bool"]]],[11,"ge","","",57,[[["self"],["constant"]],["bool"]]],[11,"from_str","cranelift_codegen::ir::constant","Parse a hexadecimal string to `ConstantData`. This is the…",46,[[["str"]],[["result",["str"]],["str"]]]],[11,"from_str","cranelift_codegen::ir","",33,[[["str"]],["result"]]],[11,"from_str","","",34,[[["str"]],["result"]]],[11,"from_str","cranelift_codegen::ir::immediates","",68,[[["str"]],[["result",["str"]],["str"]]]],[11,"from_str","","",69,[[["str"]],[["result",["str"]],["str"]]]],[11,"from_str","","",140,[[["str"]],[["result",["str"]],["str"]]]],[11,"from_str","","",70,[[["str"]],[["result",["str"]],["str"]]]],[11,"from_str","","",71,[[["str"]],[["result",["str"]],["str"]]]],[11,"from_str","","",72,[[["str"]],[["result",["str"]],["str"]]]],[11,"from_str","cranelift_codegen::ir::instructions","Parse an Opcode name from a string.",76,[[["str"]],[["result",["str"]],["str"]]]],[11,"from_str","cranelift_codegen::ir","",38,[[["str"]],["result"]]],[11,"from_str","cranelift_codegen::ir::stackslot","",88,[[["str"]],["result"]]],[11,"from_str","cranelift_codegen::ir","",40,[[["str"]],["result"]]],[11,"from_str","cranelift_codegen::isa","",102,[[["str"]],["result"]]],[11,"from_str","cranelift_codegen::settings","",116,[[["str"]],["result"]]],[11,"from_str","","",117,[[["str"]],["result"]]],[11,"drop","cranelift_codegen::timing","",146,[[["self"]]]],[11,"index","cranelift_codegen::ir::dfg","",49,[[["self"],["inst"]],["instructiondata"]]],[11,"index","cranelift_codegen::ir::stackslot","",87,[[["stackslot"],["self"]],["stackslotdata"]]],[11,"index_mut","cranelift_codegen::ir::dfg","",49,[[["self"],["inst"]],["instructiondata"]]],[11,"index_mut","cranelift_codegen::ir::stackslot","",87,[[["stackslot"],["self"]],["stackslotdata"]]],[11,"hash","cranelift_codegen::ir::constant","",46,[[["self"],["__h"]]]],[11,"hash","cranelift_codegen::ir::entities","",52,[[["self"],["__h"]]]],[11,"hash","","",53,[[["self"],["__h"]]]],[11,"hash","","",54,[[["self"],["__h"]]]],[11,"hash","","",55,[[["self"],["__h"]]]],[11,"hash","","",56,[[["self"],["__h"]]]],[11,"hash","","",57,[[["self"],["__h"]]]],[11,"hash","","",58,[[["self"],["__h"]]]],[11,"hash","","",59,[[["self"],["__h"]]]],[11,"hash","","",60,[[["self"],["__h"]]]],[11,"hash","","",61,[[["self"],["__h"]]]],[11,"hash","","",62,[[["self"],["__h"]]]],[11,"hash","","",63,[[["self"],["__h"]]]],[11,"hash","","",51,[[["self"],["__h"]]]],[11,"hash","cranelift_codegen::ir","",27,[[["self"],["__h"]]]],[11,"hash","","",25,[[["self"],["__h"]]]],[11,"hash","","",32,[[["self"],["__h"]]]],[11,"hash","","",33,[[["self"],["__h"]]]],[11,"hash","","",35,[[["self"],["__h"]]]],[11,"hash","cranelift_codegen::ir::immediates","",68,[[["self"],["__h"]]]],[11,"hash","","",69,[[["self"],["__h"]]]],[11,"hash","","",140,[[["self"],["__h"]]]],[11,"hash","","",66,[[["self"],["__h"]]]],[11,"hash","","",70,[[["self"],["__h"]]]],[11,"hash","","",71,[[["self"],["__h"]]]],[11,"hash","","",72,[[["self"],["__h"]]]],[11,"hash","cranelift_codegen::ir::instructions","",76,[[["self"],["__h"]]]],[11,"hash","cranelift_codegen::ir","",38,[[["self"],["__h"]]]],[11,"hash","","",84,[[["self"],["__h"]]]],[11,"hash","","",40,[[["self"],["__h"]]]],[11,"hash","cranelift_codegen::ir::types","",89,[[["self"],["__h"]]]],[11,"hash","cranelift_codegen::ir","",41,[[["self"],["__h"]]]],[11,"hash","","",94,[[["self"],["__h"]]]],[11,"hash","cranelift_codegen::isa","",102,[[["self"],["__h"]]]],[11,"hash","cranelift_codegen::loop_analysis","",112,[[["self"],["__h"]]]],[11,"hash","cranelift_codegen::settings","",116,[[["self"],["__h"]]]],[11,"hash","","",117,[[["self"],["__h"]]]],[11,"next","cranelift_codegen::dominator_tree","",133,[[["self"]],[["ebb"],["option",["ebb"]]]]],[11,"next","cranelift_codegen::flowgraph","",134,[[["self"]],[["option",["basicblock"]],["basicblock"]]]],[11,"next","cranelift_codegen::ir::dfg","",136,[[["self"]],["option"]]],[11,"next","cranelift_codegen::ir::function","",139,[[["self"]],["option"]]],[11,"next","cranelift_codegen::ir::layout","",141,[[["self"]],[["ebb"],["option",["ebb"]]]]],[11,"next","","",142,[[["self"]],[["inst"],["option",["inst"]]]]],[11,"from_iter","cranelift_codegen::ir::constant","",46,[[["intoiterator"]],["self"]]],[11,"next_back","cranelift_codegen::ir::layout","",142,[[["self"]],[["inst"],["option",["inst"]]]]],[11,"into","cranelift_codegen::ir::immediates","",68,[[],["i64"]]],[11,"into","","",69,[[],["u64"]]],[11,"into","","",140,[[],["u32"]]],[11,"into","","",140,[[],["i64"]]],[11,"into","","",70,[[],["i32"]]],[11,"into","","",70,[[],["i64"]]],[11,"into","cranelift_codegen::verifier","",126,[[],[["verifiererror"],["vec",["verifiererror"]]]]],[11,"into","","",126,[[],["verifierresult"]]],[11,"clone","cranelift_codegen::binemit","",7,[[["self"]],["stackmap"]]],[11,"clone","","",6,[[["self"]],["reloc"]]],[11,"clone","cranelift_codegen::cursor","",15,[[["self"]],["cursorposition"]]],[11,"clone","cranelift_codegen::ir::constant","",46,[[["self"]],["constantdata"]]],[11,"clone","","",47,[[["self"]],["constantpoolentry"]]],[11,"clone","","",48,[[["self"]],["constantpool"]]],[11,"clone","cranelift_codegen::ir::dfg","",49,[[["self"]],["dataflowgraph"]]],[11,"clone","","",50,[[["self"]],["valuedef"]]],[11,"clone","cranelift_codegen::ir::entities","",52,[[["self"]],["ebb"]]],[11,"clone","","",53,[[["self"]],["value"]]],[11,"clone","","",54,[[["self"]],["inst"]]],[11,"clone","","",55,[[["self"]],["stackslot"]]],[11,"clone","","",56,[[["self"]],["globalvalue"]]],[11,"clone","","",57,[[["self"]],["constant"]]],[11,"clone","","",58,[[["self"]],["immediate"]]],[11,"clone","","",59,[[["self"]],["jumptable"]]],[11,"clone","","",60,[[["self"]],["funcref"]]],[11,"clone","","",61,[[["self"]],["sigref"]]],[11,"clone","","",62,[[["self"]],["heap"]]],[11,"clone","","",63,[[["self"]],["table"]]],[11,"clone","","",51,[[["self"]],["anyentity"]]],[11,"clone","cranelift_codegen::ir","",27,[[["self"]],["signature"]]],[11,"clone","","",25,[[["self"]],["abiparam"]]],[11,"clone","","",32,[[["self"]],["argumentextension"]]],[11,"clone","","",33,[[["self"]],["argumentpurpose"]]],[11,"clone","","",26,[[["self"]],["extfuncdata"]]],[11,"clone","","",34,[[["self"]],["externalname"]]],[11,"clone","","",35,[[["self"]],["framelayoutchange"]]],[11,"clone","","",28,[[["self"]],["framelayout"]]],[11,"clone","cranelift_codegen::ir::function","",64,[[["self"]],["function"]]],[11,"clone","cranelift_codegen::ir","",36,[[["self"]],["globalvaluedata"]]],[11,"clone","","",29,[[["self"]],["heapdata"]]],[11,"clone","","",37,[[["self"]],["heapstyle"]]],[11,"clone","cranelift_codegen::ir::immediates","",68,[[["self"]],["imm64"]]],[11,"clone","","",69,[[["self"]],["uimm64"]]],[11,"clone","","",140,[[["self"]],["uimm32"]]],[11,"clone","","",66,[[["self"]],["v128imm"]]],[11,"clone","","",70,[[["self"]],["offset32"]]],[11,"clone","","",71,[[["self"]],["ieee32"]]],[11,"clone","","",72,[[["self"]],["ieee64"]]],[11,"clone","cranelift_codegen::ir::instructions","",74,[[["self"]],["instructionformat"]]],[11,"clone","","",75,[[["self"]],["instructiondata"]]],[11,"clone","","",76,[[["self"]],["opcode"]]],[11,"clone","","",80,[[["self"]],["variableargs"]]],[11,"clone","","",81,[[["self"]],["opcodeconstraints"]]],[11,"clone","","",73,[[["self"]],["valuetypeset"]]],[11,"clone","","",79,[[["self"]],["resolvedconstraint"]]],[11,"clone","cranelift_codegen::ir::jumptable","",82,[[["self"]],["jumptabledata"]]],[11,"clone","cranelift_codegen::ir::layout","",83,[[["self"]],["layout"]]],[11,"clone","cranelift_codegen::ir","",38,[[["self"]],["libcall"]]],[11,"clone","","",84,[[["self"]],["memflags"]]],[11,"clone","","",135,[[["self"]],["programpoint"]]],[11,"clone","","",39,[[["self"]],["expandedprogrampoint"]]],[11,"clone","","",85,[[["self"]],["sourceloc"]]],[11,"clone","cranelift_codegen::ir::stackslot","",88,[[["self"]],["stackslotkind"]]],[11,"clone","","",86,[[["self"]],["stackslotdata"]]],[11,"clone","","",87,[[["self"]],["stackslots"]]],[11,"clone","cranelift_codegen::ir","",30,[[["self"]],["tabledata"]]],[11,"clone","","",40,[[["self"]],["trapcode"]]],[11,"clone","cranelift_codegen::ir::types","",89,[[["self"]],["type"]]],[11,"clone","cranelift_codegen::ir","",42,[[["self"]],["valueloc"]]],[11,"clone","","",41,[[["self"]],["argumentloc"]]],[11,"clone","","",94,[[["self"]],["valuelabel"]]],[11,"clone","","",31,[[["self"]],["valuelabelstart"]]],[11,"clone","","",43,[[["self"]],["valuelabelassignments"]]],[11,"clone","cranelift_codegen::isa","",102,[[["self"]],["callconv"]]],[11,"clone","","",103,[[["self"]],["constraintkind"]]],[11,"clone","","",97,[[["self"]],["recipeconstraints"]]],[11,"clone","","",95,[[["self"]],["branchrange"]]],[11,"clone","","",106,[[["self"]],["encoding"]]],[11,"clone","","",98,[[["self"]],["encinfo"]]],[11,"clone","cranelift_codegen::isa::registers","",143,[[["self"]],["regclassindex"]]],[11,"clone","","",109,[[["self"]],["reginfo"]]],[11,"clone","cranelift_codegen::isa","",100,[[["self"]],["stackref"]]],[11,"clone","","",104,[[["self"]],["stackbase"]]],[11,"clone","","",99,[[["self"]],["stackbasemask"]]],[11,"clone","","",105,[[["self"]],["lookuperror"]]],[11,"clone","","",101,[[["self"]],["targetfrontendconfig"]]],[11,"clone","cranelift_codegen::loop_analysis","",112,[[["self"]],["loop"]]],[11,"clone","cranelift_codegen::settings","",122,[[["self"]],["builder"]]],[11,"clone","","",123,[[["self"]],["predicateview"]]],[11,"clone","cranelift_codegen::settings::detail","",120,[[["self"]],["detail"]]],[11,"clone","cranelift_codegen::settings","",124,[[["self"]],["flags"]]],[11,"clone","","",116,[[["self"]],["optlevel"]]],[11,"clone","","",117,[[["self"]],["libcallcallconv"]]],[11,"clone","","",114,[[["self"]],["flagsorisa"]]],[11,"clone","cranelift_codegen::verifier","",125,[[["self"]],["verifiererror"]]],[11,"clone","","",126,[[["self"]],["verifiererrors"]]],[11,"clone","cranelift_codegen::binemit","",128,[[["self"]],["regdiversions"]]],[11,"clone","cranelift_codegen","",2,[[["self"]],["valuelocrange"]]],[11,"default","cranelift_codegen::ir::constant","",46,[[],["constantdata"]]],[11,"default","cranelift_codegen::ir","",34,[[],["self"]]],[11,"default","cranelift_codegen::ir::function","",65,[[],["displayfunctionannotations"]]],[11,"default","cranelift_codegen::ir::instructions","",80,[[],["self"]]],[11,"default","cranelift_codegen::ir","",85,[[],["self"]]],[11,"default","cranelift_codegen::ir::types","",89,[[],["self"]]],[11,"default","cranelift_codegen::ir","",42,[[],["self"]]],[11,"default","","",41,[[],["self"]]],[11,"default","cranelift_codegen::isa","",106,[[],["self"]]],[11,"default","cranelift_codegen::timing","",145,[[],["self"]]],[11,"default","cranelift_codegen::verifier","",126,[[],["verifiererrors"]]],[11,"source","cranelift_codegen","",3,[[["self"]],[["error"],["option",["error"]]]]],[11,"new","cranelift_codegen::ir::entities","",52,[[["usize"]],["self"]]],[11,"index","","",52,[[],["usize"]]],[11,"new","","",53,[[["usize"]],["self"]]],[11,"index","","",53,[[],["usize"]]],[11,"new","","",54,[[["usize"]],["self"]]],[11,"index","","",54,[[],["usize"]]],[11,"new","","",55,[[["usize"]],["self"]]],[11,"index","","",55,[[],["usize"]]],[11,"new","","",56,[[["usize"]],["self"]]],[11,"index","","",56,[[],["usize"]]],[11,"new","","",57,[[["usize"]],["self"]]],[11,"index","","",57,[[],["usize"]]],[11,"new","","",58,[[["usize"]],["self"]]],[11,"index","","",58,[[],["usize"]]],[11,"new","","",59,[[["usize"]],["self"]]],[11,"index","","",59,[[],["usize"]]],[11,"new","","",60,[[["usize"]],["self"]]],[11,"index","","",60,[[],["usize"]]],[11,"new","","",61,[[["usize"]],["self"]]],[11,"index","","",61,[[],["usize"]]],[11,"new","","",62,[[["usize"]],["self"]]],[11,"index","","",62,[[],["usize"]]],[11,"new","","",63,[[["usize"]],["self"]]],[11,"index","","",63,[[],["usize"]]],[11,"new","cranelift_codegen::ir","",94,[[["usize"]],["self"]]],[11,"index","","",94,[[],["usize"]]],[11,"new","cranelift_codegen::isa::registers","",143,[[["usize"]],["self"]]],[11,"index","","",143,[[],["usize"]]],[11,"new","cranelift_codegen::loop_analysis","",112,[[["usize"]],["self"]]],[11,"index","","",112,[[],["usize"]]],[11,"reserved_value","cranelift_codegen::ir::entities","",52,[[],["ebb"]]],[11,"reserved_value","","",53,[[],["value"]]],[11,"reserved_value","","",54,[[],["inst"]]],[11,"reserved_value","","",55,[[],["stackslot"]]],[11,"reserved_value","","",56,[[],["globalvalue"]]],[11,"reserved_value","","",57,[[],["constant"]]],[11,"reserved_value","","",58,[[],["immediate"]]],[11,"reserved_value","","",59,[[],["jumptable"]]],[11,"reserved_value","","",60,[[],["funcref"]]],[11,"reserved_value","","",61,[[],["sigref"]]],[11,"reserved_value","","",62,[[],["heap"]]],[11,"reserved_value","","",63,[[],["table"]]],[11,"reserved_value","cranelift_codegen::ir","",94,[[],["valuelabel"]]],[11,"reserved_value","cranelift_codegen::loop_analysis","",112,[[],["loop"]]],[11,"is_none","cranelift_codegen::packed_option","Returns `true` if the packed option is a `None` value.",129,[[["self"]],["bool"]]],[11,"is_some","","Returns `true` if the packed option is a `Some` value.",129,[[["self"]],["bool"]]],[11,"expand","","Expand the packed option into a normal `Option`.",129,[[],["option"]]],[11,"map","","Maps a `PackedOption<T>` to `Option<U>` by applying a…",129,[[["f"]],["option"]]],[11,"unwrap","","Unwrap a packed `Some` value or panic.",129,[[],["t"]]],[11,"expect","","Unwrap a packed `Some` value or panic.",129,[[["str"]],["t"]]],[11,"take","","Takes the value out of the packed option, leaving a `None`…",129,[[["self"]],["option"]]],[11,"without_equal","cranelift_codegen::ir::condcodes","Get the corresponding IntCC with the equal component…",23,[[],["intcc"]]],[11,"unsigned","","Get the corresponding IntCC with the signed component…",23,[[],["intcc"]]],[11,"to_static_str","","Get the corresponding string condition code for the IntCC…",23,[[],["str"]]],[11,"jump","cranelift_codegen::ir","Jump.",90,[[["ebb"]],["inst"]]],[11,"fallthrough","","Fall through to the next EBB.",90,[[["ebb"]],["inst"]]],[11,"brz","","Branch when zero.",90,[[["value"],["ebb"]],["inst"]]],[11,"brnz","","Branch when non-zero.",90,[[["value"],["ebb"]],["inst"]]],[11,"br_icmp","","Compare scalar integers and branch.",90,[[["into",["intcc"]],["value"],["ebb"],["intcc"]],["inst"]]],[11,"brif","","Branch when condition is true in integer CPU flags.",90,[[["into",["intcc"]],["value"],["ebb"],["intcc"]],["inst"]]],[11,"brff","","Branch when condition is true in floating point CPU flags.",90,[[["floatcc"],["value"],["ebb"],["into",["floatcc"]]],["inst"]]],[11,"br_table","","Indirect branch via jump table.",90,[[["value"],["ebb"],["jumptable"]],["inst"]]],[11,"jump_table_entry","","Get an entry from a jump table.",90,[[["jumptable"],["value"],["into",["uimm8"]],["uimm8"]],["value"]]],[11,"jump_table_base","","Get the absolute base address of a jump table.",90,[[["jumptable"],["type"]],["value"]]],[11,"indirect_jump_table_br","","Branch indirectly via a jump table entry.",90,[[["value"],["jumptable"]],["inst"]]],[11,"debugtrap","","Encodes an assembly debug trap.",90,[[],["inst"]]],[11,"trap","","Terminate execution unconditionally.",90,[[["trapcode"],["into",["trapcode"]]],["inst"]]],[11,"trapz","","Trap when zero.",90,[[["trapcode"],["value"],["into",["trapcode"]]],["inst"]]],[11,"resumable_trap","","A resumable trap.",90,[[["trapcode"],["into",["trapcode"]]],["inst"]]],[11,"trapnz","","Trap when non-zero.",90,[[["trapcode"],["value"],["into",["trapcode"]]],["inst"]]],[11,"trapif","","Trap when condition is true in integer CPU flags.",90,[[["into",["intcc"]],["value"],["into",["trapcode"]],["intcc"],["trapcode"]],["inst"]]],[11,"trapff","","Trap when condition is true in floating point CPU flags.",90,[[["floatcc"],["value"],["into",["trapcode"]],["trapcode"],["into",["floatcc"]]],["inst"]]],[11,"return_","","Return from the function.",90,[[],["inst"]]],[11,"fallthrough_return","","Return from the function by fallthrough.",90,[[],["inst"]]],[11,"call","","Direct function call.",90,[[["funcref"]],["inst"]]],[11,"call_indirect","","Indirect function call.",90,[[["sigref"],["value"]],["inst"]]],[11,"func_addr","","Get the address of a function.",90,[[["funcref"],["type"]],["value"]]],[11,"load","","Load from memory at `p + Offset`.",90,[[["into",["memflags"]],["memflags"],["value"],["type"],["into",["offset32"]],["offset32"]],["value"]]],[11,"load_complex","","Load from memory at `sum(args) + Offset`.",90,[[["into",["memflags"]],["memflags"],["type"],["into",["offset32"]],["offset32"]],["value"]]],[11,"store","","Store `x` to memory at `p + Offset`.",90,[[["into",["memflags"]],["memflags"],["value"],["into",["offset32"]],["offset32"]],["inst"]]],[11,"store_complex","","Store `x` to memory at `sum(args) + Offset`.",90,[[["into",["memflags"]],["memflags"],["value"],["into",["offset32"]],["offset32"]],["inst"]]],[11,"uload8","","Load 8 bits from memory at `p + Offset` and zero-extend.",90,[[["into",["memflags"]],["memflags"],["value"],["type"],["into",["offset32"]],["offset32"]],["value"]]],[11,"uload8_complex","","Load 8 bits from memory at `sum(args) + Offset` and…",90,[[["into",["memflags"]],["memflags"],["type"],["into",["offset32"]],["offset32"]],["value"]]],[11,"sload8","","Load 8 bits from memory at `p + Offset` and sign-extend.",90,[[["into",["memflags"]],["memflags"],["value"],["type"],["into",["offset32"]],["offset32"]],["value"]]],[11,"sload8_complex","","Load 8 bits from memory at `sum(args) + Offset` and…",90,[[["into",["memflags"]],["memflags"],["type"],["into",["offset32"]],["offset32"]],["value"]]],[11,"istore8","","Store the low 8 bits of `x` to memory at `p + Offset`.",90,[[["into",["memflags"]],["memflags"],["value"],["into",["offset32"]],["offset32"]],["inst"]]],[11,"istore8_complex","","Store the low 8 bits of `x` to memory at `sum(args) +…",90,[[["into",["memflags"]],["memflags"],["value"],["into",["offset32"]],["offset32"]],["inst"]]],[11,"uload16","","Load 16 bits from memory at `p + Offset` and zero-extend.",90,[[["into",["memflags"]],["memflags"],["value"],["type"],["into",["offset32"]],["offset32"]],["value"]]],[11,"uload16_complex","","Load 16 bits from memory at `sum(args) + Offset` and…",90,[[["into",["memflags"]],["memflags"],["type"],["into",["offset32"]],["offset32"]],["value"]]],[11,"sload16","","Load 16 bits from memory at `p + Offset` and sign-extend.",90,[[["into",["memflags"]],["memflags"],["value"],["type"],["into",["offset32"]],["offset32"]],["value"]]],[11,"sload16_complex","","Load 16 bits from memory at `sum(args) + Offset` and…",90,[[["into",["memflags"]],["memflags"],["type"],["into",["offset32"]],["offset32"]],["value"]]],[11,"istore16","","Store the low 16 bits of `x` to memory at `p + Offset`.",90,[[["into",["memflags"]],["memflags"],["value"],["into",["offset32"]],["offset32"]],["inst"]]],[11,"istore16_complex","","Store the low 16 bits of `x` to memory at `sum(args) +…",90,[[["into",["memflags"]],["memflags"],["value"],["into",["offset32"]],["offset32"]],["inst"]]],[11,"uload32","","Load 32 bits from memory at `p + Offset` and zero-extend.",90,[[["into",["memflags"]],["memflags"],["value"],["into",["offset32"]],["offset32"]],["value"]]],[11,"uload32_complex","","Load 32 bits from memory at `sum(args) + Offset` and…",90,[[["into",["memflags"]],["memflags"],["into",["offset32"]],["offset32"]],["value"]]],[11,"sload32","","Load 32 bits from memory at `p + Offset` and sign-extend.",90,[[["into",["memflags"]],["memflags"],["value"],["into",["offset32"]],["offset32"]],["value"]]],[11,"sload32_complex","","Load 32 bits from memory at `sum(args) + Offset` and…",90,[[["into",["memflags"]],["memflags"],["into",["offset32"]],["offset32"]],["value"]]],[11,"istore32","","Store the low 32 bits of `x` to memory at `p + Offset`.",90,[[["into",["memflags"]],["memflags"],["value"],["into",["offset32"]],["offset32"]],["inst"]]],[11,"istore32_complex","","Store the low 32 bits of `x` to memory at `sum(args) +…",90,[[["into",["memflags"]],["memflags"],["value"],["into",["offset32"]],["offset32"]],["inst"]]],[11,"stack_load","","Load a value from a stack slot at the constant offset.",90,[[["stackslot"],["type"],["into",["offset32"]],["offset32"]],["value"]]],[11,"stack_store","","Store a value to a stack slot at a constant offset.",90,[[["value"],["stackslot"],["into",["offset32"]],["offset32"]],["inst"]]],[11,"stack_addr","","Get the address of a stack slot.",90,[[["stackslot"],["type"],["into",["offset32"]],["offset32"]],["value"]]],[11,"global_value","","Compute the value of global GV.",90,[[["globalvalue"],["type"]],["value"]]],[11,"symbol_value","","Compute the value of global GV, which is a symbolic value.",90,[[["globalvalue"],["type"]],["value"]]],[11,"heap_addr","","Bounds check and compute absolute address of heap memory.",90,[[["value"],["uimm32"],["type"],["heap"],["into",["uimm32"]]],["value"]]],[11,"get_pinned_reg","","Gets the content of the pinned register, when it's enabled.",90,[[["type"]],["value"]]],[11,"set_pinned_reg","","Sets the content of the pinned register, when it's enabled.",90,[[["value"]],["inst"]]],[11,"table_addr","","Bounds check and compute absolute address of a table entry.",90,[[["table"],["value"],["type"],["into",["offset32"]],["offset32"]],["value"]]],[11,"iconst","","Integer constant.",90,[[["into",["imm64"]],["imm64"],["type"]],["value"]]],[11,"f32const","","Floating point constant.",90,[[["into",["ieee32"]],["ieee32"]],["value"]]],[11,"f64const","","Floating point constant.",90,[[["into",["ieee64"]],["ieee64"]],["value"]]],[11,"bconst","","Boolean constant.",90,[[["bool"],["into",["bool"]],["type"]],["value"]]],[11,"vconst","","SIMD vector constant.",90,[[["into",["constant"]],["constant"],["type"]],["value"]]],[11,"shuffle","","SIMD vector shuffle.",90,[[["immediate"],["value"],["into",["immediate"]]],["value"]]],[11,"null","","Null constant value for reference types.",90,[[["type"]],["value"]]],[11,"nop","","Just a dummy instruction.",90,[[],["inst"]]],[11,"select","","Conditional select.",90,[[["value"]],["value"]]],[11,"selectif","","Conditional select, dependent on integer condition codes.",90,[[["into",["intcc"]],["value"],["type"],["intcc"]],["value"]]],[11,"bitselect","","Conditional select of bits.",90,[[["value"]],["value"]]],[11,"copy","","Register-register copy.",90,[[["value"]],["value"]]],[11,"spill","","Spill a register value to a stack slot.",90,[[["value"]],["value"]]],[11,"fill","","Load a register value from a stack slot.",90,[[["value"]],["value"]]],[11,"fill_nop","","This is identical to `fill`, except it has no encoding,…",90,[[["value"]],["value"]]],[11,"regmove","","Temporarily divert `x` from `src` to `dst`.",90,[[["value"],["regunit"],["into",["regunit"]]],["inst"]]],[11,"copy_special","","Copies the contents of ''src'' register to ''dst'' register.",90,[[["regunit"],["into",["regunit"]]],["inst"]]],[11,"copy_to_ssa","","Copies the contents of ''src'' register to ''a'' SSA name.",90,[[["into",["regunit"]],["regunit"],["type"]],["value"]]],[11,"copy_nop","","Stack-slot-to-the-same-stack-slot copy, which is…",90,[[["value"]],["value"]]],[11,"adjust_sp_down","","Subtracts `delta` offset value from the stack pointer…",90,[[["value"]],["inst"]]],[11,"adjust_sp_up_imm","","Adds `Offset` immediate offset value to the stack pointer…",90,[[["into",["imm64"]],["imm64"]],["inst"]]],[11,"adjust_sp_down_imm","","Subtracts `Offset` immediate offset value from the stack…",90,[[["into",["imm64"]],["imm64"]],["inst"]]],[11,"ifcmp_sp","","Compare `addr` with the stack pointer and set the CPU flags.",90,[[["value"]],["value"]]],[11,"regspill","","Temporarily divert `x` from `src` to `SS`.",90,[[["value"],["regunit"],["into",["regunit"]],["stackslot"]],["inst"]]],[11,"regfill","","Temporarily divert `x` from `SS` to `dst`.",90,[[["value"],["regunit"],["stackslot"],["into",["regunit"]]],["inst"]]],[11,"safepoint","","This instruction will provide live reference values at a…",90,[[],["inst"]]],[11,"vsplit","","Split a vector into two halves.",90,[[["value"]]]],[11,"vconcat","","Vector concatenation.",90,[[["value"]],["value"]]],[11,"vselect","","Vector lane select.",90,[[["value"]],["value"]]],[11,"vany_true","","Reduce a vector to a scalar boolean.",90,[[["value"]],["value"]]],[11,"vall_true","","Reduce a vector to a scalar boolean.",90,[[["value"]],["value"]]],[11,"splat","","Vector splat.",90,[[["value"],["type"]],["value"]]],[11,"insertlane","","Insert `y` as lane `Idx` in x.",90,[[["value"],["into",["uimm8"]],["uimm8"]],["value"]]],[11,"extractlane","","Extract lane `Idx` from `x`.",90,[[["value"],["into",["uimm8"]],["uimm8"]],["value"]]],[11,"icmp","","Integer comparison.",90,[[["into",["intcc"]],["value"],["intcc"]],["value"]]],[11,"icmp_imm","","Compare scalar integer to a constant.",90,[[["into",["intcc"]],["value"],["intcc"],["into",["imm64"]],["imm64"]],["value"]]],[11,"ifcmp","","Compare scalar integers and return flags.",90,[[["value"]],["value"]]],[11,"ifcmp_imm","","Compare scalar integer to a constant and return flags.",90,[[["value"],["into",["imm64"]],["imm64"]],["value"]]],[11,"iadd","","Wrapping integer addition: `a := x + y \\pmod{2^B}`.",90,[[["value"]],["value"]]],[11,"uadd_sat","","Add with unsigned saturation.",90,[[["value"]],["value"]]],[11,"sadd_sat","","Add with signed saturation.",90,[[["value"]],["value"]]],[11,"isub","","Wrapping integer subtraction: `a := x - y \\pmod{2^B}`.",90,[[["value"]],["value"]]],[11,"usub_sat","","Subtract with unsigned saturation.",90,[[["value"]],["value"]]],[11,"ssub_sat","","Subtract with signed saturation.",90,[[["value"]],["value"]]],[11,"ineg","","Integer negation: `a := -x \\pmod{2^B}`.",90,[[["value"]],["value"]]],[11,"imul","","Wrapping integer multiplication: `a := x y \\pmod{2^B}`.",90,[[["value"]],["value"]]],[11,"umulhi","","Unsigned integer multiplication, producing the high half…",90,[[["value"]],["value"]]],[11,"smulhi","","Signed integer multiplication, producing the high half of…",90,[[["value"]],["value"]]],[11,"udiv","","Unsigned integer division: `a := \\lfloor {x \\over y}…",90,[[["value"]],["value"]]],[11,"sdiv","","Signed integer division rounded toward zero: `a :=…",90,[[["value"]],["value"]]],[11,"urem","","Unsigned integer remainder.",90,[[["value"]],["value"]]],[11,"srem","","Signed integer remainder. The result has the sign of the…",90,[[["value"]],["value"]]],[11,"iadd_imm","","Add immediate integer.",90,[[["value"],["into",["imm64"]],["imm64"]],["value"]]],[11,"imul_imm","","Integer multiplication by immediate constant.",90,[[["value"],["into",["imm64"]],["imm64"]],["value"]]],[11,"udiv_imm","","Unsigned integer division by an immediate constant.",90,[[["value"],["into",["imm64"]],["imm64"]],["value"]]],[11,"sdiv_imm","","Signed integer division by an immediate constant.",90,[[["value"],["into",["imm64"]],["imm64"]],["value"]]],[11,"urem_imm","","Unsigned integer remainder with immediate divisor.",90,[[["value"],["into",["imm64"]],["imm64"]],["value"]]],[11,"srem_imm","","Signed integer remainder with immediate divisor.",90,[[["value"],["into",["imm64"]],["imm64"]],["value"]]],[11,"irsub_imm","","Immediate reverse wrapping subtraction: `a := Y - x…",90,[[["value"],["into",["imm64"]],["imm64"]],["value"]]],[11,"iadd_cin","","Add integers with carry in.",90,[[["value"]],["value"]]],[11,"iadd_ifcin","","Add integers with carry in.",90,[[["value"]],["value"]]],[11,"iadd_cout","","Add integers with carry out.",90,[[["value"]]]],[11,"iadd_ifcout","","Add integers with carry out.",90,[[["value"]]]],[11,"iadd_carry","","Add integers with carry in and out.",90,[[["value"]]]],[11,"iadd_ifcarry","","Add integers with carry in and out.",90,[[["value"]]]],[11,"isub_bin","","Subtract integers with borrow in.",90,[[["value"]],["value"]]],[11,"isub_ifbin","","Subtract integers with borrow in.",90,[[["value"]],["value"]]],[11,"isub_bout","","Subtract integers with borrow out.",90,[[["value"]]]],[11,"isub_ifbout","","Subtract integers with borrow out.",90,[[["value"]]]],[11,"isub_borrow","","Subtract integers with borrow in and out.",90,[[["value"]]]],[11,"isub_ifborrow","","Subtract integers with borrow in and out.",90,[[["value"]]]],[11,"band","","Bitwise and.",90,[[["value"]],["value"]]],[11,"bor","","Bitwise or.",90,[[["value"]],["value"]]],[11,"bxor","","Bitwise xor.",90,[[["value"]],["value"]]],[11,"bnot","","Bitwise not.",90,[[["value"]],["value"]]],[11,"band_not","","Bitwise and not.",90,[[["value"]],["value"]]],[11,"bor_not","","Bitwise or not.",90,[[["value"]],["value"]]],[11,"bxor_not","","Bitwise xor not.",90,[[["value"]],["value"]]],[11,"band_imm","","Bitwise and with immediate.",90,[[["value"],["into",["imm64"]],["imm64"]],["value"]]],[11,"bor_imm","","Bitwise or with immediate.",90,[[["value"],["into",["imm64"]],["imm64"]],["value"]]],[11,"bxor_imm","","Bitwise xor with immediate.",90,[[["value"],["into",["imm64"]],["imm64"]],["value"]]],[11,"rotl","","Rotate left.",90,[[["value"]],["value"]]],[11,"rotr","","Rotate right.",90,[[["value"]],["value"]]],[11,"rotl_imm","","Rotate left by immediate.",90,[[["value"],["into",["imm64"]],["imm64"]],["value"]]],[11,"rotr_imm","","Rotate right by immediate.",90,[[["value"],["into",["imm64"]],["imm64"]],["value"]]],[11,"ishl","","Integer shift left. Shift the bits in `x` towards the MSB…",90,[[["value"]],["value"]]],[11,"ushr","","Unsigned shift right. Shift bits in `x` towards the LSB by…",90,[[["value"]],["value"]]],[11,"sshr","","Signed shift right. Shift bits in `x` towards the LSB by…",90,[[["value"]],["value"]]],[11,"ishl_imm","","Integer shift left by immediate.",90,[[["value"],["into",["imm64"]],["imm64"]],["value"]]],[11,"ushr_imm","","Unsigned shift right by immediate.",90,[[["value"],["into",["imm64"]],["imm64"]],["value"]]],[11,"sshr_imm","","Signed shift right by immediate.",90,[[["value"],["into",["imm64"]],["imm64"]],["value"]]],[11,"bitrev","","Reverse the bits of a integer.",90,[[["value"]],["value"]]],[11,"clz","","Count leading zero bits.",90,[[["value"]],["value"]]],[11,"cls","","Count leading sign bits.",90,[[["value"]],["value"]]],[11,"ctz","","Count trailing zeros.",90,[[["value"]],["value"]]],[11,"popcnt","","Population count",90,[[["value"]],["value"]]],[11,"fcmp","","Floating point comparison.",90,[[["floatcc"],["value"],["into",["floatcc"]]],["value"]]],[11,"ffcmp","","Floating point comparison returning flags.",90,[[["value"]],["value"]]],[11,"fadd","","Floating point addition.",90,[[["value"]],["value"]]],[11,"fsub","","Floating point subtraction.",90,[[["value"]],["value"]]],[11,"fmul","","Floating point multiplication.",90,[[["value"]],["value"]]],[11,"fdiv","","Floating point division.",90,[[["value"]],["value"]]],[11,"sqrt","","Floating point square root.",90,[[["value"]],["value"]]],[11,"fma","","Floating point fused multiply-and-add.",90,[[["value"]],["value"]]],[11,"fneg","","Floating point negation.",90,[[["value"]],["value"]]],[11,"fabs","","Floating point absolute value.",90,[[["value"]],["value"]]],[11,"fcopysign","","Floating point copy sign.",90,[[["value"]],["value"]]],[11,"fmin","","Floating point minimum, propagating NaNs.",90,[[["value"]],["value"]]],[11,"fmax","","Floating point maximum, propagating NaNs.",90,[[["value"]],["value"]]],[11,"ceil","","Round floating point round to integral, towards positive…",90,[[["value"]],["value"]]],[11,"floor","","Round floating point round to integral, towards negative…",90,[[["value"]],["value"]]],[11,"trunc","","Round floating point round to integral, towards zero.",90,[[["value"]],["value"]]],[11,"nearest","","Round floating point round to integral, towards nearest…",90,[[["value"]],["value"]]],[11,"is_null","","Reference verification.",90,[[["value"]],["value"]]],[11,"trueif","","Test integer CPU flags for a specific condition.",90,[[["into",["intcc"]],["intcc"],["value"]],["value"]]],[11,"trueff","","Test floating point CPU flags for a specific condition.",90,[[["floatcc"],["value"],["into",["floatcc"]]],["value"]]],[11,"bitcast","","Reinterpret the bits in `x` as a different type.",90,[[["value"],["type"]],["value"]]],[11,"raw_bitcast","","Cast the bits in `x` as a different type of the same bit…",90,[[["value"],["type"]],["value"]]],[11,"scalar_to_vector","","Scalar To Vector -- move a value out of a scalar register…",90,[[["value"],["type"]],["value"]]],[11,"breduce","","Convert `x` to a smaller boolean type in the…",90,[[["value"],["type"]],["value"]]],[11,"bextend","","Convert `x` to a larger boolean type in the…",90,[[["value"],["type"]],["value"]]],[11,"bint","","Convert `x` to an integer.",90,[[["value"],["type"]],["value"]]],[11,"bmask","","Convert `x` to an integer mask.",90,[[["value"],["type"]],["value"]]],[11,"ireduce","","Convert `x` to a smaller integer type by dropping high bits.",90,[[["value"],["type"]],["value"]]],[11,"uextend","","Convert `x` to a larger integer type by zero-extending.",90,[[["value"],["type"]],["value"]]],[11,"sextend","","Convert `x` to a larger integer type by sign-extending.",90,[[["value"],["type"]],["value"]]],[11,"fpromote","","Convert `x` to a larger floating point format.",90,[[["value"],["type"]],["value"]]],[11,"fdemote","","Convert `x` to a smaller floating point format.",90,[[["value"],["type"]],["value"]]],[11,"fcvt_to_uint","","Convert floating point to unsigned integer.",90,[[["value"],["type"]],["value"]]],[11,"fcvt_to_uint_sat","","Convert floating point to unsigned integer as fcvt_to_uint…",90,[[["value"],["type"]],["value"]]],[11,"fcvt_to_sint","","Convert floating point to signed integer.",90,[[["value"],["type"]],["value"]]],[11,"fcvt_to_sint_sat","","Convert floating point to signed integer as fcvt_to_sint…",90,[[["value"],["type"]],["value"]]],[11,"fcvt_from_uint","","Convert unsigned integer to floating point.",90,[[["value"],["type"]],["value"]]],[11,"fcvt_from_sint","","Convert signed integer to floating point.",90,[[["value"],["type"]],["value"]]],[11,"isplit","","Split an integer into low and high parts.",90,[[["value"]]]],[11,"iconcat","","Concatenate low and high bits to form a larger integer type.",90,[[["value"]],["value"]]],[11,"x86_udivmodx","","Extended unsigned division.",90,[[["value"]]]],[11,"x86_sdivmodx","","Extended signed division.",90,[[["value"]]]],[11,"x86_umulx","","Unsigned integer multiplication, producing a double-length…",90,[[["value"]]]],[11,"x86_smulx","","Signed integer multiplication, producing a double-length…",90,[[["value"]]]],[11,"x86_cvtt2si","","Convert with truncation floating point to signed integer.",90,[[["value"],["type"]],["value"]]],[11,"x86_fmin","","Floating point minimum with x86 semantics.",90,[[["value"]],["value"]]],[11,"x86_fmax","","Floating point maximum with x86 semantics.",90,[[["value"]],["value"]]],[11,"x86_push","","Pushes a value onto the stack.",90,[[["value"]],["inst"]]],[11,"x86_pop","","Pops a value from the stack.",90,[[["type"]],["value"]]],[11,"x86_bsr","","Bit Scan Reverse -- returns the bit-index of the most…",90,[[["value"]]]],[11,"x86_bsf","","Bit Scan Forwards -- returns the bit-index of the least…",90,[[["value"]]]],[11,"x86_pshufd","","Packed Shuffle Doublewords -- copies data from either…",90,[[["value"],["into",["uimm8"]],["uimm8"]],["value"]]],[11,"x86_pshufb","","Packed Shuffle Bytes -- re-orders data in an extended…",90,[[["value"]],["value"]]],[11,"x86_pextr","","Extract lane `Idx` from `x`. The lane index, `Idx`, is an…",90,[[["value"],["into",["uimm8"]],["uimm8"]],["value"]]],[11,"x86_pinsr","","Insert `y` into `x` at lane `Idx`. The lane index, `Idx`,…",90,[[["value"],["into",["uimm8"]],["uimm8"]],["value"]]],[11,"x86_insertps","","Insert a lane of `y` into `x` at using `Idx` to encode…",90,[[["value"],["into",["uimm8"]],["uimm8"]],["value"]]],[11,"x86_movsd","","Move the low 64 bits of the float vector `y` to the low 64…",90,[[["value"]],["value"]]],[11,"x86_movlhps","","Move the low 64 bits of the float vector `y` to the high…",90,[[["value"]],["value"]]],[11,"x86_psll","","Shift Packed Data Left Logical -- This implements the…",90,[[["value"]],["value"]]],[11,"x86_psrl","","Shift Packed Data Right Logical -- This implements the…",90,[[["value"]],["value"]]],[11,"x86_psra","","Shift Packed Data Right Arithmetic -- This implements the…",90,[[["value"]],["value"]]],[11,"x86_ptest","","Logical Compare -- PTEST will set the ZF flag if all bits…",90,[[["value"]],["value"]]],[11,"x86_pmaxs","","Maximum of Packed Signed Integers -- Compare signed…",90,[[["value"]],["value"]]],[11,"x86_pmaxu","","Maximum of Packed Unsigned Integers -- Compare unsigned…",90,[[["value"]],["value"]]],[11,"x86_pmins","","Minimum of Packed Signed Integers -- Compare signed…",90,[[["value"]],["value"]]],[11,"x86_pminu","","Minimum of Packed Unsigned Integers -- Compare unsigned…",90,[[["value"]],["value"]]],[11,"Binary","","Binary(imms=(), vals=2)",90,[[["opcode"],["type"],["value"]]]],[11,"BinaryImm","","BinaryImm(imms=(imm: ir::immediates::Imm64), vals=1)",90,[[["value"],["opcode"],["type"],["imm64"]]]],[11,"Branch","","Branch(imms=(destination: ir::Ebb), vals=1)",90,[[["ebb"],["valuelist"],["opcode"],["type"]]]],[11,"BranchFloat","","BranchFloat(imms=(cond: ir::condcodes::FloatCC,…",90,[[["floatcc"],["ebb"],["valuelist"],["opcode"],["type"]]]],[11,"BranchIcmp","","BranchIcmp(imms=(cond: ir::condcodes::IntCC, destination:…",90,[[["ebb"],["valuelist"],["intcc"],["opcode"],["type"]]]],[11,"BranchInt","","BranchInt(imms=(cond: ir::condcodes::IntCC, destination:…",90,[[["ebb"],["valuelist"],["intcc"],["opcode"],["type"]]]],[11,"BranchTable","","BranchTable(imms=(destination: ir::Ebb, table:…",90,[[["value"],["ebb"],["opcode"],["type"],["jumptable"]]]],[11,"BranchTableBase","","BranchTableBase(imms=(table: ir::JumpTable), vals=0)",90,[[["opcode"],["type"],["jumptable"]]]],[11,"BranchTableEntry","","BranchTableEntry(imms=(imm: ir::immediates::Uimm8, table:…",90,[[["jumptable"],["value"],["opcode"],["type"],["uimm8"]]]],[11,"Call","","Call(imms=(func_ref: ir::FuncRef), vals=0)",90,[[["funcref"],["valuelist"],["opcode"],["type"]]]],[11,"CallIndirect","","CallIndirect(imms=(sig_ref: ir::SigRef), vals=1)",90,[[["sigref"],["valuelist"],["opcode"],["type"]]]],[11,"CondTrap","","CondTrap(imms=(code: ir::TrapCode), vals=1)",90,[[["trapcode"],["opcode"],["type"],["value"]]]],[11,"CopySpecial","","CopySpecial(imms=(src: isa::RegUnit, dst: isa::RegUnit),…",90,[[["regunit"],["opcode"],["type"]]]],[11,"CopyToSsa","","CopyToSsa(imms=(src: isa::RegUnit), vals=0)",90,[[["opcode"],["type"],["regunit"]]]],[11,"ExtractLane","","ExtractLane(imms=(lane: ir::immediates::Uimm8), vals=1)",90,[[["value"],["opcode"],["type"],["uimm8"]]]],[11,"FloatCompare","","FloatCompare(imms=(cond: ir::condcodes::FloatCC), vals=2)",90,[[["floatcc"],["opcode"],["type"],["value"]]]],[11,"FloatCond","","FloatCond(imms=(cond: ir::condcodes::FloatCC), vals=1)",90,[[["floatcc"],["opcode"],["type"],["value"]]]],[11,"FloatCondTrap","","FloatCondTrap(imms=(cond: ir::condcodes::FloatCC, code:…",90,[[["floatcc"],["trapcode"],["opcode"],["type"],["value"]]]],[11,"FuncAddr","","FuncAddr(imms=(func_ref: ir::FuncRef), vals=0)",90,[[["opcode"],["type"],["funcref"]]]],[11,"HeapAddr","","HeapAddr(imms=(heap: ir::Heap, imm:…",90,[[["uimm32"],["heap"],["opcode"],["type"],["value"]]]],[11,"IndirectJump","","IndirectJump(imms=(table: ir::JumpTable), vals=1)",90,[[["value"],["opcode"],["type"],["jumptable"]]]],[11,"InsertLane","","InsertLane(imms=(lane: ir::immediates::Uimm8), vals=2)",90,[[["value"],["opcode"],["type"],["uimm8"]]]],[11,"IntCompare","","IntCompare(imms=(cond: ir::condcodes::IntCC), vals=2)",90,[[["intcc"],["opcode"],["type"],["value"]]]],[11,"IntCompareImm","","IntCompareImm(imms=(cond: ir::condcodes::IntCC, imm:…",90,[[["value"],["intcc"],["opcode"],["type"],["imm64"]]]],[11,"IntCond","","IntCond(imms=(cond: ir::condcodes::IntCC), vals=1)",90,[[["intcc"],["opcode"],["type"],["value"]]]],[11,"IntCondTrap","","IntCondTrap(imms=(cond: ir::condcodes::IntCC, code:…",90,[[["value"],["intcc"],["opcode"],["type"],["trapcode"]]]],[11,"IntSelect","","IntSelect(imms=(cond: ir::condcodes::IntCC), vals=3)",90,[[["intcc"],["opcode"],["type"],["value"]]]],[11,"Jump","","Jump(imms=(destination: ir::Ebb), vals=0)",90,[[["ebb"],["valuelist"],["opcode"],["type"]]]],[11,"Load","","Load(imms=(flags: ir::MemFlags, offset:…",90,[[["value"],["memflags"],["opcode"],["type"],["offset32"]]]],[11,"LoadComplex","","LoadComplex(imms=(flags: ir::MemFlags, offset:…",90,[[["memflags"],["valuelist"],["opcode"],["type"],["offset32"]]]],[11,"MultiAry","","MultiAry(imms=(), vals=0)",90,[[["opcode"],["type"],["valuelist"]]]],[11,"NullAry","","NullAry(imms=(), vals=0)",90,[[["opcode"],["type"]]]],[11,"RegFill","","RegFill(imms=(src: ir::StackSlot, dst: isa::RegUnit),…",90,[[["regunit"],["stackslot"],["opcode"],["type"],["value"]]]],[11,"RegMove","","RegMove(imms=(src: isa::RegUnit, dst: isa::RegUnit), vals=1)",90,[[["regunit"],["opcode"],["type"],["value"]]]],[11,"RegSpill","","RegSpill(imms=(src: isa::RegUnit, dst: ir::StackSlot),…",90,[[["regunit"],["stackslot"],["opcode"],["type"],["value"]]]],[11,"Shuffle","","Shuffle(imms=(mask: ir::Immediate), vals=2)",90,[[["immediate"],["opcode"],["type"],["value"]]]],[11,"StackLoad","","StackLoad(imms=(stack_slot: ir::StackSlot, offset:…",90,[[["stackslot"],["opcode"],["type"],["offset32"]]]],[11,"StackStore","","StackStore(imms=(stack_slot: ir::StackSlot, offset:…",90,[[["value"],["stackslot"],["opcode"],["type"],["offset32"]]]],[11,"Store","","Store(imms=(flags: ir::MemFlags, offset:…",90,[[["value"],["memflags"],["opcode"],["type"],["offset32"]]]],[11,"StoreComplex","","StoreComplex(imms=(flags: ir::MemFlags, offset:…",90,[[["memflags"],["valuelist"],["opcode"],["type"],["offset32"]]]],[11,"TableAddr","","TableAddr(imms=(table: ir::Table, offset:…",90,[[["table"],["value"],["opcode"],["type"],["offset32"]]]],[11,"Ternary","","Ternary(imms=(), vals=3)",90,[[["opcode"],["type"],["value"]]]],[11,"Trap","","Trap(imms=(code: ir::TrapCode), vals=0)",90,[[["trapcode"],["opcode"],["type"]]]],[11,"Unary","","Unary(imms=(), vals=1)",90,[[["opcode"],["type"],["value"]]]],[11,"UnaryBool","","UnaryBool(imms=(imm: bool), vals=0)",90,[[["opcode"],["type"],["bool"]]]],[11,"UnaryConst","","UnaryConst(imms=(constant_handle: ir::Constant), vals=0)",90,[[["opcode"],["type"],["constant"]]]],[11,"UnaryGlobalValue","","UnaryGlobalValue(imms=(global_value: ir::GlobalValue),…",90,[[["opcode"],["type"],["globalvalue"]]]],[11,"UnaryIeee32","","UnaryIeee32(imms=(imm: ir::immediates::Ieee32), vals=0)",90,[[["opcode"],["type"],["ieee32"]]]],[11,"UnaryIeee64","","UnaryIeee64(imms=(imm: ir::immediates::Ieee64), vals=0)",90,[[["opcode"],["type"],["ieee64"]]]],[11,"UnaryImm","","UnaryImm(imms=(imm: ir::immediates::Imm64), vals=0)",90,[[["opcode"],["type"],["imm64"]]]]],"p":[[8,"ReservedValue"],[3,"Context"],[3,"ValueLocRange"],[4,"CodegenError"],[3,"MemoryCodeSink"],[3,"CodeInfo"],[4,"Reloc"],[3,"Stackmap"],[8,"RelocSink"],[8,"StackmapSink"],[8,"TrapSink"],[8,"CodeSink"],[3,"CFGPrinter"],[3,"FuncCursor"],[3,"EncCursor"],[4,"CursorPosition"],[8,"Cursor"],[3,"DisplayList"],[3,"DominatorTree"],[3,"DominatorTreePreorder"],[3,"BasicBlock"],[3,"ControlFlowGraph"],[8,"CondCode"],[4,"IntCC"],[4,"FloatCC"],[3,"AbiParam"],[3,"ExtFuncData"],[3,"Signature"],[3,"FrameLayout"],[3,"HeapData"],[3,"TableData"],[3,"ValueLabelStart"],[4,"ArgumentExtension"],[4,"ArgumentPurpose"],[4,"ExternalName"],[4,"FrameLayoutChange"],[4,"GlobalValueData"],[4,"HeapStyle"],[4,"LibCall"],[4,"ExpandedProgramPoint"],[4,"TrapCode"],[4,"ArgumentLoc"],[4,"ValueLoc"],[4,"ValueLabelAssignments"],[3,"InsertBuilder"],[3,"ReplaceBuilder"],[3,"ConstantData"],[3,"ConstantPoolEntry"],[3,"ConstantPool"],[3,"DataFlowGraph"],[4,"ValueDef"],[4,"AnyEntity"],[3,"Ebb"],[3,"Value"],[3,"Inst"],[3,"StackSlot"],[3,"GlobalValue"],[3,"Constant"],[3,"Immediate"],[3,"JumpTable"],[3,"FuncRef"],[3,"SigRef"],[3,"Heap"],[3,"Table"],[3,"Function"],[3,"DisplayFunctionAnnotations"],[3,"V128Imm"],[8,"IntoBytes"],[3,"Imm64"],[3,"Uimm64"],[3,"Offset32"],[3,"Ieee32"],[3,"Ieee64"],[3,"ValueTypeSet"],[4,"InstructionFormat"],[4,"InstructionData"],[4,"Opcode"],[4,"BranchInfo"],[4,"CallInfo"],[4,"ResolvedConstraint"],[3,"VariableArgs"],[3,"OpcodeConstraints"],[3,"JumpTableData"],[3,"Layout"],[3,"MemFlags"],[3,"SourceLoc"],[3,"StackSlotData"],[3,"StackSlots"],[4,"StackSlotKind"],[3,"Type"],[8,"InstBuilder"],[8,"InstBuilderBase"],[8,"InstInserterBase"],[8,"ProgramOrder"],[3,"ValueLabel"],[3,"BranchRange"],[3,"OperandConstraint"],[3,"RecipeConstraints"],[3,"EncInfo"],[3,"StackBaseMask"],[3,"StackRef"],[3,"TargetFrontendConfig"],[4,"CallConv"],[4,"ConstraintKind"],[4,"StackBase"],[4,"LookupError"],[3,"Encoding"],[3,"RegBank"],[3,"RegClassData"],[3,"RegInfo"],[8,"TargetIsa"],[3,"Builder"],[3,"Loop"],[3,"LoopAnalysis"],[3,"FlagsOrIsa"],[4,"SetError"],[4,"OptLevel"],[4,"LibcallCallConv"],[3,"Template"],[3,"Descriptor"],[4,"Detail"],[8,"Configurable"],[3,"Builder"],[3,"PredicateView"],[3,"Flags"],[3,"VerifierError"],[3,"VerifierErrors"],[8,"FuncWriter"],[3,"RegDiversions"],[3,"PackedOption"],[3,"NullRelocSink"],[3,"NullStackmapSink"],[3,"NullTrapSink"],[3,"ChildIter"],[3,"PredIter"],[3,"ProgramPoint"],[3,"Values"],[3,"DisplayInst"],[3,"DisplayFunction"],[3,"InstOffsetIter"],[3,"Uimm32"],[3,"Ebbs"],[3,"Insts"],[3,"RegClassIndex"],[3,"DisplayRegUnit"],[3,"PassTimes"],[3,"TimingToken"],[3,"PlainWriter"]]};
searchIndex["cranelift_codegen_shared"] = {"doc":"This library contains code that is common to both the…","i":[[0,"condcodes","cranelift_codegen_shared","Condition codes for the Cranelift code generator.",null,null],[4,"IntCC","cranelift_codegen_shared::condcodes","Condition code for comparing integers.",null,null],[13,"Equal","","`==`.",0,null],[13,"NotEqual","","`!=`.",0,null],[13,"SignedLessThan","","Signed `<`.",0,null],[13,"SignedGreaterThanOrEqual","","Signed `>=`.",0,null],[13,"SignedGreaterThan","","Signed `>`.",0,null],[13,"SignedLessThanOrEqual","","Signed `<=`.",0,null],[13,"UnsignedLessThan","","Unsigned `<`.",0,null],[13,"UnsignedGreaterThanOrEqual","","Unsigned `>=`.",0,null],[13,"UnsignedGreaterThan","","Unsigned `>`.",0,null],[13,"UnsignedLessThanOrEqual","","Unsigned `<=`.",0,null],[13,"Overflow","","Signed Overflow.",0,null],[13,"NotOverflow","","Signed No Overflow.",0,null],[4,"FloatCC","","Condition code for comparing floating point numbers.",null,null],[13,"Ordered","","EQ | LT | GT",1,null],[13,"Unordered","","UN",1,null],[13,"Equal","","EQ",1,null],[13,"NotEqual","","The C '!=' operator is the inverse of '==': `NotEqual`. UN…",1,null],[13,"OrderedNotEqual","","LT | GT",1,null],[13,"UnorderedOrEqual","","UN | EQ",1,null],[13,"LessThan","","LT",1,null],[13,"LessThanOrEqual","","LT | EQ",1,null],[13,"GreaterThan","","GT",1,null],[13,"GreaterThanOrEqual","","GT | EQ",1,null],[13,"UnorderedOrLessThan","","UN | LT",1,null],[13,"UnorderedOrLessThanOrEqual","","UN | LT | EQ",1,null],[13,"UnorderedOrGreaterThan","","UN | GT",1,null],[13,"UnorderedOrGreaterThanOrEqual","","UN | GT | EQ",1,null],[8,"CondCode","","Common traits of condition codes.",null,null],[10,"inverse","","Get the inverse condition code of `self`.",2,[[],["self"]]],[10,"reverse","","Get the reversed condition code for `self`.",2,[[],["self"]]],[11,"without_equal","","Get the corresponding IntCC with the equal component…",0,[[],["self"]]],[11,"unsigned","","Get the corresponding IntCC with the signed component…",0,[[],["self"]]],[11,"to_static_str","","Get the corresponding string condition code for the IntCC…",0,[[],["str"]]],[0,"constant_hash","cranelift_codegen_shared","Build support for precomputed constant hash tables.",null,null],[5,"simple_hash","cranelift_codegen_shared::constant_hash","A primitive hash function for matching opcodes.",null,[[["str"]],["usize"]]],[5,"generate_table","","Compute an open addressed, quadratically probed hash table…",null,[[["iterator"],["usize"],["fn"]],[["vec",["option"]],["option"]]]],[0,"constants","cranelift_codegen_shared","This module contains constants that are shared between the…",null,null],[17,"LANE_BASE","cranelift_codegen_shared::constants","Start of the lane types.",null,null],[17,"REFERENCE_BASE","","Base for reference types.",null,null],[17,"VECTOR_BASE","","Start of the 2-lane vector types.",null,null],[17,"MAX_TRACKED_TOP_RCS","","Guaranteed maximum number of top-level register classes…",null,null],[17,"MAX_NUM_REG_CLASSES","","Guaranteed maximum number of register classes in any ISA.",null,null],[0,"isa","cranelift_codegen_shared","Shared ISA-specific definitions.",null,null],[0,"x86","cranelift_codegen_shared::isa","Shared x86-specific definitions.",null,null],[3,"EncodingBits","cranelift_codegen_shared::isa::x86","Named interface to the `u16` Encoding bits, representing…",null,null],[4,"OpcodePrefix","","Opcode prefix representation.",null,null],[13,"Op1","","",3,null],[13,"Mp1_66","","",3,null],[13,"Mp1_f3","","",3,null],[13,"Mp1_f2","","",3,null],[13,"Op2_0f","","",3,null],[13,"Mp2_66_0f","","",3,null],[13,"Mp2_f3_0f","","",3,null],[13,"Mp2_f2_0f","","",3,null],[13,"Op3_0f_38","","",3,null],[13,"Mp3_66_0f_38","","",3,null],[13,"Mp3_f3_0f_38","","",3,null],[13,"Mp3_f2_0f_38","","",3,null],[13,"Op3_0f_3a","","",3,null],[13,"Mp3_66_0f_3a","","",3,null],[13,"Mp3_f3_0f_3a","","",3,null],[13,"Mp3_f2_0f_3a","","",3,null],[11,"new","","Constructs a new EncodingBits from parts.",4,[[["u16"]],["self"]]],[11,"bits","","Returns the raw bits.",4,[[],["u16"]]],[11,"opcode_byte","","Instruction opcode byte, without the prefix.",4,[[],["u8"]]],[11,"prefix","","Prefix kind for the instruction, as an enum.",4,[[],["opcodeprefix"]]],[11,"pp","","Extracts the PP bits of the OpcodePrefix.",4,[[],["u8"]]],[11,"mm","","Extracts the MM bits of the OpcodePrefix.",4,[[],["u8"]]],[11,"rrr","","Bits for the ModR/M byte for certain opcodes.",4,[[],["u8"]]],[11,"rex_w","","REX.W bit (or VEX.W/E).",4,[[],["u8"]]],[11,"from_opcode","","Extracts the OpcodePrefix from the opcode.",3,[[],["self"]]],[11,"recipe_name_prefix","","Returns the recipe name prefix.",3,[[],["str"]]],[17,"VERSION","cranelift_codegen_shared","Version number of this crate.",null,null],[11,"from","cranelift_codegen_shared::condcodes","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","cranelift_codegen_shared::isa::x86","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"inverse","cranelift_codegen_shared::condcodes","",0,[[],["self"]]],[11,"reverse","","",0,[[],["self"]]],[11,"inverse","","",1,[[],["self"]]],[11,"reverse","","",1,[[],["self"]]],[11,"from","cranelift_codegen_shared::isa::x86","",4,[[["u16"]],["self"]]],[11,"from","","",3,[[["u8"]],["self"]]],[11,"into","","",3,[[],["u8"]]],[11,"clone","cranelift_codegen_shared::condcodes","",0,[[["self"]],["intcc"]]],[11,"clone","","",1,[[["self"]],["floatcc"]]],[11,"clone","cranelift_codegen_shared::isa::x86","",4,[[["self"]],["encodingbits"]]],[11,"clone","","",3,[[["self"]],["opcodeprefix"]]],[11,"eq","cranelift_codegen_shared::condcodes","",0,[[["intcc"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["floatcc"]],["bool"]]],[11,"eq","cranelift_codegen_shared::isa::x86","",4,[[["encodingbits"],["self"]],["bool"]]],[11,"ne","","",4,[[["encodingbits"],["self"]],["bool"]]],[11,"eq","","",3,[[["opcodeprefix"],["self"]],["bool"]]],[11,"fmt","cranelift_codegen_shared::condcodes","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen_shared::isa::x86","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_codegen_shared::condcodes","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"from_str","","",0,[[["str"]],["result"]]],[11,"from_str","","",1,[[["str"]],["result"]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]]],"p":[[4,"IntCC"],[4,"FloatCC"],[8,"CondCode"],[4,"OpcodePrefix"],[3,"EncodingBits"]]};
searchIndex["cranelift_entity"] = {"doc":"Array-based data structures using densely numbered entity…","i":[[3,"BoxedSlice","cranelift_entity","A slice mapping `K -> V` allocating dense entity references.",null,null],[3,"Iter","","Iterate over all keys in order.",null,null],[3,"IterMut","","Iterate over all keys in order.",null,null],[3,"Keys","","Iterate over all keys in order.",null,null],[3,"EntityList","","A small list of entity references allocated from a pool.",null,null],[3,"ListPool","","A memory pool for storing lists of `T`.",null,null],[3,"SecondaryMap","","A mapping `K -> V` for densely indexed entity references.",null,null],[3,"PrimaryMap","","A primary mapping `K -> V` allocating dense entity…",null,null],[3,"EntitySet","","A set of `K` for densely indexed entity references.",null,null],[3,"SparseMap","","A sparse mapping of entity references.",null,null],[0,"packed_option","","Compact representation of `Option<T>` for types with a…",null,null],[3,"PackedOption","cranelift_entity::packed_option","Packed representation of `Option<T>`.",null,null],[8,"ReservedValue","","Types that have a reserved value which can't be created…",null,null],[10,"reserved_value","","Create an instance of the reserved value.",0,[[],["self"]]],[11,"is_none","","Returns `true` if the packed option is a `None` value.",1,[[["self"]],["bool"]]],[11,"is_some","","Returns `true` if the packed option is a `Some` value.",1,[[["self"]],["bool"]]],[11,"expand","","Expand the packed option into a normal `Option`.",1,[[],["option"]]],[11,"map","","Maps a `PackedOption<T>` to `Option<U>` by applying a…",1,[[["f"]],["option"]]],[11,"unwrap","","Unwrap a packed `Some` value or panic.",1,[[],["t"]]],[11,"expect","","Unwrap a packed `Some` value or panic.",1,[[["str"]],["t"]]],[11,"take","","Takes the value out of the packed option, leaving a `None`…",1,[[["self"]],["option"]]],[11,"from_raw","cranelift_entity","Create a new slice from a raw pointer. A safer way to…",2,[[],["self"]]],[11,"is_valid","","Check if `k` is a valid key in the map.",2,[[["self"],["k"]],["bool"]]],[11,"get","","Get the element at `k` if it exists.",2,[[["self"],["k"]],[["v"],["option"]]]],[11,"get_mut","","Get the element at `k` if it exists, mutable version.",2,[[["self"],["k"]],[["option"],["v"]]]],[11,"is_empty","","Is this map completely empty?",2,[[["self"]],["bool"]]],[11,"len","","Get the total number of entity references created.",2,[[["self"]],["usize"]]],[11,"keys","","Iterate over all the keys in this map.",2,[[["self"]],["keys"]]],[11,"values","","Iterate over all the values in this map.",2,[[["self"]],["iter"]]],[11,"values_mut","","Iterate over all the values in this map, mutable edition.",2,[[["self"]],["itermut"]]],[11,"iter","","Iterate over all the keys and values in this map.",2,[[["self"]],["iter"]]],[11,"iter_mut","","Iterate over all the keys and values in this map, mutable…",2,[[["self"]],["itermut"]]],[11,"last","","Returns the last element that was inserted in the map.",2,[[["self"]],[["v"],["option"]]]],[11,"new","","Create an `Iter` iterator that visits the `PrimaryMap`…",3,[[["iter"]],["self"]]],[11,"new","","Create an `IterMut` iterator that visits the `PrimaryMap`…",4,[[["itermut"]],["self"]]],[11,"with_len","","Create a `Keys` iterator that visits `len` entities…",5,[[["usize"]],["self"]]],[11,"new","","Create a new list pool.",6,[[],["self"]]],[11,"clear","","Clear the pool, forgetting about all lists that use it.",6,[[["self"]]]],[11,"new","","Create a new empty list.",7,[[],["self"]]],[11,"from_slice","","Create a new list with the contents initialized from a…",7,[[["listpool"]],["self"]]],[11,"is_empty","","Returns `true` if the list has a length of 0.",7,[[["self"]],["bool"]]],[11,"len","","Get the number of elements in the list.",7,[[["listpool"],["self"]],["usize"]]],[11,"is_valid","","Returns `true` if the list is valid",7,[[["listpool"],["self"]],["bool"]]],[11,"as_slice","","Get the list as a slice.",7,[[["self"],["listpool"]]]],[11,"get","","Get a single element from the list.",7,[[["listpool"],["self"],["usize"]],["option"]]],[11,"first","","Get the first element from the list.",7,[[["listpool"],["self"]],["option"]]],[11,"as_mut_slice","","Get the list as a mutable slice.",7,[[["self"],["listpool"]]]],[11,"get_mut","","Get a mutable reference to a single element from the list.",7,[[["self"],["usize"],["listpool"]],[["t"],["option"]]]],[11,"clear","","Removes all elements from the list.",7,[[["self"],["listpool"]]]],[11,"take","","Take all elements from this list and return them as a new…",7,[[["self"]],["self"]]],[11,"push","","Appends an element to the back of the list. Returns the…",7,[[["self"],["t"],["listpool"]],["usize"]]],[11,"extend","","Appends multiple elements to the back of the list.",7,[[["self"],["i"],["listpool"]]]],[11,"insert","","Inserts an element as position `index` in the list,…",7,[[["usize"],["listpool"],["self"],["t"]]]],[11,"remove","","Removes the element at position `index` from the list.…",7,[[["self"],["usize"],["listpool"]]]],[11,"swap_remove","","Removes the element at `index` in constant time by…",7,[[["self"],["usize"],["listpool"]]]],[11,"grow_at","","Grow the list by inserting `count` elements at `index`.",7,[[["self"],["usize"],["listpool"]]]],[11,"new","","Create a new empty map.",8,[[],["self"]]],[11,"with_capacity","","Create a new, empty map with the specified capacity.",8,[[["usize"]],["self"]]],[11,"with_default","","Create a new empty map with a specified default value.",8,[[["v"]],["self"]]],[11,"capacity","","Returns the number of elements the map can hold without…",8,[[["self"]],["usize"]]],[11,"get","","Get the element at `k` if it exists.",8,[[["self"],["k"]],[["v"],["option"]]]],[11,"is_empty","","Is this map completely empty?",8,[[["self"]],["bool"]]],[11,"clear","","Remove all entries from this map.",8,[[["self"]]]],[11,"iter","","Iterate over all the keys and values in this map.",8,[[["self"]],["iter"]]],[11,"iter_mut","","Iterate over all the keys and values in this map, mutable…",8,[[["self"]],["itermut"]]],[11,"keys","","Iterate over all the keys in this map.",8,[[["self"]],["keys"]]],[11,"values","","Iterate over all the values in this map.",8,[[["self"]],["iter"]]],[11,"values_mut","","Iterate over all the values in this map, mutable edition.",8,[[["self"]],["itermut"]]],[11,"resize","","Resize the map to have `n` entries by adding default…",8,[[["self"],["usize"]]]],[11,"new","","Create a new empty map.",9,[[],["self"]]],[11,"with_capacity","","Create a new empty map with the given capacity.",9,[[["usize"]],["self"]]],[11,"is_valid","","Check if `k` is a valid key in the map.",9,[[["self"],["k"]],["bool"]]],[11,"get","","Get the element at `k` if it exists.",9,[[["self"],["k"]],[["v"],["option"]]]],[11,"get_mut","","Get the element at `k` if it exists, mutable version.",9,[[["self"],["k"]],[["option"],["v"]]]],[11,"is_empty","","Is this map completely empty?",9,[[["self"]],["bool"]]],[11,"len","","Get the total number of entity references created.",9,[[["self"]],["usize"]]],[11,"keys","","Iterate over all the keys in this map.",9,[[["self"]],["keys"]]],[11,"values","","Iterate over all the values in this map.",9,[[["self"]],["iter"]]],[11,"values_mut","","Iterate over all the values in this map, mutable edition.",9,[[["self"]],["itermut"]]],[11,"iter","","Iterate over all the keys and values in this map.",9,[[["self"]],["iter"]]],[11,"iter_mut","","Iterate over all the keys and values in this map, mutable…",9,[[["self"]],["itermut"]]],[11,"clear","","Remove all entries from this map.",9,[[["self"]]]],[11,"next_key","","Get the key that will be assigned to the next pushed value.",9,[[["self"]],["k"]]],[11,"push","","Append `v` to the mapping, assigning a new key which is…",9,[[["self"],["v"]],["k"]]],[11,"last","","Returns the last element that was inserted in the map.",9,[[["self"]],[["v"],["option"]]]],[11,"reserve","","Reserves capacity for at least `additional` more elements…",9,[[["self"],["usize"]]]],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional`…",9,[[["self"],["usize"]]]],[11,"shrink_to_fit","","Shrinks the capacity of the `PrimaryMap` as much as…",9,[[["self"]]]],[11,"into_boxed_slice","","Consumes this `PrimaryMap` and produces a `BoxedSlice`.",9,[[],["boxedslice"]]],[11,"new","","Create a new empty set.",10,[[],["self"]]],[11,"with_capacity","","Creates a new empty set with the specified capacity.",10,[[["usize"]],["self"]]],[11,"contains","","Get the element at `k` if it exists.",10,[[["self"],["k"]],["bool"]]],[11,"is_empty","","Is this set completely empty?",10,[[["self"]],["bool"]]],[11,"cardinality","","Returns the cardinality of the set. More precisely, it…",10,[[["self"]],["usize"]]],[11,"clear","","Remove all entries from this set.",10,[[["self"]]]],[11,"keys","","Iterate over all the keys in this set.",10,[[["self"]],["keys"]]],[11,"resize","","Resize the set to have `n` entries by adding default…",10,[[["self"],["usize"]]]],[11,"insert","","Insert the element at `k`.",10,[[["self"],["k"]],["bool"]]],[11,"pop","","Removes and returns the entity from the set if it exists.",10,[[["self"]],["option"]]],[11,"new","","Create a new empty mapping.",11,[[],["self"]]],[11,"len","","Returns the number of elements in the map.",11,[[["self"]],["usize"]]],[11,"is_empty","","Returns true is the map contains no elements.",11,[[["self"]],["bool"]]],[11,"clear","","Remove all elements from the mapping.",11,[[["self"]]]],[11,"get","","Returns a reference to the value corresponding to the key.",11,[[["self"],["k"]],[["v"],["option"]]]],[11,"get_mut","","Returns a mutable reference to the value corresponding to…",11,[[["self"],["k"]],[["option"],["v"]]]],[11,"contains_key","","Return `true` if the map contains a value corresponding to…",11,[[["self"],["k"]],["bool"]]],[11,"insert","","Insert a value into the map.",11,[[["self"],["v"]],["option"]]],[11,"remove","","Remove a value from the map and return it.",11,[[["self"],["k"]],["option"]]],[11,"pop","","Remove the last value from the map.",11,[[["self"]],["option"]]],[11,"values","","Get an iterator over the values in the map.",11,[[["self"]],["iter"]]],[11,"as_slice","","Get the values as a slice.",11,[[["self"]]]],[6,"SparseSet","","A sparse set of entity references.",null,null],[8,"EntityRef","","A type wrapping a small integer index should implement…",null,null],[10,"new","","Create a new entity reference from a small integer. This…",12,[[["usize"]],["self"]]],[10,"index","","Get the index that was used to create this entity reference.",12,[[],["usize"]]],[8,"SparseMapValue","","Trait for extracting keys from values stored in a…",null,null],[10,"key","","Get the key of this sparse map value. This key is not…",13,[[["self"]],["k"]]],[14,"entity_impl","","Macro which provides the common implementation of a 32-bit…",null,null],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","cranelift_entity::packed_option","",1,[[["t"]],["t"]]],[11,"from","","",1,[[],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"from","","Convert `t` into a packed `Some(x)`.",1,[[["t"]],["self"]]],[11,"from","","Convert an option into its packed equivalent.",1,[[["option"]],["self"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","cranelift_entity","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"eq","cranelift_entity::packed_option","",1,[[["self"],["packedoption"]],["bool"]]],[11,"ne","","",1,[[["self"],["packedoption"]],["bool"]]],[11,"eq","cranelift_entity","",8,[[["self"]],["bool"]]],[11,"eq","","",9,[[["primarymap"],["self"]],["bool"]]],[11,"ne","","",9,[[["primarymap"],["self"]],["bool"]]],[11,"cmp","cranelift_entity::packed_option","",1,[[["self"],["packedoption"]],["ordering"]]],[11,"partial_cmp","","",1,[[["self"],["packedoption"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",1,[[["self"],["packedoption"]],["bool"]]],[11,"le","","",1,[[["self"],["packedoption"]],["bool"]]],[11,"gt","","",1,[[["self"],["packedoption"]],["bool"]]],[11,"ge","","",1,[[["self"],["packedoption"]],["bool"]]],[11,"index","cranelift_entity","",2,[[["self"],["k"]],["v"]]],[11,"index","","",8,[[["self"],["k"]],["v"]]],[11,"index","","",9,[[["self"],["k"]],["v"]]],[11,"index_mut","","",2,[[["self"],["k"]],["v"]]],[11,"index_mut","","",8,[[["self"],["k"]],["v"]]],[11,"index_mut","","",9,[[["self"],["k"]],["v"]]],[11,"hash","cranelift_entity::packed_option","",1,[[["self"],["__h"]]]],[11,"hash","cranelift_entity","",9,[[["self"],["__h"]]]],[11,"next","","",3,[[["self"]],["option"]]],[11,"size_hint","","",3,[[["self"]]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"size_hint","","",4,[[["self"]]]],[11,"next","","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,[[["self"]]]],[11,"from_iter","","",9,[[["t"]],["self"]]],[11,"next_back","","",3,[[["self"]],["option"]]],[11,"next_back","","",4,[[["self"]],["option"]]],[11,"next_back","","",5,[[["self"]],["option"]]],[11,"into","cranelift_entity::packed_option","",1,[[],["option"]]],[11,"clone","","",1,[[["self"]],["packedoption"]]],[11,"clone","cranelift_entity","",2,[[["self"]],["boxedslice"]]],[11,"clone","","",7,[[["self"]],["entitylist"]]],[11,"clone","","",6,[[["self"]],["listpool"]]],[11,"clone","","",8,[[["self"]],["secondarymap"]]],[11,"clone","","",9,[[["self"]],["primarymap"]]],[11,"clone","","",10,[[["self"]],["entityset"]]],[11,"default","cranelift_entity::packed_option","Create a default packed option representing `None`.",1,[[],["self"]]],[11,"default","cranelift_entity","",7,[[],["self"]]]],"p":[[8,"ReservedValue"],[3,"PackedOption"],[3,"BoxedSlice"],[3,"Iter"],[3,"IterMut"],[3,"Keys"],[3,"ListPool"],[3,"EntityList"],[3,"SecondaryMap"],[3,"PrimaryMap"],[3,"EntitySet"],[3,"SparseMap"],[8,"EntityRef"],[8,"SparseMapValue"]]};
searchIndex["cranelift_native"] = {"doc":"Performs autodetection of the host for the purposes of…","i":[[5,"builder","cranelift_native","Return an `isa` builder configured for the current host…",null,[[],[["builder"],["str"],["result",["builder","str"]]]]],[17,"VERSION","","Version number of this crate.",null,null]],"p":[]};
searchIndex["crossbeam_deque"] = {"doc":"Concurrent work-stealing deques.","i":[[3,"Worker","crossbeam_deque","A worker queue.",null,null],[3,"Stealer","","A stealer handle of a worker queue.",null,null],[3,"Injector","","An injector queue.",null,null],[4,"Steal","","Possible outcomes of a steal operation.",null,null],[13,"Empty","","The queue was empty at the time of stealing.",0,null],[13,"Success","","At least one task was successfully stolen.",0,null],[13,"Retry","","The steal operation needs to be retried.",0,null],[11,"new_fifo","","Creates a FIFO worker queue.",1,[[],["worker"]]],[11,"new_lifo","","Creates a LIFO worker queue.",1,[[],["worker"]]],[11,"stealer","","Creates a stealer for this queue.",1,[[["self"]],["stealer"]]],[11,"is_empty","","Returns `true` if the queue is empty.",1,[[["self"]],["bool"]]],[11,"push","","Pushes a task into the queue.",1,[[["self"],["t"]]]],[11,"pop","","Pops a task from the queue.",1,[[["self"]],["option"]]],[11,"is_empty","","Returns `true` if the queue is empty.",2,[[["self"]],["bool"]]],[11,"steal","","Steals a task from the queue.",2,[[["self"]],["steal"]]],[11,"steal_batch","","Steals a batch of tasks and pushes them into another worker.",2,[[["worker"],["self"]],["steal"]]],[11,"steal_batch_and_pop","","Steals a batch of tasks, pushes them into another worker,…",2,[[["worker"],["self"]],["steal"]]],[11,"new","","Creates a new injector queue.",3,[[],["injector"]]],[11,"push","","Pushes a task into the queue.",3,[[["self"],["t"]]]],[11,"steal","","Steals a task from the queue.",3,[[["self"]],["steal"]]],[11,"steal_batch","","Steals a batch of tasks and pushes them into a worker.",3,[[["worker"],["self"]],["steal"]]],[11,"steal_batch_and_pop","","Steals a batch of tasks, pushes them into a worker, and…",3,[[["worker"],["self"]],["steal"]]],[11,"is_empty","","Returns `true` if the queue is empty.",3,[[["self"]],["bool"]]],[11,"is_empty","","Returns `true` if the queue was empty at the time of…",0,[[["self"]],["bool"]]],[11,"is_success","","Returns `true` if at least one task was stolen.",0,[[["self"]],["bool"]]],[11,"is_retry","","Returns `true` if the steal operation needs to be retried.",0,[[["self"]],["bool"]]],[11,"success","","Returns the result of the operation, if successful.",0,[[],["option"]]],[11,"or_else","","If no task was stolen, attempts another steal operation.",0,[[["f"]],["steal"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"drop","","",3,[[["self"]]]],[11,"clone","","",2,[[["self"]],["stealer"]]],[11,"clone","","",0,[[["self"]],["steal"]]],[11,"eq","","",0,[[["steal"],["self"]],["bool"]]],[11,"ne","","",0,[[["steal"],["self"]],["bool"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"from_iter","","Consumes items until a `Success` is found and returns it.",0,[[["i"]],["steal"]]]],"p":[[4,"Steal"],[3,"Worker"],[3,"Stealer"],[3,"Injector"]]};
searchIndex["crossbeam_epoch"] = {"doc":"Epoch-based memory reclamation.","i":[[3,"Atomic","crossbeam_epoch","An atomic pointer that can be safely shared between threads.",null,null],[3,"CompareAndSetError","","The error returned on failed compare-and-set operation.",null,null],[12,"current","","The value in the atomic pointer at the time of the failed…",0,null],[12,"new","","The new value, which the operation failed to store.",0,null],[3,"Owned","","An owned heap-allocated object.",null,null],[3,"Shared","","A pointer to an object protected by the epoch GC.",null,null],[3,"Collector","","An epoch-based garbage collector.",null,null],[3,"LocalHandle","","A handle to a garbage collector.",null,null],[3,"Guard","","A guard that keeps the current thread pinned.",null,null],[5,"unprotected","","Returns a reference to a dummy guard that allows…",null,[[],["guard"]]],[5,"default_collector","","Returns the default global collector.",null,[[],["collector"]]],[5,"is_pinned","","Returns `true` if the current thread is pinned.",null,[[],["bool"]]],[5,"pin","","Pins the current thread.",null,[[],["guard"]]],[11,"null","","Returns a new null atomic pointer.",1,[[],["atomic"]]],[11,"new","","Allocates `value` on the heap and returns a new atomic…",1,[[["t"]],["atomic"]]],[11,"load","","Loads a `Shared` from the atomic pointer.",1,[[["ordering"],["self"],["guard"]],["shared"]]],[11,"load_consume","","Loads a `Shared` from the atomic pointer using a \"consume\"…",1,[[["guard"],["self"]],["shared"]]],[11,"store","","Stores a `Shared` or `Owned` pointer into the atomic…",1,[[["ordering"],["self"],["pointer"]]]],[11,"swap","","Stores a `Shared` or `Owned` pointer into the atomic…",1,[[["guard"],["ordering"],["self"],["pointer"]],["shared"]]],[11,"compare_and_set","","Stores the pointer `new` (either `Shared` or `Owned`) into…",1,[[["o"],["p"],["guard"],["self"],["shared"]],[["shared"],["result",["shared","compareandseterror"]],["compareandseterror"]]]],[11,"compare_and_set_weak","","Stores the pointer `new` (either `Shared` or `Owned`) into…",1,[[["o"],["p"],["guard"],["self"],["shared"]],[["shared"],["result",["shared","compareandseterror"]],["compareandseterror"]]]],[11,"fetch_and","","Bitwise \"and\" with the current tag.",1,[[["usize"],["ordering"],["self"],["guard"]],["shared"]]],[11,"fetch_or","","Bitwise \"or\" with the current tag.",1,[[["usize"],["ordering"],["self"],["guard"]],["shared"]]],[11,"fetch_xor","","Bitwise \"xor\" with the current tag.",1,[[["usize"],["ordering"],["self"],["guard"]],["shared"]]],[11,"into_owned","","Takes ownership of the pointee.",1,[[],["owned"]]],[11,"new","","Allocates `value` on the heap and returns a new owned…",2,[[["t"]],["owned"]]],[11,"from_raw","","Returns a new owned pointer pointing to `raw`.",2,[[],["owned"]]],[11,"into_shared","","Converts the owned pointer into a [`Shared`].",2,[[["guard"]],["shared"]]],[11,"into_box","","Converts the owned pointer into a `Box`.",2,[[],["box"]]],[11,"tag","","Returns the tag stored within the pointer.",2,[[["self"]],["usize"]]],[11,"with_tag","","Returns the same pointer, but tagged with `tag`. `tag` is…",2,[[["usize"]],["owned"]]],[11,"null","","Returns a new null pointer.",3,[[],["shared"]]],[11,"is_null","","Returns `true` if the pointer is null.",3,[[["self"]],["bool"]]],[11,"as_raw","","Converts the pointer to a raw pointer (without the tag).",3,[[["self"]]]],[11,"deref","","Dereferences the pointer.",3,[[["self"]],["t"]]],[11,"deref_mut","","Dereferences the pointer.",3,[[["self"]],["t"]]],[11,"as_ref","","Converts the pointer to a reference.",3,[[["self"]],[["t"],["option"]]]],[11,"into_owned","","Takes ownership of the pointee.",3,[[],["owned"]]],[11,"tag","","Returns the tag stored within the pointer.",3,[[["self"]],["usize"]]],[11,"with_tag","","Returns the same pointer, but tagged with `tag`. `tag` is…",3,[[["self"],["usize"]],["shared"]]],[11,"new","","Creates a new collector.",4,[[],["self"]]],[11,"register","","Registers a new handle for the collector.",4,[[["self"]],["localhandle"]]],[11,"pin","","Pins the handle.",5,[[["self"]],["guard"]]],[11,"is_pinned","","Returns `true` if the handle is pinned.",5,[[["self"]],["bool"]]],[11,"collector","","Returns the `Collector` associated with this handle.",5,[[["self"]],["collector"]]],[11,"defer","","Stores a function so that it can be executed at some point…",6,[[["self"],["f"]]]],[11,"defer_unchecked","","Stores a function so that it can be executed at some point…",6,[[["self"],["f"]]]],[11,"defer_destroy","","Stores a destructor for an object so that it can be…",6,[[["self"],["shared"]]]],[11,"flush","","Clears up the thread-local cache of deferred functions by…",6,[[["self"]]]],[11,"repin","","Unpins and then immediately re-pins the thread.",6,[[["self"]]]],[11,"repin_after","","Temporarily unpins the thread, executes the given function…",6,[[["self"],["f"]],["r"]]],[11,"collector","","Returns the `Collector` associated with this guard.",6,[[["self"]],[["option",["collector"]],["collector"]]]],[8,"CompareAndSetOrdering","","Memory orderings for compare-and-set operations.",null,null],[10,"success","","The ordering of the operation when it succeeds.",7,[[["self"]],["ordering"]]],[10,"failure","","The ordering of the operation when it fails.",7,[[["self"]],["ordering"]]],[8,"Pointer","","A trait for either `Owned` or `Shared` pointers.",null,null],[10,"into_usize","","Returns the machine representation of the pointer.",8,[[],["usize"]]],[10,"from_usize","","Returns a new pointer pointing to the tagged pointer `data`.",8,[[["usize"]],["self"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"from","","",1,[[],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"from","","",2,[[],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"into_usize","","",2,[[],["usize"]]],[11,"from_usize","","Returns a new pointer pointing to the tagged pointer `data`.",2,[[["usize"]],["self"]]],[11,"into_usize","","",3,[[],["usize"]]],[11,"from_usize","","",3,[[["usize"]],["self"]]],[11,"drop","","",2,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"drop","","",6,[[["self"]]]],[11,"as_mut","","",2,[[["self"]],["t"]]],[11,"as_ref","","",2,[[["self"]],["t"]]],[11,"from","","Returns a new atomic pointer pointing to `owned`.",1,[[["owned"]],["self"]]],[11,"from","","",1,[[["box"]],["self"]]],[11,"from","","",1,[[["t"]],["self"]]],[11,"from","","Returns a new atomic pointer pointing to `ptr`.",1,[[["shared"]],["self"]]],[11,"from","","Returns a new atomic pointer pointing to `raw`.",1,[[],["self"]]],[11,"from","","",2,[[["t"]],["self"]]],[11,"from","","Returns a new owned pointer pointing to `b`.",2,[[["box"]],["self"]]],[11,"from","","Returns a new pointer pointing to `raw`.",3,[[],["self"]]],[11,"clone","","Returns a copy of the atomic value.",1,[[["self"]],["self"]]],[11,"clone","","",2,[[["self"]],["self"]]],[11,"clone","","",3,[[["self"]],["self"]]],[11,"clone","","Creates another reference to the same garbage collector.",4,[[["self"]],["self"]]],[11,"default","","",1,[[],["self"]]],[11,"default","","",3,[[],["self"]]],[11,"cmp","","",3,[[["self"]],["ordering"]]],[11,"eq","","",3,[[["self"]],["bool"]]],[11,"eq","","Checks if both handles point to the same collector.",4,[[["self"],["collector"]],["bool"]]],[11,"partial_cmp","","",3,[[["self"]],[["ordering"],["option",["ordering"]]]]],[11,"deref","","",2,[[["self"]],["t"]]],[11,"deref_mut","","",2,[[["self"]],["t"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]]],"p":[[3,"CompareAndSetError"],[3,"Atomic"],[3,"Owned"],[3,"Shared"],[3,"Collector"],[3,"LocalHandle"],[3,"Guard"],[8,"CompareAndSetOrdering"],[8,"Pointer"]]};
searchIndex["crossbeam_queue"] = {"doc":"Concurrent queues.","i":[[3,"ArrayQueue","crossbeam_queue","A bounded multi-producer multi-consumer queue.",null,null],[3,"PopError","","Error which occurs when popping from an empty queue.",null,null],[3,"PushError","","Error which occurs when pushing into a full queue.",null,null],[12,"0","","",0,null],[3,"SegQueue","","An unbounded multi-producer multi-consumer queue.",null,null],[11,"new","","Creates a new bounded queue with the given capacity.",1,[[["usize"]],["arrayqueue"]]],[11,"push","","Attempts to push an element into the queue.",1,[[["self"],["t"]],[["result",["pusherror"]],["pusherror"]]]],[11,"pop","","Attempts to pop an element from the queue.",1,[[["self"]],[["result",["poperror"]],["poperror"]]]],[11,"capacity","","Returns the capacity of the queue.",1,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the queue is empty.",1,[[["self"]],["bool"]]],[11,"is_full","","Returns `true` if the queue is full.",1,[[["self"]],["bool"]]],[11,"len","","Returns the number of elements in the queue.",1,[[["self"]],["usize"]]],[11,"new","","Creates a new unbounded queue.",2,[[],["segqueue"]]],[11,"push","","Pushes an element into the queue.",2,[[["self"],["t"]]]],[11,"pop","","Pops an element from the queue.",2,[[["self"]],[["result",["poperror"]],["poperror"]]]],[11,"is_empty","","Returns `true` if the queue is empty.",2,[[["self"]],["bool"]]],[11,"len","","Returns the number of elements in the queue.",2,[[["self"]],["usize"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"drop","","",1,[[["self"]]]],[11,"drop","","",2,[[["self"]]]],[11,"clone","","",3,[[["self"]],["poperror"]]],[11,"clone","","",0,[[["self"]],["pusherror"]]],[11,"default","","",2,[[],["segqueue"]]],[11,"eq","","",3,[[["poperror"],["self"]],["bool"]]],[11,"eq","","",0,[[["pusherror"],["self"]],["bool"]]],[11,"ne","","",0,[[["pusherror"],["self"]],["bool"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]]],"p":[[3,"PushError"],[3,"ArrayQueue"],[3,"SegQueue"],[3,"PopError"]]};
searchIndex["crossbeam_utils"] = {"doc":"Miscellaneous tools for concurrent programming.","i":[[3,"CachePadded","crossbeam_utils","Pads and aligns a value to the length of a cache line.",null,null],[3,"Backoff","","Performs exponential backoff in spin loops.",null,null],[0,"atomic","","Atomic types.",null,null],[3,"AtomicCell","crossbeam_utils::atomic","A thread-safe mutable memory location.",null,null],[11,"new","","Creates a new atomic cell initialized with `val`.",0,[[["t"]],["atomiccell"]]],[11,"into_inner","","Unwraps the atomic cell and returns its inner value.",0,[[],["t"]]],[11,"is_lock_free","","Returns `true` if operations on values of this type are…",0,[[],["bool"]]],[11,"store","","Stores `val` into the atomic cell.",0,[[["self"],["t"]]]],[11,"swap","","Stores `val` into the atomic cell and returns the previous…",0,[[["self"],["t"]],["t"]]],[11,"as_ptr","","Returns a raw pointer to the underlying data in this…",0,[[["self"]]]],[11,"take","","Takes the value of the atomic cell, leaving…",0,[[["self"]],["t"]]],[11,"load","","Loads a value.",0,[[["self"]],["t"]]],[11,"compare_and_swap","","If the current value equals `current`, stores `new` into…",0,[[["self"],["t"]],["t"]]],[11,"compare_exchange","","If the current value equals `current`, stores `new` into…",0,[[["self"],["t"]],["result"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["u8"]],["u8"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["i8"],["self"]],["i8"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["i8"],["self"]],["i8"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["i8"],["self"]],["i8"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["i8"],["self"]],["i8"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["i8"],["self"]],["i8"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["u16"],["self"]],["u16"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["u16"],["self"]],["u16"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["u16"],["self"]],["u16"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["u16"],["self"]],["u16"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["u16"],["self"]],["u16"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["i16"]],["i16"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["u32"],["self"]],["u32"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["u32"],["self"]],["u32"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["u32"],["self"]],["u32"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["u32"],["self"]],["u32"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["u32"],["self"]],["u32"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["i32"]],["i32"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["u64"]],["u64"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["i64"],["self"]],["i64"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["i64"],["self"]],["i64"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["i64"],["self"]],["i64"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["i64"],["self"]],["i64"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["i64"],["self"]],["i64"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["self"],["usize"]],["usize"]]],[11,"fetch_add","","Increments the current value by `val` and returns the…",0,[[["isize"],["self"]],["isize"]]],[11,"fetch_sub","","Decrements the current value by `val` and returns the…",0,[[["isize"],["self"]],["isize"]]],[11,"fetch_and","","Applies bitwise \"and\" to the current value and returns the…",0,[[["isize"],["self"]],["isize"]]],[11,"fetch_or","","Applies bitwise \"or\" to the current value and returns the…",0,[[["isize"],["self"]],["isize"]]],[11,"fetch_xor","","Applies bitwise \"xor\" to the current value and returns the…",0,[[["isize"],["self"]],["isize"]]],[11,"fetch_and","","Applies logical \"and\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[11,"fetch_or","","Applies logical \"or\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[11,"fetch_xor","","Applies logical \"xor\" to the current value and returns the…",0,[[["self"],["bool"]],["bool"]]],[8,"AtomicConsume","","Trait which allows reading from primitive atomic types…",null,null],[16,"Val","","Type returned by `load_consume`.",1,null],[10,"load_consume","","Loads a value from the atomic using a \"consume\" memory…",1,[[["self"]]]],[11,"new","crossbeam_utils","Pads and aligns a value to the length of a cache line.",2,[[["t"]],["cachepadded"]]],[11,"into_inner","","Returns the inner value.",2,[[],["t"]]],[11,"new","","Creates a new `Backoff`.",3,[[],["self"]]],[11,"reset","","Resets the `Backoff`.",3,[[["self"]]]],[11,"spin","","Backs off in a lock-free loop.",3,[[["self"]]]],[11,"snooze","","Backs off in a blocking loop.",3,[[["self"]]]],[11,"is_completed","","Returns `true` if exponential backoff has completed and…",3,[[["self"]],["bool"]]],[0,"sync","","Thread synchronization primitives.",null,null],[3,"Parker","crossbeam_utils::sync","A thread parking primitive.",null,null],[3,"Unparker","","Unparks a thread parked by the associated [`Parker`].",null,null],[3,"ShardedLock","","A sharded reader-writer lock.",null,null],[3,"ShardedLockReadGuard","","A guard used to release the shared read access of a…",null,null],[3,"ShardedLockWriteGuard","","A guard used to release the exclusive write access of a…",null,null],[3,"WaitGroup","","Enables threads to synchronize the beginning or end of…",null,null],[11,"new","","Creates a new `Parker`.",4,[[],["parker"]]],[11,"park","","Blocks the current thread until the token is made available.",4,[[["self"]]]],[11,"park_timeout","","Blocks the current thread until the token is made…",4,[[["duration"],["self"]]]],[11,"unparker","","Returns a reference to an associated [`Unparker`].",4,[[["self"]],["unparker"]]],[11,"unpark","","Atomically makes the token available if it is not already.",5,[[["self"]]]],[11,"new","","Creates a new sharded reader-writer lock.",6,[[["t"]],["shardedlock"]]],[11,"into_inner","","Consumes this lock, returning the underlying data.",6,[[],["lockresult"]]],[11,"is_poisoned","","Returns `true` if the lock is poisoned.",6,[[["self"]],["bool"]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",6,[[["self"]],[["t"],["lockresult"]]]],[11,"try_read","","Attempts to acquire this lock with shared read access.",6,[[["self"]],[["shardedlockreadguard"],["trylockresult",["shardedlockreadguard"]]]]],[11,"read","","Locks with shared read access, blocking the current thread…",6,[[["self"]],[["shardedlockreadguard"],["lockresult",["shardedlockreadguard"]]]]],[11,"try_write","","Attempts to acquire this lock with exclusive write access.",6,[[["self"]],[["trylockresult",["shardedlockwriteguard"]],["shardedlockwriteguard"]]]],[11,"write","","Locks with exclusive write access, blocking the current…",6,[[["self"]],[["lockresult",["shardedlockwriteguard"]],["shardedlockwriteguard"]]]],[11,"new","","Creates a new wait group and returns the single reference…",7,[[],["waitgroup"]]],[11,"wait","","Drops this reference and waits until all other references…",7,[[]]],[0,"thread","crossbeam_utils","Threads that can borrow variables from the stack.",null,null],[3,"Scope","crossbeam_utils::thread","A scope for spawning threads.",null,null],[3,"ScopedThreadBuilder","","Configures the properties of a new thread.",null,null],[3,"ScopedJoinHandle","","A handle that can be used to join its scoped thread.",null,null],[5,"scope","","Creates a new scope for spawning threads.",null,[[["f"]],["result"]]],[11,"spawn","","Spawns a scoped thread.",8,[[["self"],["f"]],["scopedjoinhandle"]]],[11,"builder","","Creates a builder that can configure a thread before…",8,[[["self"]],["scopedthreadbuilder"]]],[11,"name","","Sets the name for the new thread.",9,[[["string"]],["scopedthreadbuilder"]]],[11,"stack_size","","Sets the size of the stack for the new thread.",9,[[["usize"]],["scopedthreadbuilder"]]],[11,"spawn","","Spawns a scoped thread with this configuration.",9,[[["f"]],[["result",["scopedjoinhandle"]],["scopedjoinhandle"]]]],[11,"join","","Waits for the thread to finish and returns its result.",10,[[],["result"]]],[11,"thread","","Returns a handle to the underlying thread.",10,[[["self"]],["thread"]]],[11,"from","crossbeam_utils","",2,[[["t"]],["t"]]],[11,"from","","",2,[[],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","crossbeam_utils::atomic","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","crossbeam_utils::sync","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"from","","",6,[[],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_string","","",11,[[["self"]],["string"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","crossbeam_utils::thread","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"drop","crossbeam_utils::sync","",12,[[["self"]]]],[11,"drop","","",7,[[["self"]]]],[11,"from","crossbeam_utils","",2,[[["t"]],["self"]]],[11,"from","crossbeam_utils::sync","",6,[[["t"]],["self"]]],[11,"clone","crossbeam_utils","",2,[[["self"]],["cachepadded"]]],[11,"clone","crossbeam_utils::sync","",5,[[["self"]],["unparker"]]],[11,"clone","","",7,[[["self"]],["waitgroup"]]],[11,"default","crossbeam_utils::atomic","",0,[[],["atomiccell"]]],[11,"default","crossbeam_utils","",2,[[],["cachepadded"]]],[11,"default","","",3,[[],["backoff"]]],[11,"default","crossbeam_utils::sync","",6,[[],["shardedlock"]]],[11,"eq","crossbeam_utils","",2,[[["self"],["cachepadded"]],["bool"]]],[11,"ne","","",2,[[["self"],["cachepadded"]],["bool"]]],[11,"deref","","",2,[[["self"]],["t"]]],[11,"deref","crossbeam_utils::sync","",11,[[["self"]],["t"]]],[11,"deref","","",12,[[["self"]],["t"]]],[11,"deref_mut","crossbeam_utils","",2,[[["self"]],["t"]]],[11,"deref_mut","crossbeam_utils::sync","",12,[[["self"]],["t"]]],[11,"fmt","crossbeam_utils::atomic","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","crossbeam_utils","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","crossbeam_utils::sync","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","crossbeam_utils::thread","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","crossbeam_utils::sync","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"hash","crossbeam_utils","",2,[[["self"],["__h"]]]]],"p":[[3,"AtomicCell"],[8,"AtomicConsume"],[3,"CachePadded"],[3,"Backoff"],[3,"Parker"],[3,"Unparker"],[3,"ShardedLock"],[3,"WaitGroup"],[3,"Scope"],[3,"ScopedThreadBuilder"],[3,"ScopedJoinHandle"],[3,"ShardedLockReadGuard"],[3,"ShardedLockWriteGuard"]]};
searchIndex["digest"] = {"doc":"This crate provides traits which describe functionality of…","i":[[3,"InvalidOutputSize","digest","The error type for variable hasher initialization",null,null],[8,"Digest","","The `Digest` trait specifies an interface common for…",null,null],[16,"OutputSize","","",0,null],[10,"new","","Create new hasher instance",0,[[],["self"]]],[10,"input","","Digest input data.",0,[[["asref"],["self"]]]],[10,"chain","","Digest input data in a chained manner.",0,[[["asref"]],["self"]]],[10,"result","","Retrieve result and consume hasher instance.",0,[[],[["genericarray",["u8"]],["u8"]]]],[10,"result_reset","","Retrieve result and reset hasher instance.",0,[[["self"]],[["genericarray",["u8"]],["u8"]]]],[10,"reset","","Reset hasher instance to its initial state.",0,[[["self"]]]],[10,"output_size","","Get output size of the hasher",0,[[],["usize"]]],[10,"digest","","Convenience function to compute hash of the `data`. It…",0,[[],[["genericarray",["u8"]],["u8"]]]],[8,"Input","","Trait for processing input data",null,null],[10,"input","","Digest input data.",1,[[["asref"],["self"]]]],[11,"chain","","Digest input data in a chained manner.",1,[[["asref"]],["self"]]],[8,"BlockInput","","Trait to indicate that digest function processes data in…",null,null],[16,"BlockSize","","",2,null],[8,"FixedOutput","","Trait for returning digest result with the fixed size",null,null],[16,"OutputSize","","",3,null],[10,"fixed_result","","Retrieve result and consume hasher instance.",3,[[],[["genericarray",["u8"]],["u8"]]]],[8,"VariableOutput","","Trait for returning digest result with the variable size",null,null],[10,"new","","Create new hasher instance with the given output size.",4,[[["usize"]],[["result",["invalidoutputsize"]],["invalidoutputsize"]]]],[10,"output_size","","Get output size of the hasher instance provided to the…",4,[[["self"]],["usize"]]],[10,"variable_result","","Retrieve result via closure and consume hasher.",4,[[["fnonce"]]]],[8,"XofReader","","Trait for describing readers which are used to extract…",null,null],[10,"read","","Read output into the `buffer`. Can be called unlimited…",5,[[["self"]]]],[8,"ExtendableOutput","","Trait which describes extendable-output functions (XOF).",null,null],[16,"Reader","","",6,null],[10,"xof_result","","Retrieve XOF reader and consume hasher instance.",6,[[]]],[8,"Reset","","Trait for resetting hash instances",null,null],[10,"reset","","Reset hasher instance to its initial state and return…",7,[[["self"]]]],[14,"impl_write","","Implements `std::io::Write` trait for implementer of `Input`",null,null],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"clone","","",8,[[["self"]],["invalidoutputsize"]]],[11,"default","","",8,[[],["invalidoutputsize"]]]],"p":[[8,"Digest"],[8,"Input"],[8,"BlockInput"],[8,"FixedOutput"],[8,"VariableOutput"],[8,"XofReader"],[8,"ExtendableOutput"],[8,"Reset"],[3,"InvalidOutputSize"]]};
searchIndex["either"] = {"doc":"The enum [`Either`] with variants `Left` and `Right` is a…","i":[[4,"Either","either","The enum `Either` with variants `Left` and `Right` is a…",null,null],[13,"Left","","A value of type `L`.",0,null],[13,"Right","","A value of type `R`.",0,null],[11,"is_left","","Return true if the value is the `Left` variant.",0,[[["self"]],["bool"]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[["self"]],["bool"]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[],["option"]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[],["option"]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[["self"]],[["either"],["l"],["r"]]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[["self"]],[["r"],["l"],["either"]]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[],["either"]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant…",0,[[["f"]],["either"]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant…",0,[[["f"]],["either"]]],[11,"either","","Apply one of two functions depending on contents, unifying…",0,[[["f"],["g"]],["t"]]],[11,"either_with","","Like `either`, but provide some context to whichever of…",0,[[["ctx"],["f"],["g"]],["t"]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant…",0,[[["f"]],["either"]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant…",0,[[["f"]],["either"]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[],["either"]]],[11,"left_or","","Return left value or given value",0,[[["l"]],["l"]]],[11,"left_or_default","","Return left or a default",0,[[],["l"]]],[11,"left_or_else","","Returns left value or computes it from a closure",0,[[["f"]],["l"]]],[11,"right_or","","Return right value or given value",0,[[["r"]],["r"]]],[11,"right_or_default","","Return right or a default",0,[[],["r"]]],[11,"right_or_else","","Returns right value or computes it from a closure",0,[[["f"]],["r"]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[],["t"]]],[11,"map","","Map `f` over the contained value and return the result in…",0,[[["f"]],["either"]]],[14,"try_left","","Macro for unwrapping the left side of an `Either`, which…",null,null],[14,"try_right","","Dual to `try_left!`, see its documentation for more…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"deref","","",0,[[["self"]]]],[11,"deref_mut","","",0,[[["self"]]]],[11,"from","","",0,[[["result"]],["self"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["either"],["self"]],["bool"]]],[11,"ne","","",0,[[["either"],["self"]],["bool"]]],[11,"cmp","","",0,[[["either"],["self"]],["ordering"]]],[11,"partial_cmp","","",0,[[["either"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["either"],["self"]],["bool"]]],[11,"le","","",0,[[["either"],["self"]],["bool"]]],[11,"gt","","",0,[[["either"],["self"]],["bool"]]],[11,"ge","","",0,[[["either"],["self"]],["bool"]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"next","","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,[[["self"]]]],[11,"fold","","",0,[[["acc"],["g"]],["acc"]]],[11,"count","","",0,[[],["usize"]]],[11,"last","","",0,[[],["option"]]],[11,"nth","","",0,[[["self"],["usize"]],["option"]]],[11,"collect","","",0,[[],["b"]]],[11,"all","","",0,[[["self"],["f"]],["bool"]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"extend","","",0,[[["self"],["t"]]]],[11,"as_ref","","",0,[[["self"]],["target"]]],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"as_ref","","",0,[[["self"]]]],[11,"as_mut","","",0,[[["self"]],["str"]]],[11,"as_mut","","",0,[[["self"]],["target"]]],[11,"as_mut","","",0,[[["self"]]]],[11,"into","","",0,[[],["result"]]],[11,"clone","","",0,[[["self"]],["either"]]]],"p":[[4,"Either"]]};
searchIndex["errno"] = {"doc":"Cross-platform interface to the `errno` variable.","i":[[3,"Errno","errno","Wraps a platform-specific error code.",null,null],[12,"0","","",0,null],[5,"errno","","Returns the platform-specific value of `errno`.",null,[[],["errno"]]],[5,"set_errno","","Sets the platform-specific value of `errno`.",null,[[["errno"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"into","","",0,[[],["i32"]]],[11,"clone","","",0,[[["self"]],["errno"]]],[11,"cmp","","",0,[[["self"],["errno"]],["ordering"]]],[11,"eq","","",0,[[["self"],["errno"]],["bool"]]],[11,"ne","","",0,[[["self"],["errno"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["errno"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",0,[[["self"],["errno"]],["bool"]]],[11,"le","","",0,[[["self"],["errno"]],["bool"]]],[11,"gt","","",0,[[["self"],["errno"]],["bool"]]],[11,"ge","","",0,[[["self"],["errno"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"hash","","",0,[[["self"],["__h"]]]]],"p":[[3,"Errno"]]};
searchIndex["generic_array"] = {"doc":"This crate implements a structure that can be used as a…","i":[[3,"GenericArray","generic_array","Struct representing a generic array - `GenericArray<T, N>`…",null,null],[0,"arr","","Implementation for `arr!` macro.",null,null],[6,"Inc","generic_array::arr","Helper type for `arr!` macro",null,null],[8,"AddLength","","Helper trait for `arr!` macro",null,null],[16,"Output","","Resulting length",0,null],[0,"functional","generic_array","Functional programming with generic sequences",null,null],[6,"MappedSequence","generic_array::functional","Accessor type for a mapped generic sequence",null,null],[8,"MappedGenericSequence","","Defines the relationship between one generic sequence and…",null,null],[16,"Mapped","","Mapped sequence type",1,null],[8,"FunctionalSequence","","Defines functional programming methods for generic sequences",null,null],[11,"map","","Maps a `GenericSequence` to another `GenericSequence`.",2,[[["f"]],["mappedsequence"]]],[11,"zip","","Combines two `GenericSequence` instances and iterates…",2,[[["rhs"],["f"]],["mappedsequence"]]],[11,"fold","","Folds (or reduces) a sequence of data into a single value.",2,[[["u"],["f"]],["u"]]],[0,"iter","generic_array","`GenericArray` iterator implementation.",null,null],[3,"GenericArrayIter","generic_array::iter","An iterator that moves out of a `GenericArray`",null,null],[11,"as_slice","","Returns the remaining items of this iterator as a slice",3,[[["self"]]]],[11,"as_mut_slice","","Returns the remaining items of this iterator as a mutable…",3,[[["self"]]]],[0,"sequence","generic_array","Useful traits for manipulating sequences of data stored in…",null,null],[6,"SequenceItem","generic_array::sequence","Accessor for `GenericSequence` item type, which is really…",null,null],[8,"GenericSequence","","Defines some sequence with an associated length and…",null,null],[16,"Length","","`GenericArray` associated length",4,null],[16,"Sequence","","Concrete sequence type used in conjuction with reference…",4,null],[10,"generate","","Initializes a new sequence instance using the given…",4,[[["f"]]]],[8,"Lengthen","","Defines any `GenericSequence` which can be lengthened or…",null,null],[16,"Longer","","`GenericSequence` that has one more element than `Self`",5,null],[10,"append","","Returns a new array with the given element appended to the…",5,[[["t"]]]],[10,"prepend","","Returns a new array with the given element prepended to…",5,[[["t"]]]],[8,"Shorten","","Defines a `GenericSequence` which can be shortened by…",null,null],[16,"Shorter","","`GenericSequence` that has one less element than `Self`",6,null],[10,"pop_back","","Returns a new array without the last element, and the last…",6,[[]]],[10,"pop_front","","Returns a new array without the first element, and the…",6,[[]]],[8,"Split","","Defines a `GenericSequence` that can be split into two…",null,null],[16,"First","","First part of the resulting split array",7,null],[16,"Second","","Second part of the resulting split array",7,null],[10,"split","","Splits an array at the given index, returning the separate…",7,[[]]],[8,"Concat","","Defines `GenericSequence`s which can be joined together,…",null,null],[16,"Rest","","Sequence to be concatenated with `self`",8,null],[16,"Output","","Resulting sequence formed by the concatenation.",8,null],[10,"concat","","Concatenate, or join, two sequences.",8,[[]]],[8,"ArrayLength","generic_array","Trait making `GenericArray` work, marking types to be used…",null,null],[16,"ArrayType","","Associated type representing the array type for the number",9,null],[11,"as_slice","","Extracts a slice containing the entire array.",10,[[["self"]]]],[11,"as_mut_slice","","Extracts a mutable slice containing the entire array.",10,[[["self"]]]],[11,"from_slice","","Converts slice to a generic array reference with inferred…",10,[[],["genericarray"]]],[11,"from_mut_slice","","Converts mutable slice to a mutable generic array reference",10,[[],["genericarray"]]],[11,"clone_from_slice","","Construct a `GenericArray` from a slice by cloning its…",10,[[],["genericarray"]]],[11,"from_exact_iter","","Creates a new `GenericArray` instance from an iterator…",10,[[["i"]],["option"]]],[14,"arr","","Macro allowing for easy generation of Generic Arrays.…",null,null],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","generic_array::iter","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"map","generic_array","",10,[[["f"]],["mappedsequence"]]],[11,"zip","","",10,[[["rhs"],["f"]],["mappedsequence"]]],[11,"fold","","",10,[[["u"],["f"]],["u"]]],[11,"generate","","",10,[[["f"]],["genericarray"]]],[11,"append","","",10,[[["t"]]]],[11,"prepend","","",10,[[["t"]]]],[11,"pop_back","","",10,[[]]],[11,"pop_front","","",10,[[]]],[11,"split","","",10,[[]]],[11,"concat","","",10,[[]]],[11,"deref","","",10,[[["self"]]]],[11,"deref_mut","","",10,[[["self"]]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"from","","",10,[[],["self"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","generic_array::iter","",3,[[["self"],["formatter"]],["result"]]],[11,"eq","generic_array","",10,[[["self"]],["bool"]]],[11,"cmp","","",10,[[["self"],["genericarray"]],["ordering"]]],[11,"partial_cmp","","",10,[[["self"],["genericarray"]],[["option",["ordering"]],["ordering"]]]],[11,"drop","generic_array::iter","",3,[[["self"]]]],[11,"hash","generic_array","",10,[[["self"],["h"]]]],[11,"next","generic_array::iter","",3,[[["self"]],["option"]]],[11,"size_hint","","",3,[[["self"]]]],[11,"count","","",3,[[],["usize"]]],[11,"nth","","",3,[[["self"],["usize"]],["option"]]],[11,"last","","",3,[[],["option"]]],[11,"from_iter","generic_array","",10,[[["i"]],["genericarray"]]],[11,"into_iter","","",10,[[]]],[11,"next_back","generic_array::iter","",3,[[["self"]],["option"]]],[11,"len","","",3,[[["self"]],["usize"]]],[11,"as_ref","generic_array","",10,[[["self"]]]],[11,"as_mut","","",10,[[["self"]]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into","","",10,[[]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"clone","","",10,[[["self"]],["genericarray"]]],[11,"clone","generic_array::iter","",3,[[["self"]],["self"]]],[11,"default","generic_array","",10,[[],["self"]]],[11,"borrow","","",10,[[["self"]]]],[11,"borrow_mut","","",10,[[["self"]]]]],"p":[[8,"AddLength"],[8,"MappedGenericSequence"],[8,"FunctionalSequence"],[3,"GenericArrayIter"],[8,"GenericSequence"],[8,"Lengthen"],[8,"Shorten"],[8,"Split"],[8,"Concat"],[8,"ArrayLength"],[3,"GenericArray"]]};
searchIndex["hex"] = {"doc":"Encoding and decoding hex strings.","i":[[4,"FromHexError","hex","The error type for decoding a hex string into `Vec<u8>` or…",null,null],[13,"InvalidHexCharacter","","An invalid character was found. Valid ones are: `0...9`,…",0,null],[12,"c","hex::FromHexError","",0,null],[12,"index","","",0,null],[13,"OddLength","hex","A hex string's length needs to be even, as two digits…",0,null],[13,"InvalidStringLength","","If the hex string is decoded into a fixed sized container,…",0,null],[5,"encode","","Encodes `data` as hex string using lowercase characters.",null,[[["asref"]],["string"]]],[5,"encode_upper","","Encodes `data` as hex string using uppercase characters.",null,[[["asref"]],["string"]]],[5,"decode","","Decodes a hex string into raw bytes.",null,[[["asref"]],[["fromhexerror"],["result",["vec","fromhexerror"]],["vec",["u8"]]]]],[8,"ToHex","","Encoding values as hex string.",null,null],[10,"write_hex","","Writes the hex string representing `self` into `w`. Lower…",1,[[["w"],["self"]],["result"]]],[10,"write_hex_upper","","Writes the hex string representing `self` into `w`. Upper…",1,[[["w"],["self"]],["result"]]],[8,"FromHex","","Types that can be decoded from a hex string.",null,null],[16,"Error","","",2,null],[10,"from_hex","","Creates an instance of type `Self` from the given hex…",2,[[["asref"]],["result"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",0,[[["self"]],["fromhexerror"]]],[11,"eq","","",0,[[["self"],["fromhexerror"]],["bool"]]],[11,"ne","","",0,[[["self"],["fromhexerror"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"description","","",0,[[["self"]],["str"]]]],"p":[[4,"FromHexError"],[8,"ToHex"],[8,"FromHex"]]};
searchIndex["indexmap"] = {"doc":"[`IndexMap`] is a hash table where the iteration order of…","i":[[0,"map","indexmap","`IndexMap` is a hash table where the iteration order of…",null,null],[3,"IndexMap","indexmap::map","A hash table where the iteration order of the key-value…",null,null],[3,"OccupiedEntry","","A view into an occupied entry in a `IndexMap`. It is part…",null,null],[3,"VacantEntry","","A view into a vacant entry in a `IndexMap`. It is part of…",null,null],[3,"Keys","","An iterator over the keys of a `IndexMap`.",null,null],[3,"Values","","An iterator over the values of a `IndexMap`.",null,null],[3,"ValuesMut","","A mutable iterator over the values of a `IndexMap`.",null,null],[3,"Iter","","An iterator over the entries of a `IndexMap`.",null,null],[3,"IterMut","","A mutable iterator over the entries of a `IndexMap`.",null,null],[3,"IntoIter","","An owning iterator over the entries of a `IndexMap`.",null,null],[3,"Drain","","A draining iterator over the entries of a `IndexMap`.",null,null],[4,"Entry","","Entry for an existing key-value pair or a vacant location…",null,null],[13,"Occupied","","Existing slot with equivalent key.",0,null],[13,"Vacant","","Vacant slot (no equivalent key in the map).",0,null],[8,"MutableKeys","","Opt-in mutable access to keys.",null,null],[16,"Key","","",1,null],[16,"Value","","",1,null],[10,"get_full_mut2","","Return item index, mutable reference to key and value",1,[[["self"],["q"]],["option"]]],[10,"retain2","","Scan through each key-value pair in the map and keep those…",1,[[["self"],["f"]]]],[10,"__private_marker","","This method is not useful in itself – it is there to…",1,[[["self"]],["privatemarker"]]],[11,"new","","Create a new map. (Does not allocate.)",2,[[],["self"]]],[11,"with_capacity","","Create a new map with capacity for `n` key-value pairs.…",2,[[["usize"]],["self"]]],[11,"with_capacity_and_hasher","","Create a new map with capacity for `n` key-value pairs.…",2,[[["s"],["usize"]],["self"]]],[11,"len","","Return the number of key-value pairs in the map.",2,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the map contains no elements.",2,[[["self"]],["bool"]]],[11,"with_hasher","","Create a new map with `hash_builder`",2,[[["s"]],["self"]]],[11,"hasher","","Return a reference to the map's `BuildHasher`.",2,[[["self"]],["s"]]],[11,"capacity","","Computes in O(1) time.",2,[[["self"]],["usize"]]],[11,"or_insert","","Computes in O(1) time (amortized average).",0,[[["v"]],["v"]]],[11,"or_insert_with","","Computes in O(1) time (amortized average).",0,[[["f"]],["v"]]],[11,"key","","",0,[[["self"]],["k"]]],[11,"index","","Return the index where the key-value pair exists or will…",0,[[["self"]],["usize"]]],[11,"and_modify","","Modifies the entry if it is occupied.",0,[[["f"]],["self"]]],[11,"or_default","","Inserts a default-constructed value in the entry if it is…",0,[[],["v"]]],[11,"key","","",3,[[["self"]],["k"]]],[11,"get","","",3,[[["self"]],["v"]]],[11,"get_mut","","",3,[[["self"]],["v"]]],[11,"index","","Return the index of the key-value pair",3,[[["self"]],["usize"]]],[11,"into_mut","","",3,[[],["v"]]],[11,"insert","","Sets the value of the entry to `value`, and returns the…",3,[[["self"],["v"]],["v"]]],[11,"remove","","Remove the key, value pair stored in the map for this…",3,[[],["v"]]],[11,"swap_remove","","Remove the key, value pair stored in the map for this…",3,[[],["v"]]],[11,"shift_remove","","Remove the key, value pair stored in the map for this…",3,[[],["v"]]],[11,"remove_entry","","Remove and return the key, value pair stored in the map…",3,[[]]],[11,"swap_remove_entry","","Remove and return the key, value pair stored in the map…",3,[[]]],[11,"shift_remove_entry","","Remove and return the key, value pair stored in the map…",3,[[]]],[11,"key","","",4,[[["self"]],["k"]]],[11,"into_key","","",4,[[],["k"]]],[11,"index","","Return the index where the key-value pair will be inserted.",4,[[["self"]],["usize"]]],[11,"insert","","",4,[[["v"]],["v"]]],[11,"clear","","Remove all key-value pairs in the map, while preserving…",2,[[["self"]]]],[11,"reserve","","Reserve capacity for `additional` more key-value pairs.",2,[[["self"],["usize"]]]],[11,"insert","","Insert a key-value pair in the map.",2,[[["self"],["k"],["v"]],["option"]]],[11,"insert_full","","Insert a key-value pair in the map, and get their index.",2,[[["self"],["k"],["v"]]]],[11,"entry","","Get the given key’s corresponding entry in the map for…",2,[[["self"],["k"]],["entry"]]],[11,"iter","","Return an iterator over the key-value pairs of the map, in…",2,[[["self"]],["iter"]]],[11,"iter_mut","","Return an iterator over the key-value pairs of the map, in…",2,[[["self"]],["itermut"]]],[11,"keys","","Return an iterator over the keys of the map, in their order",2,[[["self"]],["keys"]]],[11,"values","","Return an iterator over the values of the map, in their…",2,[[["self"]],["values"]]],[11,"values_mut","","Return an iterator over mutable references to the the…",2,[[["self"]],["valuesmut"]]],[11,"contains_key","","Return `true` if an equivalent to `key` exists in the map.",2,[[["self"],["q"]],["bool"]]],[11,"get","","Return a reference to the value stored for `key`, if it is…",2,[[["self"],["q"]],[["option"],["v"]]]],[11,"get_full","","Return item index, key and value",2,[[["self"],["q"]],["option"]]],[11,"get_mut","","",2,[[["self"],["q"]],[["option"],["v"]]]],[11,"get_full_mut","","",2,[[["self"],["q"]],["option"]]],[11,"remove","","Remove the key-value pair equivalent to `key` and return…",2,[[["self"],["q"]],["option"]]],[11,"swap_remove","","Remove the key-value pair equivalent to `key` and return…",2,[[["self"],["q"]],["option"]]],[11,"swap_remove_full","","Remove the key-value pair equivalent to `key` and return…",2,[[["self"],["q"]],["option"]]],[11,"shift_remove","","Remove the key-value pair equivalent to `key` and return…",2,[[["self"],["q"]],["option"]]],[11,"shift_remove_full","","Remove the key-value pair equivalent to `key` and return…",2,[[["self"],["q"]],["option"]]],[11,"pop","","Remove the last key-value pair",2,[[["self"]],["option"]]],[11,"retain","","Scan through each key-value pair in the map and keep those…",2,[[["self"],["f"]]]],[11,"sort_keys","","Sort the map’s key-value pairs by the default ordering of…",2,[[["self"]]]],[11,"sort_by","","Sort the map’s key-value pairs in place using the…",2,[[["self"],["f"]]]],[11,"sorted_by","","Sort the key-value pairs of the map and return a by value…",2,[[["f"]],["intoiter"]]],[11,"drain","","Clears the `IndexMap`, returning all key-value pairs as a…",2,[[["rangefull"],["self"]],["drain"]]],[11,"get_index","","Get a key-value pair by index",2,[[["self"],["usize"]],["option"]]],[11,"get_index_mut","","Get a key-value pair by index",2,[[["self"],["usize"]],["option"]]],[11,"swap_remove_index","","Remove the key-value pair by index",2,[[["self"],["usize"]],["option"]]],[11,"shift_remove_index","","Remove the key-value pair by index",2,[[["self"],["usize"]],["option"]]],[0,"set","indexmap","A hash set implemented using `IndexMap`",null,null],[3,"IndexSet","indexmap::set","A hash set where the iteration order of the values is…",null,null],[3,"IntoIter","","An owning iterator over the items of a `IndexSet`.",null,null],[3,"Iter","","An iterator over the items of a `IndexSet`.",null,null],[3,"Drain","","A draining iterator over the items of a `IndexSet`.",null,null],[3,"Difference","","A lazy iterator producing elements in the difference of…",null,null],[3,"Intersection","","A lazy iterator producing elements in the intersection of…",null,null],[3,"SymmetricDifference","","A lazy iterator producing elements in the symmetric…",null,null],[3,"Union","","A lazy iterator producing elements in the union of…",null,null],[11,"new","","Create a new set. (Does not allocate.)",5,[[],["self"]]],[11,"with_capacity","","Create a new set with capacity for `n` elements. (Does not…",5,[[["usize"]],["self"]]],[11,"with_capacity_and_hasher","","Create a new set with capacity for `n` elements. (Does not…",5,[[["s"],["usize"]],["self"]]],[11,"len","","Return the number of elements in the set.",5,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if the set contains no elements.",5,[[["self"]],["bool"]]],[11,"with_hasher","","Create a new set with `hash_builder`",5,[[["s"]],["self"]]],[11,"hasher","","Return a reference to the set's `BuildHasher`.",5,[[["self"]],["s"]]],[11,"capacity","","Computes in O(1) time.",5,[[["self"]],["usize"]]],[11,"clear","","Remove all elements in the set, while preserving its…",5,[[["self"]]]],[11,"reserve","","FIXME Not implemented fully yet",5,[[["self"],["usize"]]]],[11,"insert","","Insert the value into the set.",5,[[["self"],["t"]],["bool"]]],[11,"insert_full","","Insert the value into the set, and get its index.",5,[[["self"],["t"]]]],[11,"iter","","Return an iterator over the values of the set, in their…",5,[[["self"]],["iter"]]],[11,"difference","","Return an iterator over the values that are in `self` but…",5,[[["indexset"],["self"]],["difference"]]],[11,"symmetric_difference","","Return an iterator over the values that are in `self` or…",5,[[["indexset"],["self"]],["symmetricdifference"]]],[11,"intersection","","Return an iterator over the values that are in both `self`…",5,[[["indexset"],["self"]],["intersection"]]],[11,"union","","Return an iterator over all values that are in `self` or…",5,[[["indexset"],["self"]],["union"]]],[11,"contains","","Return `true` if an equivalent to `value` exists in the set.",5,[[["self"],["q"]],["bool"]]],[11,"get","","Return a reference to the value stored in the set, if it…",5,[[["self"],["q"]],[["t"],["option"]]]],[11,"get_full","","Return item index and value",5,[[["self"],["q"]],["option"]]],[11,"replace","","Adds a value to the set, replacing the existing value, if…",5,[[["self"],["t"]],["option"]]],[11,"remove","","Remove the value from the set, and return `true` if it was…",5,[[["self"],["q"]],["bool"]]],[11,"swap_remove","","Remove the value from the set, and return `true` if it was…",5,[[["self"],["q"]],["bool"]]],[11,"shift_remove","","Remove the value from the set, and return `true` if it was…",5,[[["self"],["q"]],["bool"]]],[11,"take","","Removes and returns the value in the set, if any, that is…",5,[[["self"],["q"]],["option"]]],[11,"swap_take","","Removes and returns the value in the set, if any, that is…",5,[[["self"],["q"]],["option"]]],[11,"shift_take","","Removes and returns the value in the set, if any, that is…",5,[[["self"],["q"]],["option"]]],[11,"swap_remove_full","","Remove the value from the set return it and the index it…",5,[[["self"],["q"]],["option"]]],[11,"shift_remove_full","","Remove the value from the set return it and the index it…",5,[[["self"],["q"]],["option"]]],[11,"pop","","Remove the last value",5,[[["self"]],["option"]]],[11,"retain","","Scan through each value in the set and keep those where…",5,[[["self"],["f"]]]],[11,"sort","","Sort the set’s values by their default ordering.",5,[[["self"]]]],[11,"sort_by","","Sort the set’s values in place using the comparison…",5,[[["self"],["f"]]]],[11,"sorted_by","","Sort the values of the set and return a by value iterator…",5,[[["f"]],["intoiter"]]],[11,"drain","","Clears the `IndexSet`, returning all values as a drain…",5,[[["rangefull"],["self"]],["drain"]]],[11,"get_index","","Get a value by index",5,[[["self"],["usize"]],[["t"],["option"]]]],[11,"swap_remove_index","","Remove the key-value pair by index",5,[[["self"],["usize"]],["option"]]],[11,"shift_remove_index","","Remove the key-value pair by index",5,[[["self"],["usize"]],["option"]]],[11,"is_disjoint","","Returns `true` if `self` has no elements in common with…",5,[[["indexset"],["self"]],["bool"]]],[11,"is_subset","","Returns `true` if all elements of `self` are contained in…",5,[[["indexset"],["self"]],["bool"]]],[11,"is_superset","","Returns `true` if all elements of `other` are contained in…",5,[[["indexset"],["self"]],["bool"]]],[8,"Equivalent","indexmap","Key equivalence trait.",null,null],[10,"equivalent","","Compare self to `key` and return `true` if they are equal.",6,[[["k"],["self"]],["bool"]]],[14,"indexmap","","Create an `IndexMap` from a list of key-value pairs",null,null],[14,"indexset","","Create an `IndexSet` from a list of values",null,null],[11,"from","indexmap::map","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"into_iter","","",7,[[],["i"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"into_iter","","",8,[[],["i"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"into_iter","","",9,[[],["i"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"into_iter","","",11,[[],["i"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"into_iter","","",12,[[],["i"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"into_iter","","",13,[[],["i"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","indexmap::set","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"into_iter","","",14,[[],["i"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"into_iter","","",15,[[],["i"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"into_iter","","",16,[[],["i"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"into_iter","","",17,[[],["i"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"into_iter","","",18,[[],["i"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"into_iter","","",19,[[],["i"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"into_iter","","",20,[[],["i"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"get_full_mut2","indexmap::map","",2,[[["self"],["q"]],["option"]]],[11,"retain2","","",2,[[["self"],["f"]]]],[11,"__private_marker","","",2,[[["self"]],["privatemarker"]]],[11,"next_back","","",7,[[["self"]],[["option"],["k"]]]],[11,"next_back","","",8,[[["self"]],["option"]]],[11,"next_back","","",9,[[["self"]],["option"]]],[11,"next_back","","",10,[[["self"]],["option"]]],[11,"next_back","","",11,[[["self"]],["option"]]],[11,"next_back","","",12,[[["self"]],["option"]]],[11,"next_back","","",13,[[["self"]],["option"]]],[11,"next_back","indexmap::set","",14,[[["self"]],["option"]]],[11,"next_back","","",15,[[["self"]],["option"]]],[11,"next_back","","",16,[[["self"]],["option"]]],[11,"next_back","","",17,[[["self"]],["option"]]],[11,"next_back","","",18,[[["self"]],["option"]]],[11,"next_back","","",19,[[["self"]],["option"]]],[11,"next_back","","",20,[[["self"]],["option"]]],[11,"len","indexmap::map","",7,[[["self"]],["usize"]]],[11,"len","","",8,[[["self"]],["usize"]]],[11,"len","","",9,[[["self"]],["usize"]]],[11,"len","","",10,[[["self"]],["usize"]]],[11,"len","","",11,[[["self"]],["usize"]]],[11,"len","","",12,[[["self"]],["usize"]]],[11,"len","indexmap::set","",14,[[["self"]],["usize"]]],[11,"len","","",15,[[["self"]],["usize"]]],[11,"extend","indexmap::map","Extend the map with all key-value pairs in the iterable.",2,[[["self"],["intoiterator"]]]],[11,"extend","","Extend the map with all key-value pairs in the iterable.",2,[[["intoiterator"],["self"]]]],[11,"extend","indexmap::set","",5,[[["intoiterator"],["self"]]]],[11,"extend","","",5,[[["intoiterator"],["self"]]]],[11,"into_iter","indexmap::map","",2,[[]]],[11,"into_iter","indexmap::set","",5,[[]]],[11,"next","indexmap::map","",7,[[["self"]],["option"]]],[11,"size_hint","","",7,[[["self"]]]],[11,"count","","",7,[[],["usize"]]],[11,"nth","","",7,[[["self"],["usize"]],["option"]]],[11,"last","","",7,[[],["option"]]],[11,"collect","","",7,[[],["c"]]],[11,"next","","",8,[[["self"]],["option"]]],[11,"size_hint","","",8,[[["self"]]]],[11,"count","","",8,[[],["usize"]]],[11,"nth","","",8,[[["self"],["usize"]],["option"]]],[11,"last","","",8,[[],["option"]]],[11,"collect","","",8,[[],["c"]]],[11,"next","","",9,[[["self"]],["option"]]],[11,"size_hint","","",9,[[["self"]]]],[11,"count","","",9,[[],["usize"]]],[11,"nth","","",9,[[["self"],["usize"]],["option"]]],[11,"last","","",9,[[],["option"]]],[11,"collect","","",9,[[],["c"]]],[11,"next","","",10,[[["self"]],["option"]]],[11,"size_hint","","",10,[[["self"]]]],[11,"count","","",10,[[],["usize"]]],[11,"nth","","",10,[[["self"],["usize"]],["option"]]],[11,"last","","",10,[[],["option"]]],[11,"collect","","",10,[[],["c"]]],[11,"next","","",11,[[["self"]],["option"]]],[11,"size_hint","","",11,[[["self"]]]],[11,"count","","",11,[[],["usize"]]],[11,"nth","","",11,[[["self"],["usize"]],["option"]]],[11,"last","","",11,[[],["option"]]],[11,"collect","","",11,[[],["c"]]],[11,"next","","",12,[[["self"]],["option"]]],[11,"size_hint","","",12,[[["self"]]]],[11,"count","","",12,[[],["usize"]]],[11,"nth","","",12,[[["self"],["usize"]],["option"]]],[11,"last","","",12,[[],["option"]]],[11,"collect","","",12,[[],["c"]]],[11,"next","","",13,[[["self"]],["option"]]],[11,"size_hint","","",13,[[["self"]]]],[11,"count","","",13,[[],["usize"]]],[11,"nth","","",13,[[["self"],["usize"]],["option"]]],[11,"last","","",13,[[],["option"]]],[11,"collect","","",13,[[],["c"]]],[11,"next","indexmap::set","",14,[[["self"]],["option"]]],[11,"size_hint","","",14,[[["self"]]]],[11,"count","","",14,[[],["usize"]]],[11,"nth","","",14,[[["self"],["usize"]],["option"]]],[11,"last","","",14,[[],["option"]]],[11,"collect","","",14,[[],["c"]]],[11,"next","","",15,[[["self"]],["option"]]],[11,"size_hint","","",15,[[["self"]]]],[11,"count","","",15,[[],["usize"]]],[11,"nth","","",15,[[["self"],["usize"]],["option"]]],[11,"last","","",15,[[],["option"]]],[11,"collect","","",15,[[],["c"]]],[11,"next","","",16,[[["self"]],["option"]]],[11,"size_hint","","",16,[[["self"]]]],[11,"count","","",16,[[],["usize"]]],[11,"nth","","",16,[[["self"],["usize"]],["option"]]],[11,"last","","",16,[[],["option"]]],[11,"collect","","",16,[[],["c"]]],[11,"next","","",17,[[["self"]],["option"]]],[11,"size_hint","","",17,[[["self"]]]],[11,"next","","",18,[[["self"]],["option"]]],[11,"size_hint","","",18,[[["self"]]]],[11,"next","","",19,[[["self"]],["option"]]],[11,"size_hint","","",19,[[["self"]]]],[11,"fold","","",19,[[["b"],["f"]],["b"]]],[11,"next","","",20,[[["self"]],["option"]]],[11,"size_hint","","",20,[[["self"]]]],[11,"fold","","",20,[[["b"],["f"]],["b"]]],[11,"clone","indexmap::map","",2,[[["self"]],["indexmap"]]],[11,"clone","","",7,[[["self"]],["keys"]]],[11,"clone","","",8,[[["self"]],["values"]]],[11,"clone","","",10,[[["self"]],["iter"]]],[11,"clone","indexmap::set","",5,[[["self"]],["indexset"]]],[11,"clone","","",15,[[["self"]],["self"]]],[11,"clone","","",17,[[["self"]],["self"]]],[11,"clone","","",18,[[["self"]],["self"]]],[11,"clone","","",19,[[["self"]],["self"]]],[11,"clone","","",20,[[["self"]],["self"]]],[11,"default","indexmap::map","Return an empty `IndexMap`",2,[[],["self"]]],[11,"default","indexmap::set","Return an empty `IndexSet`",5,[[],["self"]]],[11,"eq","indexmap::map","",2,[[["indexmap"],["self"]],["bool"]]],[11,"eq","indexmap::set","",5,[[["indexset"],["self"]],["bool"]]],[11,"fmt","indexmap::map","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","indexmap::set","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"index","indexmap::map","Panics if `key` is not present in the map.",2,[[["self"],["q"]],["v"]]],[11,"index_mut","","Panics if `key` is not present in the map.",2,[[["self"],["q"]],["v"]]],[11,"from_iter","","Create an `IndexMap` from the sequence of key-value pairs…",2,[[["intoiterator"]],["self"]]],[11,"from_iter","indexmap::set","",5,[[["intoiterator"]],["self"]]],[11,"into_deserializer","indexmap::map","",2,[[]]],[11,"into_deserializer","indexmap::set","",5,[[]]],[11,"serialize","indexmap::map","",2,[[["self"],["t"]],["result"]]],[11,"serialize","indexmap::set","",5,[[["self"],["se"]],["result"]]],[11,"deserialize","indexmap::map","",2,[[["d"]],["result"]]],[11,"deserialize","indexmap::set","",5,[[["d"]],["result"]]]],"p":[[4,"Entry"],[8,"MutableKeys"],[3,"IndexMap"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"IndexSet"],[8,"Equivalent"],[3,"Keys"],[3,"Values"],[3,"ValuesMut"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"IntoIter"],[3,"Iter"],[3,"Drain"],[3,"Difference"],[3,"Intersection"],[3,"SymmetricDifference"],[3,"Union"]]};
searchIndex["lazy_static"] = {"doc":"A macro for declaring lazily evaluated statics.","i":[[5,"initialize","lazy_static","Takes a shared reference to a lazy static and initializes…",null,[[["t"]]]],[8,"LazyStatic","","Support trait for enabling a few common operation on lazy…",null,null],[14,"lazy_static","","",null,null]],"p":[]};
searchIndex["libc"] = {"doc":"libc - Raw FFI bindings to platforms' system libraries","i":[[4,"c_void","libc","Equivalent to C's `void` type when used as a [pointer].",null,null],[3,"group","","",null,null],[12,"gr_name","","",0,null],[12,"gr_passwd","","",0,null],[12,"gr_gid","","",0,null],[12,"gr_mem","","",0,null],[3,"utimbuf","","",null,null],[12,"actime","","",1,null],[12,"modtime","","",1,null],[3,"timeval","","",null,null],[12,"tv_sec","","",2,null],[12,"tv_usec","","",2,null],[3,"timespec","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_nsec","","",3,null],[3,"rlimit","","",null,null],[12,"rlim_cur","","",4,null],[12,"rlim_max","","",4,null],[3,"rusage","","",null,null],[12,"ru_utime","","",5,null],[12,"ru_stime","","",5,null],[12,"ru_maxrss","","",5,null],[12,"ru_ixrss","","",5,null],[12,"ru_idrss","","",5,null],[12,"ru_isrss","","",5,null],[12,"ru_minflt","","",5,null],[12,"ru_majflt","","",5,null],[12,"ru_nswap","","",5,null],[12,"ru_inblock","","",5,null],[12,"ru_oublock","","",5,null],[12,"ru_msgsnd","","",5,null],[12,"ru_msgrcv","","",5,null],[12,"ru_nsignals","","",5,null],[12,"ru_nvcsw","","",5,null],[12,"ru_nivcsw","","",5,null],[3,"ipv6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",6,null],[12,"ipv6mr_interface","","",6,null],[3,"hostent","","",null,null],[12,"h_name","","",7,null],[12,"h_aliases","","",7,null],[12,"h_addrtype","","",7,null],[12,"h_length","","",7,null],[12,"h_addr_list","","",7,null],[3,"iovec","","",null,null],[12,"iov_base","","",8,null],[12,"iov_len","","",8,null],[3,"pollfd","","",null,null],[12,"fd","","",9,null],[12,"events","","",9,null],[12,"revents","","",9,null],[3,"winsize","","",null,null],[12,"ws_row","","",10,null],[12,"ws_col","","",10,null],[12,"ws_xpixel","","",10,null],[12,"ws_ypixel","","",10,null],[3,"linger","","",null,null],[12,"l_onoff","","",11,null],[12,"l_linger","","",11,null],[3,"sigval","","",null,null],[12,"sival_ptr","","",12,null],[3,"itimerval","","",null,null],[12,"it_interval","","",13,null],[12,"it_value","","",13,null],[3,"tms","","",null,null],[12,"tms_utime","","",14,null],[12,"tms_stime","","",14,null],[12,"tms_cutime","","",14,null],[12,"tms_cstime","","",14,null],[3,"servent","","",null,null],[12,"s_name","","",15,null],[12,"s_aliases","","",15,null],[12,"s_port","","",15,null],[12,"s_proto","","",15,null],[3,"protoent","","",null,null],[12,"p_name","","",16,null],[12,"p_aliases","","",16,null],[12,"p_proto","","",16,null],[3,"sockaddr","","",null,null],[12,"sa_len","","",17,null],[12,"sa_family","","",17,null],[12,"sa_data","","",17,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_len","","",18,null],[12,"sin6_family","","",18,null],[12,"sin6_port","","",18,null],[12,"sin6_flowinfo","","",18,null],[12,"sin6_addr","","",18,null],[12,"sin6_scope_id","","",18,null],[3,"passwd","","",null,null],[12,"pw_name","","",19,null],[12,"pw_passwd","","",19,null],[12,"pw_uid","","",19,null],[12,"pw_gid","","",19,null],[12,"pw_change","","",19,null],[12,"pw_class","","",19,null],[12,"pw_gecos","","",19,null],[12,"pw_dir","","",19,null],[12,"pw_shell","","",19,null],[12,"pw_expire","","",19,null],[3,"ifaddrs","","",null,null],[12,"ifa_next","","",20,null],[12,"ifa_name","","",20,null],[12,"ifa_flags","","",20,null],[12,"ifa_addr","","",20,null],[12,"ifa_netmask","","",20,null],[12,"ifa_dstaddr","","",20,null],[12,"ifa_data","","",20,null],[3,"fd_set","","",null,null],[3,"tm","","",null,null],[12,"tm_sec","","",21,null],[12,"tm_min","","",21,null],[12,"tm_hour","","",21,null],[12,"tm_mday","","",21,null],[12,"tm_mon","","",21,null],[12,"tm_year","","",21,null],[12,"tm_wday","","",21,null],[12,"tm_yday","","",21,null],[12,"tm_isdst","","",21,null],[12,"tm_gmtoff","","",21,null],[12,"tm_zone","","",21,null],[3,"msghdr","","",null,null],[12,"msg_name","","",22,null],[12,"msg_namelen","","",22,null],[12,"msg_iov","","",22,null],[12,"msg_iovlen","","",22,null],[12,"msg_control","","",22,null],[12,"msg_controllen","","",22,null],[12,"msg_flags","","",22,null],[3,"cmsghdr","","",null,null],[12,"cmsg_len","","",23,null],[12,"cmsg_level","","",23,null],[12,"cmsg_type","","",23,null],[3,"fsid_t","","",null,null],[3,"if_nameindex","","",null,null],[12,"if_index","","",24,null],[12,"if_name","","",24,null],[3,"sockaddr_un","","",null,null],[12,"sun_len","","",25,null],[12,"sun_family","","",25,null],[12,"sun_path","","",25,null],[3,"utsname","","",null,null],[12,"sysname","","",26,null],[12,"nodename","","",26,null],[12,"release","","",26,null],[12,"version","","",26,null],[12,"machine","","",26,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",27,null],[12,"imr_interface","","",27,null],[3,"aiocb","","",null,null],[12,"aio_fildes","","",28,null],[12,"aio_offset","","",28,null],[12,"aio_buf","","",28,null],[12,"aio_nbytes","","",28,null],[12,"aio_reqprio","","",28,null],[12,"aio_sigevent","","",28,null],[12,"aio_lio_opcode","","",28,null],[3,"glob_t","","",null,null],[12,"gl_pathc","","",29,null],[12,"gl_offs","","",29,null],[12,"gl_pathv","","",29,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",30,null],[12,"ai_family","","",30,null],[12,"ai_socktype","","",30,null],[12,"ai_protocol","","",30,null],[12,"ai_addrlen","","",30,null],[12,"ai_canonname","","",30,null],[12,"ai_addr","","",30,null],[12,"ai_next","","",30,null],[3,"mach_timebase_info","","",null,null],[12,"numer","","",31,null],[12,"denom","","",31,null],[3,"stat","","",null,null],[12,"st_dev","","",32,null],[12,"st_mode","","",32,null],[12,"st_nlink","","",32,null],[12,"st_ino","","",32,null],[12,"st_uid","","",32,null],[12,"st_gid","","",32,null],[12,"st_rdev","","",32,null],[12,"st_atime","","",32,null],[12,"st_atime_nsec","","",32,null],[12,"st_mtime","","",32,null],[12,"st_mtime_nsec","","",32,null],[12,"st_ctime","","",32,null],[12,"st_ctime_nsec","","",32,null],[12,"st_birthtime","","",32,null],[12,"st_birthtime_nsec","","",32,null],[12,"st_size","","",32,null],[12,"st_blocks","","",32,null],[12,"st_blksize","","",32,null],[12,"st_flags","","",32,null],[12,"st_gen","","",32,null],[12,"st_lspare","","",32,null],[12,"st_qspare","","",32,null],[3,"pthread_mutexattr_t","","",null,null],[3,"pthread_condattr_t","","",null,null],[3,"pthread_rwlockattr_t","","",null,null],[3,"siginfo_t","","",null,null],[12,"si_signo","","",33,null],[12,"si_errno","","",33,null],[12,"si_code","","",33,null],[12,"si_pid","","",33,null],[12,"si_uid","","",33,null],[12,"si_status","","",33,null],[12,"si_addr","","",33,null],[3,"sigaction","","",null,null],[12,"sa_sigaction","","",34,null],[12,"sa_mask","","",34,null],[12,"sa_flags","","",34,null],[3,"stack_t","","",null,null],[12,"ss_sp","","",35,null],[12,"ss_size","","",35,null],[12,"ss_flags","","",35,null],[3,"fstore_t","","",null,null],[12,"fst_flags","","",36,null],[12,"fst_posmode","","",36,null],[12,"fst_offset","","",36,null],[12,"fst_length","","",36,null],[12,"fst_bytesalloc","","",36,null],[3,"radvisory","","",null,null],[12,"ra_offset","","",37,null],[12,"ra_count","","",37,null],[3,"statvfs","","",null,null],[12,"f_bsize","","",38,null],[12,"f_frsize","","",38,null],[12,"f_blocks","","",38,null],[12,"f_bfree","","",38,null],[12,"f_bavail","","",38,null],[12,"f_files","","",38,null],[12,"f_ffree","","",38,null],[12,"f_favail","","",38,null],[12,"f_fsid","","",38,null],[12,"f_flag","","",38,null],[12,"f_namemax","","",38,null],[3,"Dl_info","","",null,null],[12,"dli_fname","","",39,null],[12,"dli_fbase","","",39,null],[12,"dli_sname","","",39,null],[12,"dli_saddr","","",39,null],[3,"sockaddr_in","","",null,null],[12,"sin_len","","",40,null],[12,"sin_family","","",40,null],[12,"sin_port","","",40,null],[12,"sin_addr","","",40,null],[12,"sin_zero","","",40,null],[3,"kevent64_s","","",null,null],[12,"ident","","",41,null],[12,"filter","","",41,null],[12,"flags","","",41,null],[12,"fflags","","",41,null],[12,"data","","",41,null],[12,"udata","","",41,null],[12,"ext","","",41,null],[3,"dqblk","","",null,null],[12,"dqb_bhardlimit","","",42,null],[12,"dqb_bsoftlimit","","",42,null],[12,"dqb_curbytes","","",42,null],[12,"dqb_ihardlimit","","",42,null],[12,"dqb_isoftlimit","","",42,null],[12,"dqb_curinodes","","",42,null],[12,"dqb_btime","","",42,null],[12,"dqb_itime","","",42,null],[12,"dqb_id","","",42,null],[12,"dqb_spare","","",42,null],[3,"if_msghdr","","",null,null],[12,"ifm_msglen","","",43,null],[12,"ifm_version","","",43,null],[12,"ifm_type","","",43,null],[12,"ifm_addrs","","",43,null],[12,"ifm_flags","","",43,null],[12,"ifm_index","","",43,null],[12,"ifm_data","","",43,null],[3,"termios","","",null,null],[12,"c_iflag","","",44,null],[12,"c_oflag","","",44,null],[12,"c_cflag","","",44,null],[12,"c_lflag","","",44,null],[12,"c_cc","","",44,null],[12,"c_ispeed","","",44,null],[12,"c_ospeed","","",44,null],[3,"flock","","",null,null],[12,"l_start","","",45,null],[12,"l_len","","",45,null],[12,"l_pid","","",45,null],[12,"l_type","","",45,null],[12,"l_whence","","",45,null],[3,"sf_hdtr","","",null,null],[12,"headers","","",46,null],[12,"hdr_cnt","","",46,null],[12,"trailers","","",46,null],[12,"trl_cnt","","",46,null],[3,"lconv","","",null,null],[12,"decimal_point","","",47,null],[12,"thousands_sep","","",47,null],[12,"grouping","","",47,null],[12,"int_curr_symbol","","",47,null],[12,"currency_symbol","","",47,null],[12,"mon_decimal_point","","",47,null],[12,"mon_thousands_sep","","",47,null],[12,"mon_grouping","","",47,null],[12,"positive_sign","","",47,null],[12,"negative_sign","","",47,null],[12,"int_frac_digits","","",47,null],[12,"frac_digits","","",47,null],[12,"p_cs_precedes","","",47,null],[12,"p_sep_by_space","","",47,null],[12,"n_cs_precedes","","",47,null],[12,"n_sep_by_space","","",47,null],[12,"p_sign_posn","","",47,null],[12,"n_sign_posn","","",47,null],[12,"int_p_cs_precedes","","",47,null],[12,"int_n_cs_precedes","","",47,null],[12,"int_p_sep_by_space","","",47,null],[12,"int_n_sep_by_space","","",47,null],[12,"int_p_sign_posn","","",47,null],[12,"int_n_sign_posn","","",47,null],[3,"proc_taskinfo","","",null,null],[12,"pti_virtual_size","","",48,null],[12,"pti_resident_size","","",48,null],[12,"pti_total_user","","",48,null],[12,"pti_total_system","","",48,null],[12,"pti_threads_user","","",48,null],[12,"pti_threads_system","","",48,null],[12,"pti_policy","","",48,null],[12,"pti_faults","","",48,null],[12,"pti_pageins","","",48,null],[12,"pti_cow_faults","","",48,null],[12,"pti_messages_sent","","",48,null],[12,"pti_messages_received","","",48,null],[12,"pti_syscalls_mach","","",48,null],[12,"pti_syscalls_unix","","",48,null],[12,"pti_csw","","",48,null],[12,"pti_threadnum","","",48,null],[12,"pti_numrunning","","",48,null],[12,"pti_priority","","",48,null],[3,"proc_bsdinfo","","",null,null],[12,"pbi_flags","","",49,null],[12,"pbi_status","","",49,null],[12,"pbi_xstatus","","",49,null],[12,"pbi_pid","","",49,null],[12,"pbi_ppid","","",49,null],[12,"pbi_uid","","",49,null],[12,"pbi_gid","","",49,null],[12,"pbi_ruid","","",49,null],[12,"pbi_rgid","","",49,null],[12,"pbi_svuid","","",49,null],[12,"pbi_svgid","","",49,null],[12,"rfu_1","","",49,null],[12,"pbi_comm","","",49,null],[12,"pbi_name","","",49,null],[12,"pbi_nfiles","","",49,null],[12,"pbi_pgid","","",49,null],[12,"pbi_pjobc","","",49,null],[12,"e_tdev","","",49,null],[12,"e_tpgid","","",49,null],[12,"pbi_nice","","",49,null],[12,"pbi_start_tvsec","","",49,null],[12,"pbi_start_tvusec","","",49,null],[3,"proc_taskallinfo","","",null,null],[12,"pbsd","","",50,null],[12,"ptinfo","","",50,null],[3,"xsw_usage","","",null,null],[12,"xsu_total","","",51,null],[12,"xsu_avail","","",51,null],[12,"xsu_used","","",51,null],[12,"xsu_pagesize","","",51,null],[12,"xsu_encrypted","","",51,null],[3,"xucred","","",null,null],[12,"cr_version","","",52,null],[12,"cr_uid","","",52,null],[12,"cr_ngroups","","",52,null],[12,"cr_groups","","",52,null],[3,"mach_header","","",null,null],[12,"magic","","",53,null],[12,"cputype","","",53,null],[12,"cpusubtype","","",53,null],[12,"filetype","","",53,null],[12,"ncmds","","",53,null],[12,"sizeofcmds","","",53,null],[12,"flags","","",53,null],[3,"mach_header_64","","",null,null],[12,"magic","","",54,null],[12,"cputype","","",54,null],[12,"cpusubtype","","",54,null],[12,"filetype","","",54,null],[12,"ncmds","","",54,null],[12,"sizeofcmds","","",54,null],[12,"flags","","",54,null],[12,"reserved","","",54,null],[3,"segment_command","","",null,null],[12,"cmd","","",55,null],[12,"cmdsize","","",55,null],[12,"segname","","",55,null],[12,"vmaddr","","",55,null],[12,"vmsize","","",55,null],[12,"fileoff","","",55,null],[12,"filesize","","",55,null],[12,"maxprot","","",55,null],[12,"initprot","","",55,null],[12,"nsects","","",55,null],[12,"flags","","",55,null],[3,"segment_command_64","","",null,null],[12,"cmd","","",56,null],[12,"cmdsize","","",56,null],[12,"segname","","",56,null],[12,"vmaddr","","",56,null],[12,"vmsize","","",56,null],[12,"fileoff","","",56,null],[12,"filesize","","",56,null],[12,"maxprot","","",56,null],[12,"initprot","","",56,null],[12,"nsects","","",56,null],[12,"flags","","",56,null],[3,"load_command","","",null,null],[12,"cmd","","",57,null],[12,"cmdsize","","",57,null],[3,"sockaddr_dl","","",null,null],[12,"sdl_len","","",58,null],[12,"sdl_family","","",58,null],[12,"sdl_index","","",58,null],[12,"sdl_type","","",58,null],[12,"sdl_nlen","","",58,null],[12,"sdl_alen","","",58,null],[12,"sdl_slen","","",58,null],[12,"sdl_data","","",58,null],[3,"sockaddr_inarp","","",null,null],[12,"sin_len","","",59,null],[12,"sin_family","","",59,null],[12,"sin_port","","",59,null],[12,"sin_addr","","",59,null],[12,"sin_srcaddr","","",59,null],[12,"sin_tos","","",59,null],[12,"sin_other","","",59,null],[3,"sockaddr_ctl","","",null,null],[12,"sc_len","","",60,null],[12,"sc_family","","",60,null],[12,"ss_sysaddr","","",60,null],[12,"sc_id","","",60,null],[12,"sc_unit","","",60,null],[12,"sc_reserved","","",60,null],[3,"in_pktinfo","","",null,null],[12,"ipi_ifindex","","",61,null],[12,"ipi_spec_dst","","",61,null],[12,"ipi_addr","","",61,null],[3,"in6_pktinfo","","",null,null],[12,"ipi6_addr","","",62,null],[12,"ipi6_ifindex","","",62,null],[3,"ipc_perm","","",null,null],[12,"uid","","",63,null],[12,"gid","","",63,null],[12,"cuid","","",63,null],[12,"cgid","","",63,null],[12,"mode","","",63,null],[12,"_seq","","",63,null],[12,"_key","","",63,null],[3,"sembuf","","",null,null],[12,"sem_num","","",64,null],[12,"sem_op","","",64,null],[12,"sem_flg","","",64,null],[3,"arphdr","","",null,null],[12,"ar_hrd","","",65,null],[12,"ar_pro","","",65,null],[12,"ar_hln","","",65,null],[12,"ar_pln","","",65,null],[12,"ar_op","","",65,null],[3,"in_addr","","",null,null],[12,"s_addr","","",66,null],[3,"kevent","","",null,null],[12,"ident","","",67,null],[12,"filter","","",67,null],[12,"flags","","",67,null],[12,"fflags","","",67,null],[12,"data","","",67,null],[12,"udata","","",67,null],[3,"semid_ds","","",null,null],[12,"sem_perm","","",68,null],[12,"sem_base","","",68,null],[12,"sem_nsems","","",68,null],[12,"sem_otime","","",68,null],[12,"sem_pad1","","",68,null],[12,"sem_ctime","","",68,null],[12,"sem_pad2","","",68,null],[12,"sem_pad3","","",68,null],[3,"shmid_ds","","",null,null],[12,"shm_perm","","",69,null],[12,"shm_segsz","","",69,null],[12,"shm_lpid","","",69,null],[12,"shm_cpid","","",69,null],[12,"shm_nattch","","",69,null],[12,"shm_atime","","",69,null],[12,"shm_dtime","","",69,null],[12,"shm_ctime","","",69,null],[12,"shm_internal","","",69,null],[3,"proc_threadinfo","","",null,null],[12,"pth_user_time","","",70,null],[12,"pth_system_time","","",70,null],[12,"pth_cpu_usage","","",70,null],[12,"pth_policy","","",70,null],[12,"pth_run_state","","",70,null],[12,"pth_flags","","",70,null],[12,"pth_sleep_time","","",70,null],[12,"pth_curpri","","",70,null],[12,"pth_priority","","",70,null],[12,"pth_maxpriority","","",70,null],[12,"pth_name","","",70,null],[3,"statfs","","",null,null],[12,"f_bsize","","",71,null],[12,"f_iosize","","",71,null],[12,"f_blocks","","",71,null],[12,"f_bfree","","",71,null],[12,"f_bavail","","",71,null],[12,"f_files","","",71,null],[12,"f_ffree","","",71,null],[12,"f_fsid","","",71,null],[12,"f_owner","","",71,null],[12,"f_type","","",71,null],[12,"f_flags","","",71,null],[12,"f_fssubtype","","",71,null],[12,"f_fstypename","","",71,null],[12,"f_mntonname","","",71,null],[12,"f_mntfromname","","",71,null],[12,"f_reserved","","",71,null],[3,"dirent","","",null,null],[12,"d_ino","","",72,null],[12,"d_seekoff","","",72,null],[12,"d_reclen","","",72,null],[12,"d_namlen","","",72,null],[12,"d_type","","",72,null],[12,"d_name","","",72,null],[3,"pthread_rwlock_t","","",null,null],[3,"pthread_mutex_t","","",null,null],[3,"pthread_cond_t","","",null,null],[3,"sockaddr_storage","","",null,null],[12,"ss_len","","",73,null],[12,"ss_family","","",73,null],[3,"utmpx","","",null,null],[12,"ut_user","","",74,null],[12,"ut_id","","",74,null],[12,"ut_line","","",74,null],[12,"ut_pid","","",74,null],[12,"ut_type","","",74,null],[12,"ut_tv","","",74,null],[12,"ut_host","","",74,null],[3,"sigevent","","",null,null],[12,"sigev_notify","","",75,null],[12,"sigev_signo","","",75,null],[12,"sigev_value","","",75,null],[12,"sigev_notify_attributes","","",75,null],[3,"timeval32","","",null,null],[12,"tv_sec","","",76,null],[12,"tv_usec","","",76,null],[3,"if_data","","",null,null],[12,"ifi_type","","",77,null],[12,"ifi_typelen","","",77,null],[12,"ifi_physical","","",77,null],[12,"ifi_addrlen","","",77,null],[12,"ifi_hdrlen","","",77,null],[12,"ifi_recvquota","","",77,null],[12,"ifi_xmitquota","","",77,null],[12,"ifi_unused1","","",77,null],[12,"ifi_mtu","","",77,null],[12,"ifi_metric","","",77,null],[12,"ifi_baudrate","","",77,null],[12,"ifi_ipackets","","",77,null],[12,"ifi_ierrors","","",77,null],[12,"ifi_opackets","","",77,null],[12,"ifi_oerrors","","",77,null],[12,"ifi_collisions","","",77,null],[12,"ifi_ibytes","","",77,null],[12,"ifi_obytes","","",77,null],[12,"ifi_imcasts","","",77,null],[12,"ifi_omcasts","","",77,null],[12,"ifi_iqdrops","","",77,null],[12,"ifi_noproto","","",77,null],[12,"ifi_recvtiming","","",77,null],[12,"ifi_xmittiming","","",77,null],[12,"ifi_lastchange","","",77,null],[12,"ifi_unused2","","",77,null],[12,"ifi_hwassist","","",77,null],[12,"ifi_reserved1","","",77,null],[12,"ifi_reserved2","","",77,null],[3,"bpf_hdr","","",null,null],[12,"bh_tstamp","","",78,null],[12,"bh_caplen","","",78,null],[12,"bh_datalen","","",78,null],[12,"bh_hdrlen","","",78,null],[3,"pthread_attr_t","","",null,null],[3,"max_align_t","","",null,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",79,null],[19,"semun","","",null,null],[12,"val","","",80,null],[12,"buf","","",80,null],[12,"array","","",80,null],[4,"DIR","","",null,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[4,"timezone","","",null,null],[5,"CMSG_FIRSTHDR","","",null,[[]]],[5,"FD_CLR","","",null,[[["c_int"]]]],[5,"FD_ISSET","","",null,[[["c_int"]],["bool"]]],[5,"FD_SET","","",null,[[["c_int"]]]],[5,"FD_ZERO","","",null,[[]]],[5,"WTERMSIG","","",null,[[["c_int"]],["c_int"]]],[5,"WIFEXITED","","",null,[[["c_int"]],["bool"]]],[5,"WEXITSTATUS","","",null,[[["c_int"]],["c_int"]]],[5,"WCOREDUMP","","",null,[[["c_int"]],["bool"]]],[5,"QCMD","","",null,[[["c_int"]],["c_int"]]],[5,"CMSG_NXTHDR","","",null,[[]]],[5,"CMSG_DATA","","",null,[[]]],[5,"CMSG_SPACE","","",null,[[["c_uint"]],["c_uint"]]],[5,"CMSG_LEN","","",null,[[["c_uint"]],["c_uint"]]],[5,"WSTOPSIG","","",null,[[["c_int"]],["c_int"]]],[5,"_WSTATUS","","",null,[[["c_int"]],["c_int"]]],[5,"WIFCONTINUED","","",null,[[["c_int"]],["bool"]]],[5,"WIFSIGNALED","","",null,[[["c_int"]],["bool"]]],[5,"WIFSTOPPED","","",null,[[["c_int"]],["bool"]]],[5,"isalnum","","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"isblank","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[5,"qsort","","",null,null],[5,"bsearch","","",null,null],[5,"fopen","","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"getchar","","",null,null],[5,"putchar","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"abort","","",null,null],[5,"exit","","",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"strcpy","","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strdup","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strcasecmp","","",null,null],[5,"strncasecmp","","",null,null],[5,"strlen","","",null,null],[5,"strnlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"wcstombs","","",null,null],[5,"memchr","","",null,null],[5,"memcmp","","",null,null],[5,"memcpy","","",null,null],[5,"memmove","","",null,null],[5,"memset","","",null,null],[5,"getpwnam","","",null,null],[5,"getpwuid","","",null,null],[5,"fprintf","","",null,null],[5,"printf","","",null,null],[5,"snprintf","","",null,null],[5,"sprintf","","",null,null],[5,"fscanf","","",null,null],[5,"scanf","","",null,null],[5,"sscanf","","",null,null],[5,"getchar_unlocked","","",null,null],[5,"putchar_unlocked","","",null,null],[5,"socket","","",null,null],[5,"connect","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"socketpair","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[5,"chmod","","",null,null],[5,"fchmod","","",null,null],[5,"fstat","","",null,null],[5,"mkdir","","",null,null],[5,"stat","","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[5,"open","","",null,null],[5,"creat","","",null,null],[5,"fcntl","","",null,null],[5,"opendir","","",null,null],[5,"readdir","","",null,null],[5,"closedir","","",null,null],[5,"rewinddir","","",null,null],[5,"fchmodat","","",null,null],[5,"fchown","","",null,null],[5,"fchownat","","",null,null],[5,"fstatat","","",null,null],[5,"linkat","","",null,null],[5,"renameat","","",null,null],[5,"symlinkat","","",null,null],[5,"unlinkat","","",null,null],[5,"access","","",null,null],[5,"alarm","","",null,null],[5,"chdir","","",null,null],[5,"fchdir","","",null,null],[5,"chown","","",null,null],[5,"lchown","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execl","","",null,null],[5,"execle","","",null,null],[5,"execlp","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"fork","","",null,null],[5,"fpathconf","","",null,null],[5,"getcwd","","",null,null],[5,"getegid","","",null,null],[5,"geteuid","","",null,null],[5,"getgid","","",null,null],[5,"getgroups","","",null,null],[5,"getlogin","","",null,null],[5,"getopt","","",null,null],[5,"getpgid","","",null,null],[5,"getpgrp","","",null,null],[5,"getpid","","",null,null],[5,"getppid","","",null,null],[5,"getuid","","",null,null],[5,"isatty","","",null,null],[5,"link","","",null,null],[5,"lseek","","",null,null],[5,"pathconf","","",null,null],[5,"pipe","","",null,null],[5,"posix_memalign","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"seteuid","","",null,null],[5,"setegid","","",null,null],[5,"setgid","","",null,null],[5,"setpgid","","",null,null],[5,"setsid","","",null,null],[5,"setuid","","",null,null],[5,"sleep","","",null,null],[5,"nanosleep","","",null,null],[5,"tcgetpgrp","","",null,null],[5,"tcsetpgrp","","",null,null],[5,"ttyname","","",null,null],[5,"ttyname_r","","",null,null],[5,"unlink","","",null,null],[5,"wait","","",null,null],[5,"waitpid","","",null,null],[5,"write","","",null,null],[5,"pread","","",null,null],[5,"pwrite","","",null,null],[5,"umask","","",null,null],[5,"utime","","",null,null],[5,"kill","","",null,null],[5,"killpg","","",null,null],[5,"mlock","","",null,null],[5,"munlock","","",null,null],[5,"mlockall","","",null,null],[5,"munlockall","","",null,null],[5,"mmap","","",null,null],[5,"munmap","","",null,null],[5,"if_nametoindex","","",null,null],[5,"if_indextoname","","",null,null],[5,"lstat","","",null,null],[5,"fsync","","",null,null],[5,"setenv","","",null,null],[5,"unsetenv","","",null,null],[5,"symlink","","",null,null],[5,"ftruncate","","",null,null],[5,"signal","","",null,null],[5,"getrusage","","",null,null],[5,"realpath","","",null,null],[5,"flock","","",null,null],[5,"times","","",null,null],[5,"pthread_self","","",null,null],[5,"pthread_join","","",null,null],[5,"pthread_exit","","",null,null],[5,"pthread_attr_init","","",null,null],[5,"pthread_attr_destroy","","",null,null],[5,"pthread_attr_setstacksize","","",null,null],[5,"pthread_attr_setdetachstate","","",null,null],[5,"pthread_detach","","",null,null],[5,"sched_yield","","",null,null],[5,"pthread_key_create","","",null,null],[5,"pthread_key_delete","","",null,null],[5,"pthread_getspecific","","",null,null],[5,"pthread_setspecific","","",null,null],[5,"pthread_mutex_init","","",null,null],[5,"pthread_mutex_destroy","","",null,null],[5,"pthread_mutex_lock","","",null,null],[5,"pthread_mutex_trylock","","",null,null],[5,"pthread_mutex_unlock","","",null,null],[5,"pthread_mutexattr_init","","",null,null],[5,"pthread_mutexattr_destroy","","",null,null],[5,"pthread_mutexattr_settype","","",null,null],[5,"pthread_cond_init","","",null,null],[5,"pthread_cond_wait","","",null,null],[5,"pthread_cond_timedwait","","",null,null],[5,"pthread_cond_signal","","",null,null],[5,"pthread_cond_broadcast","","",null,null],[5,"pthread_cond_destroy","","",null,null],[5,"pthread_condattr_init","","",null,null],[5,"pthread_condattr_destroy","","",null,null],[5,"pthread_rwlock_init","","",null,null],[5,"pthread_rwlock_destroy","","",null,null],[5,"pthread_rwlock_rdlock","","",null,null],[5,"pthread_rwlock_tryrdlock","","",null,null],[5,"pthread_rwlock_wrlock","","",null,null],[5,"pthread_rwlock_trywrlock","","",null,null],[5,"pthread_rwlock_unlock","","",null,null],[5,"pthread_rwlockattr_init","","",null,null],[5,"pthread_rwlockattr_destroy","","",null,null],[5,"getsockopt","","",null,null],[5,"raise","","",null,null],[5,"sigaction","","",null,null],[5,"utimes","","",null,null],[5,"dlopen","","",null,null],[5,"dlerror","","",null,null],[5,"dlsym","","",null,null],[5,"dlclose","","",null,null],[5,"dladdr","","",null,null],[5,"getaddrinfo","","",null,null],[5,"freeaddrinfo","","",null,null],[5,"gai_strerror","","",null,null],[5,"res_init","","",null,null],[5,"gmtime_r","","",null,null],[5,"localtime_r","","",null,null],[5,"mktime","","",null,null],[5,"time","","",null,null],[5,"gmtime","","",null,null],[5,"localtime","","",null,null],[5,"difftime","","",null,null],[5,"mknod","","",null,null],[5,"gethostname","","",null,null],[5,"getservbyname","","",null,null],[5,"getprotobyname","","",null,null],[5,"getprotobynumber","","",null,null],[5,"chroot","","",null,null],[5,"usleep","","",null,null],[5,"send","","",null,null],[5,"recv","","",null,null],[5,"putenv","","",null,null],[5,"poll","","",null,null],[5,"select","","",null,null],[5,"setlocale","","",null,null],[5,"localeconv","","",null,null],[5,"sem_wait","","",null,null],[5,"sem_trywait","","",null,null],[5,"sem_post","","",null,null],[5,"statvfs","","",null,null],[5,"fstatvfs","","",null,null],[5,"readlink","","",null,null],[5,"sigemptyset","","",null,null],[5,"sigaddset","","",null,null],[5,"sigfillset","","",null,null],[5,"sigdelset","","",null,null],[5,"sigismember","","",null,null],[5,"sigprocmask","","",null,null],[5,"sigpending","","",null,null],[5,"timegm","","",null,null],[5,"sysconf","","",null,null],[5,"mkfifo","","",null,null],[5,"pselect","","",null,null],[5,"fseeko","","",null,null],[5,"ftello","","",null,null],[5,"tcdrain","","",null,null],[5,"cfgetispeed","","",null,null],[5,"cfgetospeed","","",null,null],[5,"cfsetispeed","","",null,null],[5,"cfsetospeed","","",null,null],[5,"tcgetattr","","",null,null],[5,"tcsetattr","","",null,null],[5,"tcflow","","",null,null],[5,"tcflush","","",null,null],[5,"tcgetsid","","",null,null],[5,"tcsendbreak","","",null,null],[5,"mkstemp","","",null,null],[5,"mkdtemp","","",null,null],[5,"tmpnam","","",null,null],[5,"openlog","","",null,null],[5,"closelog","","",null,null],[5,"setlogmask","","",null,null],[5,"syslog","","",null,null],[5,"nice","","",null,null],[5,"grantpt","","",null,null],[5,"posix_openpt","","",null,null],[5,"ptsname","","",null,null],[5,"unlockpt","","",null,null],[5,"strcasestr","","",null,null],[5,"getline","","",null,null],[5,"getsid","","",null,null],[5,"truncate","","",null,null],[5,"pause","","",null,null],[5,"readlinkat","","",null,null],[5,"mkdirat","","",null,null],[5,"openat","","",null,null],[5,"fdopendir","","",null,null],[5,"readdir_r","","The 64-bit libc on Solaris and illumos only has readdir_r.…",null,null],[5,"cfmakeraw","","",null,null],[5,"cfsetspeed","","",null,null],[5,"getrlimit","","",null,null],[5,"setrlimit","","",null,null],[5,"strerror_r","","",null,null],[5,"abs","","",null,null],[5,"atof","","",null,null],[5,"labs","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[5,"getifaddrs","","",null,null],[5,"freeifaddrs","","",null,null],[5,"setgroups","","",null,null],[5,"ioctl","","",null,null],[5,"kqueue","","",null,null],[5,"unmount","","",null,null],[5,"syscall","","",null,null],[5,"getpwent","","",null,null],[5,"setpwent","","",null,null],[5,"endpwent","","",null,null],[5,"endgrent","","",null,null],[5,"getgrent","","",null,null],[5,"getprogname","","",null,null],[5,"setprogname","","",null,null],[5,"getloadavg","","",null,null],[5,"if_nameindex","","",null,null],[5,"if_freenameindex","","",null,null],[5,"getpeereid","","",null,null],[5,"glob","","",null,null],[5,"globfree","","",null,null],[5,"posix_madvise","","",null,null],[5,"shm_unlink","","",null,null],[5,"seekdir","","",null,null],[5,"telldir","","",null,null],[5,"madvise","","",null,null],[5,"msync","","",null,null],[5,"recvfrom","","",null,null],[5,"mkstemps","","",null,null],[5,"futimes","","",null,null],[5,"nl_langinfo","","",null,null],[5,"bind","","",null,null],[5,"writev","","",null,null],[5,"readv","","",null,null],[5,"sendmsg","","",null,null],[5,"recvmsg","","",null,null],[5,"sync","","",null,null],[5,"getgrgid_r","","",null,null],[5,"sigaltstack","","",null,null],[5,"sem_close","","",null,null],[5,"getdtablesize","","",null,null],[5,"getgrnam_r","","",null,null],[5,"pthread_sigmask","","",null,null],[5,"sem_open","","",null,null],[5,"getgrnam","","",null,null],[5,"pthread_cancel","","",null,null],[5,"pthread_kill","","",null,null],[5,"sem_unlink","","",null,null],[5,"getpwnam_r","","",null,null],[5,"getpwuid_r","","",null,null],[5,"sigwait","","",null,null],[5,"pthread_atfork","","",null,null],[5,"getgrgid","","",null,null],[5,"popen","","",null,null],[5,"faccessat","","",null,null],[5,"pthread_create","","",null,null],[5,"acct","","",null,null],[5,"setgrent","","",null,null],[5,"aio_read","","",null,null],[5,"aio_write","","",null,null],[5,"aio_fsync","","",null,null],[5,"aio_error","","",null,null],[5,"aio_return","","",null,null],[5,"aio_suspend","","",null,null],[5,"aio_cancel","","",null,null],[5,"chflags","","",null,null],[5,"fchflags","","",null,null],[5,"clock_getres","","",null,null],[5,"clock_gettime","","",null,null],[5,"lio_listio","","",null,null],[5,"dirfd","","",null,null],[5,"lutimes","","",null,null],[5,"gettimeofday","","",null,null],[5,"getutxent","","",null,null],[5,"getutxid","","",null,null],[5,"getutxline","","",null,null],[5,"pututxline","","",null,null],[5,"setutxent","","",null,null],[5,"endutxent","","",null,null],[5,"utmpxname","","",null,null],[5,"getnameinfo","","",null,null],[5,"mincore","","",null,null],[5,"sysctlnametomib","","",null,null],[5,"mprotect","","",null,null],[5,"semget","","",null,null],[5,"semctl","","",null,null],[5,"semop","","",null,null],[5,"shm_open","","",null,null],[5,"ftok","","",null,null],[5,"shmat","","",null,null],[5,"shmdt","","",null,null],[5,"shmctl","","",null,null],[5,"shmget","","",null,null],[5,"sysctl","","",null,null],[5,"sysctlbyname","","",null,null],[5,"mach_absolute_time","","",null,null],[5,"mach_timebase_info","","",null,null],[5,"pthread_setname_np","","",null,null],[5,"pthread_getname_np","","",null,null],[5,"pthread_get_stackaddr_np","","",null,null],[5,"pthread_get_stacksize_np","","",null,null],[5,"pthread_condattr_setpshared","","",null,null],[5,"pthread_condattr_getpshared","","",null,null],[5,"pthread_mutexattr_setpshared","","",null,null],[5,"pthread_mutexattr_getpshared","","",null,null],[5,"pthread_rwlockattr_getpshared","","",null,null],[5,"pthread_rwlockattr_setpshared","","",null,null],[5,"__error","","",null,null],[5,"backtrace","","",null,null],[5,"statfs","","",null,null],[5,"fstatfs","","",null,null],[5,"kevent","","",null,null],[5,"kevent64","","",null,null],[5,"mount","","",null,null],[5,"ptrace","","",null,null],[5,"quotactl","","",null,null],[5,"sethostname","","",null,null],[5,"sendfile","","",null,null],[5,"futimens","","",null,null],[5,"utimensat","","",null,null],[5,"openpty","","",null,null],[5,"forkpty","","",null,null],[5,"login_tty","","",null,null],[5,"duplocale","","",null,null],[5,"freelocale","","",null,null],[5,"localeconv_l","","",null,null],[5,"newlocale","","",null,null],[5,"uselocale","","",null,null],[5,"querylocale","","",null,null],[5,"getpriority","","",null,null],[5,"setpriority","","",null,null],[5,"getdomainname","","",null,null],[5,"setdomainname","","",null,null],[5,"getxattr","","",null,null],[5,"fgetxattr","","",null,null],[5,"setxattr","","",null,null],[5,"fsetxattr","","",null,null],[5,"listxattr","","",null,null],[5,"flistxattr","","",null,null],[5,"removexattr","","",null,null],[5,"renamex_np","","",null,null],[5,"renameatx_np","","",null,null],[5,"fremovexattr","","",null,null],[5,"getgrouplist","","",null,null],[5,"initgroups","","",null,null],[5,"waitid","","",null,null],[5,"brk","","",null,null],[5,"sbrk","","",null,null],[5,"settimeofday","","",null,null],[5,"_dyld_image_count","","",null,null],[5,"_dyld_get_image_header","","",null,null],[5,"_dyld_get_image_vmaddr_slide","","",null,null],[5,"_dyld_get_image_name","","",null,null],[5,"posix_spawn","","",null,null],[5,"posix_spawnp","","",null,null],[5,"posix_spawnattr_init","","",null,null],[5,"posix_spawnattr_destroy","","",null,null],[5,"posix_spawnattr_getsigdefault","","",null,null],[5,"posix_spawnattr_setsigdefault","","",null,null],[5,"posix_spawnattr_getsigmask","","",null,null],[5,"posix_spawnattr_setsigmask","","",null,null],[5,"posix_spawnattr_getflags","","",null,null],[5,"posix_spawnattr_setflags","","",null,null],[5,"posix_spawnattr_getpgroup","","",null,null],[5,"posix_spawnattr_setpgroup","","",null,null],[5,"posix_spawn_file_actions_init","","",null,null],[5,"posix_spawn_file_actions_destroy","","",null,null],[5,"posix_spawn_file_actions_addopen","","",null,null],[5,"posix_spawn_file_actions_addclose","","",null,null],[5,"posix_spawn_file_actions_adddup2","","",null,null],[5,"uname","","",null,null],[5,"exchangedata","","",null,null],[11,"si_addr","","",33,[[["self"]]]],[11,"si_value","","",33,[[["self"]],["sigval"]]],[6,"int8_t","","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"c_longlong","","",null,null],[6,"c_ulonglong","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"ssize_t","","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[6,"gid_t","","",null,null],[6,"in_addr_t","","",null,null],[6,"in_port_t","","",null,null],[6,"sighandler_t","","",null,null],[6,"cc_t","","",null,null],[6,"locale_t","","",null,null],[6,"wchar_t","","",null,null],[6,"off_t","","",null,null],[6,"useconds_t","","",null,null],[6,"blkcnt_t","","",null,null],[6,"socklen_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"pthread_t","","",null,null],[6,"nfds_t","","",null,null],[6,"c_char","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"dev_t","","",null,null],[6,"ino_t","","",null,null],[6,"mode_t","","",null,null],[6,"nlink_t","","",null,null],[6,"blksize_t","","",null,null],[6,"rlim_t","","",null,null],[6,"pthread_key_t","","",null,null],[6,"sigset_t","","",null,null],[6,"clockid_t","","",null,null],[6,"fsblkcnt_t","","",null,null],[6,"fsfilcnt_t","","",null,null],[6,"speed_t","","",null,null],[6,"tcflag_t","","",null,null],[6,"nl_item","","",null,null],[6,"id_t","","",null,null],[6,"sem_t","","",null,null],[6,"idtype_t","","",null,null],[6,"integer_t","","",null,null],[6,"cpu_type_t","","",null,null],[6,"cpu_subtype_t","","",null,null],[6,"posix_spawnattr_t","","",null,null],[6,"posix_spawn_file_actions_t","","",null,null],[6,"key_t","","",null,null],[6,"shmatt_t","","",null,null],[6,"vm_prot_t","","",null,null],[6,"vm_size_t","","",null,null],[6,"mach_timebase_info_data_t","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"boolean_t","","",null,null],[17,"INT_MIN","","",null,null],[17,"INT_MAX","","",null,null],[17,"SIG_DFL","","",null,null],[17,"SIG_IGN","","",null,null],[17,"SIG_ERR","","",null,null],[17,"DT_UNKNOWN","","",null,null],[17,"DT_FIFO","","",null,null],[17,"DT_CHR","","",null,null],[17,"DT_DIR","","",null,null],[17,"DT_BLK","","",null,null],[17,"DT_REG","","",null,null],[17,"DT_LNK","","",null,null],[17,"DT_SOCK","","",null,null],[17,"FD_CLOEXEC","","",null,null],[17,"USRQUOTA","","",null,null],[17,"GRPQUOTA","","",null,null],[17,"SIGIOT","","",null,null],[17,"S_ISUID","","",null,null],[17,"S_ISGID","","",null,null],[17,"S_ISVTX","","",null,null],[17,"IF_NAMESIZE","","",null,null],[17,"IFNAMSIZ","","",null,null],[17,"LOG_EMERG","","",null,null],[17,"LOG_ALERT","","",null,null],[17,"LOG_CRIT","","",null,null],[17,"LOG_ERR","","",null,null],[17,"LOG_WARNING","","",null,null],[17,"LOG_NOTICE","","",null,null],[17,"LOG_INFO","","",null,null],[17,"LOG_DEBUG","","",null,null],[17,"LOG_KERN","","",null,null],[17,"LOG_USER","","",null,null],[17,"LOG_MAIL","","",null,null],[17,"LOG_DAEMON","","",null,null],[17,"LOG_AUTH","","",null,null],[17,"LOG_SYSLOG","","",null,null],[17,"LOG_LPR","","",null,null],[17,"LOG_NEWS","","",null,null],[17,"LOG_UUCP","","",null,null],[17,"LOG_LOCAL0","","",null,null],[17,"LOG_LOCAL1","","",null,null],[17,"LOG_LOCAL2","","",null,null],[17,"LOG_LOCAL3","","",null,null],[17,"LOG_LOCAL4","","",null,null],[17,"LOG_LOCAL5","","",null,null],[17,"LOG_LOCAL6","","",null,null],[17,"LOG_LOCAL7","","",null,null],[17,"LOG_PID","","",null,null],[17,"LOG_CONS","","",null,null],[17,"LOG_ODELAY","","",null,null],[17,"LOG_NDELAY","","",null,null],[17,"LOG_NOWAIT","","",null,null],[17,"LOG_PRIMASK","","",null,null],[17,"LOG_FACMASK","","",null,null],[17,"PRIO_PROCESS","","",null,null],[17,"PRIO_PGRP","","",null,null],[17,"PRIO_USER","","",null,null],[17,"PRIO_MIN","","",null,null],[17,"PRIO_MAX","","",null,null],[17,"IPPROTO_ICMP","","",null,null],[17,"IPPROTO_ICMPV6","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_UDP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"INADDR_LOOPBACK","","",null,null],[17,"INADDR_ANY","","",null,null],[17,"INADDR_BROADCAST","","",null,null],[17,"INADDR_NONE","","",null,null],[17,"ARPOP_REQUEST","","",null,null],[17,"ARPOP_REPLY","","",null,null],[17,"ATF_COM","","",null,null],[17,"ATF_PERM","","",null,null],[17,"ATF_PUBL","","",null,null],[17,"ATF_USETRAILERS","","",null,null],[17,"LC_ALL","","",null,null],[17,"LC_COLLATE","","",null,null],[17,"LC_CTYPE","","",null,null],[17,"LC_MONETARY","","",null,null],[17,"LC_NUMERIC","","",null,null],[17,"LC_TIME","","",null,null],[17,"LC_MESSAGES","","",null,null],[17,"FIOCLEX","","",null,null],[17,"FIONCLEX","","",null,null],[17,"FIONREAD","","",null,null],[17,"FIONBIO","","",null,null],[17,"FIOASYNC","","",null,null],[17,"FIOSETOWN","","",null,null],[17,"FIOGETOWN","","",null,null],[17,"PATH_MAX","","",null,null],[17,"SA_ONSTACK","","",null,null],[17,"SA_SIGINFO","","",null,null],[17,"SA_RESTART","","",null,null],[17,"SA_RESETHAND","","",null,null],[17,"SA_NOCLDSTOP","","",null,null],[17,"SA_NODEFER","","",null,null],[17,"SA_NOCLDWAIT","","",null,null],[17,"SS_ONSTACK","","",null,null],[17,"SS_DISABLE","","",null,null],[17,"SIGCHLD","","",null,null],[17,"SIGBUS","","",null,null],[17,"SIGUSR1","","",null,null],[17,"SIGUSR2","","",null,null],[17,"SIGCONT","","",null,null],[17,"SIGSTOP","","",null,null],[17,"SIGTSTP","","",null,null],[17,"SIGURG","","",null,null],[17,"SIGIO","","",null,null],[17,"SIGSYS","","",null,null],[17,"SIGTTIN","","",null,null],[17,"SIGTTOU","","",null,null],[17,"SIGXCPU","","",null,null],[17,"SIGXFSZ","","",null,null],[17,"SIGVTALRM","","",null,null],[17,"SIGPROF","","",null,null],[17,"SIGWINCH","","",null,null],[17,"SIGINFO","","",null,null],[17,"SIG_SETMASK","","",null,null],[17,"SIG_BLOCK","","",null,null],[17,"SIG_UNBLOCK","","",null,null],[17,"IP_TOS","","",null,null],[17,"IP_MULTICAST_IF","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IPV6_UNICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_IF","","",null,null],[17,"IPV6_MULTICAST_HOPS","","",null,null],[17,"IPV6_MULTICAST_LOOP","","",null,null],[17,"IPV6_V6ONLY","","",null,null],[17,"IPTOS_ECN_NOTECT","","",null,null],[17,"IPTOS_ECN_MASK","","",null,null],[17,"IPTOS_ECN_ECT1","","",null,null],[17,"IPTOS_ECN_ECT0","","",null,null],[17,"IPTOS_ECN_CE","","",null,null],[17,"ST_RDONLY","","",null,null],[17,"SCM_RIGHTS","","",null,null],[17,"NCCS","","",null,null],[17,"O_ACCMODE","","",null,null],[17,"O_RDONLY","","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_TRUNC","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_ASYNC","","",null,null],[17,"O_SYNC","","",null,null],[17,"O_NONBLOCK","","",null,null],[17,"O_NOFOLLOW","","",null,null],[17,"O_SHLOCK","","",null,null],[17,"O_EXLOCK","","",null,null],[17,"O_FSYNC","","",null,null],[17,"O_NDELAY","","",null,null],[17,"F_GETOWN","","",null,null],[17,"F_SETOWN","","",null,null],[17,"F_RDLCK","","",null,null],[17,"F_UNLCK","","",null,null],[17,"F_WRLCK","","",null,null],[17,"MNT_FORCE","","",null,null],[17,"Q_SYNC","","",null,null],[17,"Q_QUOTAON","","",null,null],[17,"Q_QUOTAOFF","","",null,null],[17,"TCIOFF","","",null,null],[17,"TCION","","",null,null],[17,"TCOOFF","","",null,null],[17,"TCOON","","",null,null],[17,"TCIFLUSH","","",null,null],[17,"TCOFLUSH","","",null,null],[17,"TCIOFLUSH","","",null,null],[17,"TCSANOW","","",null,null],[17,"TCSADRAIN","","",null,null],[17,"TCSAFLUSH","","",null,null],[17,"VEOF","","",null,null],[17,"VEOL","","",null,null],[17,"VEOL2","","",null,null],[17,"VERASE","","",null,null],[17,"VWERASE","","",null,null],[17,"VKILL","","",null,null],[17,"VREPRINT","","",null,null],[17,"VINTR","","",null,null],[17,"VQUIT","","",null,null],[17,"VSUSP","","",null,null],[17,"VDSUSP","","",null,null],[17,"VSTART","","",null,null],[17,"VSTOP","","",null,null],[17,"VLNEXT","","",null,null],[17,"VDISCARD","","",null,null],[17,"VMIN","","",null,null],[17,"VTIME","","",null,null],[17,"VSTATUS","","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[17,"IGNBRK","","",null,null],[17,"BRKINT","","",null,null],[17,"IGNPAR","","",null,null],[17,"PARMRK","","",null,null],[17,"INPCK","","",null,null],[17,"ISTRIP","","",null,null],[17,"INLCR","","",null,null],[17,"IGNCR","","",null,null],[17,"ICRNL","","",null,null],[17,"IXON","","",null,null],[17,"IXOFF","","",null,null],[17,"IXANY","","",null,null],[17,"IMAXBEL","","",null,null],[17,"OPOST","","",null,null],[17,"ONLCR","","",null,null],[17,"OXTABS","","",null,null],[17,"ONOEOT","","",null,null],[17,"CIGNORE","","",null,null],[17,"CSIZE","","",null,null],[17,"CS5","","",null,null],[17,"CS6","","",null,null],[17,"CS7","","",null,null],[17,"CS8","","",null,null],[17,"CSTOPB","","",null,null],[17,"CREAD","","",null,null],[17,"PARENB","","",null,null],[17,"PARODD","","",null,null],[17,"HUPCL","","",null,null],[17,"CLOCAL","","",null,null],[17,"ECHOKE","","",null,null],[17,"ECHOE","","",null,null],[17,"ECHOK","","",null,null],[17,"ECHO","","",null,null],[17,"ECHONL","","",null,null],[17,"ECHOPRT","","",null,null],[17,"ECHOCTL","","",null,null],[17,"ISIG","","",null,null],[17,"ICANON","","",null,null],[17,"ALTWERASE","","",null,null],[17,"IEXTEN","","",null,null],[17,"EXTPROC","","",null,null],[17,"TOSTOP","","",null,null],[17,"FLUSHO","","",null,null],[17,"NOKERNINFO","","",null,null],[17,"PENDIN","","",null,null],[17,"NOFLSH","","",null,null],[17,"MDMBUF","","",null,null],[17,"WNOHANG","","",null,null],[17,"WUNTRACED","","",null,null],[17,"RTLD_LAZY","","",null,null],[17,"RTLD_NOW","","",null,null],[17,"RTLD_NEXT","","",null,null],[17,"RTLD_DEFAULT","","",null,null],[17,"RTLD_SELF","","",null,null],[17,"LOG_CRON","","",null,null],[17,"LOG_AUTHPRIV","","",null,null],[17,"LOG_FTP","","",null,null],[17,"LOG_PERROR","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"TCP_MAXSEG","","",null,null],[17,"PIPE_BUF","","",null,null],[17,"POLLIN","","",null,null],[17,"POLLPRI","","",null,null],[17,"POLLOUT","","",null,null],[17,"POLLERR","","",null,null],[17,"POLLHUP","","",null,null],[17,"POLLNVAL","","",null,null],[17,"POLLRDNORM","","",null,null],[17,"POLLWRNORM","","",null,null],[17,"POLLRDBAND","","",null,null],[17,"POLLWRBAND","","",null,null],[17,"BIOCGBLEN","","",null,null],[17,"BIOCSBLEN","","",null,null],[17,"BIOCFLUSH","","",null,null],[17,"BIOCPROMISC","","",null,null],[17,"BIOCGDLT","","",null,null],[17,"BIOCGETIF","","",null,null],[17,"BIOCSETIF","","",null,null],[17,"BIOCGSTATS","","",null,null],[17,"BIOCIMMEDIATE","","",null,null],[17,"BIOCVERSION","","",null,null],[17,"BIOCGHDRCMPLT","","",null,null],[17,"BIOCSHDRCMPLT","","",null,null],[17,"SIOCGIFADDR","","",null,null],[17,"_UTX_USERSIZE","","",null,null],[17,"_UTX_LINESIZE","","",null,null],[17,"_UTX_IDSIZE","","",null,null],[17,"_UTX_HOSTSIZE","","",null,null],[17,"EMPTY","","",null,null],[17,"RUN_LVL","","",null,null],[17,"BOOT_TIME","","",null,null],[17,"OLD_TIME","","",null,null],[17,"NEW_TIME","","",null,null],[17,"INIT_PROCESS","","",null,null],[17,"LOGIN_PROCESS","","",null,null],[17,"USER_PROCESS","","",null,null],[17,"DEAD_PROCESS","","",null,null],[17,"ACCOUNTING","","",null,null],[17,"SIGNATURE","","",null,null],[17,"SHUTDOWN_TIME","","",null,null],[17,"LC_COLLATE_MASK","","",null,null],[17,"LC_CTYPE_MASK","","",null,null],[17,"LC_MESSAGES_MASK","","",null,null],[17,"LC_MONETARY_MASK","","",null,null],[17,"LC_NUMERIC_MASK","","",null,null],[17,"LC_TIME_MASK","","",null,null],[17,"LC_ALL_MASK","","",null,null],[17,"CODESET","","",null,null],[17,"D_T_FMT","","",null,null],[17,"D_FMT","","",null,null],[17,"T_FMT","","",null,null],[17,"T_FMT_AMPM","","",null,null],[17,"AM_STR","","",null,null],[17,"PM_STR","","",null,null],[17,"DAY_1","","",null,null],[17,"DAY_2","","",null,null],[17,"DAY_3","","",null,null],[17,"DAY_4","","",null,null],[17,"DAY_5","","",null,null],[17,"DAY_6","","",null,null],[17,"DAY_7","","",null,null],[17,"ABDAY_1","","",null,null],[17,"ABDAY_2","","",null,null],[17,"ABDAY_3","","",null,null],[17,"ABDAY_4","","",null,null],[17,"ABDAY_5","","",null,null],[17,"ABDAY_6","","",null,null],[17,"ABDAY_7","","",null,null],[17,"MON_1","","",null,null],[17,"MON_2","","",null,null],[17,"MON_3","","",null,null],[17,"MON_4","","",null,null],[17,"MON_5","","",null,null],[17,"MON_6","","",null,null],[17,"MON_7","","",null,null],[17,"MON_8","","",null,null],[17,"MON_9","","",null,null],[17,"MON_10","","",null,null],[17,"MON_11","","",null,null],[17,"MON_12","","",null,null],[17,"ABMON_1","","",null,null],[17,"ABMON_2","","",null,null],[17,"ABMON_3","","",null,null],[17,"ABMON_4","","",null,null],[17,"ABMON_5","","",null,null],[17,"ABMON_6","","",null,null],[17,"ABMON_7","","",null,null],[17,"ABMON_8","","",null,null],[17,"ABMON_9","","",null,null],[17,"ABMON_10","","",null,null],[17,"ABMON_11","","",null,null],[17,"ABMON_12","","",null,null],[17,"CLOCK_REALTIME","","",null,null],[17,"CLOCK_MONOTONIC","","",null,null],[17,"CLOCK_PROCESS_CPUTIME_ID","","",null,null],[17,"CLOCK_THREAD_CPUTIME_ID","","",null,null],[17,"ERA","","",null,null],[17,"ERA_D_FMT","","",null,null],[17,"ERA_D_T_FMT","","",null,null],[17,"ERA_T_FMT","","",null,null],[17,"ALT_DIGITS","","",null,null],[17,"RADIXCHAR","","",null,null],[17,"THOUSEP","","",null,null],[17,"YESEXPR","","",null,null],[17,"NOEXPR","","",null,null],[17,"YESSTR","","",null,null],[17,"NOSTR","","",null,null],[17,"CRNCYSTR","","",null,null],[17,"D_MD_ORDER","","",null,null],[17,"EXIT_FAILURE","","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"BUFSIZ","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"TMP_MAX","","",null,null],[17,"_PC_LINK_MAX","","",null,null],[17,"_PC_MAX_CANON","","",null,null],[17,"_PC_MAX_INPUT","","",null,null],[17,"_PC_NAME_MAX","","",null,null],[17,"_PC_PATH_MAX","","",null,null],[17,"_PC_PIPE_BUF","","",null,null],[17,"_PC_CHOWN_RESTRICTED","","",null,null],[17,"_PC_NO_TRUNC","","",null,null],[17,"_PC_VDISABLE","","",null,null],[17,"O_DSYNC","","",null,null],[17,"O_NOCTTY","","",null,null],[17,"O_CLOEXEC","","",null,null],[17,"O_DIRECTORY","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFSOCK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[17,"F_LOCK","","",null,null],[17,"F_TEST","","",null,null],[17,"F_TLOCK","","",null,null],[17,"F_ULOCK","","",null,null],[17,"F_GETLK","","",null,null],[17,"F_SETLK","","",null,null],[17,"F_SETLKW","","",null,null],[17,"SIGHUP","","",null,null],[17,"SIGINT","","",null,null],[17,"SIGQUIT","","",null,null],[17,"SIGILL","","",null,null],[17,"SIGABRT","","",null,null],[17,"SIGEMT","","",null,null],[17,"SIGFPE","","",null,null],[17,"SIGKILL","","",null,null],[17,"SIGSEGV","","",null,null],[17,"SIGPIPE","","",null,null],[17,"SIGALRM","","",null,null],[17,"SIGTERM","","",null,null],[17,"PROT_NONE","","",null,null],[17,"PROT_READ","","",null,null],[17,"PROT_WRITE","","",null,null],[17,"PROT_EXEC","","",null,null],[17,"PT_TRACE_ME","","",null,null],[17,"PT_READ_I","","",null,null],[17,"PT_READ_D","","",null,null],[17,"PT_READ_U","","",null,null],[17,"PT_WRITE_I","","",null,null],[17,"PT_WRITE_D","","",null,null],[17,"PT_WRITE_U","","",null,null],[17,"PT_CONTINUE","","",null,null],[17,"PT_KILL","","",null,null],[17,"PT_STEP","","",null,null],[17,"PT_ATTACH","","",null,null],[17,"PT_DETACH","","",null,null],[17,"PT_SIGEXC","","",null,null],[17,"PT_THUPDATE","","",null,null],[17,"PT_ATTACHEXC","","",null,null],[17,"PT_FORCEQUOTA","","",null,null],[17,"PT_DENY_ATTACH","","",null,null],[17,"PT_FIRSTMACH","","",null,null],[17,"MAP_FILE","","",null,null],[17,"MAP_SHARED","","",null,null],[17,"MAP_PRIVATE","","",null,null],[17,"MAP_FIXED","","",null,null],[17,"MAP_ANON","","",null,null],[17,"MAP_ANONYMOUS","","",null,null],[17,"VM_FLAGS_FIXED","","",null,null],[17,"VM_FLAGS_ANYWHERE","","",null,null],[17,"VM_FLAGS_PURGABLE","","",null,null],[17,"VM_FLAGS_RANDOM_ADDR","","",null,null],[17,"VM_FLAGS_NO_CACHE","","",null,null],[17,"VM_FLAGS_RESILIENT_CODESIGN","","",null,null],[17,"VM_FLAGS_RESILIENT_MEDIA","","",null,null],[17,"VM_FLAGS_OVERWRITE","","",null,null],[17,"VM_FLAGS_SUPERPAGE_MASK","","",null,null],[17,"VM_FLAGS_RETURN_DATA_ADDR","","",null,null],[17,"VM_FLAGS_RETURN_4K_DATA_ADDR","","",null,null],[17,"VM_FLAGS_ALIAS_MASK","","",null,null],[17,"VM_FLAGS_USER_ALLOCATE","","",null,null],[17,"VM_FLAGS_USER_MAP","","",null,null],[17,"VM_FLAGS_USER_REMAP","","",null,null],[17,"VM_FLAGS_SUPERPAGE_SHIFT","","",null,null],[17,"SUPERPAGE_NONE","","",null,null],[17,"SUPERPAGE_SIZE_ANY","","",null,null],[17,"VM_FLAGS_SUPERPAGE_NONE","","",null,null],[17,"VM_FLAGS_SUPERPAGE_SIZE_ANY","","",null,null],[17,"SUPERPAGE_SIZE_2MB","","",null,null],[17,"VM_FLAGS_SUPERPAGE_SIZE_2MB","","",null,null],[17,"VM_MEMORY_MALLOC","","",null,null],[17,"VM_MEMORY_MALLOC_SMALL","","",null,null],[17,"VM_MEMORY_MALLOC_LARGE","","",null,null],[17,"VM_MEMORY_MALLOC_HUGE","","",null,null],[17,"VM_MEMORY_SBRK","","",null,null],[17,"VM_MEMORY_REALLOC","","",null,null],[17,"VM_MEMORY_MALLOC_TINY","","",null,null],[17,"VM_MEMORY_MALLOC_LARGE_REUSABLE","","",null,null],[17,"VM_MEMORY_MALLOC_LARGE_REUSED","","",null,null],[17,"VM_MEMORY_ANALYSIS_TOOL","","",null,null],[17,"VM_MEMORY_MALLOC_NANO","","",null,null],[17,"VM_MEMORY_MACH_MSG","","",null,null],[17,"VM_MEMORY_IOKIT","","",null,null],[17,"VM_MEMORY_STACK","","",null,null],[17,"VM_MEMORY_GUARD","","",null,null],[17,"VM_MEMORY_SHARED_PMAP","","",null,null],[17,"VM_MEMORY_DYLIB","","",null,null],[17,"VM_MEMORY_OBJC_DISPATCHERS","","",null,null],[17,"VM_MEMORY_UNSHARED_PMAP","","",null,null],[17,"VM_MEMORY_APPKIT","","",null,null],[17,"VM_MEMORY_FOUNDATION","","",null,null],[17,"VM_MEMORY_COREGRAPHICS","","",null,null],[17,"VM_MEMORY_CORESERVICES","","",null,null],[17,"VM_MEMORY_CARBON","","",null,null],[17,"VM_MEMORY_JAVA","","",null,null],[17,"VM_MEMORY_COREDATA","","",null,null],[17,"VM_MEMORY_COREDATA_OBJECTIDS","","",null,null],[17,"VM_MEMORY_ATS","","",null,null],[17,"VM_MEMORY_LAYERKIT","","",null,null],[17,"VM_MEMORY_CGIMAGE","","",null,null],[17,"VM_MEMORY_TCMALLOC","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_DATA","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_SHARED","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_FRAMEBUFFERS","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_BACKINGSTORES","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_XALLOC","","",null,null],[17,"VM_MEMORY_COREGRAPHICS_MISC","","",null,null],[17,"VM_MEMORY_DYLD","","",null,null],[17,"VM_MEMORY_DYLD_MALLOC","","",null,null],[17,"VM_MEMORY_SQLITE","","",null,null],[17,"VM_MEMORY_JAVASCRIPT_CORE","","",null,null],[17,"VM_MEMORY_JAVASCRIPT_JIT_EXECUTABLE_ALLOCATOR","","",null,null],[17,"VM_MEMORY_JAVASCRIPT_JIT_REGISTER_FILE","","",null,null],[17,"VM_MEMORY_GLSL","","",null,null],[17,"VM_MEMORY_OPENCL","","",null,null],[17,"VM_MEMORY_COREIMAGE","","",null,null],[17,"VM_MEMORY_WEBCORE_PURGEABLE_BUFFERS","","",null,null],[17,"VM_MEMORY_IMAGEIO","","",null,null],[17,"VM_MEMORY_COREPROFILE","","",null,null],[17,"VM_MEMORY_ASSETSD","","",null,null],[17,"VM_MEMORY_OS_ALLOC_ONCE","","",null,null],[17,"VM_MEMORY_LIBDISPATCH","","",null,null],[17,"VM_MEMORY_ACCELERATE","","",null,null],[17,"VM_MEMORY_COREUI","","",null,null],[17,"VM_MEMORY_COREUIFILE","","",null,null],[17,"VM_MEMORY_GENEALOGY","","",null,null],[17,"VM_MEMORY_RAWCAMERA","","",null,null],[17,"VM_MEMORY_CORPSEINFO","","",null,null],[17,"VM_MEMORY_ASL","","",null,null],[17,"VM_MEMORY_SWIFT_RUNTIME","","",null,null],[17,"VM_MEMORY_SWIFT_METADATA","","",null,null],[17,"VM_MEMORY_DHMM","","",null,null],[17,"VM_MEMORY_SCENEKIT","","",null,null],[17,"VM_MEMORY_SKYWALK","","",null,null],[17,"VM_MEMORY_APPLICATION_SPECIFIC_1","","",null,null],[17,"VM_MEMORY_APPLICATION_SPECIFIC_16","","",null,null],[17,"MAP_FAILED","","",null,null],[17,"MCL_CURRENT","","",null,null],[17,"MCL_FUTURE","","",null,null],[17,"MS_ASYNC","","",null,null],[17,"MS_INVALIDATE","","",null,null],[17,"MS_SYNC","","",null,null],[17,"MS_KILLPAGES","","",null,null],[17,"MS_DEACTIVATE","","",null,null],[17,"EPERM","","",null,null],[17,"ENOENT","","",null,null],[17,"ESRCH","","",null,null],[17,"EINTR","","",null,null],[17,"EIO","","",null,null],[17,"ENXIO","","",null,null],[17,"E2BIG","","",null,null],[17,"ENOEXEC","","",null,null],[17,"EBADF","","",null,null],[17,"ECHILD","","",null,null],[17,"EDEADLK","","",null,null],[17,"ENOMEM","","",null,null],[17,"EACCES","","",null,null],[17,"EFAULT","","",null,null],[17,"ENOTBLK","","",null,null],[17,"EBUSY","","",null,null],[17,"EEXIST","","",null,null],[17,"EXDEV","","",null,null],[17,"ENODEV","","",null,null],[17,"ENOTDIR","","",null,null],[17,"EISDIR","","",null,null],[17,"EINVAL","","",null,null],[17,"ENFILE","","",null,null],[17,"EMFILE","","",null,null],[17,"ENOTTY","","",null,null],[17,"ETXTBSY","","",null,null],[17,"EFBIG","","",null,null],[17,"ENOSPC","","",null,null],[17,"ESPIPE","","",null,null],[17,"EROFS","","",null,null],[17,"EMLINK","","",null,null],[17,"EPIPE","","",null,null],[17,"EDOM","","",null,null],[17,"ERANGE","","",null,null],[17,"EAGAIN","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EINPROGRESS","","",null,null],[17,"EALREADY","","",null,null],[17,"ENOTSOCK","","",null,null],[17,"EDESTADDRREQ","","",null,null],[17,"EMSGSIZE","","",null,null],[17,"EPROTOTYPE","","",null,null],[17,"ENOPROTOOPT","","",null,null],[17,"EPROTONOSUPPORT","","",null,null],[17,"ESOCKTNOSUPPORT","","",null,null],[17,"ENOTSUP","","",null,null],[17,"EPFNOSUPPORT","","",null,null],[17,"EAFNOSUPPORT","","",null,null],[17,"EADDRINUSE","","",null,null],[17,"EADDRNOTAVAIL","","",null,null],[17,"ENETDOWN","","",null,null],[17,"ENETUNREACH","","",null,null],[17,"ENETRESET","","",null,null],[17,"ECONNABORTED","","",null,null],[17,"ECONNRESET","","",null,null],[17,"ENOBUFS","","",null,null],[17,"EISCONN","","",null,null],[17,"ENOTCONN","","",null,null],[17,"ESHUTDOWN","","",null,null],[17,"ETOOMANYREFS","","",null,null],[17,"ETIMEDOUT","","",null,null],[17,"ECONNREFUSED","","",null,null],[17,"ELOOP","","",null,null],[17,"ENAMETOOLONG","","",null,null],[17,"EHOSTDOWN","","",null,null],[17,"EHOSTUNREACH","","",null,null],[17,"ENOTEMPTY","","",null,null],[17,"EPROCLIM","","",null,null],[17,"EUSERS","","",null,null],[17,"EDQUOT","","",null,null],[17,"ESTALE","","",null,null],[17,"EREMOTE","","",null,null],[17,"EBADRPC","","",null,null],[17,"ERPCMISMATCH","","",null,null],[17,"EPROGUNAVAIL","","",null,null],[17,"EPROGMISMATCH","","",null,null],[17,"EPROCUNAVAIL","","",null,null],[17,"ENOLCK","","",null,null],[17,"ENOSYS","","",null,null],[17,"EFTYPE","","",null,null],[17,"EAUTH","","",null,null],[17,"ENEEDAUTH","","",null,null],[17,"EPWROFF","","",null,null],[17,"EDEVERR","","",null,null],[17,"EOVERFLOW","","",null,null],[17,"EBADEXEC","","",null,null],[17,"EBADARCH","","",null,null],[17,"ESHLIBVERS","","",null,null],[17,"EBADMACHO","","",null,null],[17,"ECANCELED","","",null,null],[17,"EIDRM","","",null,null],[17,"ENOMSG","","",null,null],[17,"EILSEQ","","",null,null],[17,"ENOATTR","","",null,null],[17,"EBADMSG","","",null,null],[17,"EMULTIHOP","","",null,null],[17,"ENODATA","","",null,null],[17,"ENOLINK","","",null,null],[17,"ENOSR","","",null,null],[17,"ENOSTR","","",null,null],[17,"EPROTO","","",null,null],[17,"ETIME","","",null,null],[17,"EOPNOTSUPP","","",null,null],[17,"ENOPOLICY","","",null,null],[17,"ENOTRECOVERABLE","","",null,null],[17,"EOWNERDEAD","","",null,null],[17,"EQFULL","","",null,null],[17,"ELAST","","",null,null],[17,"EAI_AGAIN","","",null,null],[17,"EAI_BADFLAGS","","",null,null],[17,"EAI_FAIL","","",null,null],[17,"EAI_FAMILY","","",null,null],[17,"EAI_MEMORY","","",null,null],[17,"EAI_NODATA","","",null,null],[17,"EAI_NONAME","","",null,null],[17,"EAI_SERVICE","","",null,null],[17,"EAI_SOCKTYPE","","",null,null],[17,"EAI_SYSTEM","","",null,null],[17,"EAI_OVERFLOW","","",null,null],[17,"F_DUPFD","","",null,null],[17,"F_DUPFD_CLOEXEC","","",null,null],[17,"F_GETFD","","",null,null],[17,"F_SETFD","","",null,null],[17,"F_GETFL","","",null,null],[17,"F_SETFL","","",null,null],[17,"F_PREALLOCATE","","",null,null],[17,"F_RDADVISE","","",null,null],[17,"F_RDAHEAD","","",null,null],[17,"F_NOCACHE","","",null,null],[17,"F_GETPATH","","",null,null],[17,"F_FULLFSYNC","","",null,null],[17,"F_FREEZE_FS","","",null,null],[17,"F_THAW_FS","","",null,null],[17,"F_GLOBAL_NOCACHE","","",null,null],[17,"F_NODIRECT","","",null,null],[17,"F_ALLOCATECONTIG","","",null,null],[17,"F_ALLOCATEALL","","",null,null],[17,"F_PEOFPOSMODE","","",null,null],[17,"F_VOLPOSMODE","","",null,null],[17,"AT_FDCWD","","",null,null],[17,"AT_EACCESS","","",null,null],[17,"AT_SYMLINK_NOFOLLOW","","",null,null],[17,"AT_SYMLINK_FOLLOW","","",null,null],[17,"AT_REMOVEDIR","","",null,null],[17,"TIOCMODG","","",null,null],[17,"TIOCMODS","","",null,null],[17,"TIOCM_LE","","",null,null],[17,"TIOCM_DTR","","",null,null],[17,"TIOCM_RTS","","",null,null],[17,"TIOCM_ST","","",null,null],[17,"TIOCM_SR","","",null,null],[17,"TIOCM_CTS","","",null,null],[17,"TIOCM_CAR","","",null,null],[17,"TIOCM_CD","","",null,null],[17,"TIOCM_RNG","","",null,null],[17,"TIOCM_RI","","",null,null],[17,"TIOCM_DSR","","",null,null],[17,"TIOCEXCL","","",null,null],[17,"TIOCNXCL","","",null,null],[17,"TIOCFLUSH","","",null,null],[17,"TIOCGETD","","",null,null],[17,"TIOCSETD","","",null,null],[17,"TIOCIXON","","",null,null],[17,"TIOCIXOFF","","",null,null],[17,"TIOCSBRK","","",null,null],[17,"TIOCCBRK","","",null,null],[17,"TIOCSDTR","","",null,null],[17,"TIOCCDTR","","",null,null],[17,"TIOCGPGRP","","",null,null],[17,"TIOCSPGRP","","",null,null],[17,"TIOCOUTQ","","",null,null],[17,"TIOCSTI","","",null,null],[17,"TIOCNOTTY","","",null,null],[17,"TIOCPKT","","",null,null],[17,"TIOCPKT_DATA","","",null,null],[17,"TIOCPKT_FLUSHREAD","","",null,null],[17,"TIOCPKT_FLUSHWRITE","","",null,null],[17,"TIOCPKT_STOP","","",null,null],[17,"TIOCPKT_START","","",null,null],[17,"TIOCPKT_NOSTOP","","",null,null],[17,"TIOCPKT_DOSTOP","","",null,null],[17,"TIOCPKT_IOCTL","","",null,null],[17,"TIOCSTOP","","",null,null],[17,"TIOCSTART","","",null,null],[17,"TIOCMSET","","",null,null],[17,"TIOCMBIS","","",null,null],[17,"TIOCMBIC","","",null,null],[17,"TIOCMGET","","",null,null],[17,"TIOCREMOTE","","",null,null],[17,"TIOCGWINSZ","","",null,null],[17,"TIOCSWINSZ","","",null,null],[17,"TIOCUCNTL","","",null,null],[17,"TIOCSTAT","","",null,null],[17,"TIOCSCONS","","",null,null],[17,"TIOCCONS","","",null,null],[17,"TIOCSCTTY","","",null,null],[17,"TIOCEXT","","",null,null],[17,"TIOCSIG","","",null,null],[17,"TIOCDRAIN","","",null,null],[17,"TIOCMSDTRWAIT","","",null,null],[17,"TIOCMGDTRWAIT","","",null,null],[17,"TIOCSDRAINWAIT","","",null,null],[17,"TIOCGDRAINWAIT","","",null,null],[17,"TIOCDSIMICROCODE","","",null,null],[17,"TIOCPTYGRANT","","",null,null],[17,"TIOCPTYGNAME","","",null,null],[17,"TIOCPTYUNLK","","",null,null],[17,"BIOCGRSIG","","",null,null],[17,"BIOCSRSIG","","",null,null],[17,"BIOCSDLT","","",null,null],[17,"BIOCGSEESENT","","",null,null],[17,"BIOCSSEESENT","","",null,null],[17,"BIOCGDLTLIST","","",null,null],[17,"FIODTYPE","","",null,null],[17,"B0","","",null,null],[17,"B50","","",null,null],[17,"B75","","",null,null],[17,"B110","","",null,null],[17,"B134","","",null,null],[17,"B150","","",null,null],[17,"B200","","",null,null],[17,"B300","","",null,null],[17,"B600","","",null,null],[17,"B1200","","",null,null],[17,"B1800","","",null,null],[17,"B2400","","",null,null],[17,"B4800","","",null,null],[17,"B9600","","",null,null],[17,"B19200","","",null,null],[17,"B38400","","",null,null],[17,"B7200","","",null,null],[17,"B14400","","",null,null],[17,"B28800","","",null,null],[17,"B57600","","",null,null],[17,"B76800","","",null,null],[17,"B115200","","",null,null],[17,"B230400","","",null,null],[17,"EXTA","","",null,null],[17,"EXTB","","",null,null],[17,"SIGTRAP","","",null,null],[17,"GLOB_APPEND","","",null,null],[17,"GLOB_DOOFFS","","",null,null],[17,"GLOB_ERR","","",null,null],[17,"GLOB_MARK","","",null,null],[17,"GLOB_NOCHECK","","",null,null],[17,"GLOB_NOSORT","","",null,null],[17,"GLOB_NOESCAPE","","",null,null],[17,"GLOB_NOSPACE","","",null,null],[17,"GLOB_ABORTED","","",null,null],[17,"GLOB_NOMATCH","","",null,null],[17,"POSIX_MADV_NORMAL","","",null,null],[17,"POSIX_MADV_RANDOM","","",null,null],[17,"POSIX_MADV_SEQUENTIAL","","",null,null],[17,"POSIX_MADV_WILLNEED","","",null,null],[17,"POSIX_MADV_DONTNEED","","",null,null],[17,"_SC_IOV_MAX","","",null,null],[17,"_SC_GETGR_R_SIZE_MAX","","",null,null],[17,"_SC_GETPW_R_SIZE_MAX","","",null,null],[17,"_SC_LOGIN_NAME_MAX","","",null,null],[17,"_SC_MQ_PRIO_MAX","","",null,null],[17,"_SC_THREAD_ATTR_STACKADDR","","",null,null],[17,"_SC_THREAD_ATTR_STACKSIZE","","",null,null],[17,"_SC_THREAD_DESTRUCTOR_ITERATIONS","","",null,null],[17,"_SC_THREAD_KEYS_MAX","","",null,null],[17,"_SC_THREAD_PRIO_INHERIT","","",null,null],[17,"_SC_THREAD_PRIO_PROTECT","","",null,null],[17,"_SC_THREAD_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_THREAD_PROCESS_SHARED","","",null,null],[17,"_SC_THREAD_SAFE_FUNCTIONS","","",null,null],[17,"_SC_THREAD_STACK_MIN","","",null,null],[17,"_SC_THREAD_THREADS_MAX","","",null,null],[17,"_SC_THREADS","","",null,null],[17,"_SC_TTY_NAME_MAX","","",null,null],[17,"_SC_ATEXIT_MAX","","",null,null],[17,"_SC_XOPEN_CRYPT","","",null,null],[17,"_SC_XOPEN_ENH_I18N","","",null,null],[17,"_SC_XOPEN_LEGACY","","",null,null],[17,"_SC_XOPEN_REALTIME","","",null,null],[17,"_SC_XOPEN_REALTIME_THREADS","","",null,null],[17,"_SC_XOPEN_SHM","","",null,null],[17,"_SC_XOPEN_UNIX","","",null,null],[17,"_SC_XOPEN_VERSION","","",null,null],[17,"_SC_XOPEN_XCU_VERSION","","",null,null],[17,"_SC_PHYS_PAGES","","",null,null],[17,"PTHREAD_PROCESS_PRIVATE","","",null,null],[17,"PTHREAD_PROCESS_SHARED","","",null,null],[17,"PTHREAD_CREATE_JOINABLE","","",null,null],[17,"PTHREAD_CREATE_DETACHED","","",null,null],[17,"PTHREAD_STACK_MIN","","",null,null],[17,"RLIMIT_CPU","","",null,null],[17,"RLIMIT_FSIZE","","",null,null],[17,"RLIMIT_DATA","","",null,null],[17,"RLIMIT_STACK","","",null,null],[17,"RLIMIT_CORE","","",null,null],[17,"RLIMIT_AS","","",null,null],[17,"RLIMIT_RSS","","",null,null],[17,"RLIMIT_MEMLOCK","","",null,null],[17,"RLIMIT_NPROC","","",null,null],[17,"RLIMIT_NOFILE","","",null,null],[17,"RLIM_NLIMITS","","",null,null],[17,"_RLIMIT_POSIX_FLAG","","",null,null],[17,"RLIM_INFINITY","","",null,null],[17,"RUSAGE_SELF","","",null,null],[17,"RUSAGE_CHILDREN","","",null,null],[17,"MADV_NORMAL","","",null,null],[17,"MADV_RANDOM","","",null,null],[17,"MADV_SEQUENTIAL","","",null,null],[17,"MADV_WILLNEED","","",null,null],[17,"MADV_DONTNEED","","",null,null],[17,"MADV_FREE","","",null,null],[17,"MADV_ZERO_WIRED_PAGES","","",null,null],[17,"MADV_FREE_REUSABLE","","",null,null],[17,"MADV_FREE_REUSE","","",null,null],[17,"MADV_CAN_REUSE","","",null,null],[17,"MINCORE_INCORE","","",null,null],[17,"MINCORE_REFERENCED","","",null,null],[17,"MINCORE_MODIFIED","","",null,null],[17,"MINCORE_REFERENCED_OTHER","","",null,null],[17,"MINCORE_MODIFIED_OTHER","","",null,null],[17,"IPPROTO_HOPOPTS","","IP6 hop-by-hop options",null,null],[17,"IPPROTO_IGMP","","group mgmt protocol",null,null],[17,"IPPROTO_GGP","","gateway2 (deprecated)",null,null],[17,"IPPROTO_IPIP","","for compatibility",null,null],[17,"IPPROTO_ST","","Stream protocol II.",null,null],[17,"IPPROTO_EGP","","exterior gateway protocol",null,null],[17,"IPPROTO_PIGP","","private interior gateway",null,null],[17,"IPPROTO_RCCMON","","BBN RCC Monitoring",null,null],[17,"IPPROTO_NVPII","","network voice protocol",null,null],[17,"IPPROTO_PUP","","pup",null,null],[17,"IPPROTO_ARGUS","","Argus",null,null],[17,"IPPROTO_EMCON","","EMCON",null,null],[17,"IPPROTO_XNET","","Cross Net Debugger",null,null],[17,"IPPROTO_CHAOS","","Chaos",null,null],[17,"IPPROTO_MUX","","Multiplexing",null,null],[17,"IPPROTO_MEAS","","DCN Measurement Subsystems",null,null],[17,"IPPROTO_HMP","","Host Monitoring",null,null],[17,"IPPROTO_PRM","","Packet Radio Measurement",null,null],[17,"IPPROTO_IDP","","xns idp",null,null],[17,"IPPROTO_TRUNK1","","Trunk-1",null,null],[17,"IPPROTO_TRUNK2","","Trunk-2",null,null],[17,"IPPROTO_LEAF1","","Leaf-1",null,null],[17,"IPPROTO_LEAF2","","Leaf-2",null,null],[17,"IPPROTO_RDP","","Reliable Data",null,null],[17,"IPPROTO_IRTP","","Reliable Transaction",null,null],[17,"IPPROTO_TP","","tp-4 w/ class negotiation",null,null],[17,"IPPROTO_BLT","","Bulk Data Transfer",null,null],[17,"IPPROTO_NSP","","Network Services",null,null],[17,"IPPROTO_INP","","Merit Internodal",null,null],[17,"IPPROTO_SEP","","Sequential Exchange",null,null],[17,"IPPROTO_3PC","","Third Party Connect",null,null],[17,"IPPROTO_IDPR","","InterDomain Policy Routing",null,null],[17,"IPPROTO_XTP","","XTP",null,null],[17,"IPPROTO_DDP","","Datagram Delivery",null,null],[17,"IPPROTO_CMTP","","Control Message Transport",null,null],[17,"IPPROTO_TPXX","","TP++ Transport",null,null],[17,"IPPROTO_IL","","IL transport protocol",null,null],[17,"IPPROTO_SDRP","","Source Demand Routing",null,null],[17,"IPPROTO_ROUTING","","IP6 routing header",null,null],[17,"IPPROTO_FRAGMENT","","IP6 fragmentation header",null,null],[17,"IPPROTO_IDRP","","InterDomain Routing",null,null],[17,"IPPROTO_RSVP","","resource reservation",null,null],[17,"IPPROTO_GRE","","General Routing Encap.",null,null],[17,"IPPROTO_MHRP","","Mobile Host Routing",null,null],[17,"IPPROTO_BHA","","BHA",null,null],[17,"IPPROTO_ESP","","IP6 Encap Sec. Payload",null,null],[17,"IPPROTO_AH","","IP6 Auth Header",null,null],[17,"IPPROTO_INLSP","","Integ. Net Layer Security",null,null],[17,"IPPROTO_SWIPE","","IP with encryption",null,null],[17,"IPPROTO_NHRP","","Next Hop Resolution",null,null],[17,"IPPROTO_NONE","","IP6 no next header",null,null],[17,"IPPROTO_DSTOPTS","","IP6 destination option",null,null],[17,"IPPROTO_AHIP","","any host internal protocol",null,null],[17,"IPPROTO_CFTP","","CFTP",null,null],[17,"IPPROTO_HELLO","","\"hello\" routing protocol",null,null],[17,"IPPROTO_SATEXPAK","","SATNET/Backroom EXPAK",null,null],[17,"IPPROTO_KRYPTOLAN","","Kryptolan",null,null],[17,"IPPROTO_RVD","","Remote Virtual Disk",null,null],[17,"IPPROTO_IPPC","","Pluribus Packet Core",null,null],[17,"IPPROTO_ADFS","","Any distributed FS",null,null],[17,"IPPROTO_SATMON","","Satnet Monitoring",null,null],[17,"IPPROTO_VISA","","VISA Protocol",null,null],[17,"IPPROTO_IPCV","","Packet Core Utility",null,null],[17,"IPPROTO_CPNX","","Comp. Prot. Net. Executive",null,null],[17,"IPPROTO_CPHB","","Comp. Prot. HeartBeat",null,null],[17,"IPPROTO_WSN","","Wang Span Network",null,null],[17,"IPPROTO_PVP","","Packet Video Protocol",null,null],[17,"IPPROTO_BRSATMON","","BackRoom SATNET Monitoring",null,null],[17,"IPPROTO_ND","","Sun net disk proto (temp.)",null,null],[17,"IPPROTO_WBMON","","WIDEBAND Monitoring",null,null],[17,"IPPROTO_WBEXPAK","","WIDEBAND EXPAK",null,null],[17,"IPPROTO_EON","","ISO cnlp",null,null],[17,"IPPROTO_VMTP","","VMTP",null,null],[17,"IPPROTO_SVMTP","","Secure VMTP",null,null],[17,"IPPROTO_VINES","","Banyon VINES",null,null],[17,"IPPROTO_TTP","","TTP",null,null],[17,"IPPROTO_IGP","","NSFNET-IGP",null,null],[17,"IPPROTO_DGP","","dissimilar gateway prot.",null,null],[17,"IPPROTO_TCF","","TCF",null,null],[17,"IPPROTO_IGRP","","Cisco/GXS IGRP",null,null],[17,"IPPROTO_OSPFIGP","","OSPFIGP",null,null],[17,"IPPROTO_SRPC","","Strite RPC protocol",null,null],[17,"IPPROTO_LARP","","Locus Address Resoloution",null,null],[17,"IPPROTO_MTP","","Multicast Transport",null,null],[17,"IPPROTO_AX25","","AX.25 Frames",null,null],[17,"IPPROTO_IPEIP","","IP encapsulated in IP",null,null],[17,"IPPROTO_MICP","","Mobile Int.ing control",null,null],[17,"IPPROTO_SCCSP","","Semaphore Comm. security",null,null],[17,"IPPROTO_ETHERIP","","Ethernet IP encapsulation",null,null],[17,"IPPROTO_ENCAP","","encapsulation header",null,null],[17,"IPPROTO_APES","","any private encr. scheme",null,null],[17,"IPPROTO_GMTP","","GMTP",null,null],[17,"IPPROTO_PIM","","Protocol Independent Mcast",null,null],[17,"IPPROTO_IPCOMP","","payload compression (IPComp)",null,null],[17,"IPPROTO_PGM","","PGM",null,null],[17,"IPPROTO_SCTP","","SCTP",null,null],[17,"IPPROTO_DIVERT","","divert pseudo-protocol",null,null],[17,"IPPROTO_RAW","","raw IP packet",null,null],[17,"IPPROTO_MAX","","",null,null],[17,"IPPROTO_DONE","","last return value of *_input(), meaning \"all job for this…",null,null],[17,"AF_UNSPEC","","",null,null],[17,"AF_LOCAL","","",null,null],[17,"AF_UNIX","","",null,null],[17,"AF_INET","","",null,null],[17,"AF_IMPLINK","","",null,null],[17,"AF_PUP","","",null,null],[17,"AF_CHAOS","","",null,null],[17,"AF_NS","","",null,null],[17,"AF_ISO","","",null,null],[17,"AF_OSI","","",null,null],[17,"AF_ECMA","","",null,null],[17,"AF_DATAKIT","","",null,null],[17,"AF_CCITT","","",null,null],[17,"AF_SNA","","",null,null],[17,"AF_DECnet","","",null,null],[17,"AF_DLI","","",null,null],[17,"AF_LAT","","",null,null],[17,"AF_HYLINK","","",null,null],[17,"AF_APPLETALK","","",null,null],[17,"AF_ROUTE","","",null,null],[17,"AF_LINK","","",null,null],[17,"pseudo_AF_XTP","","",null,null],[17,"AF_COIP","","",null,null],[17,"AF_CNT","","",null,null],[17,"pseudo_AF_RTIP","","",null,null],[17,"AF_IPX","","",null,null],[17,"AF_SIP","","",null,null],[17,"pseudo_AF_PIP","","",null,null],[17,"AF_ISDN","","",null,null],[17,"AF_E164","","",null,null],[17,"pseudo_AF_KEY","","",null,null],[17,"AF_INET6","","",null,null],[17,"AF_NATM","","",null,null],[17,"AF_SYSTEM","","",null,null],[17,"AF_NETBIOS","","",null,null],[17,"AF_PPP","","",null,null],[17,"pseudo_AF_HDRCMPLT","","",null,null],[17,"AF_SYS_CONTROL","","",null,null],[17,"SYSPROTO_EVENT","","",null,null],[17,"SYSPROTO_CONTROL","","",null,null],[17,"PF_UNSPEC","","",null,null],[17,"PF_LOCAL","","",null,null],[17,"PF_UNIX","","",null,null],[17,"PF_INET","","",null,null],[17,"PF_IMPLINK","","",null,null],[17,"PF_PUP","","",null,null],[17,"PF_CHAOS","","",null,null],[17,"PF_NS","","",null,null],[17,"PF_ISO","","",null,null],[17,"PF_OSI","","",null,null],[17,"PF_ECMA","","",null,null],[17,"PF_DATAKIT","","",null,null],[17,"PF_CCITT","","",null,null],[17,"PF_SNA","","",null,null],[17,"PF_DECnet","","",null,null],[17,"PF_DLI","","",null,null],[17,"PF_LAT","","",null,null],[17,"PF_HYLINK","","",null,null],[17,"PF_APPLETALK","","",null,null],[17,"PF_ROUTE","","",null,null],[17,"PF_LINK","","",null,null],[17,"PF_XTP","","",null,null],[17,"PF_COIP","","",null,null],[17,"PF_CNT","","",null,null],[17,"PF_SIP","","",null,null],[17,"PF_IPX","","",null,null],[17,"PF_RTIP","","",null,null],[17,"PF_PIP","","",null,null],[17,"PF_ISDN","","",null,null],[17,"PF_KEY","","",null,null],[17,"PF_INET6","","",null,null],[17,"PF_NATM","","",null,null],[17,"PF_SYSTEM","","",null,null],[17,"PF_NETBIOS","","",null,null],[17,"PF_PPP","","",null,null],[17,"NET_RT_DUMP","","",null,null],[17,"NET_RT_FLAGS","","",null,null],[17,"NET_RT_IFLIST","","",null,null],[17,"SOMAXCONN","","",null,null],[17,"SOCK_MAXADDRLEN","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"SOCK_RDM","","",null,null],[17,"SOCK_SEQPACKET","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"IP_RECVDSTADDR","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IP_RECVIF","","",null,null],[17,"IP_PKTINFO","","",null,null],[17,"IP_RECVTOS","","",null,null],[17,"IPV6_JOIN_GROUP","","",null,null],[17,"IPV6_LEAVE_GROUP","","",null,null],[17,"IPV6_RECVTCLASS","","",null,null],[17,"IPV6_TCLASS","","",null,null],[17,"IPV6_PKTINFO","","",null,null],[17,"IPV6_RECVPKTINFO","","",null,null],[17,"TCP_NOPUSH","","",null,null],[17,"TCP_NOOPT","","",null,null],[17,"TCP_KEEPALIVE","","",null,null],[17,"SOL_LOCAL","","",null,null],[17,"LOCAL_PEERCRED","","",null,null],[17,"LOCAL_PEERPID","","",null,null],[17,"LOCAL_PEEREPID","","",null,null],[17,"LOCAL_PEERUUID","","",null,null],[17,"LOCAL_PEEREUUID","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_USELOOPBACK","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_REUSEPORT","","",null,null],[17,"SO_TIMESTAMP","","",null,null],[17,"SO_TIMESTAMP_MONOTONIC","","",null,null],[17,"SO_DONTTRUNC","","",null,null],[17,"SO_WANTMORE","","",null,null],[17,"SO_WANTOOBFLAG","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"SO_LABEL","","",null,null],[17,"SO_PEERLABEL","","",null,null],[17,"SO_NREAD","","",null,null],[17,"SO_NKE","","",null,null],[17,"SO_NOSIGPIPE","","",null,null],[17,"SO_NOADDRERR","","",null,null],[17,"SO_NWRITE","","",null,null],[17,"SO_REUSESHAREUID","","",null,null],[17,"SO_NOTIFYCONFLICT","","",null,null],[17,"SO_RANDOMPORT","","",null,null],[17,"SO_NP_EXTENSIONS","","",null,null],[17,"MSG_OOB","","",null,null],[17,"MSG_PEEK","","",null,null],[17,"MSG_DONTROUTE","","",null,null],[17,"MSG_EOR","","",null,null],[17,"MSG_TRUNC","","",null,null],[17,"MSG_CTRUNC","","",null,null],[17,"MSG_WAITALL","","",null,null],[17,"MSG_DONTWAIT","","",null,null],[17,"MSG_EOF","","",null,null],[17,"MSG_FLUSH","","",null,null],[17,"MSG_HOLD","","",null,null],[17,"MSG_SEND","","",null,null],[17,"MSG_HAVEMORE","","",null,null],[17,"MSG_RCVMORE","","",null,null],[17,"SCM_TIMESTAMP","","",null,null],[17,"SCM_CREDS","","",null,null],[17,"IFF_UP","","",null,null],[17,"IFF_BROADCAST","","",null,null],[17,"IFF_DEBUG","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"IFF_POINTOPOINT","","",null,null],[17,"IFF_NOTRAILERS","","",null,null],[17,"IFF_RUNNING","","",null,null],[17,"IFF_NOARP","","",null,null],[17,"IFF_PROMISC","","",null,null],[17,"IFF_ALLMULTI","","",null,null],[17,"IFF_OACTIVE","","",null,null],[17,"IFF_SIMPLEX","","",null,null],[17,"IFF_LINK0","","",null,null],[17,"IFF_LINK1","","",null,null],[17,"IFF_LINK2","","",null,null],[17,"IFF_ALTPHYS","","",null,null],[17,"IFF_MULTICAST","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[17,"LOCK_SH","","",null,null],[17,"LOCK_EX","","",null,null],[17,"LOCK_NB","","",null,null],[17,"LOCK_UN","","",null,null],[17,"MAP_COPY","","",null,null],[17,"MAP_RENAME","","",null,null],[17,"MAP_NORESERVE","","",null,null],[17,"MAP_NOEXTEND","","",null,null],[17,"MAP_HASSEMAPHORE","","",null,null],[17,"MAP_NOCACHE","","",null,null],[17,"MAP_JIT","","",null,null],[17,"_SC_ARG_MAX","","",null,null],[17,"_SC_CHILD_MAX","","",null,null],[17,"_SC_CLK_TCK","","",null,null],[17,"_SC_NGROUPS_MAX","","",null,null],[17,"_SC_OPEN_MAX","","",null,null],[17,"_SC_JOB_CONTROL","","",null,null],[17,"_SC_SAVED_IDS","","",null,null],[17,"_SC_VERSION","","",null,null],[17,"_SC_BC_BASE_MAX","","",null,null],[17,"_SC_BC_DIM_MAX","","",null,null],[17,"_SC_BC_SCALE_MAX","","",null,null],[17,"_SC_BC_STRING_MAX","","",null,null],[17,"_SC_COLL_WEIGHTS_MAX","","",null,null],[17,"_SC_EXPR_NEST_MAX","","",null,null],[17,"_SC_LINE_MAX","","",null,null],[17,"_SC_RE_DUP_MAX","","",null,null],[17,"_SC_2_VERSION","","",null,null],[17,"_SC_2_C_BIND","","",null,null],[17,"_SC_2_C_DEV","","",null,null],[17,"_SC_2_CHAR_TERM","","",null,null],[17,"_SC_2_FORT_DEV","","",null,null],[17,"_SC_2_FORT_RUN","","",null,null],[17,"_SC_2_LOCALEDEF","","",null,null],[17,"_SC_2_SW_DEV","","",null,null],[17,"_SC_2_UPE","","",null,null],[17,"_SC_STREAM_MAX","","",null,null],[17,"_SC_TZNAME_MAX","","",null,null],[17,"_SC_ASYNCHRONOUS_IO","","",null,null],[17,"_SC_PAGESIZE","","",null,null],[17,"_SC_MEMLOCK","","",null,null],[17,"_SC_MEMLOCK_RANGE","","",null,null],[17,"_SC_MEMORY_PROTECTION","","",null,null],[17,"_SC_MESSAGE_PASSING","","",null,null],[17,"_SC_PRIORITIZED_IO","","",null,null],[17,"_SC_PRIORITY_SCHEDULING","","",null,null],[17,"_SC_REALTIME_SIGNALS","","",null,null],[17,"_SC_SEMAPHORES","","",null,null],[17,"_SC_FSYNC","","",null,null],[17,"_SC_SHARED_MEMORY_OBJECTS","","",null,null],[17,"_SC_SYNCHRONIZED_IO","","",null,null],[17,"_SC_TIMERS","","",null,null],[17,"_SC_AIO_LISTIO_MAX","","",null,null],[17,"_SC_AIO_MAX","","",null,null],[17,"_SC_AIO_PRIO_DELTA_MAX","","",null,null],[17,"_SC_DELAYTIMER_MAX","","",null,null],[17,"_SC_MQ_OPEN_MAX","","",null,null],[17,"_SC_MAPPED_FILES","","",null,null],[17,"_SC_RTSIG_MAX","","",null,null],[17,"_SC_SEM_NSEMS_MAX","","",null,null],[17,"_SC_SEM_VALUE_MAX","","",null,null],[17,"_SC_SIGQUEUE_MAX","","",null,null],[17,"_SC_TIMER_MAX","","",null,null],[17,"_SC_NPROCESSORS_CONF","","",null,null],[17,"_SC_NPROCESSORS_ONLN","","",null,null],[17,"_SC_2_PBS","","",null,null],[17,"_SC_2_PBS_ACCOUNTING","","",null,null],[17,"_SC_2_PBS_CHECKPOINT","","",null,null],[17,"_SC_2_PBS_LOCATE","","",null,null],[17,"_SC_2_PBS_MESSAGE","","",null,null],[17,"_SC_2_PBS_TRACK","","",null,null],[17,"_SC_ADVISORY_INFO","","",null,null],[17,"_SC_BARRIERS","","",null,null],[17,"_SC_CLOCK_SELECTION","","",null,null],[17,"_SC_CPUTIME","","",null,null],[17,"_SC_FILE_LOCKING","","",null,null],[17,"_SC_HOST_NAME_MAX","","",null,null],[17,"_SC_MONOTONIC_CLOCK","","",null,null],[17,"_SC_READER_WRITER_LOCKS","","",null,null],[17,"_SC_REGEXP","","",null,null],[17,"_SC_SHELL","","",null,null],[17,"_SC_SPAWN","","",null,null],[17,"_SC_SPIN_LOCKS","","",null,null],[17,"_SC_SPORADIC_SERVER","","",null,null],[17,"_SC_THREAD_CPUTIME","","",null,null],[17,"_SC_THREAD_SPORADIC_SERVER","","",null,null],[17,"_SC_TIMEOUTS","","",null,null],[17,"_SC_TRACE","","",null,null],[17,"_SC_TRACE_EVENT_FILTER","","",null,null],[17,"_SC_TRACE_INHERIT","","",null,null],[17,"_SC_TRACE_LOG","","",null,null],[17,"_SC_TYPED_MEMORY_OBJECTS","","",null,null],[17,"_SC_V6_ILP32_OFF32","","",null,null],[17,"_SC_V6_ILP32_OFFBIG","","",null,null],[17,"_SC_V6_LP64_OFF64","","",null,null],[17,"_SC_V6_LPBIG_OFFBIG","","",null,null],[17,"_SC_IPV6","","",null,null],[17,"_SC_RAW_SOCKETS","","",null,null],[17,"_SC_SYMLOOP_MAX","","",null,null],[17,"_SC_PAGE_SIZE","","",null,null],[17,"_SC_XOPEN_STREAMS","","",null,null],[17,"_SC_XBS5_ILP32_OFF32","","",null,null],[17,"_SC_XBS5_ILP32_OFFBIG","","",null,null],[17,"_SC_XBS5_LP64_OFF64","","",null,null],[17,"_SC_XBS5_LPBIG_OFFBIG","","",null,null],[17,"_SC_SS_REPL_MAX","","",null,null],[17,"_SC_TRACE_EVENT_NAME_MAX","","",null,null],[17,"_SC_TRACE_NAME_MAX","","",null,null],[17,"_SC_TRACE_SYS_MAX","","",null,null],[17,"_SC_TRACE_USER_EVENT_MAX","","",null,null],[17,"_SC_PASS_MAX","","",null,null],[17,"PTHREAD_MUTEX_NORMAL","","",null,null],[17,"PTHREAD_MUTEX_ERRORCHECK","","",null,null],[17,"PTHREAD_MUTEX_RECURSIVE","","",null,null],[17,"PTHREAD_MUTEX_DEFAULT","","",null,null],[17,"_PTHREAD_MUTEX_SIG_init","","",null,null],[17,"_PTHREAD_COND_SIG_init","","",null,null],[17,"_PTHREAD_RWLOCK_SIG_init","","",null,null],[17,"PTHREAD_MUTEX_INITIALIZER","","",null,null],[17,"PTHREAD_COND_INITIALIZER","","",null,null],[17,"PTHREAD_RWLOCK_INITIALIZER","","",null,null],[17,"SIGSTKSZ","","",null,null],[17,"FD_SETSIZE","","",null,null],[17,"ST_NOSUID","","",null,null],[17,"EVFILT_READ","","",null,null],[17,"EVFILT_WRITE","","",null,null],[17,"EVFILT_AIO","","",null,null],[17,"EVFILT_VNODE","","",null,null],[17,"EVFILT_PROC","","",null,null],[17,"EVFILT_SIGNAL","","",null,null],[17,"EVFILT_TIMER","","",null,null],[17,"EVFILT_MACHPORT","","",null,null],[17,"EVFILT_FS","","",null,null],[17,"EVFILT_USER","","",null,null],[17,"EVFILT_VM","","",null,null],[17,"EV_ADD","","",null,null],[17,"EV_DELETE","","",null,null],[17,"EV_ENABLE","","",null,null],[17,"EV_DISABLE","","",null,null],[17,"EV_ONESHOT","","",null,null],[17,"EV_CLEAR","","",null,null],[17,"EV_RECEIPT","","",null,null],[17,"EV_DISPATCH","","",null,null],[17,"EV_FLAG0","","",null,null],[17,"EV_POLL","","",null,null],[17,"EV_FLAG1","","",null,null],[17,"EV_OOBAND","","",null,null],[17,"EV_ERROR","","",null,null],[17,"EV_EOF","","",null,null],[17,"EV_SYSFLAGS","","",null,null],[17,"NOTE_TRIGGER","","",null,null],[17,"NOTE_FFNOP","","",null,null],[17,"NOTE_FFAND","","",null,null],[17,"NOTE_FFOR","","",null,null],[17,"NOTE_FFCOPY","","",null,null],[17,"NOTE_FFCTRLMASK","","",null,null],[17,"NOTE_FFLAGSMASK","","",null,null],[17,"NOTE_LOWAT","","",null,null],[17,"NOTE_DELETE","","",null,null],[17,"NOTE_WRITE","","",null,null],[17,"NOTE_EXTEND","","",null,null],[17,"NOTE_ATTRIB","","",null,null],[17,"NOTE_LINK","","",null,null],[17,"NOTE_RENAME","","",null,null],[17,"NOTE_REVOKE","","",null,null],[17,"NOTE_NONE","","",null,null],[17,"NOTE_EXIT","","",null,null],[17,"NOTE_FORK","","",null,null],[17,"NOTE_EXEC","","",null,null],[17,"NOTE_SIGNAL","","",null,null],[17,"NOTE_EXITSTATUS","","",null,null],[17,"NOTE_EXIT_DETAIL","","",null,null],[17,"NOTE_PDATAMASK","","",null,null],[17,"NOTE_PCTRLMASK","","",null,null],[17,"NOTE_EXIT_DETAIL_MASK","","",null,null],[17,"NOTE_EXIT_DECRYPTFAIL","","",null,null],[17,"NOTE_EXIT_MEMORY","","",null,null],[17,"NOTE_EXIT_CSERROR","","",null,null],[17,"NOTE_VM_PRESSURE","","",null,null],[17,"NOTE_VM_PRESSURE_TERMINATE","","",null,null],[17,"NOTE_VM_PRESSURE_SUDDEN_TERMINATE","","",null,null],[17,"NOTE_VM_ERROR","","",null,null],[17,"NOTE_SECONDS","","",null,null],[17,"NOTE_USECONDS","","",null,null],[17,"NOTE_NSECONDS","","",null,null],[17,"NOTE_ABSOLUTE","","",null,null],[17,"NOTE_LEEWAY","","",null,null],[17,"NOTE_CRITICAL","","",null,null],[17,"NOTE_BACKGROUND","","",null,null],[17,"NOTE_TRACK","","",null,null],[17,"NOTE_TRACKERR","","",null,null],[17,"NOTE_CHILD","","",null,null],[17,"OCRNL","","",null,null],[17,"ONOCR","","",null,null],[17,"ONLRET","","",null,null],[17,"OFILL","","",null,null],[17,"NLDLY","","",null,null],[17,"TABDLY","","",null,null],[17,"CRDLY","","",null,null],[17,"FFDLY","","",null,null],[17,"BSDLY","","",null,null],[17,"VTDLY","","",null,null],[17,"OFDEL","","",null,null],[17,"NL0","","",null,null],[17,"NL1","","",null,null],[17,"TAB0","","",null,null],[17,"TAB1","","",null,null],[17,"TAB2","","",null,null],[17,"CR0","","",null,null],[17,"CR1","","",null,null],[17,"CR2","","",null,null],[17,"CR3","","",null,null],[17,"FF0","","",null,null],[17,"FF1","","",null,null],[17,"BS0","","",null,null],[17,"BS1","","",null,null],[17,"TAB3","","",null,null],[17,"VT0","","",null,null],[17,"VT1","","",null,null],[17,"IUTF8","","",null,null],[17,"CRTSCTS","","",null,null],[17,"NI_MAXHOST","","",null,null],[17,"NI_MAXSERV","","",null,null],[17,"NI_NOFQDN","","",null,null],[17,"NI_NUMERICHOST","","",null,null],[17,"NI_NAMEREQD","","",null,null],[17,"NI_NUMERICSERV","","",null,null],[17,"NI_NUMERICSCOPE","","",null,null],[17,"NI_DGRAM","","",null,null],[17,"Q_GETQUOTA","","",null,null],[17,"Q_SETQUOTA","","",null,null],[17,"RENAME_SWAP","","",null,null],[17,"RENAME_EXCL","","",null,null],[17,"RTLD_LOCAL","","",null,null],[17,"RTLD_FIRST","","",null,null],[17,"RTLD_NODELETE","","",null,null],[17,"RTLD_NOLOAD","","",null,null],[17,"RTLD_GLOBAL","","",null,null],[17,"_WSTOPPED","","",null,null],[17,"LOG_NETINFO","","",null,null],[17,"LOG_REMOTEAUTH","","",null,null],[17,"LOG_INSTALL","","",null,null],[17,"LOG_RAS","","",null,null],[17,"LOG_LAUNCHD","","",null,null],[17,"LOG_NFACILITIES","","",null,null],[17,"CTLTYPE","","",null,null],[17,"CTLTYPE_NODE","","",null,null],[17,"CTLTYPE_INT","","",null,null],[17,"CTLTYPE_STRING","","",null,null],[17,"CTLTYPE_QUAD","","",null,null],[17,"CTLTYPE_OPAQUE","","",null,null],[17,"CTLTYPE_STRUCT","","",null,null],[17,"CTLFLAG_RD","","",null,null],[17,"CTLFLAG_WR","","",null,null],[17,"CTLFLAG_RW","","",null,null],[17,"CTLFLAG_NOLOCK","","",null,null],[17,"CTLFLAG_ANYBODY","","",null,null],[17,"CTLFLAG_SECURE","","",null,null],[17,"CTLFLAG_MASKED","","",null,null],[17,"CTLFLAG_NOAUTO","","",null,null],[17,"CTLFLAG_KERN","","",null,null],[17,"CTLFLAG_LOCKED","","",null,null],[17,"CTLFLAG_OID2","","",null,null],[17,"CTL_UNSPEC","","",null,null],[17,"CTL_KERN","","",null,null],[17,"CTL_VM","","",null,null],[17,"CTL_VFS","","",null,null],[17,"CTL_NET","","",null,null],[17,"CTL_DEBUG","","",null,null],[17,"CTL_HW","","",null,null],[17,"CTL_MACHDEP","","",null,null],[17,"CTL_USER","","",null,null],[17,"CTL_MAXID","","",null,null],[17,"KERN_OSTYPE","","",null,null],[17,"KERN_OSRELEASE","","",null,null],[17,"KERN_OSREV","","",null,null],[17,"KERN_VERSION","","",null,null],[17,"KERN_MAXVNODES","","",null,null],[17,"KERN_MAXPROC","","",null,null],[17,"KERN_MAXFILES","","",null,null],[17,"KERN_ARGMAX","","",null,null],[17,"KERN_SECURELVL","","",null,null],[17,"KERN_HOSTNAME","","",null,null],[17,"KERN_HOSTID","","",null,null],[17,"KERN_CLOCKRATE","","",null,null],[17,"KERN_VNODE","","",null,null],[17,"KERN_PROC","","",null,null],[17,"KERN_FILE","","",null,null],[17,"KERN_PROF","","",null,null],[17,"KERN_POSIX1","","",null,null],[17,"KERN_NGROUPS","","",null,null],[17,"KERN_JOB_CONTROL","","",null,null],[17,"KERN_SAVED_IDS","","",null,null],[17,"KERN_BOOTTIME","","",null,null],[17,"KERN_NISDOMAINNAME","","",null,null],[17,"KERN_DOMAINNAME","","",null,null],[17,"KERN_MAXPARTITIONS","","",null,null],[17,"KERN_KDEBUG","","",null,null],[17,"KERN_UPDATEINTERVAL","","",null,null],[17,"KERN_OSRELDATE","","",null,null],[17,"KERN_NTP_PLL","","",null,null],[17,"KERN_BOOTFILE","","",null,null],[17,"KERN_MAXFILESPERPROC","","",null,null],[17,"KERN_MAXPROCPERUID","","",null,null],[17,"KERN_DUMPDEV","","",null,null],[17,"KERN_IPC","","",null,null],[17,"KERN_DUMMY","","",null,null],[17,"KERN_PS_STRINGS","","",null,null],[17,"KERN_USRSTACK32","","",null,null],[17,"KERN_LOGSIGEXIT","","",null,null],[17,"KERN_SYMFILE","","",null,null],[17,"KERN_PROCARGS","","",null,null],[17,"KERN_NETBOOT","","",null,null],[17,"KERN_SYSV","","",null,null],[17,"KERN_AFFINITY","","",null,null],[17,"KERN_TRANSLATE","","",null,null],[17,"KERN_CLASSIC","","",null,null],[17,"KERN_EXEC","","",null,null],[17,"KERN_CLASSICHANDLER","","",null,null],[17,"KERN_AIOMAX","","",null,null],[17,"KERN_AIOPROCMAX","","",null,null],[17,"KERN_AIOTHREADS","","",null,null],[17,"KERN_COREFILE","","",null,null],[17,"KERN_COREDUMP","","",null,null],[17,"KERN_SUGID_COREDUMP","","",null,null],[17,"KERN_PROCDELAYTERM","","",null,null],[17,"KERN_SHREG_PRIVATIZABLE","","",null,null],[17,"KERN_LOW_PRI_WINDOW","","",null,null],[17,"KERN_LOW_PRI_DELAY","","",null,null],[17,"KERN_POSIX","","",null,null],[17,"KERN_USRSTACK64","","",null,null],[17,"KERN_NX_PROTECTION","","",null,null],[17,"KERN_TFP","","",null,null],[17,"KERN_PROCNAME","","",null,null],[17,"KERN_THALTSTACK","","",null,null],[17,"KERN_SPECULATIVE_READS","","",null,null],[17,"KERN_OSVERSION","","",null,null],[17,"KERN_SAFEBOOT","","",null,null],[17,"KERN_RAGEVNODE","","",null,null],[17,"KERN_TTY","","",null,null],[17,"KERN_CHECKOPENEVT","","",null,null],[17,"KERN_THREADNAME","","",null,null],[17,"KERN_MAXID","","",null,null],[17,"KERN_RAGE_PROC","","",null,null],[17,"KERN_RAGE_THREAD","","",null,null],[17,"KERN_UNRAGE_PROC","","",null,null],[17,"KERN_UNRAGE_THREAD","","",null,null],[17,"KERN_OPENEVT_PROC","","",null,null],[17,"KERN_UNOPENEVT_PROC","","",null,null],[17,"KERN_TFP_POLICY","","",null,null],[17,"KERN_TFP_POLICY_DENY","","",null,null],[17,"KERN_TFP_POLICY_DEFAULT","","",null,null],[17,"KERN_KDEFLAGS","","",null,null],[17,"KERN_KDDFLAGS","","",null,null],[17,"KERN_KDENABLE","","",null,null],[17,"KERN_KDSETBUF","","",null,null],[17,"KERN_KDGETBUF","","",null,null],[17,"KERN_KDSETUP","","",null,null],[17,"KERN_KDREMOVE","","",null,null],[17,"KERN_KDSETREG","","",null,null],[17,"KERN_KDGETREG","","",null,null],[17,"KERN_KDREADTR","","",null,null],[17,"KERN_KDPIDTR","","",null,null],[17,"KERN_KDTHRMAP","","",null,null],[17,"KERN_KDPIDEX","","",null,null],[17,"KERN_KDSETRTCDEC","","",null,null],[17,"KERN_KDGETENTROPY","","",null,null],[17,"KERN_KDWRITETR","","",null,null],[17,"KERN_KDWRITEMAP","","",null,null],[17,"KERN_KDREADCURTHRMAP","","",null,null],[17,"KERN_KDSET_TYPEFILTER","","",null,null],[17,"KERN_KDBUFWAIT","","",null,null],[17,"KERN_KDCPUMAP","","",null,null],[17,"KERN_PROC_ALL","","",null,null],[17,"KERN_PROC_PID","","",null,null],[17,"KERN_PROC_PGRP","","",null,null],[17,"KERN_PROC_SESSION","","",null,null],[17,"KERN_PROC_TTY","","",null,null],[17,"KERN_PROC_UID","","",null,null],[17,"KERN_PROC_RUID","","",null,null],[17,"KERN_PROC_LCID","","",null,null],[17,"KIPC_MAXSOCKBUF","","",null,null],[17,"KIPC_SOCKBUF_WASTE","","",null,null],[17,"KIPC_SOMAXCONN","","",null,null],[17,"KIPC_MAX_LINKHDR","","",null,null],[17,"KIPC_MAX_PROTOHDR","","",null,null],[17,"KIPC_MAX_HDR","","",null,null],[17,"KIPC_MAX_DATALEN","","",null,null],[17,"KIPC_MBSTAT","","",null,null],[17,"KIPC_NMBCLUSTERS","","",null,null],[17,"KIPC_SOQLIMITCOMPAT","","",null,null],[17,"VM_METER","","",null,null],[17,"VM_LOADAVG","","",null,null],[17,"VM_MACHFACTOR","","",null,null],[17,"VM_SWAPUSAGE","","",null,null],[17,"VM_MAXID","","",null,null],[17,"HW_MACHINE","","",null,null],[17,"HW_MODEL","","",null,null],[17,"HW_NCPU","","",null,null],[17,"HW_BYTEORDER","","",null,null],[17,"HW_PHYSMEM","","",null,null],[17,"HW_USERMEM","","",null,null],[17,"HW_PAGESIZE","","",null,null],[17,"HW_DISKNAMES","","",null,null],[17,"HW_DISKSTATS","","",null,null],[17,"HW_EPOCH","","",null,null],[17,"HW_FLOATINGPT","","",null,null],[17,"HW_MACHINE_ARCH","","",null,null],[17,"HW_VECTORUNIT","","",null,null],[17,"HW_BUS_FREQ","","",null,null],[17,"HW_CPU_FREQ","","",null,null],[17,"HW_CACHELINE","","",null,null],[17,"HW_L1ICACHESIZE","","",null,null],[17,"HW_L1DCACHESIZE","","",null,null],[17,"HW_L2SETTINGS","","",null,null],[17,"HW_L2CACHESIZE","","",null,null],[17,"HW_L3SETTINGS","","",null,null],[17,"HW_L3CACHESIZE","","",null,null],[17,"HW_TB_FREQ","","",null,null],[17,"HW_MEMSIZE","","",null,null],[17,"HW_AVAILCPU","","",null,null],[17,"HW_MAXID","","",null,null],[17,"USER_CS_PATH","","",null,null],[17,"USER_BC_BASE_MAX","","",null,null],[17,"USER_BC_DIM_MAX","","",null,null],[17,"USER_BC_SCALE_MAX","","",null,null],[17,"USER_BC_STRING_MAX","","",null,null],[17,"USER_COLL_WEIGHTS_MAX","","",null,null],[17,"USER_EXPR_NEST_MAX","","",null,null],[17,"USER_LINE_MAX","","",null,null],[17,"USER_RE_DUP_MAX","","",null,null],[17,"USER_POSIX2_VERSION","","",null,null],[17,"USER_POSIX2_C_BIND","","",null,null],[17,"USER_POSIX2_C_DEV","","",null,null],[17,"USER_POSIX2_CHAR_TERM","","",null,null],[17,"USER_POSIX2_FORT_DEV","","",null,null],[17,"USER_POSIX2_FORT_RUN","","",null,null],[17,"USER_POSIX2_LOCALEDEF","","",null,null],[17,"USER_POSIX2_SW_DEV","","",null,null],[17,"USER_POSIX2_UPE","","",null,null],[17,"USER_STREAM_MAX","","",null,null],[17,"USER_TZNAME_MAX","","",null,null],[17,"USER_MAXID","","",null,null],[17,"CTL_DEBUG_NAME","","",null,null],[17,"CTL_DEBUG_VALUE","","",null,null],[17,"CTL_DEBUG_MAXID","","",null,null],[17,"PRIO_DARWIN_THREAD","","",null,null],[17,"PRIO_DARWIN_PROCESS","","",null,null],[17,"PRIO_DARWIN_BG","","",null,null],[17,"PRIO_DARWIN_NONUI","","",null,null],[17,"SEM_FAILED","","",null,null],[17,"AI_PASSIVE","","",null,null],[17,"AI_CANONNAME","","",null,null],[17,"AI_NUMERICHOST","","",null,null],[17,"AI_NUMERICSERV","","",null,null],[17,"AI_MASK","","",null,null],[17,"AI_ALL","","",null,null],[17,"AI_V4MAPPED_CFG","","",null,null],[17,"AI_ADDRCONFIG","","",null,null],[17,"AI_V4MAPPED","","",null,null],[17,"AI_DEFAULT","","",null,null],[17,"AI_UNUSABLE","","",null,null],[17,"SIGEV_NONE","","",null,null],[17,"SIGEV_SIGNAL","","",null,null],[17,"SIGEV_THREAD","","",null,null],[17,"AIO_CANCELED","","",null,null],[17,"AIO_NOTCANCELED","","",null,null],[17,"AIO_ALLDONE","","",null,null],[17,"AIO_LISTIO_MAX","","",null,null],[17,"LIO_NOP","","",null,null],[17,"LIO_WRITE","","",null,null],[17,"LIO_READ","","",null,null],[17,"LIO_WAIT","","",null,null],[17,"LIO_NOWAIT","","",null,null],[17,"WEXITED","","",null,null],[17,"WSTOPPED","","",null,null],[17,"WCONTINUED","","",null,null],[17,"WNOWAIT","","",null,null],[17,"P_ALL","","",null,null],[17,"P_PID","","",null,null],[17,"P_PGID","","",null,null],[17,"UTIME_OMIT","","",null,null],[17,"UTIME_NOW","","",null,null],[17,"XATTR_NOFOLLOW","","",null,null],[17,"XATTR_CREATE","","",null,null],[17,"XATTR_REPLACE","","",null,null],[17,"XATTR_NOSECURITY","","",null,null],[17,"XATTR_NODEFAULT","","",null,null],[17,"XATTR_SHOWCOMPRESSION","","",null,null],[17,"NET_RT_IFLIST2","","",null,null],[17,"RTF_UP","","",null,null],[17,"RTF_GATEWAY","","",null,null],[17,"RTF_HOST","","",null,null],[17,"RTF_REJECT","","",null,null],[17,"RTF_DYNAMIC","","",null,null],[17,"RTF_MODIFIED","","",null,null],[17,"RTF_DONE","","",null,null],[17,"RTF_DELCLONE","","",null,null],[17,"RTF_CLONING","","",null,null],[17,"RTF_XRESOLVE","","",null,null],[17,"RTF_LLINFO","","",null,null],[17,"RTF_STATIC","","",null,null],[17,"RTF_BLACKHOLE","","",null,null],[17,"RTF_NOIFREF","","",null,null],[17,"RTF_PROTO2","","",null,null],[17,"RTF_PROTO1","","",null,null],[17,"RTF_PRCLONING","","",null,null],[17,"RTF_WASCLONED","","",null,null],[17,"RTF_PROTO3","","",null,null],[17,"RTF_PINNED","","",null,null],[17,"RTF_LOCAL","","",null,null],[17,"RTF_BROADCAST","","",null,null],[17,"RTF_MULTICAST","","",null,null],[17,"RTF_IFSCOPE","","",null,null],[17,"RTF_CONDEMNED","","",null,null],[17,"RTF_IFREF","","",null,null],[17,"RTF_PROXY","","",null,null],[17,"RTF_ROUTER","","",null,null],[17,"RTM_VERSION","","",null,null],[17,"RTM_ADD","","",null,null],[17,"RTM_DELETE","","",null,null],[17,"RTM_CHANGE","","",null,null],[17,"RTM_GET","","",null,null],[17,"RTM_LOSING","","",null,null],[17,"RTM_REDIRECT","","",null,null],[17,"RTM_MISS","","",null,null],[17,"RTM_LOCK","","",null,null],[17,"RTM_OLDADD","","",null,null],[17,"RTM_OLDDEL","","",null,null],[17,"RTM_RESOLVE","","",null,null],[17,"RTM_NEWADDR","","",null,null],[17,"RTM_DELADDR","","",null,null],[17,"RTM_IFINFO","","",null,null],[17,"RTM_NEWMADDR","","",null,null],[17,"RTM_DELMADDR","","",null,null],[17,"RTM_IFINFO2","","",null,null],[17,"RTM_NEWMADDR2","","",null,null],[17,"RTM_GET2","","",null,null],[17,"RTV_MTU","","",null,null],[17,"RTV_HOPCOUNT","","",null,null],[17,"RTV_EXPIRE","","",null,null],[17,"RTV_RPIPE","","",null,null],[17,"RTV_SPIPE","","",null,null],[17,"RTV_SSTHRESH","","",null,null],[17,"RTV_RTT","","",null,null],[17,"RTV_RTTVAR","","",null,null],[17,"RTA_DST","","",null,null],[17,"RTA_GATEWAY","","",null,null],[17,"RTA_NETMASK","","",null,null],[17,"RTA_GENMASK","","",null,null],[17,"RTA_IFP","","",null,null],[17,"RTA_IFA","","",null,null],[17,"RTA_AUTHOR","","",null,null],[17,"RTA_BRD","","",null,null],[17,"RTAX_DST","","",null,null],[17,"RTAX_GATEWAY","","",null,null],[17,"RTAX_NETMASK","","",null,null],[17,"RTAX_GENMASK","","",null,null],[17,"RTAX_IFP","","",null,null],[17,"RTAX_IFA","","",null,null],[17,"RTAX_AUTHOR","","",null,null],[17,"RTAX_BRD","","",null,null],[17,"RTAX_MAX","","",null,null],[17,"KERN_PROCARGS2","","",null,null],[17,"PROC_PIDTASKALLINFO","","",null,null],[17,"PROC_PIDTASKINFO","","",null,null],[17,"PROC_PIDTHREADINFO","","",null,null],[17,"MAXCOMLEN","","",null,null],[17,"MAXTHREADNAMESIZE","","",null,null],[17,"XUCRED_VERSION","","",null,null],[17,"LC_SEGMENT","","",null,null],[17,"LC_SEGMENT_64","","",null,null],[17,"MH_MAGIC","","",null,null],[17,"MH_MAGIC_64","","",null,null],[17,"UTUN_OPT_FLAGS","","",null,null],[17,"UTUN_OPT_IFNAME","","",null,null],[17,"DLT_NULL","","",null,null],[17,"DLT_EN10MB","","",null,null],[17,"DLT_EN3MB","","",null,null],[17,"DLT_AX25","","",null,null],[17,"DLT_PRONET","","",null,null],[17,"DLT_CHAOS","","",null,null],[17,"DLT_IEEE802","","",null,null],[17,"DLT_ARCNET","","",null,null],[17,"DLT_SLIP","","",null,null],[17,"DLT_PPP","","",null,null],[17,"DLT_FDDI","","",null,null],[17,"DLT_ATM_RFC1483","","",null,null],[17,"DLT_RAW","","",null,null],[17,"DLT_LOOP","","",null,null],[17,"BPF_ALIGNMENT","","",null,null],[17,"POSIX_SPAWN_RESETIDS","","",null,null],[17,"POSIX_SPAWN_SETPGROUP","","",null,null],[17,"POSIX_SPAWN_SETSIGDEF","","",null,null],[17,"POSIX_SPAWN_SETSIGMASK","","",null,null],[17,"POSIX_SPAWN_SETEXEC","","",null,null],[17,"POSIX_SPAWN_START_SUSPENDED","","",null,null],[17,"POSIX_SPAWN_CLOEXEC_DEFAULT","","",null,null],[17,"IPC_CREAT","","",null,null],[17,"IPC_EXCL","","",null,null],[17,"IPC_NOWAIT","","",null,null],[17,"IPC_PRIVATE","","",null,null],[17,"IPC_RMID","","",null,null],[17,"IPC_SET","","",null,null],[17,"IPC_STAT","","",null,null],[17,"IPC_R","","",null,null],[17,"IPC_W","","",null,null],[17,"IPC_M","","",null,null],[17,"SEM_UNDO","","",null,null],[17,"GETNCNT","","",null,null],[17,"GETPID","","",null,null],[17,"GETVAL","","",null,null],[17,"GETALL","","",null,null],[17,"GETZCNT","","",null,null],[17,"SETVAL","","",null,null],[17,"SETALL","","",null,null],[17,"SHM_RDONLY","","",null,null],[17,"SHM_RND","","",null,null],[17,"SHMLBA","","",null,null],[17,"SHM_R","","",null,null],[17,"SHM_W","","",null,null],[17,"UF_SETTABLE","","",null,null],[17,"UF_NODUMP","","",null,null],[17,"UF_IMMUTABLE","","",null,null],[17,"UF_APPEND","","",null,null],[17,"UF_OPAQUE","","",null,null],[17,"UF_COMPRESSED","","",null,null],[17,"UF_TRACKED","","",null,null],[17,"SF_SETTABLE","","",null,null],[17,"SF_ARCHIVED","","",null,null],[17,"SF_IMMUTABLE","","",null,null],[17,"SF_APPEND","","",null,null],[17,"UF_HIDDEN","","",null,null],[17,"__PTHREAD_MUTEX_SIZE__","","",null,null],[17,"__PTHREAD_COND_SIZE__","","",null,null],[17,"__PTHREAD_CONDATTR_SIZE__","","",null,null],[17,"__PTHREAD_RWLOCK_SIZE__","","",null,null],[17,"__PTHREAD_RWLOCKATTR_SIZE__","","",null,null],[17,"TIOCTIMESTAMP","","",null,null],[17,"TIOCDCDTIMESTAMP","","",null,null],[17,"BIOCSETF","","",null,null],[17,"BIOCSRTIMEOUT","","",null,null],[17,"BIOCGRTIMEOUT","","",null,null],[17,"BIOCSETFNR","","",null,null],[11,"from","","",81,[[["t"]],["t"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"into","","",81,[[],["u"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"into","","",13,[[],["u"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"into","","",14,[[],["u"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"into","","",15,[[],["u"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"into","","",16,[[],["u"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"into","","",19,[[],["u"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"into","","",82,[[],["u"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"into","","",22,[[],["u"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"into","","",23,[[],["u"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"into","","",83,[[],["u"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"into","","",26,[[],["u"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"into","","",30,[[],["u"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"into","","",31,[[],["u"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"into","","",32,[[],["u"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"into","","",84,[[],["u"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"into","","",85,[[],["u"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"into","","",86,[[],["u"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"into","","",33,[[],["u"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"into","","",34,[[],["u"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"into","","",35,[[],["u"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"into","","",36,[[],["u"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"into","","",37,[[],["u"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"into","","",38,[[],["u"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"into","","",39,[[],["u"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"into","","",40,[[],["u"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"into","","",41,[[],["u"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"into","","",42,[[],["u"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"into","","",43,[[],["u"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"into","","",44,[[],["u"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"into","","",45,[[],["u"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"into","","",46,[[],["u"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"into","","",47,[[],["u"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"into","","",48,[[],["u"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"into","","",49,[[],["u"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"into","","",50,[[],["u"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"into","","",51,[[],["u"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"into","","",52,[[],["u"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"into","","",53,[[],["u"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"into","","",54,[[],["u"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"into","","",55,[[],["u"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"into","","",56,[[],["u"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"into","","",57,[[],["u"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"into","","",58,[[],["u"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"into","","",59,[[],["u"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"into","","",60,[[],["u"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"into","","",61,[[],["u"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"into","","",62,[[],["u"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"into","","",63,[[],["u"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"into","","",64,[[],["u"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"into","","",65,[[],["u"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"into","","",66,[[],["u"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"into","","",67,[[],["u"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"into","","",68,[[],["u"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"into","","",69,[[],["u"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"into","","",70,[[],["u"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"into","","",71,[[],["u"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"into","","",72,[[],["u"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"into","","",87,[[],["u"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"into","","",88,[[],["u"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"into","","",89,[[],["u"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"into","","",73,[[],["u"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"into","","",74,[[],["u"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"into","","",75,[[],["u"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"into","","",76,[[],["u"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"into","","",77,[[],["u"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"into","","",78,[[],["u"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"into","","",90,[[],["u"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"into","","",91,[[],["u"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"into","","",79,[[],["u"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"into","","",80,[[],["u"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"into","","",92,[[],["u"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"into","","",93,[[],["u"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"into","","",94,[[],["u"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"into","","",95,[[],["u"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"fmt","","",81,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",80,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",67,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",68,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",71,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",72,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",87,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",88,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",89,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",74,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",90,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",79,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["self"],["group"]],["bool"]]],[11,"ne","","",0,[[["self"],["group"]],["bool"]]],[11,"eq","","",1,[[["self"],["utimbuf"]],["bool"]]],[11,"ne","","",1,[[["self"],["utimbuf"]],["bool"]]],[11,"eq","","",2,[[["self"],["timeval"]],["bool"]]],[11,"ne","","",2,[[["self"],["timeval"]],["bool"]]],[11,"eq","","",3,[[["timespec"],["self"]],["bool"]]],[11,"ne","","",3,[[["timespec"],["self"]],["bool"]]],[11,"eq","","",4,[[["rlimit"],["self"]],["bool"]]],[11,"ne","","",4,[[["rlimit"],["self"]],["bool"]]],[11,"eq","","",5,[[["rusage"],["self"]],["bool"]]],[11,"ne","","",5,[[["rusage"],["self"]],["bool"]]],[11,"eq","","",6,[[["self"],["ipv6_mreq"]],["bool"]]],[11,"ne","","",6,[[["self"],["ipv6_mreq"]],["bool"]]],[11,"eq","","",7,[[["self"],["hostent"]],["bool"]]],[11,"ne","","",7,[[["self"],["hostent"]],["bool"]]],[11,"eq","","",8,[[["self"],["iovec"]],["bool"]]],[11,"ne","","",8,[[["self"],["iovec"]],["bool"]]],[11,"eq","","",9,[[["pollfd"],["self"]],["bool"]]],[11,"ne","","",9,[[["pollfd"],["self"]],["bool"]]],[11,"eq","","",10,[[["winsize"],["self"]],["bool"]]],[11,"ne","","",10,[[["winsize"],["self"]],["bool"]]],[11,"eq","","",11,[[["self"],["linger"]],["bool"]]],[11,"ne","","",11,[[["self"],["linger"]],["bool"]]],[11,"eq","","",12,[[["sigval"],["self"]],["bool"]]],[11,"ne","","",12,[[["sigval"],["self"]],["bool"]]],[11,"eq","","",13,[[["itimerval"],["self"]],["bool"]]],[11,"ne","","",13,[[["itimerval"],["self"]],["bool"]]],[11,"eq","","",14,[[["self"],["tms"]],["bool"]]],[11,"ne","","",14,[[["self"],["tms"]],["bool"]]],[11,"eq","","",15,[[["self"],["servent"]],["bool"]]],[11,"ne","","",15,[[["self"],["servent"]],["bool"]]],[11,"eq","","",16,[[["self"],["protoent"]],["bool"]]],[11,"ne","","",16,[[["self"],["protoent"]],["bool"]]],[11,"eq","","",17,[[["sockaddr"],["self"]],["bool"]]],[11,"ne","","",17,[[["sockaddr"],["self"]],["bool"]]],[11,"eq","","",18,[[["self"],["sockaddr_in6"]],["bool"]]],[11,"ne","","",18,[[["self"],["sockaddr_in6"]],["bool"]]],[11,"eq","","",19,[[["passwd"],["self"]],["bool"]]],[11,"ne","","",19,[[["passwd"],["self"]],["bool"]]],[11,"eq","","",20,[[["ifaddrs"],["self"]],["bool"]]],[11,"ne","","",20,[[["ifaddrs"],["self"]],["bool"]]],[11,"eq","","",82,[[["fd_set"],["self"]],["bool"]]],[11,"ne","","",82,[[["fd_set"],["self"]],["bool"]]],[11,"eq","","",21,[[["self"],["tm"]],["bool"]]],[11,"ne","","",21,[[["self"],["tm"]],["bool"]]],[11,"eq","","",22,[[["msghdr"],["self"]],["bool"]]],[11,"ne","","",22,[[["msghdr"],["self"]],["bool"]]],[11,"eq","","",23,[[["self"],["cmsghdr"]],["bool"]]],[11,"ne","","",23,[[["self"],["cmsghdr"]],["bool"]]],[11,"eq","","",83,[[["self"],["fsid_t"]],["bool"]]],[11,"ne","","",83,[[["self"],["fsid_t"]],["bool"]]],[11,"eq","","",24,[[["self"],["if_nameindex"]],["bool"]]],[11,"ne","","",24,[[["self"],["if_nameindex"]],["bool"]]],[11,"eq","","",25,[[["sockaddr_un"],["self"]],["bool"]]],[11,"eq","","",26,[[["utsname"],["self"]],["bool"]]],[11,"eq","","",27,[[["ip_mreq"],["self"]],["bool"]]],[11,"ne","","",27,[[["ip_mreq"],["self"]],["bool"]]],[11,"eq","","",28,[[["self"],["aiocb"]],["bool"]]],[11,"ne","","",28,[[["self"],["aiocb"]],["bool"]]],[11,"eq","","",29,[[["glob_t"],["self"]],["bool"]]],[11,"ne","","",29,[[["glob_t"],["self"]],["bool"]]],[11,"eq","","",30,[[["addrinfo"],["self"]],["bool"]]],[11,"ne","","",30,[[["addrinfo"],["self"]],["bool"]]],[11,"eq","","",31,[[["self"],["mach_timebase_info"]],["bool"]]],[11,"ne","","",31,[[["self"],["mach_timebase_info"]],["bool"]]],[11,"eq","","",32,[[["stat"],["self"]],["bool"]]],[11,"ne","","",32,[[["stat"],["self"]],["bool"]]],[11,"eq","","",84,[[["pthread_mutexattr_t"],["self"]],["bool"]]],[11,"ne","","",84,[[["pthread_mutexattr_t"],["self"]],["bool"]]],[11,"eq","","",85,[[["pthread_condattr_t"],["self"]],["bool"]]],[11,"ne","","",85,[[["pthread_condattr_t"],["self"]],["bool"]]],[11,"eq","","",86,[[["pthread_rwlockattr_t"],["self"]],["bool"]]],[11,"ne","","",86,[[["pthread_rwlockattr_t"],["self"]],["bool"]]],[11,"eq","","",33,[[["siginfo_t"],["self"]],["bool"]]],[11,"ne","","",33,[[["siginfo_t"],["self"]],["bool"]]],[11,"eq","","",34,[[["self"],["sigaction"]],["bool"]]],[11,"ne","","",34,[[["self"],["sigaction"]],["bool"]]],[11,"eq","","",35,[[["self"],["stack_t"]],["bool"]]],[11,"ne","","",35,[[["self"],["stack_t"]],["bool"]]],[11,"eq","","",36,[[["fstore_t"],["self"]],["bool"]]],[11,"ne","","",36,[[["fstore_t"],["self"]],["bool"]]],[11,"eq","","",37,[[["self"],["radvisory"]],["bool"]]],[11,"ne","","",37,[[["self"],["radvisory"]],["bool"]]],[11,"eq","","",38,[[["statvfs"],["self"]],["bool"]]],[11,"ne","","",38,[[["statvfs"],["self"]],["bool"]]],[11,"eq","","",39,[[["self"],["dl_info"]],["bool"]]],[11,"ne","","",39,[[["self"],["dl_info"]],["bool"]]],[11,"eq","","",40,[[["sockaddr_in"],["self"]],["bool"]]],[11,"ne","","",40,[[["sockaddr_in"],["self"]],["bool"]]],[11,"eq","","",41,[[["self"],["kevent64_s"]],["bool"]]],[11,"ne","","",41,[[["self"],["kevent64_s"]],["bool"]]],[11,"eq","","",42,[[["self"],["dqblk"]],["bool"]]],[11,"ne","","",42,[[["self"],["dqblk"]],["bool"]]],[11,"eq","","",43,[[["self"],["if_msghdr"]],["bool"]]],[11,"ne","","",43,[[["self"],["if_msghdr"]],["bool"]]],[11,"eq","","",44,[[["termios"],["self"]],["bool"]]],[11,"ne","","",44,[[["termios"],["self"]],["bool"]]],[11,"eq","","",45,[[["self"],["flock"]],["bool"]]],[11,"ne","","",45,[[["self"],["flock"]],["bool"]]],[11,"eq","","",46,[[["self"],["sf_hdtr"]],["bool"]]],[11,"ne","","",46,[[["self"],["sf_hdtr"]],["bool"]]],[11,"eq","","",47,[[["self"],["lconv"]],["bool"]]],[11,"ne","","",47,[[["self"],["lconv"]],["bool"]]],[11,"eq","","",48,[[["self"],["proc_taskinfo"]],["bool"]]],[11,"ne","","",48,[[["self"],["proc_taskinfo"]],["bool"]]],[11,"eq","","",49,[[["proc_bsdinfo"],["self"]],["bool"]]],[11,"ne","","",49,[[["proc_bsdinfo"],["self"]],["bool"]]],[11,"eq","","",50,[[["proc_taskallinfo"],["self"]],["bool"]]],[11,"ne","","",50,[[["proc_taskallinfo"],["self"]],["bool"]]],[11,"eq","","",51,[[["self"],["xsw_usage"]],["bool"]]],[11,"ne","","",51,[[["self"],["xsw_usage"]],["bool"]]],[11,"eq","","",52,[[["xucred"],["self"]],["bool"]]],[11,"ne","","",52,[[["xucred"],["self"]],["bool"]]],[11,"eq","","",53,[[["mach_header"],["self"]],["bool"]]],[11,"ne","","",53,[[["mach_header"],["self"]],["bool"]]],[11,"eq","","",54,[[["mach_header_64"],["self"]],["bool"]]],[11,"ne","","",54,[[["mach_header_64"],["self"]],["bool"]]],[11,"eq","","",55,[[["segment_command"],["self"]],["bool"]]],[11,"ne","","",55,[[["segment_command"],["self"]],["bool"]]],[11,"eq","","",56,[[["segment_command_64"],["self"]],["bool"]]],[11,"ne","","",56,[[["segment_command_64"],["self"]],["bool"]]],[11,"eq","","",57,[[["self"],["load_command"]],["bool"]]],[11,"ne","","",57,[[["self"],["load_command"]],["bool"]]],[11,"eq","","",58,[[["self"],["sockaddr_dl"]],["bool"]]],[11,"ne","","",58,[[["self"],["sockaddr_dl"]],["bool"]]],[11,"eq","","",59,[[["self"],["sockaddr_inarp"]],["bool"]]],[11,"ne","","",59,[[["self"],["sockaddr_inarp"]],["bool"]]],[11,"eq","","",60,[[["sockaddr_ctl"],["self"]],["bool"]]],[11,"ne","","",60,[[["sockaddr_ctl"],["self"]],["bool"]]],[11,"eq","","",61,[[["self"],["in_pktinfo"]],["bool"]]],[11,"ne","","",61,[[["self"],["in_pktinfo"]],["bool"]]],[11,"eq","","",62,[[["in6_pktinfo"],["self"]],["bool"]]],[11,"ne","","",62,[[["in6_pktinfo"],["self"]],["bool"]]],[11,"eq","","",63,[[["ipc_perm"],["self"]],["bool"]]],[11,"ne","","",63,[[["ipc_perm"],["self"]],["bool"]]],[11,"eq","","",64,[[["self"],["sembuf"]],["bool"]]],[11,"ne","","",64,[[["self"],["sembuf"]],["bool"]]],[11,"eq","","",65,[[["arphdr"],["self"]],["bool"]]],[11,"ne","","",65,[[["arphdr"],["self"]],["bool"]]],[11,"eq","","",66,[[["in_addr"],["self"]],["bool"]]],[11,"ne","","",66,[[["in_addr"],["self"]],["bool"]]],[11,"eq","","",80,[[["semun"],["self"]],["bool"]]],[11,"eq","","",67,[[["self"],["kevent"]],["bool"]]],[11,"eq","","",68,[[["self"],["semid_ds"]],["bool"]]],[11,"eq","","",69,[[["self"],["shmid_ds"]],["bool"]]],[11,"eq","","",70,[[["self"],["proc_threadinfo"]],["bool"]]],[11,"eq","","",71,[[["statfs"],["self"]],["bool"]]],[11,"eq","","",72,[[["dirent"],["self"]],["bool"]]],[11,"eq","","",87,[[["pthread_rwlock_t"],["self"]],["bool"]]],[11,"eq","","",88,[[["self"],["pthread_mutex_t"]],["bool"]]],[11,"eq","","",89,[[["pthread_cond_t"],["self"]],["bool"]]],[11,"eq","","",73,[[["sockaddr_storage"],["self"]],["bool"]]],[11,"eq","","",74,[[["utmpx"],["self"]],["bool"]]],[11,"eq","","",75,[[["sigevent"],["self"]],["bool"]]],[11,"eq","","",76,[[["timeval32"],["self"]],["bool"]]],[11,"ne","","",76,[[["timeval32"],["self"]],["bool"]]],[11,"eq","","",77,[[["if_data"],["self"]],["bool"]]],[11,"ne","","",77,[[["if_data"],["self"]],["bool"]]],[11,"eq","","",78,[[["self"],["bpf_hdr"]],["bool"]]],[11,"ne","","",78,[[["self"],["bpf_hdr"]],["bool"]]],[11,"eq","","",90,[[["self"],["pthread_attr_t"]],["bool"]]],[11,"eq","","",79,[[["in6_addr"],["self"]],["bool"]]],[11,"ne","","",79,[[["in6_addr"],["self"]],["bool"]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",2,[[["self"],["__h"]]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"hash","","",5,[[["self"],["__h"]]]],[11,"hash","","",6,[[["self"],["__h"]]]],[11,"hash","","",7,[[["self"],["__h"]]]],[11,"hash","","",8,[[["self"],["__h"]]]],[11,"hash","","",9,[[["self"],["__h"]]]],[11,"hash","","",10,[[["self"],["__h"]]]],[11,"hash","","",11,[[["self"],["__h"]]]],[11,"hash","","",12,[[["self"],["__h"]]]],[11,"hash","","",13,[[["self"],["__h"]]]],[11,"hash","","",14,[[["self"],["__h"]]]],[11,"hash","","",15,[[["self"],["__h"]]]],[11,"hash","","",16,[[["self"],["__h"]]]],[11,"hash","","",17,[[["self"],["__h"]]]],[11,"hash","","",18,[[["self"],["__h"]]]],[11,"hash","","",19,[[["self"],["__h"]]]],[11,"hash","","",20,[[["self"],["__h"]]]],[11,"hash","","",82,[[["self"],["__h"]]]],[11,"hash","","",21,[[["self"],["__h"]]]],[11,"hash","","",22,[[["self"],["__h"]]]],[11,"hash","","",23,[[["self"],["__h"]]]],[11,"hash","","",83,[[["self"],["__h"]]]],[11,"hash","","",24,[[["self"],["__h"]]]],[11,"hash","","",25,[[["self"],["h"]]]],[11,"hash","","",26,[[["self"],["h"]]]],[11,"hash","","",27,[[["self"],["__h"]]]],[11,"hash","","",28,[[["self"],["__h"]]]],[11,"hash","","",29,[[["self"],["__h"]]]],[11,"hash","","",30,[[["self"],["__h"]]]],[11,"hash","","",31,[[["self"],["__h"]]]],[11,"hash","","",32,[[["self"],["__h"]]]],[11,"hash","","",84,[[["self"],["__h"]]]],[11,"hash","","",85,[[["self"],["__h"]]]],[11,"hash","","",86,[[["self"],["__h"]]]],[11,"hash","","",33,[[["self"],["__h"]]]],[11,"hash","","",34,[[["self"],["__h"]]]],[11,"hash","","",35,[[["self"],["__h"]]]],[11,"hash","","",36,[[["self"],["__h"]]]],[11,"hash","","",37,[[["self"],["__h"]]]],[11,"hash","","",38,[[["self"],["__h"]]]],[11,"hash","","",39,[[["self"],["__h"]]]],[11,"hash","","",40,[[["self"],["__h"]]]],[11,"hash","","",41,[[["self"],["__h"]]]],[11,"hash","","",42,[[["self"],["__h"]]]],[11,"hash","","",43,[[["self"],["__h"]]]],[11,"hash","","",44,[[["self"],["__h"]]]],[11,"hash","","",45,[[["self"],["__h"]]]],[11,"hash","","",46,[[["self"],["__h"]]]],[11,"hash","","",47,[[["self"],["__h"]]]],[11,"hash","","",48,[[["self"],["__h"]]]],[11,"hash","","",49,[[["self"],["__h"]]]],[11,"hash","","",50,[[["self"],["__h"]]]],[11,"hash","","",51,[[["self"],["__h"]]]],[11,"hash","","",52,[[["self"],["__h"]]]],[11,"hash","","",53,[[["self"],["__h"]]]],[11,"hash","","",54,[[["self"],["__h"]]]],[11,"hash","","",55,[[["self"],["__h"]]]],[11,"hash","","",56,[[["self"],["__h"]]]],[11,"hash","","",57,[[["self"],["__h"]]]],[11,"hash","","",58,[[["self"],["__h"]]]],[11,"hash","","",59,[[["self"],["__h"]]]],[11,"hash","","",60,[[["self"],["__h"]]]],[11,"hash","","",61,[[["self"],["__h"]]]],[11,"hash","","",62,[[["self"],["__h"]]]],[11,"hash","","",63,[[["self"],["__h"]]]],[11,"hash","","",64,[[["self"],["__h"]]]],[11,"hash","","",65,[[["self"],["__h"]]]],[11,"hash","","",66,[[["self"],["__h"]]]],[11,"hash","","",80,[[["self"],["h"]]]],[11,"hash","","",67,[[["self"],["h"]]]],[11,"hash","","",68,[[["self"],["h"]]]],[11,"hash","","",69,[[["self"],["h"]]]],[11,"hash","","",70,[[["self"],["h"]]]],[11,"hash","","",71,[[["self"],["h"]]]],[11,"hash","","",72,[[["self"],["h"]]]],[11,"hash","","",87,[[["self"],["h"]]]],[11,"hash","","",88,[[["self"],["h"]]]],[11,"hash","","",89,[[["self"],["h"]]]],[11,"hash","","",73,[[["self"],["h"]]]],[11,"hash","","",74,[[["self"],["h"]]]],[11,"hash","","",75,[[["self"],["h"]]]],[11,"hash","","",76,[[["self"],["__h"]]]],[11,"hash","","",77,[[["self"],["__h"]]]],[11,"hash","","",78,[[["self"],["__h"]]]],[11,"hash","","",90,[[["self"],["h"]]]],[11,"hash","","",79,[[["self"],["__h"]]]],[11,"clone","","",92,[[["self"]],["dir"]]],[11,"clone","","",0,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["utimbuf"]]],[11,"clone","","",2,[[["self"]],["timeval"]]],[11,"clone","","",3,[[["self"]],["timespec"]]],[11,"clone","","",4,[[["self"]],["rlimit"]]],[11,"clone","","",5,[[["self"]],["rusage"]]],[11,"clone","","",6,[[["self"]],["ipv6_mreq"]]],[11,"clone","","",7,[[["self"]],["hostent"]]],[11,"clone","","",8,[[["self"]],["iovec"]]],[11,"clone","","",9,[[["self"]],["pollfd"]]],[11,"clone","","",10,[[["self"]],["winsize"]]],[11,"clone","","",11,[[["self"]],["linger"]]],[11,"clone","","",12,[[["self"]],["sigval"]]],[11,"clone","","",13,[[["self"]],["itimerval"]]],[11,"clone","","",14,[[["self"]],["tms"]]],[11,"clone","","",15,[[["self"]],["servent"]]],[11,"clone","","",16,[[["self"]],["protoent"]]],[11,"clone","","",93,[[["self"]],["file"]]],[11,"clone","","",94,[[["self"]],["fpos_t"]]],[11,"clone","","",17,[[["self"]],["sockaddr"]]],[11,"clone","","",18,[[["self"]],["sockaddr_in6"]]],[11,"clone","","",19,[[["self"]],["passwd"]]],[11,"clone","","",20,[[["self"]],["ifaddrs"]]],[11,"clone","","",82,[[["self"]],["fd_set"]]],[11,"clone","","",21,[[["self"]],["tm"]]],[11,"clone","","",22,[[["self"]],["msghdr"]]],[11,"clone","","",23,[[["self"]],["cmsghdr"]]],[11,"clone","","",83,[[["self"]],["fsid_t"]]],[11,"clone","","",24,[[["self"]],["if_nameindex"]]],[11,"clone","","",25,[[["self"]],["sockaddr_un"]]],[11,"clone","","",26,[[["self"]],["utsname"]]],[11,"clone","","",95,[[["self"]],["timezone"]]],[11,"clone","","",27,[[["self"]],["ip_mreq"]]],[11,"clone","","",28,[[["self"]],["aiocb"]]],[11,"clone","","",29,[[["self"]],["glob_t"]]],[11,"clone","","",30,[[["self"]],["addrinfo"]]],[11,"clone","","",31,[[["self"]],["mach_timebase_info"]]],[11,"clone","","",32,[[["self"]],["stat"]]],[11,"clone","","",84,[[["self"]],["pthread_mutexattr_t"]]],[11,"clone","","",85,[[["self"]],["pthread_condattr_t"]]],[11,"clone","","",86,[[["self"]],["pthread_rwlockattr_t"]]],[11,"clone","","",33,[[["self"]],["siginfo_t"]]],[11,"clone","","",34,[[["self"]],["sigaction"]]],[11,"clone","","",35,[[["self"]],["stack_t"]]],[11,"clone","","",36,[[["self"]],["fstore_t"]]],[11,"clone","","",37,[[["self"]],["radvisory"]]],[11,"clone","","",38,[[["self"]],["statvfs"]]],[11,"clone","","",39,[[["self"]],["dl_info"]]],[11,"clone","","",40,[[["self"]],["sockaddr_in"]]],[11,"clone","","",41,[[["self"]],["kevent64_s"]]],[11,"clone","","",42,[[["self"]],["dqblk"]]],[11,"clone","","",43,[[["self"]],["if_msghdr"]]],[11,"clone","","",44,[[["self"]],["termios"]]],[11,"clone","","",45,[[["self"]],["flock"]]],[11,"clone","","",46,[[["self"]],["sf_hdtr"]]],[11,"clone","","",47,[[["self"]],["lconv"]]],[11,"clone","","",48,[[["self"]],["proc_taskinfo"]]],[11,"clone","","",49,[[["self"]],["proc_bsdinfo"]]],[11,"clone","","",50,[[["self"]],["proc_taskallinfo"]]],[11,"clone","","",51,[[["self"]],["xsw_usage"]]],[11,"clone","","",52,[[["self"]],["xucred"]]],[11,"clone","","",53,[[["self"]],["mach_header"]]],[11,"clone","","",54,[[["self"]],["mach_header_64"]]],[11,"clone","","",55,[[["self"]],["segment_command"]]],[11,"clone","","",56,[[["self"]],["segment_command_64"]]],[11,"clone","","",57,[[["self"]],["load_command"]]],[11,"clone","","",58,[[["self"]],["sockaddr_dl"]]],[11,"clone","","",59,[[["self"]],["sockaddr_inarp"]]],[11,"clone","","",60,[[["self"]],["sockaddr_ctl"]]],[11,"clone","","",61,[[["self"]],["in_pktinfo"]]],[11,"clone","","",62,[[["self"]],["in6_pktinfo"]]],[11,"clone","","",63,[[["self"]],["ipc_perm"]]],[11,"clone","","",64,[[["self"]],["sembuf"]]],[11,"clone","","",65,[[["self"]],["arphdr"]]],[11,"clone","","",66,[[["self"]],["in_addr"]]],[11,"clone","","",67,[[["self"]],["kevent"]]],[11,"clone","","",68,[[["self"]],["semid_ds"]]],[11,"clone","","",69,[[["self"]],["shmid_ds"]]],[11,"clone","","",70,[[["self"]],["proc_threadinfo"]]],[11,"clone","","",71,[[["self"]],["statfs"]]],[11,"clone","","",72,[[["self"]],["dirent"]]],[11,"clone","","",87,[[["self"]],["pthread_rwlock_t"]]],[11,"clone","","",88,[[["self"]],["pthread_mutex_t"]]],[11,"clone","","",89,[[["self"]],["pthread_cond_t"]]],[11,"clone","","",73,[[["self"]],["sockaddr_storage"]]],[11,"clone","","",74,[[["self"]],["utmpx"]]],[11,"clone","","",75,[[["self"]],["sigevent"]]],[11,"clone","","",80,[[["self"]],["semun"]]],[11,"clone","","",76,[[["self"]],["timeval32"]]],[11,"clone","","",77,[[["self"]],["if_data"]]],[11,"clone","","",78,[[["self"]],["bpf_hdr"]]],[11,"clone","","",90,[[["self"]],["pthread_attr_t"]]],[11,"clone","","",91,[[["self"]],["max_align_t"]]],[11,"clone","","",79,[[["self"]],["in6_addr"]]]],"p":[[3,"group"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"linger"],[3,"sigval"],[3,"itimerval"],[3,"tms"],[3,"servent"],[3,"protoent"],[3,"sockaddr"],[3,"sockaddr_in6"],[3,"passwd"],[3,"ifaddrs"],[3,"tm"],[3,"msghdr"],[3,"cmsghdr"],[3,"if_nameindex"],[3,"sockaddr_un"],[3,"utsname"],[3,"ip_mreq"],[3,"aiocb"],[3,"glob_t"],[3,"addrinfo"],[3,"mach_timebase_info"],[3,"stat"],[3,"siginfo_t"],[3,"sigaction"],[3,"stack_t"],[3,"fstore_t"],[3,"radvisory"],[3,"statvfs"],[3,"Dl_info"],[3,"sockaddr_in"],[3,"kevent64_s"],[3,"dqblk"],[3,"if_msghdr"],[3,"termios"],[3,"flock"],[3,"sf_hdtr"],[3,"lconv"],[3,"proc_taskinfo"],[3,"proc_bsdinfo"],[3,"proc_taskallinfo"],[3,"xsw_usage"],[3,"xucred"],[3,"mach_header"],[3,"mach_header_64"],[3,"segment_command"],[3,"segment_command_64"],[3,"load_command"],[3,"sockaddr_dl"],[3,"sockaddr_inarp"],[3,"sockaddr_ctl"],[3,"in_pktinfo"],[3,"in6_pktinfo"],[3,"ipc_perm"],[3,"sembuf"],[3,"arphdr"],[3,"in_addr"],[3,"kevent"],[3,"semid_ds"],[3,"shmid_ds"],[3,"proc_threadinfo"],[3,"statfs"],[3,"dirent"],[3,"sockaddr_storage"],[3,"utmpx"],[3,"sigevent"],[3,"timeval32"],[3,"if_data"],[3,"bpf_hdr"],[3,"in6_addr"],[19,"semun"],[4,"c_void"],[3,"fd_set"],[3,"fsid_t"],[3,"pthread_mutexattr_t"],[3,"pthread_condattr_t"],[3,"pthread_rwlockattr_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutex_t"],[3,"pthread_cond_t"],[3,"pthread_attr_t"],[3,"max_align_t"],[4,"DIR"],[4,"FILE"],[4,"fpos_t"],[4,"timezone"]]};
searchIndex["lock_api"] = {"doc":"This library provides type-safe and fully-featured `Mutex`…","i":[[3,"GuardSend","lock_api","Marker type which indicates that the Guard type for a lock…",null,null],[3,"GuardNoSend","","Marker type which indicates that the Guard type for a lock…",null,null],[3,"Mutex","","A mutual exclusion primitive useful for protecting shared…",null,null],[3,"MutexGuard","","An RAII implementation of a \"scoped lock\" of a mutex. When…",null,null],[3,"MappedMutexGuard","","An RAII mutex guard returned by `MutexGuard::map`, which…",null,null],[3,"ReentrantMutex","","A mutex which can be recursively locked by a single thread.",null,null],[3,"ReentrantMutexGuard","","An RAII implementation of a \"scoped lock\" of a reentrant…",null,null],[3,"MappedReentrantMutexGuard","","An RAII mutex guard returned by…",null,null],[3,"RwLock","","A reader-writer lock",null,null],[3,"RwLockReadGuard","","RAII structure used to release the shared read access of a…",null,null],[3,"RwLockWriteGuard","","RAII structure used to release the exclusive write access…",null,null],[3,"RwLockUpgradableReadGuard","","RAII structure used to release the upgradable read access…",null,null],[3,"MappedRwLockReadGuard","","An RAII read lock guard returned by…",null,null],[3,"MappedRwLockWriteGuard","","An RAII write lock guard returned by…",null,null],[11,"new","","Creates a new mutex in an unlocked state ready for use.",0,[[["t"]],["mutex"]]],[11,"into_inner","","Consumes this mutex, returning the underlying data.",0,[[],["t"]]],[11,"lock","","Acquires a mutex, blocking the current thread until it is…",0,[[["self"]],["mutexguard"]]],[11,"try_lock","","Attempts to acquire this lock.",0,[[["self"]],[["mutexguard"],["option",["mutexguard"]]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",0,[[["self"]],["t"]]],[11,"force_unlock","","Forcibly unlocks the mutex.",0,[[["self"]]]],[11,"raw","","Returns the underlying raw mutex object.",0,[[["self"]],["r"]]],[11,"force_unlock_fair","","Forcibly unlocks the mutex using a fair unlock procotol.",0,[[["self"]]]],[11,"try_lock_for","","Attempts to acquire this lock until a timeout is reached.",0,[[["self"]],[["mutexguard"],["option",["mutexguard"]]]]],[11,"try_lock_until","","Attempts to acquire this lock until a timeout is reached.",0,[[["self"]],[["mutexguard"],["option",["mutexguard"]]]]],[11,"mutex","","Returns a reference to the original `Mutex` object.",1,[[["self"]],["mutex"]]],[11,"map","","Makes a new `MappedMutexGuard` for a component of the…",1,[[["f"]],[["sized"],["mappedmutexguard"]]]],[11,"try_map","","Attempts to make a new `MappedMutexGuard` for a component…",1,[[["f"]],[["result",["mappedmutexguard"]],["mappedmutexguard"]]]],[11,"unlocked","","Temporarily unlocks the mutex to execute the given function.",1,[[["self"],["f"]],["u"]]],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",1,[[]]],[11,"unlocked_fair","","Temporarily unlocks the mutex to execute the given function.",1,[[["self"],["f"]],["u"]]],[11,"bump","","Temporarily yields the mutex to a waiting thread if there…",1,[[["self"]]]],[11,"map","","Makes a new `MappedMutexGuard` for a component of the…",2,[[["f"]],[["sized"],["mappedmutexguard"]]]],[11,"try_map","","Attempts to make a new `MappedMutexGuard` for a component…",2,[[["f"]],[["result",["mappedmutexguard"]],["mappedmutexguard"]]]],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",2,[[]]],[11,"new","","Creates a new reentrant mutex in an unlocked state ready…",3,[[["t"]],["reentrantmutex"]]],[11,"into_inner","","Consumes this mutex, returning the underlying data.",3,[[],["t"]]],[11,"lock","","Acquires a reentrant mutex, blocking the current thread…",3,[[["self"]],["reentrantmutexguard"]]],[11,"try_lock","","Attempts to acquire this lock.",3,[[["self"]],[["option",["reentrantmutexguard"]],["reentrantmutexguard"]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",3,[[["self"]],["t"]]],[11,"force_unlock","","Forcibly unlocks the mutex.",3,[[["self"]]]],[11,"raw","","Returns the underlying raw mutex object.",3,[[["self"]],["r"]]],[11,"force_unlock_fair","","Forcibly unlocks the mutex using a fair unlock protocol.",3,[[["self"]]]],[11,"try_lock_for","","Attempts to acquire this lock until a timeout is reached.",3,[[["self"]],[["option",["reentrantmutexguard"]],["reentrantmutexguard"]]]],[11,"try_lock_until","","Attempts to acquire this lock until a timeout is reached.",3,[[["self"]],[["option",["reentrantmutexguard"]],["reentrantmutexguard"]]]],[11,"remutex","","Returns a reference to the original `ReentrantMutex` object.",4,[[["self"]],["reentrantmutex"]]],[11,"map","","Makes a new `MappedReentrantMutexGuard` for a component of…",4,[[["f"]],[["mappedreentrantmutexguard"],["sized"]]]],[11,"try_map","","Attempts to make a new `MappedReentrantMutexGuard` for a…",4,[[["f"]],[["result",["mappedreentrantmutexguard"]],["mappedreentrantmutexguard"]]]],[11,"unlocked","","Temporarily unlocks the mutex to execute the given function.",4,[[["self"],["f"]],["u"]]],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",4,[[]]],[11,"unlocked_fair","","Temporarily unlocks the mutex to execute the given function.",4,[[["self"],["f"]],["u"]]],[11,"bump","","Temporarily yields the mutex to a waiting thread if there…",4,[[["self"]]]],[11,"map","","Makes a new `MappedReentrantMutexGuard` for a component of…",5,[[["f"]],[["mappedreentrantmutexguard"],["sized"]]]],[11,"try_map","","Attempts to make a new `MappedReentrantMutexGuard` for a…",5,[[["f"]],[["result",["mappedreentrantmutexguard"]],["mappedreentrantmutexguard"]]]],[11,"unlock_fair","","Unlocks the mutex using a fair unlock protocol.",5,[[]]],[11,"new","","Creates a new instance of an `RwLock<T>` which is unlocked.",6,[[["t"]],["rwlock"]]],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",6,[[],["t"]]],[11,"read","","Locks this `RwLock` with shared read access, blocking the…",6,[[["self"]],["rwlockreadguard"]]],[11,"try_read","","Attempts to acquire this `RwLock` with shared read access.",6,[[["self"]],[["rwlockreadguard"],["option",["rwlockreadguard"]]]]],[11,"write","","Locks this `RwLock` with exclusive write access, blocking…",6,[[["self"]],["rwlockwriteguard"]]],[11,"try_write","","Attempts to lock this `RwLock` with exclusive write access.",6,[[["self"]],[["option",["rwlockwriteguard"]],["rwlockwriteguard"]]]],[11,"get_mut","","Returns a mutable reference to the underlying data.",6,[[["self"]],["t"]]],[11,"force_unlock_read","","Forcibly unlocks a read lock.",6,[[["self"]]]],[11,"force_unlock_write","","Forcibly unlocks a write lock.",6,[[["self"]]]],[11,"raw","","Returns the underlying raw reader-writer lock object.",6,[[["self"]],["r"]]],[11,"force_unlock_read_fair","","Forcibly unlocks a read lock using a fair unlock procotol.",6,[[["self"]]]],[11,"force_unlock_write_fair","","Forcibly unlocks a write lock using a fair unlock procotol.",6,[[["self"]]]],[11,"try_read_for","","Attempts to acquire this `RwLock` with shared read access…",6,[[["self"]],[["rwlockreadguard"],["option",["rwlockreadguard"]]]]],[11,"try_read_until","","Attempts to acquire this `RwLock` with shared read access…",6,[[["self"]],[["rwlockreadguard"],["option",["rwlockreadguard"]]]]],[11,"try_write_for","","Attempts to acquire this `RwLock` with exclusive write…",6,[[["self"]],[["option",["rwlockwriteguard"]],["rwlockwriteguard"]]]],[11,"try_write_until","","Attempts to acquire this `RwLock` with exclusive write…",6,[[["self"]],[["option",["rwlockwriteguard"]],["rwlockwriteguard"]]]],[11,"read_recursive","","Locks this `RwLock` with shared read access, blocking the…",6,[[["self"]],["rwlockreadguard"]]],[11,"try_read_recursive","","Attempts to acquire this `RwLock` with shared read access.",6,[[["self"]],[["rwlockreadguard"],["option",["rwlockreadguard"]]]]],[11,"try_read_recursive_for","","Attempts to acquire this `RwLock` with shared read access…",6,[[["self"]],[["rwlockreadguard"],["option",["rwlockreadguard"]]]]],[11,"try_read_recursive_until","","Attempts to acquire this `RwLock` with shared read access…",6,[[["self"]],[["rwlockreadguard"],["option",["rwlockreadguard"]]]]],[11,"upgradable_read","","Locks this `RwLock` with upgradable read access, blocking…",6,[[["self"]],["rwlockupgradablereadguard"]]],[11,"try_upgradable_read","","Attempts to acquire this `RwLock` with upgradable read…",6,[[["self"]],[["rwlockupgradablereadguard"],["option",["rwlockupgradablereadguard"]]]]],[11,"try_upgradable_read_for","","Attempts to acquire this `RwLock` with upgradable read…",6,[[["self"]],[["rwlockupgradablereadguard"],["option",["rwlockupgradablereadguard"]]]]],[11,"try_upgradable_read_until","","Attempts to acquire this `RwLock` with upgradable read…",6,[[["self"]],[["rwlockupgradablereadguard"],["option",["rwlockupgradablereadguard"]]]]],[11,"rwlock","","Returns a reference to the original reader-writer lock…",7,[[["self"]],["rwlock"]]],[11,"map","","Make a new `MappedRwLockReadGuard` for a component of the…",7,[[["f"]],[["mappedrwlockreadguard"],["sized"]]]],[11,"try_map","","Attempts to make a new `MappedRwLockReadGuard` for a…",7,[[["f"]],[["result",["mappedrwlockreadguard"]],["mappedrwlockreadguard"]]]],[11,"unlocked","","Temporarily unlocks the `RwLock` to execute the given…",7,[[["self"],["f"]],["u"]]],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",7,[[]]],[11,"unlocked_fair","","Temporarily unlocks the `RwLock` to execute the given…",7,[[["self"],["f"]],["u"]]],[11,"bump","","Temporarily yields the `RwLock` to a waiting thread if…",7,[[["self"]]]],[11,"rwlock","","Returns a reference to the original reader-writer lock…",8,[[["self"]],["rwlock"]]],[11,"map","","Make a new `MappedRwLockWriteGuard` for a component of the…",8,[[["f"]],[["mappedrwlockwriteguard"],["sized"]]]],[11,"try_map","","Attempts to make a new `MappedRwLockWriteGuard` for a…",8,[[["f"]],[["result",["mappedrwlockwriteguard"]],["mappedrwlockwriteguard"]]]],[11,"unlocked","","Temporarily unlocks the `RwLock` to execute the given…",8,[[["self"],["f"]],["u"]]],[11,"downgrade","","Atomically downgrades a write lock into a read lock…",8,[[],["rwlockreadguard"]]],[11,"downgrade_to_upgradable","","Atomically downgrades a write lock into an upgradable read…",8,[[],["rwlockupgradablereadguard"]]],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",8,[[]]],[11,"unlocked_fair","","Temporarily unlocks the `RwLock` to execute the given…",8,[[["self"],["f"]],["u"]]],[11,"bump","","Temporarily yields the `RwLock` to a waiting thread if…",8,[[["self"]]]],[11,"rwlock","","Returns a reference to the original reader-writer lock…",9,[[["self"]],["rwlock"]]],[11,"unlocked","","Temporarily unlocks the `RwLock` to execute the given…",9,[[["self"],["f"]],["u"]]],[11,"upgrade","","Atomically upgrades an upgradable read lock lock into a…",9,[[],["rwlockwriteguard"]]],[11,"try_upgrade","","Tries to atomically upgrade an upgradable read lock into a…",9,[[],[["result",["rwlockwriteguard"]],["rwlockwriteguard"]]]],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",9,[[]]],[11,"unlocked_fair","","Temporarily unlocks the `RwLock` to execute the given…",9,[[["self"],["f"]],["u"]]],[11,"bump","","Temporarily yields the `RwLock` to a waiting thread if…",9,[[["self"]]]],[11,"downgrade","","Atomically downgrades an upgradable read lock lock into a…",9,[[],["rwlockreadguard"]]],[11,"try_upgrade_for","","Tries to atomically upgrade an upgradable read lock into a…",9,[[],[["result",["rwlockwriteguard"]],["rwlockwriteguard"]]]],[11,"try_upgrade_until","","Tries to atomically upgrade an upgradable read lock into a…",9,[[],[["result",["rwlockwriteguard"]],["rwlockwriteguard"]]]],[11,"map","","Make a new `MappedRwLockReadGuard` for a component of the…",10,[[["f"]],[["mappedrwlockreadguard"],["sized"]]]],[11,"try_map","","Attempts to make a new `MappedRwLockReadGuard` for a…",10,[[["f"]],[["result",["mappedrwlockreadguard"]],["mappedrwlockreadguard"]]]],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",10,[[]]],[11,"map","","Make a new `MappedRwLockWriteGuard` for a component of the…",11,[[["f"]],[["mappedrwlockwriteguard"],["sized"]]]],[11,"try_map","","Attempts to make a new `MappedRwLockWriteGuard` for a…",11,[[["f"]],[["result",["mappedrwlockwriteguard"]],["mappedrwlockwriteguard"]]]],[11,"downgrade","","Atomically downgrades a write lock into a read lock…",11,[[],["mappedrwlockreadguard"]]],[11,"unlock_fair","","Unlocks the `RwLock` using a fair unlock protocol.",11,[[]]],[8,"RawMutex","","Basic operations for a mutex.",null,null],[18,"INIT","","Initial value for an unlocked mutex.",12,null],[16,"GuardMarker","","Marker type which determines whether a lock guard should…",12,null],[10,"lock","","Acquires this mutex, blocking the current thread until it…",12,[[["self"]]]],[10,"try_lock","","Attempts to acquire this mutex without blocking.",12,[[["self"]],["bool"]]],[10,"unlock","","Unlocks this mutex.",12,[[["self"]]]],[8,"RawMutexFair","","Additional methods for mutexes which support fair unlocking.",null,null],[10,"unlock_fair","","Unlocks this mutex using a fair unlock protocol.",13,[[["self"]]]],[11,"bump","","Temporarily yields the mutex to a waiting thread if there…",13,[[["self"]]]],[8,"RawMutexTimed","","Additional methods for mutexes which support locking with…",null,null],[16,"Duration","","Duration type used for `try_lock_for`.",14,null],[16,"Instant","","Instant type used for `try_lock_until`.",14,null],[10,"try_lock_for","","Attempts to acquire this lock until a timeout is reached.",14,[[["self"]],["bool"]]],[10,"try_lock_until","","Attempts to acquire this lock until a timeout is reached.",14,[[["self"]],["bool"]]],[8,"GetThreadId","","Helper trait which returns a non-zero thread ID.",null,null],[18,"INIT","","Initial value.",15,null],[10,"nonzero_thread_id","","Returns a non-zero thread ID which identifies the current…",15,[[["self"]],["nonzerousize"]]],[8,"RawRwLock","","Basic operations for a reader-writer lock.",null,null],[18,"INIT","","Initial value for an unlocked `RwLock`.",16,null],[16,"GuardMarker","","Marker type which determines whether a lock guard should…",16,null],[10,"lock_shared","","Acquires a shared lock, blocking the current thread until…",16,[[["self"]]]],[10,"try_lock_shared","","Attempts to acquire a shared lock without blocking.",16,[[["self"]],["bool"]]],[10,"unlock_shared","","Releases a shared lock.",16,[[["self"]]]],[10,"lock_exclusive","","Acquires an exclusive lock, blocking the current thread…",16,[[["self"]]]],[10,"try_lock_exclusive","","Attempts to acquire an exclusive lock without blocking.",16,[[["self"]],["bool"]]],[10,"unlock_exclusive","","Releases an exclusive lock.",16,[[["self"]]]],[8,"RawRwLockFair","","Additional methods for RwLocks which support fair unlocking.",null,null],[10,"unlock_shared_fair","","Releases a shared lock using a fair unlock protocol.",17,[[["self"]]]],[10,"unlock_exclusive_fair","","Releases an exclusive lock using a fair unlock protocol.",17,[[["self"]]]],[11,"bump_shared","","Temporarily yields a shared lock to a waiting thread if…",17,[[["self"]]]],[11,"bump_exclusive","","Temporarily yields an exclusive lock to a waiting thread…",17,[[["self"]]]],[8,"RawRwLockDowngrade","","Additional methods for RwLocks which support atomically…",null,null],[10,"downgrade","","Atomically downgrades an exclusive lock into a shared lock…",18,[[["self"]]]],[8,"RawRwLockTimed","","Additional methods for RwLocks which support locking with…",null,null],[16,"Duration","","Duration type used for `try_lock_for`.",19,null],[16,"Instant","","Instant type used for `try_lock_until`.",19,null],[10,"try_lock_shared_for","","Attempts to acquire a shared lock until a timeout is…",19,[[["self"]],["bool"]]],[10,"try_lock_shared_until","","Attempts to acquire a shared lock until a timeout is…",19,[[["self"]],["bool"]]],[10,"try_lock_exclusive_for","","Attempts to acquire an exclusive lock until a timeout is…",19,[[["self"]],["bool"]]],[10,"try_lock_exclusive_until","","Attempts to acquire an exclusive lock until a timeout is…",19,[[["self"]],["bool"]]],[8,"RawRwLockRecursive","","Additional methods for RwLocks which support recursive…",null,null],[10,"lock_shared_recursive","","Acquires a shared lock without deadlocking in case of a…",20,[[["self"]]]],[10,"try_lock_shared_recursive","","Attempts to acquire a shared lock without deadlocking in…",20,[[["self"]],["bool"]]],[8,"RawRwLockRecursiveTimed","","Additional methods for RwLocks which support recursive…",null,null],[10,"try_lock_shared_recursive_for","","Attempts to acquire a shared lock until a timeout is…",21,[[["self"]],["bool"]]],[10,"try_lock_shared_recursive_until","","Attempts to acquire a shared lock until a timeout is…",21,[[["self"]],["bool"]]],[8,"RawRwLockUpgrade","","Additional methods for RwLocks which support atomically…",null,null],[10,"lock_upgradable","","Acquires an upgradable lock, blocking the current thread…",22,[[["self"]]]],[10,"try_lock_upgradable","","Attempts to acquire an upgradable lock without blocking.",22,[[["self"]],["bool"]]],[10,"unlock_upgradable","","Releases an upgradable lock.",22,[[["self"]]]],[10,"upgrade","","Upgrades an upgradable lock to an exclusive lock.",22,[[["self"]]]],[10,"try_upgrade","","Attempts to upgrade an upgradable lock to an exclusive…",22,[[["self"]],["bool"]]],[8,"RawRwLockUpgradeFair","","Additional methods for RwLocks which support upgradable…",null,null],[10,"unlock_upgradable_fair","","Releases an upgradable lock using a fair unlock protocol.",23,[[["self"]]]],[11,"bump_upgradable","","Temporarily yields an upgradable lock to a waiting thread…",23,[[["self"]]]],[8,"RawRwLockUpgradeDowngrade","","Additional methods for RwLocks which support upgradable…",null,null],[10,"downgrade_upgradable","","Downgrades an upgradable lock to a shared lock.",24,[[["self"]]]],[10,"downgrade_to_upgradable","","Downgrades an exclusive lock to an upgradable lock.",24,[[["self"]]]],[8,"RawRwLockUpgradeTimed","","Additional methods for RwLocks which support upgradable…",null,null],[10,"try_lock_upgradable_for","","Attempts to acquire an upgradable lock until a timeout is…",25,[[["self"]],["bool"]]],[10,"try_lock_upgradable_until","","Attempts to acquire an upgradable lock until a timeout is…",25,[[["self"]],["bool"]]],[10,"try_upgrade_for","","Attempts to upgrade an upgradable lock to an exclusive…",25,[[["self"]],["bool"]]],[10,"try_upgrade_until","","Attempts to upgrade an upgradable lock to an exclusive…",25,[[["self"]],["bool"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"into","","",26,[[],["u"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"from","","",0,[[],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"from","","",3,[[],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"from","","",6,[[],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"deref","","",1,[[["self"]],["t"]]],[11,"deref","","",2,[[["self"]],["t"]]],[11,"deref","","",4,[[["self"]],["t"]]],[11,"deref","","",5,[[["self"]],["t"]]],[11,"deref","","",7,[[["self"]],["t"]]],[11,"deref","","",8,[[["self"]],["t"]]],[11,"deref","","",9,[[["self"]],["t"]]],[11,"deref","","",10,[[["self"]],["t"]]],[11,"deref","","",11,[[["self"]],["t"]]],[11,"deref_mut","","",1,[[["self"]],["t"]]],[11,"deref_mut","","",2,[[["self"]],["t"]]],[11,"deref_mut","","",8,[[["self"]],["t"]]],[11,"deref_mut","","",11,[[["self"]],["t"]]],[11,"from","","",0,[[["t"]],["mutex"]]],[11,"from","","",3,[[["t"]],["reentrantmutex"]]],[11,"from","","",6,[[["t"]],["rwlock"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"drop","","",1,[[["self"]]]],[11,"drop","","",2,[[["self"]]]],[11,"drop","","",4,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"drop","","",7,[[["self"]]]],[11,"drop","","",8,[[["self"]]]],[11,"drop","","",9,[[["self"]]]],[11,"drop","","",10,[[["self"]]]],[11,"drop","","",11,[[["self"]]]],[11,"default","","",0,[[],["mutex"]]],[11,"default","","",3,[[],["reentrantmutex"]]],[11,"default","","",6,[[],["rwlock"]]],[18,"INIT","","Initial value for an unlocked mutex.",12,null],[11,"bump","","Temporarily yields the mutex to a waiting thread if there…",13,[[["self"]]]],[18,"INIT","","Initial value.",15,null],[18,"INIT","","Initial value for an unlocked `RwLock`.",16,null],[11,"bump_shared","","Temporarily yields a shared lock to a waiting thread if…",17,[[["self"]]]],[11,"bump_exclusive","","Temporarily yields an exclusive lock to a waiting thread…",17,[[["self"]]]],[11,"bump_upgradable","","Temporarily yields an upgradable lock to a waiting thread…",23,[[["self"]]]]],"p":[[3,"Mutex"],[3,"MutexGuard"],[3,"MappedMutexGuard"],[3,"ReentrantMutex"],[3,"ReentrantMutexGuard"],[3,"MappedReentrantMutexGuard"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"RwLockUpgradableReadGuard"],[3,"MappedRwLockReadGuard"],[3,"MappedRwLockWriteGuard"],[8,"RawMutex"],[8,"RawMutexFair"],[8,"RawMutexTimed"],[8,"GetThreadId"],[8,"RawRwLock"],[8,"RawRwLockFair"],[8,"RawRwLockDowngrade"],[8,"RawRwLockTimed"],[8,"RawRwLockRecursive"],[8,"RawRwLockRecursiveTimed"],[8,"RawRwLockUpgrade"],[8,"RawRwLockUpgradeFair"],[8,"RawRwLockUpgradeDowngrade"],[8,"RawRwLockUpgradeTimed"],[3,"GuardSend"],[3,"GuardNoSend"]]};
searchIndex["log"] = {"doc":"A lightweight logging facade.","i":[[3,"Record","log","The \"payload\" of a log message.",null,null],[3,"RecordBuilder","","Builder for `Record`.",null,null],[3,"Metadata","","Metadata about a log message.",null,null],[3,"MetadataBuilder","","Builder for `Metadata`.",null,null],[3,"SetLoggerError","","The type returned by [`set_logger`] if [`set_logger`] has…",null,null],[3,"ParseLevelError","","The type returned by [`from_str`] when the string doesn't…",null,null],[4,"Level","","An enum representing the available verbosity levels of the…",null,null],[13,"Error","","The \"error\" level.",0,null],[13,"Warn","","The \"warn\" level.",0,null],[13,"Info","","The \"info\" level.",0,null],[13,"Debug","","The \"debug\" level.",0,null],[13,"Trace","","The \"trace\" level.",0,null],[4,"LevelFilter","","An enum representing the available verbosity level filters…",null,null],[13,"Off","","A level lower than all log levels.",1,null],[13,"Error","","Corresponds to the `Error` log level.",1,null],[13,"Warn","","Corresponds to the `Warn` log level.",1,null],[13,"Info","","Corresponds to the `Info` log level.",1,null],[13,"Debug","","Corresponds to the `Debug` log level.",1,null],[13,"Trace","","Corresponds to the `Trace` log level.",1,null],[5,"set_max_level","","Sets the global maximum log level.",null,[[["levelfilter"]]]],[5,"max_level","","Returns the current maximum log level.",null,[[],["levelfilter"]]],[5,"set_logger","","Sets the global logger to a `&'static Log`.",null,[[["log"]],[["result",["setloggererror"]],["setloggererror"]]]],[5,"set_logger_racy","","A thread-unsafe version of [`set_logger`].",null,[[["log"]],[["result",["setloggererror"]],["setloggererror"]]]],[5,"logger","","Returns a reference to the logger.",null,[[],["log"]]],[17,"STATIC_MAX_LEVEL","","The statically resolved maximum log level.",null,null],[8,"Log","","A trait encapsulating the operations required of a logger.",null,null],[10,"enabled","","Determines if a log message with the specified metadata…",2,[[["self"],["metadata"]],["bool"]]],[10,"log","","Logs the `Record`.",2,[[["record"],["self"]]]],[10,"flush","","Flushes any buffered records.",2,[[["self"]]]],[11,"max","","Returns the most verbose logging level.",0,[[],["level"]]],[11,"to_level_filter","","Converts the `Level` to the equivalent `LevelFilter`.",0,[[["self"]],["levelfilter"]]],[11,"max","","Returns the most verbose logging level filter.",1,[[],["levelfilter"]]],[11,"to_level","","Converts `self` to the equivalent `Level`.",1,[[["self"]],[["level"],["option",["level"]]]]],[11,"builder","","Returns a new builder.",3,[[],["recordbuilder"]]],[11,"args","","The message body.",3,[[["self"]],["arguments"]]],[11,"metadata","","Metadata about the log directive.",3,[[["self"]],["metadata"]]],[11,"level","","The verbosity level of the message.",3,[[["self"]],["level"]]],[11,"target","","The name of the target of the directive.",3,[[["self"]],["str"]]],[11,"module_path","","The module path of the message.",3,[[["self"]],[["option",["str"]],["str"]]]],[11,"module_path_static","","The module path of the message, if it is a `'static` string.",3,[[["self"]],[["str"],["option",["str"]]]]],[11,"file","","The source file containing the message.",3,[[["self"]],[["option",["str"]],["str"]]]],[11,"file_static","","The module path of the message, if it is a `'static` string.",3,[[["self"]],[["str"],["option",["str"]]]]],[11,"line","","The line containing the message.",3,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"new","","Construct new `RecordBuilder`.",4,[[],["recordbuilder"]]],[11,"args","","Set `args`.",4,[[["self"],["arguments"]],["recordbuilder"]]],[11,"metadata","","Set `metadata`. Construct a `Metadata` object with…",4,[[["self"],["metadata"]],["recordbuilder"]]],[11,"level","","Set `Metadata::level`.",4,[[["self"],["level"]],["recordbuilder"]]],[11,"target","","Set `Metadata::target`",4,[[["self"],["str"]],["recordbuilder"]]],[11,"module_path","","Set `module_path`",4,[[["option",["str"]],["self"],["str"]],["recordbuilder"]]],[11,"module_path_static","","Set `module_path` to a `'static` string",4,[[["self"],["str"],["option",["str"]]],["recordbuilder"]]],[11,"file","","Set `file`",4,[[["option",["str"]],["self"],["str"]],["recordbuilder"]]],[11,"file_static","","Set `file` to a `'static` string.",4,[[["self"],["str"],["option",["str"]]],["recordbuilder"]]],[11,"line","","Set `line`",4,[[["self"],["u32"],["option",["u32"]]],["recordbuilder"]]],[11,"build","","Invoke the builder and return a `Record`",4,[[["self"]],["record"]]],[11,"builder","","Returns a new builder.",5,[[],["metadatabuilder"]]],[11,"level","","The verbosity level of the message.",5,[[["self"]],["level"]]],[11,"target","","The name of the target of the directive.",5,[[["self"]],["str"]]],[11,"new","","Construct a new `MetadataBuilder`.",6,[[],["metadatabuilder"]]],[11,"level","","Setter for `level`.",6,[[["self"],["level"]],["metadatabuilder"]]],[11,"target","","Setter for `target`.",6,[[["self"],["str"]],["metadatabuilder"]]],[11,"build","","Returns a `Metadata` object.",6,[[["self"]],["metadata"]]],[14,"log","","The standard logging macro.",null,null],[14,"error","","Logs a message at the error level.",null,null],[14,"warn","","Logs a message at the warn level.",null,null],[14,"info","","Logs a message at the info level.",null,null],[14,"debug","","Logs a message at the debug level.",null,null],[14,"trace","","Logs a message at the trace level.",null,null],[14,"log_enabled","","Determines if a message logged at the specified level in…",null,null],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"eq","","",0,[[["level"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"eq","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"eq","","",1,[[["level"],["self"]],["bool"]]],[11,"eq","","",5,[[["self"],["metadata"]],["bool"]]],[11,"ne","","",5,[[["self"],["metadata"]],["bool"]]],[11,"eq","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"ne","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"eq","","",8,[[["parselevelerror"],["self"]],["bool"]]],[11,"ne","","",8,[[["parselevelerror"],["self"]],["bool"]]],[11,"cmp","","",0,[[["level"],["self"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["levelfilter"]],["ordering"]]],[11,"cmp","","",5,[[["self"],["metadata"]],["ordering"]]],[11,"cmp","","",6,[[["self"],["metadatabuilder"]],["ordering"]]],[11,"partial_cmp","","",0,[[["level"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["level"],["self"]],["bool"]]],[11,"le","","",0,[[["level"],["self"]],["bool"]]],[11,"gt","","",0,[[["level"],["self"]],["bool"]]],[11,"ge","","",0,[[["level"],["self"]],["bool"]]],[11,"partial_cmp","","",0,[[["self"],["levelfilter"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"le","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"gt","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"ge","","",0,[[["self"],["levelfilter"]],["bool"]]],[11,"partial_cmp","","",1,[[["self"],["levelfilter"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"le","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"gt","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"ge","","",1,[[["self"],["levelfilter"]],["bool"]]],[11,"partial_cmp","","",1,[[["level"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",1,[[["level"],["self"]],["bool"]]],[11,"le","","",1,[[["level"],["self"]],["bool"]]],[11,"gt","","",1,[[["level"],["self"]],["bool"]]],[11,"ge","","",1,[[["level"],["self"]],["bool"]]],[11,"partial_cmp","","",5,[[["self"],["metadata"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",5,[[["self"],["metadata"]],["bool"]]],[11,"le","","",5,[[["self"],["metadata"]],["bool"]]],[11,"gt","","",5,[[["self"],["metadata"]],["bool"]]],[11,"ge","","",5,[[["self"],["metadata"]],["bool"]]],[11,"partial_cmp","","",6,[[["self"],["metadatabuilder"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"le","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"gt","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"ge","","",6,[[["self"],["metadatabuilder"]],["bool"]]],[11,"from_str","","",0,[[["str"]],[["result",["level"]],["level"]]]],[11,"from_str","","",1,[[["str"]],[["result",["levelfilter"]],["levelfilter"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","","",5,[[["self"],["__h"]]]],[11,"hash","","",6,[[["self"],["__h"]]]],[11,"clone","","",0,[[["self"]],["level"]]],[11,"clone","","",1,[[["self"]],["levelfilter"]]],[11,"clone","","",3,[[["self"]],["record"]]],[11,"clone","","",5,[[["self"]],["metadata"]]]],"p":[[4,"Level"],[4,"LevelFilter"],[8,"Log"],[3,"Record"],[3,"RecordBuilder"],[3,"Metadata"],[3,"MetadataBuilder"],[3,"SetLoggerError"],[3,"ParseLevelError"]]};
searchIndex["maybe_uninit"] = {"doc":"","i":[[19,"MaybeUninit","maybe_uninit","A wrapper type to construct uninitialized instances of `T`.",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"fmt","","",0,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"clone","","",0,[[["self"]],["maybeuninit"]]],[11,"new","","Creates a new `MaybeUninit<T>` initialized with the given…",0,[[["t"]],["maybeuninit"]]],[11,"uninit","","Creates a new `MaybeUninit<T>` in an uninitialized state.",0,[[],["maybeuninit"]]],[11,"uninit_array","","Create a new array of `MaybeUninit<T>` items, in an…",0,[[]]],[18,"UNINIT","","A promotable constant, equivalent to `uninit()`.",0,null],[11,"zeroed","","Creates a new `MaybeUninit<T>` in an uninitialized state,…",0,[[],["maybeuninit"]]],[11,"write","","Sets the value of the `MaybeUninit<T>`. This overwrites…",0,[[["self"],["t"]],["t"]]],[11,"as_ptr","","Gets a pointer to the contained value. Reading from this…",0,[[["self"]]]],[11,"as_mut_ptr","","Gets a mutable pointer to the contained value. Reading…",0,[[["self"]]]],[11,"assume_init","","Extracts the value from the `MaybeUninit<T>` container.…",0,[[],["t"]]],[11,"read","","Reads the value from the `MaybeUninit<T>` container. The…",0,[[["self"]],["t"]]],[11,"get_ref","","Gets a shared reference to the contained value.",0,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable (unique) reference to the contained value.",0,[[["self"]],["t"]]],[11,"slice_get_ref","","Assuming all the elements are initialized, get a slice to…",0,[[]]],[11,"slice_get_mut","","Assuming all the elements are initialized, get a mutable…",0,[[]]],[11,"first_ptr","","Gets a pointer to the first element of the array.",0,[[]]],[11,"first_ptr_mut","","Gets a mutable pointer to the first element of the array.",0,[[]]]],"p":[[19,"MaybeUninit"]]};
searchIndex["memmap"] = {"doc":"A cross-platform Rust API for memory mapped buffers.","i":[[3,"MmapOptions","memmap","A memory map builder, providing advanced options and flags…",null,null],[3,"Mmap","","An immutable memory mapped buffer.",null,null],[3,"MmapMut","","A mutable memory mapped buffer.",null,null],[11,"new","","Creates a new set of options for configuring and creating…",0,[[],["mmapoptions"]]],[11,"offset","","Configures the memory map to start at byte `offset` from…",0,[[["self"],["u64"]],["self"]]],[11,"len","","Configures the created memory mapped buffer to be `len`…",0,[[["self"],["usize"]],["self"]]],[11,"stack","","Configures the anonymous memory map to be suitable for a…",0,[[["self"]],["self"]]],[11,"map","","Creates a read-only memory map backed by a file.",0,[[["self"],["file"]],[["mmap"],["result",["mmap"]]]]],[11,"map_exec","","Creates a readable and executable memory map backed by a…",0,[[["self"],["file"]],[["mmap"],["result",["mmap"]]]]],[11,"map_mut","","Creates a writeable memory map backed by a file.",0,[[["self"],["file"]],[["mmapmut"],["result",["mmapmut"]]]]],[11,"map_copy","","Creates a copy-on-write memory map backed by a file.",0,[[["self"],["file"]],[["mmapmut"],["result",["mmapmut"]]]]],[11,"map_anon","","Creates an anonymous memory map.",0,[[["self"]],[["mmapmut"],["result",["mmapmut"]]]]],[11,"map","","Creates a read-only memory map backed by a file.",1,[[["file"]],[["mmap"],["result",["mmap"]]]]],[11,"make_mut","","Transition the memory map to be writable.",1,[[],[["mmapmut"],["result",["mmapmut"]]]]],[11,"map_mut","","Creates a writeable memory map backed by a file.",2,[[["file"]],[["mmapmut"],["result",["mmapmut"]]]]],[11,"map_anon","","Creates an anonymous memory map.",2,[[["usize"]],[["mmapmut"],["result",["mmapmut"]]]]],[11,"flush","","Flushes outstanding memory map modifications to disk.",2,[[["self"]],["result"]]],[11,"flush_async","","Asynchronously flushes outstanding memory map…",2,[[["self"]],["result"]]],[11,"flush_range","","Flushes outstanding memory map modifications in the range…",2,[[["self"],["usize"]],["result"]]],[11,"flush_async_range","","Asynchronously flushes outstanding memory map…",2,[[["self"],["usize"]],["result"]]],[11,"make_read_only","","Returns an immutable version of this memory mapped buffer.",2,[[],[["mmap"],["result",["mmap"]]]]],[11,"make_exec","","Transition the memory map to be readable and executable.",2,[[],[["mmap"],["result",["mmap"]]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"as_mut","","",2,[[["self"]]]],[11,"as_ref","","",1,[[["self"]]]],[11,"as_ref","","",2,[[["self"]]]],[11,"clone","","",0,[[["self"]],["mmapoptions"]]],[11,"default","","",0,[[],["mmapoptions"]]],[11,"deref","","",1,[[["self"]]]],[11,"deref","","",2,[[["self"]]]],[11,"deref_mut","","",2,[[["self"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]]],"p":[[3,"MmapOptions"],[3,"Mmap"],[3,"MmapMut"]]};
searchIndex["memoffset"] = {"doc":"A crate used for calculating offsets of struct members and…","i":[[14,"offset_of","memoffset","Calculates the offset of the specified field from the…",null,null],[14,"span_of","","Produces a range instance representing the sub-slice…",null,null]],"p":[]};
searchIndex["nix"] = {"doc":"Rust friendly bindings to the various *nix system functions.","i":[[4,"Error","nix","Nix Error Type",null,null],[13,"Sys","","",0,null],[13,"InvalidPath","","",0,null],[13,"InvalidUtf8","","The operation involved a conversion to Rust's native…",0,null],[13,"UnsupportedOperation","","The operation is not supported by Nix, in this instance…",0,null],[0,"dir","","",null,null],[3,"Dir","nix::dir","An open directory.",null,null],[3,"Iter","","",null,null],[3,"Entry","","A directory entry, similar to `std::fs::DirEntry`.",null,null],[4,"Type","","",null,null],[13,"Fifo","","",1,null],[13,"CharacterDevice","","",1,null],[13,"Directory","","",1,null],[13,"BlockDevice","","",1,null],[13,"File","","",1,null],[13,"Symlink","","",1,null],[13,"Socket","","",1,null],[11,"open","","Opens the given path as with `fcntl::open`.",2,[[["mode"],["p"],["oflag"]],["result"]]],[11,"openat","","Opens the given path as with `fcntl::openat`.",2,[[["rawfd"],["oflag"],["p"],["mode"]],["result"]]],[11,"from","","Converts from a descriptor-based object, closing the…",2,[[["intorawfd"]],["result"]]],[11,"from_fd","","Converts from a file descriptor, closing it on success or…",2,[[["rawfd"]],["result"]]],[11,"iter","","Returns an iterator of `Result<Entry>` which rewinds when…",2,[[["self"]],["iter"]]],[11,"ino","","Returns the inode number (`d_ino`) of the underlying…",3,[[["self"]],["u64"]]],[11,"file_name","","Returns the bare file name of this directory entry without…",3,[[["self"]],["cstr"]]],[11,"file_type","","Returns the type of this directory entry, if known.",3,[[["self"]],[["type"],["option",["type"]]]]],[0,"errno","nix","",null,null],[4,"Errno","nix::errno","",null,null],[13,"UnknownErrno","","",4,null],[13,"EPERM","","",4,null],[13,"ENOENT","","",4,null],[13,"ESRCH","","",4,null],[13,"EINTR","","",4,null],[13,"EIO","","",4,null],[13,"ENXIO","","",4,null],[13,"E2BIG","","",4,null],[13,"ENOEXEC","","",4,null],[13,"EBADF","","",4,null],[13,"ECHILD","","",4,null],[13,"EDEADLK","","",4,null],[13,"ENOMEM","","",4,null],[13,"EACCES","","",4,null],[13,"EFAULT","","",4,null],[13,"ENOTBLK","","",4,null],[13,"EBUSY","","",4,null],[13,"EEXIST","","",4,null],[13,"EXDEV","","",4,null],[13,"ENODEV","","",4,null],[13,"ENOTDIR","","",4,null],[13,"EISDIR","","",4,null],[13,"EINVAL","","",4,null],[13,"ENFILE","","",4,null],[13,"EMFILE","","",4,null],[13,"ENOTTY","","",4,null],[13,"ETXTBSY","","",4,null],[13,"EFBIG","","",4,null],[13,"ENOSPC","","",4,null],[13,"ESPIPE","","",4,null],[13,"EROFS","","",4,null],[13,"EMLINK","","",4,null],[13,"EPIPE","","",4,null],[13,"EDOM","","",4,null],[13,"ERANGE","","",4,null],[13,"EAGAIN","","",4,null],[13,"EINPROGRESS","","",4,null],[13,"EALREADY","","",4,null],[13,"ENOTSOCK","","",4,null],[13,"EDESTADDRREQ","","",4,null],[13,"EMSGSIZE","","",4,null],[13,"EPROTOTYPE","","",4,null],[13,"ENOPROTOOPT","","",4,null],[13,"EPROTONOSUPPORT","","",4,null],[13,"ESOCKTNOSUPPORT","","",4,null],[13,"ENOTSUP","","",4,null],[13,"EPFNOSUPPORT","","",4,null],[13,"EAFNOSUPPORT","","",4,null],[13,"EADDRINUSE","","",4,null],[13,"EADDRNOTAVAIL","","",4,null],[13,"ENETDOWN","","",4,null],[13,"ENETUNREACH","","",4,null],[13,"ENETRESET","","",4,null],[13,"ECONNABORTED","","",4,null],[13,"ECONNRESET","","",4,null],[13,"ENOBUFS","","",4,null],[13,"EISCONN","","",4,null],[13,"ENOTCONN","","",4,null],[13,"ESHUTDOWN","","",4,null],[13,"ETOOMANYREFS","","",4,null],[13,"ETIMEDOUT","","",4,null],[13,"ECONNREFUSED","","",4,null],[13,"ELOOP","","",4,null],[13,"ENAMETOOLONG","","",4,null],[13,"EHOSTDOWN","","",4,null],[13,"EHOSTUNREACH","","",4,null],[13,"ENOTEMPTY","","",4,null],[13,"EPROCLIM","","",4,null],[13,"EUSERS","","",4,null],[13,"EDQUOT","","",4,null],[13,"ESTALE","","",4,null],[13,"EREMOTE","","",4,null],[13,"EBADRPC","","",4,null],[13,"ERPCMISMATCH","","",4,null],[13,"EPROGUNAVAIL","","",4,null],[13,"EPROGMISMATCH","","",4,null],[13,"EPROCUNAVAIL","","",4,null],[13,"ENOLCK","","",4,null],[13,"ENOSYS","","",4,null],[13,"EFTYPE","","",4,null],[13,"EAUTH","","",4,null],[13,"ENEEDAUTH","","",4,null],[13,"EPWROFF","","",4,null],[13,"EDEVERR","","",4,null],[13,"EOVERFLOW","","",4,null],[13,"EBADEXEC","","",4,null],[13,"EBADARCH","","",4,null],[13,"ESHLIBVERS","","",4,null],[13,"EBADMACHO","","",4,null],[13,"ECANCELED","","",4,null],[13,"EIDRM","","",4,null],[13,"ENOMSG","","",4,null],[13,"EILSEQ","","",4,null],[13,"ENOATTR","","",4,null],[13,"EBADMSG","","",4,null],[13,"EMULTIHOP","","",4,null],[13,"ENODATA","","",4,null],[13,"ENOLINK","","",4,null],[13,"ENOSR","","",4,null],[13,"ENOSTR","","",4,null],[13,"EPROTO","","",4,null],[13,"ETIME","","",4,null],[13,"EOPNOTSUPP","","",4,null],[13,"ENOPOLICY","","",4,null],[13,"ENOTRECOVERABLE","","",4,null],[13,"EOWNERDEAD","","",4,null],[13,"EQFULL","","",4,null],[5,"from_i32","","",null,[[["i32"]],["errno"]]],[5,"errno","","Returns the platform-specific value of errno",null,[[],["i32"]]],[17,"ELAST","","",null,null],[17,"EWOULDBLOCK","","",null,null],[17,"EDEADLOCK","","",null,null],[17,"EL2NSYNC","","",null,null],[8,"ErrnoSentinel","","The sentinel value indicates that a function failed and…",null,null],[10,"sentinel","","",5,[[],["self"]]],[11,"last","","",4,[[],["self"]]],[11,"desc","","",4,[[],["str"]]],[11,"from_i32","","",4,[[["i32"]],["errno"]]],[11,"clear","","",4,[[]]],[11,"result","","Returns `Ok(value)` if it does not contain the sentinel…",4,[[["errnosentinel"],["partialeq"]],[["partialeq"],["errnosentinel"],["result"]]]],[0,"features","nix","Feature tests for OS functionality",null,null],[5,"socket_atomic_cloexec","nix::features","Check if the OS supports atomic close-on-exec for sockets",null,[[],["bool"]]],[0,"fcntl","nix","",null,null],[3,"AtFlags","nix::fcntl","",null,null],[3,"OFlag","","Configuration options for opened files.",null,null],[3,"FdFlag","","Additional configuration flags for `fcntl`'s `F_SETFD`.",null,null],[4,"FcntlArg","","",null,null],[13,"F_DUPFD","","",6,null],[13,"F_DUPFD_CLOEXEC","","",6,null],[13,"F_GETFD","","",6,null],[13,"F_SETFD","","",6,null],[13,"F_GETFL","","",6,null],[13,"F_SETFL","","",6,null],[13,"F_SETLK","","",6,null],[13,"F_SETLKW","","",6,null],[13,"F_GETLK","","",6,null],[13,"F_FULLFSYNC","","",6,null],[4,"FlockArg","","",null,null],[13,"LockShared","","",7,null],[13,"LockExclusive","","",7,null],[13,"Unlock","","",7,null],[13,"LockSharedNonblock","","",7,null],[13,"LockExclusiveNonblock","","",7,null],[13,"UnlockNonblock","","",7,null],[5,"open","","",null,[[["mode"],["p"],["oflag"]],[["result",["rawfd"]],["rawfd"]]]],[5,"openat","","",null,[[["rawfd"],["oflag"],["mode"],["p"]],[["result",["rawfd"]],["rawfd"]]]],[5,"renameat","","",null,[[["rawfd"],["option",["rawfd"]],["p1"],["p2"]],["result"]]],[5,"readlink","","",null,[[["p"]],[["osstr"],["result",["osstr"]]]]],[5,"readlinkat","","",null,[[["rawfd"],["p"]],[["osstr"],["result",["osstr"]]]]],[5,"fcntl","","",null,[[["fcntlarg"],["rawfd"]],[["result",["c_int"]],["c_int"]]]],[5,"flock","","",null,[[["rawfd"],["flockarg"]],["result"]]],[18,"AT_REMOVEDIR","","",8,null],[18,"AT_SYMLINK_NOFOLLOW","","",8,null],[11,"empty","","Returns an empty set of flags",8,[[],["atflags"]]],[11,"all","","Returns the set containing all flags.",8,[[],["atflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",8,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",8,[[["c_int"]],[["option",["atflags"]],["atflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",8,[[["c_int"]],["atflags"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",8,[[["c_int"]],["atflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",8,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",8,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",8,[[["self"],["atflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",8,[[["self"],["atflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",8,[[["self"],["atflags"]]]],[11,"remove","","Removes the specified flags in-place.",8,[[["self"],["atflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",8,[[["self"],["atflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",8,[[["self"],["atflags"],["bool"]]]],[18,"O_ACCMODE","","Mask for the access mode of the file.",9,null],[18,"O_APPEND","","Open the file in append-only mode.",9,null],[18,"O_ASYNC","","Generate a signal when input or output becomes possible.",9,null],[18,"O_CLOEXEC","","Closes the file descriptor once an `execve` call is made.",9,null],[18,"O_CREAT","","Create the file if it does not exist.",9,null],[18,"O_DIRECTORY","","If the specified path isn't a directory, fail.",9,null],[18,"O_DSYNC","","Implicitly follow each `write()` with an `fdatasync()`.",9,null],[18,"O_EXCL","","Error out if a file was not created.",9,null],[18,"O_EXLOCK","","Open with an exclusive file lock.",9,null],[18,"O_FSYNC","","Same as `O_SYNC`.",9,null],[18,"O_NOCTTY","","Don't attach the device as the process' controlling…",9,null],[18,"O_NDELAY","","Same as `O_NONBLOCK`.",9,null],[18,"O_NOFOLLOW","","`open()` will fail if the given path is a symbolic link.",9,null],[18,"O_NONBLOCK","","When possible, open the file in nonblocking mode.",9,null],[18,"O_RDONLY","","Only allow reading.",9,null],[18,"O_RDWR","","Allow both reading and writing.",9,null],[18,"O_SHLOCK","","Open with a shared file lock.",9,null],[18,"O_SYNC","","Implicitly follow each `write()` with an `fsync()`.",9,null],[18,"O_TRUNC","","Truncate an existing regular file to 0 length if it allows…",9,null],[18,"O_WRONLY","","Only allow writing.",9,null],[11,"empty","","Returns an empty set of flags",9,[[],["oflag"]]],[11,"all","","Returns the set containing all flags.",9,[[],["oflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",9,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",9,[[["c_int"]],[["option",["oflag"]],["oflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",9,[[["c_int"]],["oflag"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",9,[[["c_int"]],["oflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",9,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",9,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",9,[[["self"],["oflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",9,[[["self"],["oflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",9,[[["self"],["oflag"]]]],[11,"remove","","Removes the specified flags in-place.",9,[[["self"],["oflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",9,[[["self"],["oflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",9,[[["bool"],["self"],["oflag"]]]],[18,"FD_CLOEXEC","","The file descriptor will automatically be closed during a…",10,null],[11,"empty","","Returns an empty set of flags",10,[[],["fdflag"]]],[11,"all","","Returns the set containing all flags.",10,[[],["fdflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",10,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",10,[[["c_int"]],[["fdflag"],["option",["fdflag"]]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",10,[[["c_int"]],["fdflag"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",10,[[["c_int"]],["fdflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",10,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",10,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",10,[[["self"],["fdflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",10,[[["self"],["fdflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",10,[[["self"],["fdflag"]]]],[11,"remove","","Removes the specified flags in-place.",10,[[["self"],["fdflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",10,[[["self"],["fdflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",10,[[["bool"],["self"],["fdflag"]]]],[0,"ifaddrs","nix","Query network interface addresses",null,null],[3,"InterfaceAddress","nix::ifaddrs","Describes a single address for an interface as returned by…",null,null],[12,"interface_name","","Name of the network interface",11,null],[12,"flags","","Flags as from `SIOCGIFFLAGS` ioctl",11,null],[12,"address","","Network address of this interface",11,null],[12,"netmask","","Netmask of this interface",11,null],[12,"broadcast","","Broadcast address of this interface, if applicable",11,null],[12,"destination","","Point-to-point destination address",11,null],[3,"InterfaceAddressIterator","","Holds the results of `getifaddrs`.",null,null],[5,"getifaddrs","","Get interface addresses using libc's `getifaddrs`",null,[[],[["result",["interfaceaddressiterator"]],["interfaceaddressiterator"]]]],[0,"net","nix","Functionality involving network interfaces",null,null],[0,"if_","nix::net","Network interface name resolution.",null,null],[3,"InterfaceFlags","nix::net::if_","Standard interface flags, used by `getifaddrs`",null,null],[5,"if_nametoindex","","Resolve an interface into a interface number.",null,[[["p"]],[["result",["c_uint"]],["c_uint"]]]],[18,"IFF_UP","","Interface is running. (see `netdevice(7)`)",12,null],[18,"IFF_BROADCAST","","Valid broadcast address set. (see `netdevice(7)`)",12,null],[18,"IFF_DEBUG","","Internal debugging flag. (see `netdevice(7)`)",12,null],[18,"IFF_LOOPBACK","","Interface is a loopback interface. (see `netdevice(7)`)",12,null],[18,"IFF_POINTOPOINT","","Interface is a point-to-point link. (see `netdevice(7)`)",12,null],[18,"IFF_NOTRAILERS","","Avoid use of trailers. (see `netdevice(7)`)",12,null],[18,"IFF_RUNNING","","Resources allocated. (see `netdevice(7)`)",12,null],[18,"IFF_NOARP","","No arp protocol, L2 destination address not set. (see…",12,null],[18,"IFF_PROMISC","","Interface is in promiscuous mode. (see `netdevice(7)`)",12,null],[18,"IFF_ALLMULTI","","Receive all multicast packets. (see `netdevice(7)`)",12,null],[18,"IFF_OACTIVE","","transmission in progress, tx hardware queue is full",12,null],[18,"IFF_SIMPLEX","","Can't hear own transmissions.",12,null],[18,"IFF_MULTICAST","","Supports multicast. (see `netdevice(7)`)",12,null],[18,"IFF_LINK0","","Per link layer defined bit.",12,null],[18,"IFF_LINK1","","Per link layer defined bit.",12,null],[18,"IFF_LINK2","","Per link layer defined bit.",12,null],[18,"IFF_ALTPHYS","","Use alternate physical connection.",12,null],[11,"empty","","Returns an empty set of flags",12,[[],["interfaceflags"]]],[11,"all","","Returns the set containing all flags.",12,[[],["interfaceflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",12,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",12,[[["c_int"]],[["option",["interfaceflags"]],["interfaceflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",12,[[["c_int"]],["interfaceflags"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",12,[[["c_int"]],["interfaceflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",12,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",12,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",12,[[["self"],["interfaceflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",12,[[["self"],["interfaceflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",12,[[["self"],["interfaceflags"]]]],[11,"remove","","Removes the specified flags in-place.",12,[[["self"],["interfaceflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",12,[[["self"],["interfaceflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",12,[[["bool"],["self"],["interfaceflags"]]]],[0,"poll","nix","Wait for events to trigger on specific file descriptors",null,null],[3,"PollFd","nix::poll","This is a wrapper around `libc::pollfd`.",null,null],[3,"PollFlags","","These flags define the different events that can be…",null,null],[5,"poll","","`poll` waits for one of a set of file descriptors to…",null,[[["c_int"]],[["result",["c_int"]],["c_int"]]]],[11,"new","","Creates a new `PollFd` specifying the events of interest…",13,[[["rawfd"],["pollflags"]],["pollfd"]]],[11,"revents","","Returns the events that occured in the last call to `poll`…",13,[[["self"]],[["option",["pollflags"]],["pollflags"]]]],[18,"POLLIN","","There is data to read.",14,null],[18,"POLLPRI","","There is some exceptional condition on the file descriptor.",14,null],[18,"POLLOUT","","Writing is now possible, though a write larger that the…",14,null],[18,"POLLRDNORM","","Equivalent to `POLLIN`",14,null],[18,"POLLWRNORM","","Equivalent to `POLLOUT`",14,null],[18,"POLLRDBAND","","Priority band data can be read (generally unused on Linux).",14,null],[18,"POLLWRBAND","","Priority data may be written.",14,null],[18,"POLLERR","","Error condition (only returned in `PollFd::revents`;…",14,null],[18,"POLLHUP","","Hang up (only returned in `PollFd::revents`; ignored in…",14,null],[18,"POLLNVAL","","Invalid request: `fd` not open (only returned in…",14,null],[11,"empty","","Returns an empty set of flags",14,[[],["pollflags"]]],[11,"all","","Returns the set containing all flags.",14,[[],["pollflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",14,[[["self"]],["c_short"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",14,[[["c_short"]],[["option",["pollflags"]],["pollflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",14,[[["c_short"]],["pollflags"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",14,[[["c_short"]],["pollflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",14,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",14,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",14,[[["self"],["pollflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",14,[[["self"],["pollflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",14,[[["self"],["pollflags"]]]],[11,"remove","","Removes the specified flags in-place.",14,[[["self"],["pollflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",14,[[["self"],["pollflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",14,[[["bool"],["self"],["pollflags"]]]],[0,"pty","nix","Create master and slave virtual pseudo-terminals (PTYs)",null,null],[6,"SessionId","nix::pty","",null,null],[3,"Winsize","","",null,null],[12,"ws_row","","",15,null],[12,"ws_col","","",15,null],[12,"ws_xpixel","","",15,null],[12,"ws_ypixel","","",15,null],[3,"OpenptyResult","","Representation of a master/slave pty pair",null,null],[12,"master","","The master port in a virtual pty pair",16,null],[12,"slave","","The slave port in a virtual pty pair",16,null],[3,"ForkptyResult","","Representation of a master with a forked pty",null,null],[12,"master","","The master port in a virtual pty pair",17,null],[12,"fork_result","","Metadata about forked process",17,null],[3,"PtyMaster","","Representation of the Master device in a master/slave pty…",null,null],[5,"grantpt","","Grant access to a slave pseudoterminal (see `grantpt(3)`)",null,[[["ptymaster"]],["result"]]],[5,"posix_openpt","","Open a pseudoterminal device (see `posix_openpt(3)`)",null,[[["oflag"]],[["ptymaster"],["result",["ptymaster"]]]]],[5,"ptsname","","Get the name of the slave pseudoterminal (see `ptsname(3)`)",null,[[["ptymaster"]],[["result",["string"]],["string"]]]],[5,"unlockpt","","Unlock a pseudoterminal master/slave pseudoterminal pair…",null,[[["ptymaster"]],["result"]]],[5,"openpty","","Create a new pseudoterminal, returning the slave and…",null,[[["option",["termios"]],["into",["option"]],["into",["option"]],["option",["winsize"]]],[["openptyresult"],["result",["openptyresult"]]]]],[5,"forkpty","","Create a new pseudoterminal, returning the master file…",null,[[["option",["termios"]],["into",["option"]],["into",["option"]],["option",["winsize"]]],[["forkptyresult"],["result",["forkptyresult"]]]]],[0,"sched","nix","",null,null],[5,"sched_yield","nix::sched","Explicitly yield the processor to other threads.",null,[[],["result"]]],[0,"sys","nix","",null,null],[0,"aio","nix::sys","POSIX Asynchronous I/O",null,null],[3,"AioCb","nix::sys::aio","AIO Control Block.",null,null],[4,"AioFsyncMode","","Mode for `AioCb::fsync`. Controls whether only data or…",null,null],[13,"O_SYNC","","do it like `fsync`",18,null],[13,"O_DSYNC","","on supported operating systems only, do it like `fdatasync`",18,null],[4,"LioOpcode","","When used with `lio_listio`, determines whether a given…",null,null],[13,"LIO_NOP","","",19,null],[13,"LIO_WRITE","","",19,null],[13,"LIO_READ","","",19,null],[4,"LioMode","","Mode for `lio_listio`",null,null],[13,"LIO_WAIT","","Requests that `lio_listio` block until all requested…",20,null],[13,"LIO_NOWAIT","","Requests that `lio_listio` return immediately",20,null],[4,"AioCancelStat","","Return values for `AioCb::cancel` and `aio_cancel_all`",null,null],[13,"AioCanceled","","All outstanding requests were canceled",21,null],[13,"AioNotCanceled","","Some requests were not canceled. Their status should be…",21,null],[13,"AioAllDone","","All of the requests have already finished",21,null],[4,"Buffer","","Owns (uniquely or shared) a memory buffer to keep it from…",null,null],[13,"None","","No buffer to own.",22,null],[13,"Phantom","","Keeps a reference to a slice",22,null],[13,"BoxedSlice","","Generic thing that keeps a buffer from dropping",22,null],[13,"BoxedMutSlice","","Generic thing that keeps a mutable buffer from dropping",22,null],[5,"aio_cancel_all","","Cancels outstanding AIO requests for a given file…",null,[[["rawfd"]],[["aiocancelstat"],["result",["aiocancelstat"]]]]],[5,"aio_suspend","","Suspends the calling process until at least one of the…",null,[[["option",["timespec"]],["timespec"]],["result"]]],[11,"buffer","","Remove the inner `Buffer` and return it",23,[[["self"]],["buffer"]]],[11,"boxed_slice","","Remove the inner boxed slice, if any, and return it.",23,[[["self"]],[["option",["box"]],["box",["borrow"]]]]],[11,"boxed_mut_slice","","Remove the inner boxed mutable slice, if any, and return it.",23,[[["self"]],[["box",["borrowmut"]],["option",["box"]]]]],[11,"fd","","Returns the underlying file descriptor associated with the…",23,[[["self"]],["rawfd"]]],[11,"from_fd","","Constructs a new `AioCb` with no associated buffer.",23,[[["sigevnotify"],["rawfd"],["c_int"]],["aiocb"]]],[11,"from_mut_slice","","Constructs a new `AioCb` from a mutable slice.",23,[[["sigevnotify"],["off_t"],["rawfd"],["lioopcode"],["c_int"]],["aiocb"]]],[11,"from_boxed_slice","","The safest and most flexible way to create an `AioCb`.",23,[[["sigevnotify"],["off_t"],["rawfd"],["lioopcode"],["borrow"],["box",["borrow"]],["c_int"]],["aiocb"]]],[11,"from_boxed_mut_slice","","The safest and most flexible way to create an `AioCb` for…",23,[[["sigevnotify"],["off_t"],["rawfd"],["box",["borrowmut"]],["lioopcode"],["borrowmut"],["c_int"]],["aiocb"]]],[11,"from_mut_ptr","","Constructs a new `AioCb` from a mutable raw pointer",23,[[["sigevnotify"],["off_t"],["rawfd"],["usize"],["lioopcode"],["c_int"]],["aiocb"]]],[11,"from_ptr","","Constructs a new `AioCb` from a raw pointer.",23,[[["sigevnotify"],["off_t"],["rawfd"],["usize"],["lioopcode"],["c_int"]],["aiocb"]]],[11,"from_slice","","Like `from_mut_slice`, but works on constant slices rather…",23,[[["sigevnotify"],["off_t"],["rawfd"],["lioopcode"],["c_int"]],["aiocb"]]],[11,"set_sigev_notify","","Update the notification settings for an existing `aiocb`",23,[[["self"],["sigevnotify"]]]],[11,"cancel","","Cancels an outstanding AIO request.",23,[[["self"]],[["aiocancelstat"],["result",["aiocancelstat"]]]]],[11,"error","","Retrieve error status of an asynchronous operation.",23,[[["self"]],["result"]]],[11,"fsync","","An asynchronous version of `fsync(2)`.",23,[[["self"],["aiofsyncmode"]],["result"]]],[11,"lio_opcode","","Returns the `aiocb`'s `LioOpcode` field",23,[[["self"]],[["option",["lioopcode"]],["lioopcode"]]]],[11,"nbytes","","Returns the requested length of the aio operation in bytes",23,[[["self"]],["usize"]]],[11,"offset","","Returns the file offset stored in the `AioCb`",23,[[["self"]],["off_t"]]],[11,"priority","","Returns the priority of the `AioCb`",23,[[["self"]],["c_int"]]],[11,"read","","Asynchronously reads from a file descriptor into a buffer",23,[[["self"]],["result"]]],[11,"sigevent","","Returns the `SigEvent` stored in the `AioCb`",23,[[["self"]],["sigevent"]]],[11,"aio_return","","Retrieve return status of an asynchronous operation.",23,[[["self"]],[["isize"],["result",["isize"]]]]],[11,"write","","Asynchronously writes from a buffer to a file descriptor",23,[[["self"]],["result"]]],[0,"event","nix::sys","",null,null],[3,"KEvent","nix::sys::event","",null,null],[3,"EventFlag","","",null,null],[3,"FilterFlag","","",null,null],[4,"EventFilter","","",null,null],[13,"EVFILT_AIO","","",24,null],[13,"EVFILT_FS","","",24,null],[13,"EVFILT_MACHPORT","","",24,null],[13,"EVFILT_PROC","","",24,null],[13,"EVFILT_READ","","",24,null],[13,"EVFILT_SIGNAL","","",24,null],[13,"EVFILT_TIMER","","",24,null],[13,"EVFILT_USER","","",24,null],[13,"EVFILT_VM","","",24,null],[13,"EVFILT_VNODE","","",24,null],[13,"EVFILT_WRITE","","",24,null],[5,"kqueue","","",null,[[],[["result",["rawfd"]],["rawfd"]]]],[5,"kevent","","",null,[[["rawfd"],["usize"]],[["result",["usize"]],["usize"]]]],[5,"kevent_ts","","",null,[[["rawfd"],["option",["timespec"]],["timespec"]],[["result",["usize"]],["usize"]]]],[5,"ev_set","","",null,[[["eventfilter"],["usize"],["kevent"],["filterflag"],["intptr_t"],["eventflag"]]]],[6,"type_of_event_flag","","",null,null],[18,"EV_ADD","","",25,null],[18,"EV_CLEAR","","",25,null],[18,"EV_DELETE","","",25,null],[18,"EV_DISABLE","","",25,null],[18,"EV_DISPATCH","","",25,null],[18,"EV_ENABLE","","",25,null],[18,"EV_EOF","","",25,null],[18,"EV_ERROR","","",25,null],[18,"EV_FLAG0","","",25,null],[18,"EV_FLAG1","","",25,null],[18,"EV_ONESHOT","","",25,null],[18,"EV_OOBAND","","",25,null],[18,"EV_POLL","","",25,null],[18,"EV_RECEIPT","","",25,null],[18,"EV_SYSFLAGS","","",25,null],[11,"empty","","Returns an empty set of flags",25,[[],["eventflag"]]],[11,"all","","Returns the set containing all flags.",25,[[],["eventflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",25,[[["self"]],["type_of_event_flag"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",25,[[["type_of_event_flag"]],[["option",["eventflag"]],["eventflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",25,[[["type_of_event_flag"]],["eventflag"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",25,[[["type_of_event_flag"]],["eventflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",25,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",25,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",25,[[["self"],["eventflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",25,[[["self"],["eventflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",25,[[["self"],["eventflag"]]]],[11,"remove","","Removes the specified flags in-place.",25,[[["self"],["eventflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",25,[[["self"],["eventflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",25,[[["bool"],["self"],["eventflag"]]]],[18,"NOTE_ABSOLUTE","","",26,null],[18,"NOTE_ATTRIB","","",26,null],[18,"NOTE_CHILD","","",26,null],[18,"NOTE_DELETE","","",26,null],[18,"NOTE_EXEC","","",26,null],[18,"NOTE_EXIT","","",26,null],[18,"NOTE_EXIT_REPARENTED","","",26,null],[18,"NOTE_EXITSTATUS","","",26,null],[18,"NOTE_EXTEND","","",26,null],[18,"NOTE_FFAND","","",26,null],[18,"NOTE_FFCOPY","","",26,null],[18,"NOTE_FFCTRLMASK","","",26,null],[18,"NOTE_FFLAGSMASK","","",26,null],[18,"NOTE_FFNOP","","",26,null],[18,"NOTE_FFOR","","",26,null],[18,"NOTE_FORK","","",26,null],[18,"NOTE_LINK","","",26,null],[18,"NOTE_LOWAT","","",26,null],[18,"NOTE_NONE","","",26,null],[18,"NOTE_NSECONDS","","",26,null],[18,"NOTE_PCTRLMASK","","",26,null],[18,"NOTE_PDATAMASK","","",26,null],[18,"NOTE_REAP","","",26,null],[18,"NOTE_RENAME","","",26,null],[18,"NOTE_REVOKE","","",26,null],[18,"NOTE_SECONDS","","",26,null],[18,"NOTE_SIGNAL","","",26,null],[18,"NOTE_TRACK","","",26,null],[18,"NOTE_TRACKERR","","",26,null],[18,"NOTE_TRIGGER","","",26,null],[18,"NOTE_USECONDS","","",26,null],[18,"NOTE_VM_ERROR","","",26,null],[18,"NOTE_VM_PRESSURE","","",26,null],[18,"NOTE_VM_PRESSURE_SUDDEN_TERMINATE","","",26,null],[18,"NOTE_VM_PRESSURE_TERMINATE","","",26,null],[18,"NOTE_WRITE","","",26,null],[11,"empty","","Returns an empty set of flags",26,[[],["filterflag"]]],[11,"all","","Returns the set containing all flags.",26,[[],["filterflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",26,[[["self"]],["u32"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",26,[[["u32"]],[["option",["filterflag"]],["filterflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",26,[[["u32"]],["filterflag"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",26,[[["u32"]],["filterflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",26,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",26,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",26,[[["self"],["filterflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",26,[[["self"],["filterflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",26,[[["self"],["filterflag"]]]],[11,"remove","","Removes the specified flags in-place.",26,[[["self"],["filterflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",26,[[["self"],["filterflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",26,[[["self"],["filterflag"],["bool"]]]],[11,"new","","",27,[[["eventfilter"],["uintptr_t"],["filterflag"],["intptr_t"],["eventflag"]],["kevent"]]],[11,"ident","","",27,[[["self"]],["uintptr_t"]]],[11,"filter","","",27,[[["self"]],["eventfilter"]]],[11,"flags","","",27,[[["self"]],["eventflag"]]],[11,"fflags","","",27,[[["self"]],["filterflag"]]],[11,"data","","",27,[[["self"]],["intptr_t"]]],[11,"udata","","",27,[[["self"]],["intptr_t"]]],[0,"ioctl","nix::sys","Provide helpers for making ioctl system calls.",null,null],[0,"mman","","",null,null],[3,"ProtFlags","nix::sys::mman","Desired memory protection of a memory mapping.",null,null],[3,"MapFlags","","Additional parameters for `mmap()`.",null,null],[3,"MsFlags","","Configuration flags for `msync`.",null,null],[3,"MlockAllFlags","","Flags for `mlockall`.",null,null],[4,"MmapAdvise","","Usage information for a range of memory to allow for…",null,null],[13,"MADV_NORMAL","","No further special treatment. This is the default.",28,null],[13,"MADV_RANDOM","","Expect random page references.",28,null],[13,"MADV_SEQUENTIAL","","Expect sequential page references.",28,null],[13,"MADV_WILLNEED","","Expect access in the near future.",28,null],[13,"MADV_DONTNEED","","Do not expect access in the near future.",28,null],[13,"MADV_FREE","","Specify that the application no longer needs the pages in…",28,null],[13,"MADV_ZERO_WIRED_PAGES","","Indicates that the application will not need the data in…",28,null],[13,"MADV_FREE_REUSABLE","","",28,null],[13,"MADV_FREE_REUSE","","",28,null],[13,"MADV_CAN_REUSE","","",28,null],[5,"mlock","","Locks all memory pages that contain part of the address…",null,[[["size_t"]],["result"]]],[5,"munlock","","Unlocks all memory pages that contain part of the address…",null,[[["size_t"]],["result"]]],[5,"mlockall","","Locks all memory pages mapped into this process' address…",null,[[["mlockallflags"]],["result"]]],[5,"munlockall","","Unlocks all memory pages mapped into this process' address…",null,[[],["result"]]],[5,"mmap","","Calls to mmap are inherently unsafe, so they must be made…",null,[[["off_t"],["rawfd"],["size_t"],["mapflags"],["protflags"]],["result"]]],[5,"munmap","","",null,[[["size_t"]],["result"]]],[5,"madvise","","",null,[[["size_t"],["mmapadvise"]],["result"]]],[5,"mprotect","","Set protection of memory mapping.",null,[[["size_t"],["protflags"]],["result"]]],[5,"msync","","",null,[[["size_t"],["msflags"]],["result"]]],[5,"shm_open","","",null,[[["mode"],["p"],["oflag"]],[["result",["rawfd"]],["rawfd"]]]],[5,"shm_unlink","","",null,[[["p"]],["result"]]],[18,"PROT_NONE","","Pages cannot be accessed.",29,null],[18,"PROT_READ","","Pages can be read.",29,null],[18,"PROT_WRITE","","Pages can be written.",29,null],[18,"PROT_EXEC","","Pages can be executed",29,null],[11,"empty","","Returns an empty set of flags",29,[[],["protflags"]]],[11,"all","","Returns the set containing all flags.",29,[[],["protflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",29,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",29,[[["c_int"]],[["option",["protflags"]],["protflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",29,[[["c_int"]],["protflags"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",29,[[["c_int"]],["protflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",29,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",29,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",29,[[["self"],["protflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",29,[[["self"],["protflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",29,[[["self"],["protflags"]]]],[11,"remove","","Removes the specified flags in-place.",29,[[["self"],["protflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",29,[[["self"],["protflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",29,[[["self"],["protflags"],["bool"]]]],[18,"MAP_FILE","","Compatibility flag. Ignored.",30,null],[18,"MAP_SHARED","","Share this mapping. Mutually exclusive with `MAP_PRIVATE`.",30,null],[18,"MAP_PRIVATE","","Create a private copy-on-write mapping. Mutually exclusive…",30,null],[18,"MAP_FIXED","","Place the mapping at exactly the address specified in…",30,null],[18,"MAP_ANON","","Synonym for `MAP_ANONYMOUS`.",30,null],[18,"MAP_NORESERVE","","Do not reserve swap space for this mapping.",30,null],[18,"MAP_NOCACHE","","Pages in this mapping are not retained in the kernel's…",30,null],[18,"MAP_JIT","","",30,null],[11,"empty","","Returns an empty set of flags",30,[[],["mapflags"]]],[11,"all","","Returns the set containing all flags.",30,[[],["mapflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",30,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",30,[[["c_int"]],[["option",["mapflags"]],["mapflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",30,[[["c_int"]],["mapflags"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",30,[[["c_int"]],["mapflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",30,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",30,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",30,[[["mapflags"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",30,[[["mapflags"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",30,[[["self"],["mapflags"]]]],[11,"remove","","Removes the specified flags in-place.",30,[[["self"],["mapflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",30,[[["self"],["mapflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",30,[[["self"],["mapflags"],["bool"]]]],[18,"MS_ASYNC","","Schedule an update but return immediately.",31,null],[18,"MS_INVALIDATE","","Invalidate all cached data.",31,null],[18,"MS_KILLPAGES","","Invalidate pages, but leave them mapped.",31,null],[18,"MS_DEACTIVATE","","Deactivate pages, but leave them mapped.",31,null],[18,"MS_SYNC","","Perform an update and wait for it to complete.",31,null],[11,"empty","","Returns an empty set of flags",31,[[],["msflags"]]],[11,"all","","Returns the set containing all flags.",31,[[],["msflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",31,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",31,[[["c_int"]],[["option",["msflags"]],["msflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",31,[[["c_int"]],["msflags"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",31,[[["c_int"]],["msflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",31,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",31,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",31,[[["self"],["msflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",31,[[["self"],["msflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",31,[[["self"],["msflags"]]]],[11,"remove","","Removes the specified flags in-place.",31,[[["self"],["msflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",31,[[["self"],["msflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",31,[[["bool"],["self"],["msflags"]]]],[18,"MCL_CURRENT","","Lock pages that are currently mapped into the address…",32,null],[18,"MCL_FUTURE","","Lock pages which will become mapped into the address space…",32,null],[11,"empty","","Returns an empty set of flags",32,[[],["mlockallflags"]]],[11,"all","","Returns the set containing all flags.",32,[[],["mlockallflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",32,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",32,[[["c_int"]],[["option",["mlockallflags"]],["mlockallflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",32,[[["c_int"]],["mlockallflags"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",32,[[["c_int"]],["mlockallflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",32,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",32,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",32,[[["self"],["mlockallflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",32,[[["self"],["mlockallflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",32,[[["self"],["mlockallflags"]]]],[11,"remove","","Removes the specified flags in-place.",32,[[["self"],["mlockallflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",32,[[["self"],["mlockallflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",32,[[["bool"],["self"],["mlockallflags"]]]],[0,"pthread","nix::sys","",null,null],[5,"pthread_self","nix::sys::pthread","Obtain ID of the calling thread (see `pthread_self(3)`",null,[[],["pthread"]]],[6,"Pthread","","",null,null],[0,"ptrace","nix::sys","",null,null],[4,"Request","nix::sys::ptrace","Ptrace Request enum defining the action to be taken.",null,null],[13,"PT_TRACE_ME","","",33,null],[13,"PT_READ_I","","",33,null],[13,"PT_READ_D","","",33,null],[13,"PT_READ_U","","",33,null],[13,"PT_WRITE_I","","",33,null],[13,"PT_WRITE_D","","",33,null],[13,"PT_WRITE_U","","",33,null],[13,"PT_CONTINUE","","",33,null],[13,"PT_KILL","","",33,null],[13,"PT_STEP","","",33,null],[13,"PT_ATTACH","","",33,null],[13,"PT_DETACH","","",33,null],[13,"PT_SIGEXC","","",33,null],[13,"PT_THUPDATE","","",33,null],[13,"PT_ATTACHEXC","","",33,null],[5,"traceme","","Sets the process as traceable, as with `ptrace(PT_TRACEME,…",null,[[],["result"]]],[5,"attach","","Attach to a running process, as with `ptrace(PT_ATTACH,…",null,[[["pid"]],["result"]]],[5,"detach","","Detaches the current running process, as with…",null,[[["pid"]],["result"]]],[5,"cont","","Restart the stopped tracee process, as with…",null,[[["option",["signal"]],["pid"],["into",["option"]]],["result"]]],[5,"kill","","Issues a kill request as with `ptrace(PT_KILL, ...)`",null,[[["pid"]],["result"]]],[5,"step","","Move the stopped tracee process forward by a single step…",null,[[["option",["signal"]],["pid"],["into",["option"]]],["result"]]],[5,"read","","Reads a word from a processes memory at the given address",null,[[["pid"],["addresstype"]],[["result",["c_int"]],["c_int"]]]],[5,"write","","Writes a word into the processes memory at the given address",null,[[["c_int"],["pid"],["addresstype"]],["result"]]],[6,"RequestType","","",null,null],[0,"select","nix::sys","",null,null],[17,"FD_SETSIZE","nix::sys::select","",null,null],[3,"FdSet","","",null,null],[5,"select","","Monitors file descriptors for readiness",null,[[["w"],["n"],["e"],["t"],["r"]],[["result",["c_int"]],["c_int"]]]],[5,"pselect","","Monitors file descriptors for readiness with an altered…",null,[[["w"],["n"],["e"],["s"],["t"],["r"]],[["result",["c_int"]],["c_int"]]]],[11,"new","","",34,[[],["fdset"]]],[11,"insert","","",34,[[["self"],["rawfd"]]]],[11,"remove","","",34,[[["self"],["rawfd"]]]],[11,"contains","","",34,[[["self"],["rawfd"]],["bool"]]],[11,"clear","","",34,[[["self"]]]],[11,"highest","","Finds the highest file descriptor in the set.",34,[[["self"]],[["rawfd"],["option",["rawfd"]]]]],[0,"sendfile","nix::sys","",null,null],[5,"sendfile","nix::sys::sendfile","Read bytes from `in_fd` starting at `offset` and write up…",null,[[["off_t"],["rawfd"],["option",["off_t"]],["option"]]]],[0,"signal","nix::sys","",null,null],[3,"SigEvent","nix::sys::signal","Used to request asynchronous notification of the…",null,null],[3,"SignalIterator","","",null,null],[3,"SaFlags","","",null,null],[3,"SigSet","","",null,null],[3,"SigAction","","Action to take on receipt of a signal. Corresponds to…",null,null],[4,"Signal","","",null,null],[13,"SIGHUP","","",35,null],[13,"SIGINT","","",35,null],[13,"SIGQUIT","","",35,null],[13,"SIGILL","","",35,null],[13,"SIGTRAP","","",35,null],[13,"SIGABRT","","",35,null],[13,"SIGBUS","","",35,null],[13,"SIGFPE","","",35,null],[13,"SIGKILL","","",35,null],[13,"SIGUSR1","","",35,null],[13,"SIGSEGV","","",35,null],[13,"SIGUSR2","","",35,null],[13,"SIGPIPE","","",35,null],[13,"SIGALRM","","",35,null],[13,"SIGTERM","","",35,null],[13,"SIGCHLD","","",35,null],[13,"SIGCONT","","",35,null],[13,"SIGSTOP","","",35,null],[13,"SIGTSTP","","",35,null],[13,"SIGTTIN","","",35,null],[13,"SIGTTOU","","",35,null],[13,"SIGURG","","",35,null],[13,"SIGXCPU","","",35,null],[13,"SIGXFSZ","","",35,null],[13,"SIGVTALRM","","",35,null],[13,"SIGPROF","","",35,null],[13,"SIGWINCH","","",35,null],[13,"SIGIO","","",35,null],[13,"SIGSYS","","",35,null],[13,"SIGEMT","","",35,null],[13,"SIGINFO","","",35,null],[4,"SigmaskHow","","",null,null],[13,"SIG_BLOCK","","",36,null],[13,"SIG_UNBLOCK","","",36,null],[13,"SIG_SETMASK","","",36,null],[4,"SigHandler","","A signal handler.",null,null],[13,"SigDfl","","Default signal handling.",37,null],[13,"SigIgn","","Request that the signal be ignored.",37,null],[13,"Handler","","Use the given signal-catching function, which takes in the…",37,null],[13,"SigAction","","Use the given signal-catching function, which takes in the…",37,null],[4,"SigevNotify","","Used to request asynchronous notification of certain…",null,null],[13,"SigevNone","","No notification will be delivered",38,null],[13,"SigevSignal","","The signal given by `signal` will be delivered to the…",38,null],[12,"signal","nix::sys::signal::SigevNotify","",38,null],[12,"si_value","","",38,null],[5,"sigaction","nix::sys::signal","Changes the action taken by a process on receipt of a…",null,[[["sigaction"],["signal"]],[["sigaction"],["result",["sigaction"]]]]],[5,"signal","","Signal management (see signal(3p))",null,[[["sighandler"],["signal"]],[["sighandler"],["result",["sighandler"]]]]],[5,"pthread_sigmask","","Manages the signal mask (set of blocked signals) for the…",null,[[["option",["sigset"]],["sigset"],["option",["sigset"]],["sigset"],["sigmaskhow"]],["result"]]],[5,"sigprocmask","","Examine and change blocked signals.",null,[[["option",["sigset"]],["sigset"],["option",["sigset"]],["sigset"],["sigmaskhow"]],["result"]]],[5,"kill","","",null,[[["pid"],["option",["signal"]],["into",["option"]]],["result"]]],[5,"killpg","","Send a signal to a process group (see killpg(3)).",null,[[["pid"],["option",["signal"]],["into",["option"]]],["result"]]],[5,"raise","","",null,[[["signal"]],["result"]]],[11,"new","","Note: this constructor does not allow the user to set the…",39,[[["sigevnotify"]],["sigevent"]]],[11,"sigevent","","",39,[[["self"]],["sigevent"]]],[17,"NSIG","","",null,null],[17,"SIGIOT","","",null,null],[17,"SIGPOLL","","",null,null],[17,"SIGUNUSED","","",null,null],[11,"iterator","","",35,[[],["signaliterator"]]],[11,"from_c_int","","",35,[[["c_int"]],[["result",["signal"]],["signal"]]]],[18,"SA_NOCLDSTOP","","",40,null],[18,"SA_NOCLDWAIT","","",40,null],[18,"SA_NODEFER","","",40,null],[18,"SA_ONSTACK","","",40,null],[18,"SA_RESETHAND","","",40,null],[18,"SA_RESTART","","",40,null],[18,"SA_SIGINFO","","",40,null],[11,"empty","","Returns an empty set of flags",40,[[],["saflags"]]],[11,"all","","Returns the set containing all flags.",40,[[],["saflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",40,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",40,[[["c_int"]],[["option",["saflags"]],["saflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",40,[[["c_int"]],["saflags"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",40,[[["c_int"]],["saflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",40,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",40,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",40,[[["saflags"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",40,[[["saflags"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",40,[[["saflags"],["self"]]]],[11,"remove","","Removes the specified flags in-place.",40,[[["saflags"],["self"]]]],[11,"toggle","","Toggles the specified flags in-place.",40,[[["saflags"],["self"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",40,[[["saflags"],["self"],["bool"]]]],[11,"all","","",41,[[],["sigset"]]],[11,"empty","","",41,[[],["sigset"]]],[11,"add","","",41,[[["self"],["signal"]]]],[11,"clear","","",41,[[["self"]]]],[11,"remove","","",41,[[["self"],["signal"]]]],[11,"contains","","",41,[[["self"],["signal"]],["bool"]]],[11,"extend","","",41,[[["self"],["sigset"]]]],[11,"thread_get_mask","","Gets the currently blocked (masked) set of signals for the…",41,[[],[["result",["sigset"]],["sigset"]]]],[11,"thread_set_mask","","Sets the set of signals as the signal mask for the calling…",41,[[["self"]],["result"]]],[11,"thread_block","","Adds the set of signals to the signal mask for the calling…",41,[[["self"]],["result"]]],[11,"thread_unblock","","Removes the set of signals from the signal mask for the…",41,[[["self"]],["result"]]],[11,"thread_swap_mask","","Sets the set of signals as the signal mask, and returns…",41,[[["sigmaskhow"],["self"]],[["result",["sigset"]],["sigset"]]]],[11,"wait","","Suspends execution of the calling thread until one of the…",41,[[["self"]],[["result",["signal"]],["signal"]]]],[11,"new","","Creates a new action.",42,[[["sighandler"],["saflags"],["sigset"]],["sigaction"]]],[11,"flags","","Returns the flags set on the action.",42,[[["self"]],["saflags"]]],[11,"mask","","Returns the set of signals that are blocked during…",42,[[["self"]],["sigset"]]],[11,"handler","","Returns the action's handler.",42,[[["self"]],["sighandler"]]],[0,"socket","nix::sys","Socket interface functions",null,null],[3,"cmsghdr","nix::sys::socket","",null,null],[12,"cmsg_len","","",43,null],[12,"cmsg_level","","",43,null],[12,"cmsg_type","","",43,null],[3,"msghdr","","",null,null],[12,"msg_name","","",44,null],[12,"msg_namelen","","",44,null],[12,"msg_iov","","",44,null],[12,"msg_iovlen","","",44,null],[12,"msg_control","","",44,null],[12,"msg_controllen","","",44,null],[12,"msg_flags","","",44,null],[6,"sa_family_t","","",null,null],[3,"sockaddr","","",null,null],[12,"sa_len","","",45,null],[12,"sa_family","","",45,null],[12,"sa_data","","",45,null],[3,"sockaddr_in","","",null,null],[12,"sin_len","","",46,null],[12,"sin_family","","",46,null],[12,"sin_port","","",46,null],[12,"sin_addr","","",46,null],[12,"sin_zero","","",46,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_len","","",47,null],[12,"sin6_family","","",47,null],[12,"sin6_port","","",47,null],[12,"sin6_flowinfo","","",47,null],[12,"sin6_addr","","",47,null],[12,"sin6_scope_id","","",47,null],[3,"sockaddr_storage","","",null,null],[12,"ss_len","","",48,null],[12,"ss_family","","",48,null],[3,"sockaddr_un","","",null,null],[12,"sun_len","","",49,null],[12,"sun_family","","",49,null],[12,"sun_path","","",49,null],[3,"UnixAddr","","A wrapper around `sockaddr_un`.",null,null],[12,"0","","",50,null],[12,"1","","",50,null],[3,"Ipv4Addr","","",null,null],[12,"0","","",51,null],[3,"Ipv6Addr","","",null,null],[12,"0","","",52,null],[3,"LinkAddr","","Hardware Address",null,null],[12,"0","","",53,null],[3,"SockFlag","","Additional socket options",null,null],[3,"MsgFlags","","Flags for send/recv and their relatives",null,null],[3,"IpMembershipRequest","","Request for multicast socket operations",null,null],[3,"Ipv6MembershipRequest","","Request for ipv6 multicast socket operations",null,null],[3,"CmsgSpace","","A structure used to make room in a cmsghdr passed to…",null,null],[3,"RecvMsg","","",null,null],[12,"bytes","","",54,null],[12,"address","","",54,null],[12,"flags","","",54,null],[3,"CmsgIterator","","",null,null],[4,"AddressFamily","","These constants specify the protocol family to be used in…",null,null],[13,"Unix","","Local communication (see `unix(7)`)",55,null],[13,"Inet","","IPv4 Internet protocols (see `ip(7)`)",55,null],[13,"Inet6","","IPv6 Internet protocols (see `ipv6(7)`)",55,null],[13,"System","","KEXT Controls and Notifications",55,null],[13,"Ipx","","IPX - Novell protocols",55,null],[13,"AppleTalk","","AppleTalk",55,null],[13,"Decnet","","",55,null],[13,"Sna","","",55,null],[13,"Isdn","","",55,null],[13,"ImpLink","","",55,null],[13,"Pup","","",55,null],[13,"Chaos","","",55,null],[13,"Ns","","",55,null],[13,"Iso","","",55,null],[13,"Datakit","","",55,null],[13,"Ccitt","","",55,null],[13,"Dli","","",55,null],[13,"Lat","","",55,null],[13,"Hylink","","",55,null],[13,"Link","","",55,null],[13,"Coip","","",55,null],[13,"Cnt","","",55,null],[13,"Natm","","",55,null],[4,"SockAddr","","Represents a socket address",null,null],[13,"Inet","","",56,null],[13,"Unix","","",56,null],[13,"SysControl","","",56,null],[13,"Link","","Datalink address (MAC)",56,null],[4,"InetAddr","","",null,null],[13,"V4","","",57,null],[13,"V6","","",57,null],[4,"IpAddr","","",null,null],[13,"V4","","",58,null],[13,"V6","","",58,null],[4,"SockType","","These constants are used to specify the communication…",null,null],[13,"Stream","","Provides sequenced, reliable, two-way, connection- based…",59,null],[13,"Datagram","","Supports datagrams (connectionless, unreliable messages of…",59,null],[13,"SeqPacket","","Provides a sequenced, reliable, two-way connection- based…",59,null],[13,"Raw","","Provides raw network protocol access.",59,null],[13,"Rdm","","Provides a reliable datagram layer that does not guarantee…",59,null],[4,"SockProtocol","","Constants used in `socket` and `socketpair` to specify the…",null,null],[13,"Tcp","","TCP protocol (ip(7))",60,null],[13,"Udp","","UDP protocol (ip(7))",60,null],[13,"KextEvent","","Allows applications and other KEXTs to be notified when…",60,null],[13,"KextControl","","Allows applications to configure and control a KEXT (ref)",60,null],[4,"ControlMessageOwned","","A type-safe wrapper around a single control message, as…",null,null],[13,"ScmRights","","Received version of…",61,null],[13,"ScmTimestamp","","A message of type `SCM_TIMESTAMP`, containing the time the…",61,null],[13,"Ipv4PacketInfo","","",61,null],[13,"Ipv6PacketInfo","","",61,null],[13,"Ipv4RecvIf","","",61,null],[13,"Ipv4RecvDstAddr","","",61,null],[4,"ControlMessage","","A type-safe zero-copy wrapper around a single control…",null,null],[13,"ScmRights","","A message of type `SCM_RIGHTS`, containing an array of…",62,null],[4,"SockLevel","","The protocol level at which to get / set socket options.…",null,null],[13,"Socket","","",63,null],[13,"Tcp","","",63,null],[13,"Ip","","",63,null],[13,"Ipv6","","",63,null],[13,"Udp","","",63,null],[4,"Shutdown","","",null,null],[13,"Read","","Further receptions will be disallowed.",64,null],[13,"Write","","Further  transmissions will be disallowed.",64,null],[13,"Both","","Further receptions and transmissions will be disallowed.",64,null],[5,"sendmsg","","Send data in scatter-gather vectors to a socket, possibly…",null,[[["rawfd"],["msgflags"],["option",["sockaddr"]],["sockaddr"]],[["result",["usize"]],["usize"]]]],[5,"recvmsg","","Receive message in scatter-gather vectors from a socket,…",null,[[["cmsgbuffer"],["option",["cmsgbuffer"]],["rawfd"],["msgflags"]],[["result",["recvmsg"]],["recvmsg"]]]],[5,"socket","","Create an endpoint for communication",null,[[["socktype"],["into",["option"]],["option",["sockprotocol"]],["sockflag"],["addressfamily"]],[["result",["rawfd"]],["rawfd"]]]],[5,"socketpair","","Create a pair of connected sockets",null,[[["socktype"],["into",["option"]],["option",["sockprotocol"]],["sockflag"],["addressfamily"]],["result"]]],[5,"listen","","Listen for connections on a socket",null,[[["rawfd"],["usize"]],["result"]]],[5,"bind","","Bind a name to a socket",null,[[["rawfd"],["sockaddr"]],["result"]]],[5,"accept","","Accept a connection on a socket",null,[[["rawfd"]],[["result",["rawfd"]],["rawfd"]]]],[5,"connect","","Initiate a connection on a socket",null,[[["rawfd"],["sockaddr"]],["result"]]],[5,"recv","","Receive data from a connection-oriented socket. Returns…",null,[[["msgflags"],["rawfd"]],[["result",["usize"]],["usize"]]]],[5,"recvfrom","","Receive data from a connectionless or connection-oriented…",null,[[["rawfd"]],["result"]]],[5,"sendto","","Send a message to a socket",null,[[["rawfd"],["sockaddr"],["msgflags"]],[["result",["usize"]],["usize"]]]],[5,"send","","Send data to a connection-oriented socket. Returns the…",null,[[["msgflags"],["rawfd"]],[["result",["usize"]],["usize"]]]],[5,"getsockopt","","Get the current value for the requested socket option",null,[[["rawfd"],["getsockopt"]],["result"]]],[5,"setsockopt","","Sets the value for the requested socket option",null,[[["rawfd"],["setsockopt"]],["result"]]],[5,"getpeername","","Get the address of the peer connected to the socket `fd`.",null,[[["rawfd"]],[["result",["sockaddr"]],["sockaddr"]]]],[5,"getsockname","","Get the current address to which the socket `fd` is bound.",null,[[["rawfd"]],[["result",["sockaddr"]],["sockaddr"]]]],[5,"sockaddr_storage_to_addr","","Return the appropriate `SockAddr` type from a…",null,[[["sockaddr_storage"],["usize"]],[["result",["sockaddr"]],["sockaddr"]]]],[5,"shutdown","","Shut down part of a full-duplex connection.",null,[[["rawfd"],["shutdown"]],["result"]]],[11,"len","","Total length of sockaddr",53,[[["self"]],["usize"]]],[11,"family","","always == AF_LINK",53,[[["self"]],["addressfamily"]]],[11,"ifindex","","interface index, if != 0, system given index for interface",53,[[["self"]],["usize"]]],[11,"datalink_type","","Datalink type",53,[[["self"]],["u8"]]],[11,"nlen","","",53,[[["self"]],["usize"]]],[11,"alen","","link level address length",53,[[["self"]],["usize"]]],[11,"slen","","link layer selector length",53,[[["self"]],["usize"]]],[11,"is_empty","","if link level address length == 0, or `sdl_data` not be…",53,[[["self"]],["bool"]]],[11,"addr","","Physical-layer address (MAC)",53,[[["self"]]]],[11,"from_i32","","Create a new `AddressFamily` from an integer value…",55,[[["i32"]],[["addressfamily"],["option",["addressfamily"]]]]],[11,"from_std","","",57,[[["socketaddr"]],["inetaddr"]]],[11,"new","","",57,[[["u16"],["ipaddr"]],["inetaddr"]]],[11,"ip","","Gets the IP address associated with this socket address.",57,[[["self"]],["ipaddr"]]],[11,"port","","Gets the port number associated with this socket address",57,[[["self"]],["u16"]]],[11,"to_std","","",57,[[["self"]],["socketaddr"]]],[11,"to_str","","",57,[[["self"]],["string"]]],[11,"new_v4","","Create a new IpAddr that contains an IPv4 address.",58,[[["u8"]],["ipaddr"]]],[11,"new_v6","","Create a new IpAddr that contains an IPv6 address.",58,[[["u16"]],["ipaddr"]]],[11,"from_std","","",58,[[["ipaddr"]],["ipaddr"]]],[11,"to_std","","",58,[[["self"]],["ipaddr"]]],[11,"new","","",51,[[["u8"]],["ipv4addr"]]],[11,"from_std","","",51,[[["ipv4addr"]],["ipv4addr"]]],[11,"any","","",51,[[],["ipv4addr"]]],[11,"octets","","",51,[[["self"]]]],[11,"to_std","","",51,[[["self"]],["ipv4addr"]]],[11,"new","","",52,[[["u16"]],["ipv6addr"]]],[11,"from_std","","",52,[[["ipv6addr"]],["ipv6addr"]]],[11,"segments","","Return the eight 16-bit segments that make up this address",52,[[["self"]]]],[11,"to_std","","",52,[[["self"]],["ipv6addr"]]],[11,"new","","Create a new sockaddr_un representing a filesystem path.",50,[[["p"]],[["unixaddr"],["result",["unixaddr"]]]]],[11,"path","","If this address represents a filesystem path, return that…",50,[[["self"]],[["path"],["option",["path"]]]]],[11,"new_inet","","",56,[[["inetaddr"]],["sockaddr"]]],[11,"new_unix","","",56,[[["p"]],[["result",["sockaddr"]],["sockaddr"]]]],[11,"new_sys_control","","",56,[[["str"],["u32"],["rawfd"]],[["result",["sockaddr"]],["sockaddr"]]]],[11,"family","","",56,[[["self"]],["addressfamily"]]],[11,"to_str","","",56,[[["self"]],["string"]]],[11,"from_libc_sockaddr","","Creates a `SockAddr` struct from libc's sockaddr.",56,[[],[["option",["sockaddr"]],["sockaddr"]]]],[11,"as_ffi_pair","","Conversion from nix's SockAddr type to the underlying libc…",56,[[["self"]]]],[0,"sockopt","","",null,null],[3,"ReuseAddr","nix::sys::socket::sockopt","",null,null],[3,"ReusePort","","",null,null],[3,"TcpNoDelay","","",null,null],[3,"Linger","","",null,null],[3,"IpAddMembership","","",null,null],[3,"IpDropMembership","","",null,null],[3,"Ipv6AddMembership","","",null,null],[3,"Ipv6DropMembership","","",null,null],[3,"IpMulticastTtl","","",null,null],[3,"IpMulticastLoop","","",null,null],[3,"ReceiveTimeout","","",null,null],[3,"SendTimeout","","",null,null],[3,"Broadcast","","",null,null],[3,"OobInline","","",null,null],[3,"SocketError","","",null,null],[3,"KeepAlive","","",null,null],[3,"TcpKeepAlive","","",null,null],[3,"RcvBuf","","",null,null],[3,"SndBuf","","",null,null],[3,"SockType","","",null,null],[3,"AcceptConn","","",null,null],[3,"ReceiveTimestamp","","",null,null],[3,"Ipv4PacketInfo","","",null,null],[3,"Ipv6RecvPacketInfo","","",null,null],[3,"Ipv4RecvIf","","",null,null],[3,"Ipv4RecvDstAddr","","",null,null],[8,"CmsgBuffer","nix::sys::socket","A type that can be used to store ancillary data received…",null,null],[10,"as_bytes_mut","","",65,[[["self"]]]],[8,"GetSockOpt","","Represents a socket option that can be accessed or set.…",null,null],[16,"Val","","",66,null],[8,"SetSockOpt","","Represents a socket option that can be accessed or set.…",null,null],[16,"Val","","",67,null],[11,"empty","","Returns an empty set of flags",68,[[],["sockflag"]]],[11,"all","","Returns the set containing all flags.",68,[[],["sockflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",68,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",68,[[["c_int"]],[["sockflag"],["option",["sockflag"]]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",68,[[["c_int"]],["sockflag"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",68,[[["c_int"]],["sockflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",68,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",68,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",68,[[["self"],["sockflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",68,[[["self"],["sockflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",68,[[["self"],["sockflag"]]]],[11,"remove","","Removes the specified flags in-place.",68,[[["self"],["sockflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",68,[[["self"],["sockflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",68,[[["self"],["sockflag"],["bool"]]]],[18,"MSG_OOB","","Sends or requests out-of-band data on sockets that support…",69,null],[18,"MSG_PEEK","","Peeks at an incoming message. The data is treated as…",69,null],[18,"MSG_WAITALL","","Receive operation blocks until the full amount of data can…",69,null],[18,"MSG_DONTWAIT","","Enables nonblocking operation; if the operation would…",69,null],[18,"MSG_CTRUNC","","Receive flags: Control Data was discarded (buffer too small)",69,null],[18,"MSG_TRUNC","","For raw (`Packet`), Internet datagram (since Linux…",69,null],[18,"MSG_EOR","","Terminates a record (when this notion is supported, as for…",69,null],[11,"empty","","Returns an empty set of flags",69,[[],["msgflags"]]],[11,"all","","Returns the set containing all flags.",69,[[],["msgflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",69,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",69,[[["c_int"]],[["msgflags"],["option",["msgflags"]]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",69,[[["c_int"]],["msgflags"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",69,[[["c_int"]],["msgflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",69,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",69,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",69,[[["msgflags"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",69,[[["msgflags"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",69,[[["msgflags"],["self"]]]],[11,"remove","","Removes the specified flags in-place.",69,[[["msgflags"],["self"]]]],[11,"toggle","","Toggles the specified flags in-place.",69,[[["msgflags"],["self"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",69,[[["msgflags"],["self"],["bool"]]]],[11,"new","","Instantiate a new `IpMembershipRequest`",70,[[["ipv4addr"],["option",["ipv4addr"]]],["self"]]],[11,"new","","Instantiate a new `Ipv6MembershipRequest`",71,[[["ipv6addr"]],["self"]]],[11,"new","","Create a CmsgSpace. The structure is used only for space,…",72,[[],["self"]]],[11,"cmsgs","","Iterate over the valid control messages pointed to by this…",54,[[["self"]],["cmsgiterator"]]],[0,"stat","nix::sys","",null,null],[6,"dev_t","nix::sys::stat","",null,null],[6,"mode_t","","",null,null],[3,"FileStat","","",null,null],[12,"st_dev","","",73,null],[12,"st_mode","","",73,null],[12,"st_nlink","","",73,null],[12,"st_ino","","",73,null],[12,"st_uid","","",73,null],[12,"st_gid","","",73,null],[12,"st_rdev","","",73,null],[12,"st_atime","","",73,null],[12,"st_atime_nsec","","",73,null],[12,"st_mtime","","",73,null],[12,"st_mtime_nsec","","",73,null],[12,"st_ctime","","",73,null],[12,"st_ctime_nsec","","",73,null],[12,"st_birthtime","","",73,null],[12,"st_birthtime_nsec","","",73,null],[12,"st_size","","",73,null],[12,"st_blocks","","",73,null],[12,"st_blksize","","",73,null],[12,"st_flags","","",73,null],[12,"st_gen","","",73,null],[12,"st_lspare","","",73,null],[12,"st_qspare","","",73,null],[5,"FileStat","","",null,[[],["i32"]]],[3,"SFlag","","",null,null],[3,"Mode","","",null,null],[4,"FchmodatFlags","","Flags for `fchmodat` function.",null,null],[13,"FollowSymlink","","",74,null],[13,"NoFollowSymlink","","",74,null],[4,"UtimensatFlags","","Flags for `utimensat` function.",null,null],[13,"FollowSymlink","","",75,null],[13,"NoFollowSymlink","","",75,null],[5,"mknod","","",null,[[["sflag"],["mode"],["p"],["dev_t"]],["result"]]],[5,"umask","","",null,[[["mode"]],["mode"]]],[5,"stat","","",null,[[["p"]],[["result",["filestat"]],["filestat"]]]],[5,"lstat","","",null,[[["p"]],[["result",["filestat"]],["filestat"]]]],[5,"fstat","","",null,[[["rawfd"]],[["result",["filestat"]],["filestat"]]]],[5,"fstatat","","",null,[[["atflags"],["rawfd"],["p"]],[["result",["filestat"]],["filestat"]]]],[5,"fchmod","","Change the file permission bits of the file specified by a…",null,[[["mode"],["rawfd"]],["result"]]],[5,"fchmodat","","Change the file permission bits.",null,[[["fchmodatflags"],["rawfd"],["option",["rawfd"]],["mode"],["p"]],["result"]]],[5,"utimes","","Change the access and modification times of a file.",null,[[["timeval"],["p"]],["result"]]],[5,"lutimes","","Change the access and modification times of a file without…",null,[[["timeval"],["p"]],["result"]]],[5,"futimens","","Change the access and modification times of the file…",null,[[["timespec"],["rawfd"]],["result"]]],[5,"utimensat","","Change the access and modification times of a file.",null,[[["utimensatflags"],["rawfd"],["option",["rawfd"]],["timespec"],["p"]],["result"]]],[5,"mkdirat","","",null,[[["mode"],["rawfd"],["p"]],["result"]]],[18,"S_IFIFO","","",76,null],[18,"S_IFCHR","","",76,null],[18,"S_IFDIR","","",76,null],[18,"S_IFBLK","","",76,null],[18,"S_IFREG","","",76,null],[18,"S_IFLNK","","",76,null],[18,"S_IFSOCK","","",76,null],[18,"S_IFMT","","",76,null],[11,"empty","","Returns an empty set of flags",76,[[],["sflag"]]],[11,"all","","Returns the set containing all flags.",76,[[],["sflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",76,[[["self"]],["mode_t"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",76,[[["mode_t"]],[["option",["sflag"]],["sflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",76,[[["mode_t"]],["sflag"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",76,[[["mode_t"]],["sflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",76,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",76,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",76,[[["sflag"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",76,[[["sflag"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",76,[[["sflag"],["self"]]]],[11,"remove","","Removes the specified flags in-place.",76,[[["sflag"],["self"]]]],[11,"toggle","","Toggles the specified flags in-place.",76,[[["sflag"],["self"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",76,[[["sflag"],["self"],["bool"]]]],[18,"S_IRWXU","","",77,null],[18,"S_IRUSR","","",77,null],[18,"S_IWUSR","","",77,null],[18,"S_IXUSR","","",77,null],[18,"S_IRWXG","","",77,null],[18,"S_IRGRP","","",77,null],[18,"S_IWGRP","","",77,null],[18,"S_IXGRP","","",77,null],[18,"S_IRWXO","","",77,null],[18,"S_IROTH","","",77,null],[18,"S_IWOTH","","",77,null],[18,"S_IXOTH","","",77,null],[18,"S_ISUID","","",77,null],[18,"S_ISGID","","",77,null],[18,"S_ISVTX","","",77,null],[11,"empty","","Returns an empty set of flags",77,[[],["mode"]]],[11,"all","","Returns the set containing all flags.",77,[[],["mode"]]],[11,"bits","","Returns the raw value of the flags currently stored.",77,[[["self"]],["mode_t"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",77,[[["mode_t"]],[["mode"],["option",["mode"]]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",77,[[["mode_t"]],["mode"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",77,[[["mode_t"]],["mode"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",77,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",77,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",77,[[["mode"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",77,[[["mode"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",77,[[["self"],["mode"]]]],[11,"remove","","Removes the specified flags in-place.",77,[[["self"],["mode"]]]],[11,"toggle","","Toggles the specified flags in-place.",77,[[["self"],["mode"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",77,[[["self"],["mode"],["bool"]]]],[0,"statfs","nix::sys","",null,null],[3,"Statfs","nix::sys::statfs","",null,null],[5,"statfs","","",null,[[["p"]],[["result",["statfs"]],["statfs"]]]],[5,"fstatfs","","",null,[[["t"]],[["result",["statfs"]],["statfs"]]]],[6,"fsid_t","","",null,null],[11,"filesystem_type_name","","Magic code defining system type",78,[[["self"]],["str"]]],[11,"optimal_transfer_size","","Optimal transfer block size",78,[[["self"]],["i32"]]],[11,"block_size","","Size of a block",78,[[["self"]],["u32"]]],[11,"blocks","","Total data blocks in filesystem",78,[[["self"]],["u64"]]],[11,"blocks_free","","Free blocks in filesystem",78,[[["self"]],["u64"]]],[11,"blocks_available","","Free blocks available to unprivileged user",78,[[["self"]],["u64"]]],[11,"files","","Total file nodes in filesystem",78,[[["self"]],["u64"]]],[11,"files_free","","Free file nodes in filesystem",78,[[["self"]],["u64"]]],[11,"filesystem_id","","Filesystem ID",78,[[["self"]],["fsid_t"]]],[0,"statvfs","nix::sys","Get filesystem statistics",null,null],[3,"FsFlags","nix::sys::statvfs","File system mount Flags",null,null],[3,"Statvfs","","Wrapper around the POSIX `statvfs` struct",null,null],[5,"statvfs","","Return a `Statvfs` object with information about the `path`",null,[[["p"]],[["statvfs"],["result",["statvfs"]]]]],[5,"fstatvfs","","Return a `Statvfs` object with information about `fd`",null,[[["t"]],[["statvfs"],["result",["statvfs"]]]]],[18,"ST_RDONLY","","Read Only",79,null],[18,"ST_NOSUID","","Do not allow the set-uid bits to have an effect",79,null],[11,"empty","","Returns an empty set of flags",79,[[],["fsflags"]]],[11,"all","","Returns the set containing all flags.",79,[[],["fsflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",79,[[["self"]],["c_ulong"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",79,[[["c_ulong"]],[["fsflags"],["option",["fsflags"]]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",79,[[["c_ulong"]],["fsflags"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",79,[[["c_ulong"]],["fsflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",79,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",79,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",79,[[["fsflags"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",79,[[["fsflags"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",79,[[["fsflags"],["self"]]]],[11,"remove","","Removes the specified flags in-place.",79,[[["fsflags"],["self"]]]],[11,"toggle","","Toggles the specified flags in-place.",79,[[["fsflags"],["self"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",79,[[["fsflags"],["self"],["bool"]]]],[11,"block_size","","get the file system block size",80,[[["self"]],["c_ulong"]]],[11,"fragment_size","","Get the fundamental file system block size",80,[[["self"]],["c_ulong"]]],[11,"blocks","","Get the number of blocks.",80,[[["self"]],["fsblkcnt_t"]]],[11,"blocks_free","","Get the number of free blocks in the file system",80,[[["self"]],["fsblkcnt_t"]]],[11,"blocks_available","","Get the number of free blocks for unprivileged users",80,[[["self"]],["fsblkcnt_t"]]],[11,"files","","Get the total number of file inodes",80,[[["self"]],["fsfilcnt_t"]]],[11,"files_free","","Get the number of free file inodes",80,[[["self"]],["fsfilcnt_t"]]],[11,"files_available","","Get the number of free file inodes for unprivileged users",80,[[["self"]],["fsfilcnt_t"]]],[11,"filesystem_id","","Get the file system id",80,[[["self"]],["c_ulong"]]],[11,"flags","","Get the mount flags",80,[[["self"]],["fsflags"]]],[11,"name_max","","Get the maximum filename length",80,[[["self"]],["c_ulong"]]],[0,"termios","nix::sys","An interface for controlling asynchronous communication…",null,null],[17,"NCCS","nix::sys::termios","",null,null],[17,"_POSIX_VDISABLE","","",null,null],[3,"Termios","","Stores settings for the termios API",null,null],[12,"input_flags","","Input mode flags (see `termios.c_iflag` documentation)",81,null],[12,"output_flags","","Output mode flags (see `termios.c_oflag` documentation)",81,null],[12,"control_flags","","Control mode flags (see `termios.c_cflag` documentation)",81,null],[12,"local_flags","","Local mode flags (see `termios.c_lflag` documentation)",81,null],[12,"control_chars","","Control characters (see `termios.c_cc` documentation)",81,null],[3,"InputFlags","","Flags for configuring the input mode of a terminal",null,null],[3,"OutputFlags","","Flags for configuring the output mode of a terminal",null,null],[3,"ControlFlags","","Flags for setting the control mode of a terminal",null,null],[3,"LocalFlags","","Flags for setting any local modes",null,null],[4,"BaudRate","","Baud rates supported by the system.",null,null],[13,"B0","","",82,null],[13,"B50","","",82,null],[13,"B75","","",82,null],[13,"B110","","",82,null],[13,"B134","","",82,null],[13,"B150","","",82,null],[13,"B200","","",82,null],[13,"B300","","",82,null],[13,"B600","","",82,null],[13,"B1200","","",82,null],[13,"B1800","","",82,null],[13,"B2400","","",82,null],[13,"B4800","","",82,null],[13,"B7200","","",82,null],[13,"B9600","","",82,null],[13,"B14400","","",82,null],[13,"B19200","","",82,null],[13,"B28800","","",82,null],[13,"B38400","","",82,null],[13,"B57600","","",82,null],[13,"B76800","","",82,null],[13,"B115200","","",82,null],[13,"B230400","","",82,null],[4,"SetArg","","Specify when a port configuration change should occur.",null,null],[13,"TCSANOW","","The change will occur immediately",83,null],[13,"TCSADRAIN","","The change occurs after all output has been written",83,null],[13,"TCSAFLUSH","","Same as `TCSADRAIN`, but will also flush the input buffer",83,null],[4,"FlushArg","","Specify a combination of the input and output buffers to…",null,null],[13,"TCIFLUSH","","Flush data that was received but not read",84,null],[13,"TCOFLUSH","","Flush data written but not transmitted",84,null],[13,"TCIOFLUSH","","Flush both received data not read and written data not…",84,null],[4,"FlowArg","","Specify how transmission flow should be altered",null,null],[13,"TCOOFF","","Suspend transmission",85,null],[13,"TCOON","","Resume transmission",85,null],[13,"TCIOFF","","Transmit a STOP character, which should disable a…",85,null],[13,"TCION","","Transmit a START character, which should re-enable a…",85,null],[4,"SpecialCharacterIndices","","Indices into the `termios.c_cc` array for special…",null,null],[13,"VDISCARD","","",86,null],[13,"VDSUSP","","",86,null],[13,"VEOF","","",86,null],[13,"VEOL","","",86,null],[13,"VEOL2","","",86,null],[13,"VERASE","","",86,null],[13,"VINTR","","",86,null],[13,"VKILL","","",86,null],[13,"VLNEXT","","",86,null],[13,"VMIN","","",86,null],[13,"VQUIT","","",86,null],[13,"VREPRINT","","",86,null],[13,"VSTART","","",86,null],[13,"VSTATUS","","",86,null],[13,"VSTOP","","",86,null],[13,"VSUSP","","",86,null],[13,"VTIME","","",86,null],[13,"VWERASE","","",86,null],[5,"cfgetispeed","","Get input baud rate (see cfgetispeed(3p)).",null,[[["termios"]],["u32"]]],[5,"cfgetospeed","","Get output baud rate (see cfgetospeed(3p)).",null,[[["termios"]],["u32"]]],[5,"cfsetispeed","","Set input baud rate (see cfsetispeed(3p)).",null,[[["termios"],["into",["u32"]],["u32"]],["result"]]],[5,"cfsetospeed","","Set output baud rate (see cfsetospeed(3p)).",null,[[["termios"],["into",["u32"]],["u32"]],["result"]]],[5,"cfsetspeed","","Set both the input and output baud rates (see termios(3)).",null,[[["termios"],["into",["u32"]],["u32"]],["result"]]],[5,"cfmakeraw","","Configures the port to something like the \"raw\" mode of…",null,[[["termios"]]]],[5,"tcgetattr","","Return the configuration of a port tcgetattr(3p)).",null,[[["rawfd"]],[["result",["termios"]],["termios"]]]],[5,"tcsetattr","","Set the configuration for a terminal (see tcsetattr(3p)).",null,[[["setarg"],["rawfd"],["termios"]],["result"]]],[5,"tcdrain","","Block until all output data is written (see tcdrain(3p)).",null,[[["rawfd"]],["result"]]],[5,"tcflow","","Suspend or resume the transmission or reception of data…",null,[[["flowarg"],["rawfd"]],["result"]]],[5,"tcflush","","Discard data in the output or input queue (see tcflush(3p)).",null,[[["flusharg"],["rawfd"]],["result"]]],[5,"tcsendbreak","","Send a break for a specific duration (see tcsendbreak(3p)).",null,[[["rawfd"],["c_int"]],["result"]]],[5,"tcgetsid","","Get the session controlled by the given terminal (see…",null,[[["rawfd"]],[["pid"],["result",["pid"]]]]],[18,"IGNBRK","","",87,null],[18,"BRKINT","","",87,null],[18,"IGNPAR","","",87,null],[18,"PARMRK","","",87,null],[18,"INPCK","","",87,null],[18,"ISTRIP","","",87,null],[18,"INLCR","","",87,null],[18,"IGNCR","","",87,null],[18,"ICRNL","","",87,null],[18,"IXON","","",87,null],[18,"IXOFF","","",87,null],[18,"IXANY","","",87,null],[18,"IMAXBEL","","",87,null],[18,"IUTF8","","",87,null],[11,"empty","","Returns an empty set of flags",87,[[],["inputflags"]]],[11,"all","","Returns the set containing all flags.",87,[[],["inputflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",87,[[["self"]],["tcflag_t"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",87,[[["tcflag_t"]],[["option",["inputflags"]],["inputflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",87,[[["tcflag_t"]],["inputflags"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",87,[[["tcflag_t"]],["inputflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",87,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",87,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",87,[[["inputflags"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",87,[[["inputflags"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",87,[[["self"],["inputflags"]]]],[11,"remove","","Removes the specified flags in-place.",87,[[["self"],["inputflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",87,[[["self"],["inputflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",87,[[["self"],["inputflags"],["bool"]]]],[18,"OPOST","","",88,null],[18,"ONLCR","","",88,null],[18,"OCRNL","","",88,null],[18,"ONOCR","","",88,null],[18,"ONLRET","","",88,null],[18,"OFILL","","",88,null],[18,"OFDEL","","",88,null],[18,"NL0","","",88,null],[18,"NL1","","",88,null],[18,"CR0","","",88,null],[18,"CR1","","",88,null],[18,"CR2","","",88,null],[18,"CR3","","",88,null],[18,"TAB0","","",88,null],[18,"TAB1","","",88,null],[18,"TAB2","","",88,null],[18,"TAB3","","",88,null],[18,"BS0","","",88,null],[18,"BS1","","",88,null],[18,"VT0","","",88,null],[18,"VT1","","",88,null],[18,"FF0","","",88,null],[18,"FF1","","",88,null],[18,"OXTABS","","",88,null],[18,"ONOEOT","","",88,null],[18,"NLDLY","","",88,null],[18,"CRDLY","","",88,null],[18,"TABDLY","","",88,null],[18,"BSDLY","","",88,null],[18,"VTDLY","","",88,null],[18,"FFDLY","","",88,null],[11,"empty","","Returns an empty set of flags",88,[[],["outputflags"]]],[11,"all","","Returns the set containing all flags.",88,[[],["outputflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",88,[[["self"]],["tcflag_t"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",88,[[["tcflag_t"]],[["option",["outputflags"]],["outputflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",88,[[["tcflag_t"]],["outputflags"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",88,[[["tcflag_t"]],["outputflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",88,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",88,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",88,[[["self"],["outputflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",88,[[["self"],["outputflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",88,[[["self"],["outputflags"]]]],[11,"remove","","Removes the specified flags in-place.",88,[[["self"],["outputflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",88,[[["self"],["outputflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",88,[[["self"],["outputflags"],["bool"]]]],[18,"CIGNORE","","",89,null],[18,"CS5","","",89,null],[18,"CS6","","",89,null],[18,"CS7","","",89,null],[18,"CS8","","",89,null],[18,"CSTOPB","","",89,null],[18,"CREAD","","",89,null],[18,"PARENB","","",89,null],[18,"PARODD","","",89,null],[18,"HUPCL","","",89,null],[18,"CLOCAL","","",89,null],[18,"CRTSCTS","","",89,null],[18,"MDMBUF","","",89,null],[18,"CSIZE","","",89,null],[11,"empty","","Returns an empty set of flags",89,[[],["controlflags"]]],[11,"all","","Returns the set containing all flags.",89,[[],["controlflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",89,[[["self"]],["tcflag_t"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",89,[[["tcflag_t"]],[["option",["controlflags"]],["controlflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",89,[[["tcflag_t"]],["controlflags"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",89,[[["tcflag_t"]],["controlflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",89,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",89,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",89,[[["self"],["controlflags"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",89,[[["self"],["controlflags"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",89,[[["self"],["controlflags"]]]],[11,"remove","","Removes the specified flags in-place.",89,[[["self"],["controlflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",89,[[["self"],["controlflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",89,[[["self"],["controlflags"],["bool"]]]],[18,"ECHOKE","","",90,null],[18,"ECHOE","","",90,null],[18,"ECHOK","","",90,null],[18,"ECHO","","",90,null],[18,"ECHONL","","",90,null],[18,"ECHOPRT","","",90,null],[18,"ECHOCTL","","",90,null],[18,"ISIG","","",90,null],[18,"ICANON","","",90,null],[18,"ALTWERASE","","",90,null],[18,"IEXTEN","","",90,null],[18,"EXTPROC","","",90,null],[18,"TOSTOP","","",90,null],[18,"FLUSHO","","",90,null],[18,"NOKERNINFO","","",90,null],[18,"PENDIN","","",90,null],[18,"NOFLSH","","",90,null],[11,"empty","","Returns an empty set of flags",90,[[],["localflags"]]],[11,"all","","Returns the set containing all flags.",90,[[],["localflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",90,[[["self"]],["tcflag_t"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",90,[[["tcflag_t"]],[["option",["localflags"]],["localflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",90,[[["tcflag_t"]],["localflags"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",90,[[["tcflag_t"]],["localflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",90,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",90,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",90,[[["localflags"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",90,[[["localflags"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",90,[[["self"],["localflags"]]]],[11,"remove","","Removes the specified flags in-place.",90,[[["self"],["localflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",90,[[["self"],["localflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",90,[[["self"],["localflags"],["bool"]]]],[0,"time","nix::sys","",null,null],[6,"time_t","nix::sys::time","",null,null],[6,"suseconds_t","","",null,null],[3,"TimeSpec","","",null,null],[3,"TimeVal","","",null,null],[8,"TimeValLike","","",null,null],[11,"zero","","",91,[[],["self"]]],[11,"hours","","",91,[[["i64"]],["self"]]],[11,"minutes","","",91,[[["i64"]],["self"]]],[10,"seconds","","",91,[[["i64"]],["self"]]],[10,"milliseconds","","",91,[[["i64"]],["self"]]],[10,"microseconds","","",91,[[["i64"]],["self"]]],[10,"nanoseconds","","",91,[[["i64"]],["self"]]],[11,"num_hours","","",91,[[["self"]],["i64"]]],[11,"num_minutes","","",91,[[["self"]],["i64"]]],[10,"num_seconds","","",91,[[["self"]],["i64"]]],[10,"num_milliseconds","","",91,[[["self"]],["i64"]]],[10,"num_microseconds","","",91,[[["self"]],["i64"]]],[10,"num_nanoseconds","","",91,[[["self"]],["i64"]]],[11,"tv_sec","","",92,[[["self"]],["time_t"]]],[11,"tv_nsec","","",92,[[["self"]],["c_long"]]],[11,"tv_sec","","",93,[[["self"]],["time_t"]]],[11,"tv_usec","","",93,[[["self"]],["suseconds_t"]]],[0,"uio","nix::sys","",null,null],[3,"IoVec","nix::sys::uio","",null,null],[5,"writev","","",null,[[["rawfd"]],[["result",["usize"]],["usize"]]]],[5,"readv","","",null,[[["rawfd"]],[["result",["usize"]],["usize"]]]],[5,"pwrite","","",null,[[["off_t"],["rawfd"]],[["result",["usize"]],["usize"]]]],[5,"pread","","",null,[[["off_t"],["rawfd"]],[["result",["usize"]],["usize"]]]],[11,"as_slice","","",94,[[["self"]]]],[11,"from_slice","","",94,[[],["iovec"]]],[11,"from_mut_slice","","",94,[[],["iovec"]]],[0,"utsname","nix::sys","",null,null],[3,"UtsName","nix::sys::utsname","",null,null],[5,"uname","","",null,[[],["utsname"]]],[11,"sysname","","",95,[[["self"]],["str"]]],[11,"nodename","","",95,[[["self"]],["str"]]],[11,"release","","",95,[[["self"]],["str"]]],[11,"version","","",95,[[["self"]],["str"]]],[11,"machine","","",95,[[["self"]],["str"]]],[0,"wait","nix::sys","",null,null],[3,"WaitPidFlag","nix::sys::wait","",null,null],[4,"WaitStatus","","Possible return values from `wait()` or `waitpid()`.",null,null],[13,"Exited","","The process exited normally (as with `exit()` or returning…",96,null],[13,"Signaled","","The process was killed by the given signal. The third…",96,null],[13,"Stopped","","The process is alive, but was stopped by the given signal.…",96,null],[13,"Continued","","The process was previously stopped but has resumed…",96,null],[13,"StillAlive","","There are currently no state changes to report in any…",96,null],[5,"waitpid","","",null,[[["into",["option"]],["waitpidflag"],["option",["waitpidflag"]],["option",["pid"]]],[["result",["waitstatus"]],["waitstatus"]]]],[5,"wait","","",null,[[],[["result",["waitstatus"]],["waitstatus"]]]],[18,"WNOHANG","","",97,null],[18,"WUNTRACED","","",97,null],[18,"WEXITED","","",97,null],[18,"WCONTINUED","","",97,null],[18,"WSTOPPED","","",97,null],[18,"WNOWAIT","","Don't reap, just poll status.",97,null],[11,"empty","","Returns an empty set of flags",97,[[],["waitpidflag"]]],[11,"all","","Returns the set containing all flags.",97,[[],["waitpidflag"]]],[11,"bits","","Returns the raw value of the flags currently stored.",97,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",97,[[["c_int"]],[["option",["waitpidflag"]],["waitpidflag"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",97,[[["c_int"]],["waitpidflag"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",97,[[["c_int"]],["waitpidflag"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",97,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",97,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",97,[[["self"],["waitpidflag"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",97,[[["self"],["waitpidflag"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",97,[[["self"],["waitpidflag"]]]],[11,"remove","","Removes the specified flags in-place.",97,[[["self"],["waitpidflag"]]]],[11,"toggle","","Toggles the specified flags in-place.",97,[[["self"],["waitpidflag"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",97,[[["self"],["waitpidflag"],["bool"]]]],[11,"pid","","Extracts the PID from the WaitStatus unless it equals…",96,[[["self"]],[["option",["pid"]],["pid"]]]],[11,"from_raw","","Convert a raw `wstatus` as returned by `waitpid`/`wait`…",96,[[["pid"],["i32"]],[["result",["waitstatus"]],["waitstatus"]]]],[0,"unistd","nix","Safe wrappers around functions found in libc \"unistd.h\"…",null,null],[3,"Uid","nix::unistd","User identifier",null,null],[3,"Gid","","Group identifier",null,null],[3,"Pid","","Process identifier",null,null],[3,"AccessFlags","","Options for access()",null,null],[4,"ForkResult","","Represents the successful result of calling `fork`",null,null],[13,"Parent","","",98,null],[12,"child","nix::unistd::ForkResult","",98,null],[13,"Child","nix::unistd","",98,null],[4,"FchownatFlags","","Flags for `fchownat` function.",null,null],[13,"FollowSymlink","","",99,null],[13,"NoFollowSymlink","","",99,null],[4,"Whence","","Directive that tells [`lseek`] and [`lseek64`] what the…",null,null],[13,"SeekSet","","Specify an offset relative to the start of the file.",100,null],[13,"SeekCur","","Specify an offset relative to the current file location.",100,null],[13,"SeekEnd","","Specify an offset relative to the end of the file.",100,null],[4,"UnlinkatFlags","","Flags for `unlinkat` function.",null,null],[13,"RemoveDir","","",101,null],[13,"NoRemoveDir","","",101,null],[4,"PathconfVar","","Variable names for `pathconf`",null,null],[13,"LINK_MAX","","Maximum number of links to a single file.",102,null],[13,"MAX_CANON","","Maximum number of bytes in a terminal canonical input line.",102,null],[13,"MAX_INPUT","","Minimum number of bytes for which space is available in a…",102,null],[13,"NAME_MAX","","Maximum number of bytes in a filename (not including the…",102,null],[13,"PATH_MAX","","Maximum number of bytes the implementation will store as a…",102,null],[13,"PIPE_BUF","","Maximum number of bytes that is guaranteed to be atomic…",102,null],[13,"_POSIX_CHOWN_RESTRICTED","","The use of `chown` and `fchown` is restricted to a process…",102,null],[13,"_POSIX_NO_TRUNC","","Pathname components longer than {NAME_MAX} generate an…",102,null],[13,"_POSIX_VDISABLE","","This symbol shall be defined to be the value of a…",102,null],[4,"SysconfVar","","Variable names for `sysconf`",null,null],[13,"AIO_LISTIO_MAX","","Maximum number of I/O operations in a single list I/O call…",103,null],[13,"AIO_MAX","","Maximum number of outstanding asynchronous I/O operations…",103,null],[13,"AIO_PRIO_DELTA_MAX","","The maximum amount by which a process can decrease its…",103,null],[13,"ARG_MAX","","Maximum length of argument to the exec functions including…",103,null],[13,"ATEXIT_MAX","","Maximum number of functions that may be registered with…",103,null],[13,"BC_BASE_MAX","","Maximum obase values allowed by the bc utility.",103,null],[13,"BC_DIM_MAX","","Maximum number of elements permitted in an array by the bc…",103,null],[13,"BC_SCALE_MAX","","Maximum scale value allowed by the bc utility.",103,null],[13,"BC_STRING_MAX","","Maximum length of a string constant accepted by the bc…",103,null],[13,"CHILD_MAX","","Maximum number of simultaneous processes per real user ID.",103,null],[13,"COLL_WEIGHTS_MAX","","Maximum number of weights that can be assigned to an entry…",103,null],[13,"DELAYTIMER_MAX","","Maximum number of timer expiration overruns.",103,null],[13,"EXPR_NEST_MAX","","Maximum number of expressions that can be nested within…",103,null],[13,"HOST_NAME_MAX","","Maximum length of a host name (not including the…",103,null],[13,"IOV_MAX","","Maximum number of iovec structures that one process has…",103,null],[13,"LINE_MAX","","Unless otherwise noted, the maximum length, in bytes, of a…",103,null],[13,"LOGIN_NAME_MAX","","Maximum length of a login name.",103,null],[13,"NGROUPS_MAX","","Maximum number of simultaneous supplementary group IDs per…",103,null],[13,"GETGR_R_SIZE_MAX","","Initial size of `getgrgid_r` and `getgrnam_r` data buffers",103,null],[13,"GETPW_R_SIZE_MAX","","Initial size of `getpwuid_r` and `getpwnam_r` data buffers",103,null],[13,"MQ_OPEN_MAX","","The maximum number of open message queue descriptors a…",103,null],[13,"MQ_PRIO_MAX","","The maximum number of message priorities supported by the…",103,null],[13,"OPEN_MAX","","A value one greater than the maximum value that the system…",103,null],[13,"_POSIX_ADVISORY_INFO","","The implementation supports the Advisory Information option.",103,null],[13,"_POSIX_BARRIERS","","The implementation supports barriers.",103,null],[13,"_POSIX_ASYNCHRONOUS_IO","","The implementation supports asynchronous input and output.",103,null],[13,"_POSIX_CLOCK_SELECTION","","The implementation supports clock selection.",103,null],[13,"_POSIX_CPUTIME","","The implementation supports the Process CPU-Time Clocks…",103,null],[13,"_POSIX_FSYNC","","The implementation supports the File Synchronization option.",103,null],[13,"_POSIX_IPV6","","The implementation supports the IPv6 option.",103,null],[13,"_POSIX_JOB_CONTROL","","The implementation supports job control.",103,null],[13,"_POSIX_MAPPED_FILES","","The implementation supports memory mapped Files.",103,null],[13,"_POSIX_MEMLOCK","","The implementation supports the Process Memory Locking…",103,null],[13,"_POSIX_MEMLOCK_RANGE","","The implementation supports the Range Memory Locking option.",103,null],[13,"_POSIX_MEMORY_PROTECTION","","The implementation supports memory protection.",103,null],[13,"_POSIX_MESSAGE_PASSING","","The implementation supports the Message Passing option.",103,null],[13,"_POSIX_MONOTONIC_CLOCK","","The implementation supports the Monotonic Clock option.",103,null],[13,"_POSIX_PRIORITIZED_IO","","The implementation supports the Prioritized Input and…",103,null],[13,"_POSIX_PRIORITY_SCHEDULING","","The implementation supports the Process Scheduling option.",103,null],[13,"_POSIX_RAW_SOCKETS","","The implementation supports the Raw Sockets option.",103,null],[13,"_POSIX_READER_WRITER_LOCKS","","The implementation supports read-write locks.",103,null],[13,"_POSIX_REALTIME_SIGNALS","","The implementation supports realtime signals.",103,null],[13,"_POSIX_REGEXP","","The implementation supports the Regular Expression…",103,null],[13,"_POSIX_SAVED_IDS","","Each process has a saved set-user-ID and a saved…",103,null],[13,"_POSIX_SEMAPHORES","","The implementation supports semaphores.",103,null],[13,"_POSIX_SHARED_MEMORY_OBJECTS","","The implementation supports the Shared Memory Objects…",103,null],[13,"_POSIX_SHELL","","The implementation supports the POSIX shell.",103,null],[13,"_POSIX_SPAWN","","The implementation supports the Spawn option.",103,null],[13,"_POSIX_SPIN_LOCKS","","The implementation supports spin locks.",103,null],[13,"_POSIX_SPORADIC_SERVER","","The implementation supports the Process Sporadic Server…",103,null],[13,"_POSIX_SS_REPL_MAX","","",103,null],[13,"_POSIX_SYNCHRONIZED_IO","","The implementation supports the Synchronized Input and…",103,null],[13,"_POSIX_THREAD_ATTR_STACKADDR","","The implementation supports the Thread Stack Address…",103,null],[13,"_POSIX_THREAD_ATTR_STACKSIZE","","The implementation supports the Thread Stack Size…",103,null],[13,"_POSIX_THREAD_CPUTIME","","The implementation supports the Thread CPU-Time Clocks…",103,null],[13,"_POSIX_THREAD_PRIO_INHERIT","","The implementation supports the Non-Robust Mutex Priority…",103,null],[13,"_POSIX_THREAD_PRIO_PROTECT","","The implementation supports the Non-Robust Mutex Priority…",103,null],[13,"_POSIX_THREAD_PRIORITY_SCHEDULING","","The implementation supports the Thread Execution…",103,null],[13,"_POSIX_THREAD_PROCESS_SHARED","","The implementation supports the Thread Process-Shared…",103,null],[13,"_POSIX_THREAD_SAFE_FUNCTIONS","","The implementation supports thread-safe functions.",103,null],[13,"_POSIX_THREAD_SPORADIC_SERVER","","The implementation supports the Thread Sporadic Server…",103,null],[13,"_POSIX_THREADS","","The implementation supports threads.",103,null],[13,"_POSIX_TIMEOUTS","","The implementation supports timeouts.",103,null],[13,"_POSIX_TIMERS","","The implementation supports timers.",103,null],[13,"_POSIX_TRACE","","The implementation supports the Trace option.",103,null],[13,"_POSIX_TRACE_EVENT_FILTER","","The implementation supports the Trace Event Filter option.",103,null],[13,"_POSIX_TRACE_EVENT_NAME_MAX","","",103,null],[13,"_POSIX_TRACE_INHERIT","","The implementation supports the Trace Inherit option.",103,null],[13,"_POSIX_TRACE_LOG","","The implementation supports the Trace Log option.",103,null],[13,"_POSIX_TRACE_NAME_MAX","","",103,null],[13,"_POSIX_TRACE_SYS_MAX","","",103,null],[13,"_POSIX_TRACE_USER_EVENT_MAX","","",103,null],[13,"_POSIX_TYPED_MEMORY_OBJECTS","","The implementation supports the Typed Memory Objects option.",103,null],[13,"_POSIX_VERSION","","Integer value indicating version of this standard…",103,null],[13,"_POSIX_V6_ILP32_OFF32","","The implementation provides a C-language compilation…",103,null],[13,"_POSIX_V6_ILP32_OFFBIG","","The implementation provides a C-language compilation…",103,null],[13,"_POSIX_V6_LP64_OFF64","","The implementation provides a C-language compilation…",103,null],[13,"_POSIX_V6_LPBIG_OFFBIG","","The implementation provides a C-language compilation…",103,null],[13,"_POSIX2_C_BIND","","The implementation supports the C-Language Binding option.",103,null],[13,"_POSIX2_C_DEV","","The implementation supports the C-Language Development…",103,null],[13,"_POSIX2_CHAR_TERM","","The implementation supports the Terminal Characteristics…",103,null],[13,"_POSIX2_FORT_DEV","","The implementation supports the FORTRAN Development…",103,null],[13,"_POSIX2_FORT_RUN","","The implementation supports the FORTRAN Runtime Utilities…",103,null],[13,"_POSIX2_LOCALEDEF","","The implementation supports the creation of locales by the…",103,null],[13,"_POSIX2_PBS","","The implementation supports the Batch Environment Services…",103,null],[13,"_POSIX2_PBS_ACCOUNTING","","The implementation supports the Batch Accounting option.",103,null],[13,"_POSIX2_PBS_CHECKPOINT","","The implementation supports the Batch Checkpoint/Restart…",103,null],[13,"_POSIX2_PBS_LOCATE","","The implementation supports the Locate Batch Job Request…",103,null],[13,"_POSIX2_PBS_MESSAGE","","The implementation supports the Batch Job Message Request…",103,null],[13,"_POSIX2_PBS_TRACK","","The implementation supports the Track Batch Job Request…",103,null],[13,"_POSIX2_SW_DEV","","The implementation supports the Software Development…",103,null],[13,"_POSIX2_UPE","","The implementation supports the User Portability Utilities…",103,null],[13,"_POSIX2_VERSION","","Integer value indicating version of the Shell and…",103,null],[13,"PAGE_SIZE","","The size of a system page in bytes.",103,null],[13,"PTHREAD_DESTRUCTOR_ITERATIONS","","",103,null],[13,"PTHREAD_KEYS_MAX","","",103,null],[13,"PTHREAD_STACK_MIN","","",103,null],[13,"PTHREAD_THREADS_MAX","","",103,null],[13,"RE_DUP_MAX","","",103,null],[13,"RTSIG_MAX","","",103,null],[13,"SEM_NSEMS_MAX","","",103,null],[13,"SEM_VALUE_MAX","","",103,null],[13,"SIGQUEUE_MAX","","",103,null],[13,"STREAM_MAX","","",103,null],[13,"SYMLOOP_MAX","","",103,null],[13,"TIMER_MAX","","",103,null],[13,"TTY_NAME_MAX","","",103,null],[13,"TZNAME_MAX","","",103,null],[13,"_XOPEN_CRYPT","","The implementation supports the X/Open Encryption Option…",103,null],[13,"_XOPEN_ENH_I18N","","The implementation supports the Issue 4, Version 2…",103,null],[13,"_XOPEN_LEGACY","","",103,null],[13,"_XOPEN_REALTIME","","The implementation supports the X/Open Realtime Option…",103,null],[13,"_XOPEN_REALTIME_THREADS","","The implementation supports the X/Open Realtime Threads…",103,null],[13,"_XOPEN_SHM","","The implementation supports the Issue 4, Version 2 Shared…",103,null],[13,"_XOPEN_STREAMS","","The implementation supports the XSI STREAMS Option Group.",103,null],[13,"_XOPEN_UNIX","","The implementation supports the XSI option",103,null],[13,"_XOPEN_VERSION","","Integer value indicating version of the X/Open Portability…",103,null],[5,"fork","","Create a new child process duplicating the parent process…",null,[[],[["forkresult"],["result",["forkresult"]]]]],[5,"getpid","","Get the pid of this process (see getpid(2)).",null,[[],["pid"]]],[5,"getppid","","Get the pid of this processes' parent (see getpid(2)).",null,[[],["pid"]]],[5,"setpgid","","Set a process group ID (see setpgid(2)).",null,[[["pid"]],["result"]]],[5,"getpgid","","",null,[[["option",["pid"]],["pid"]],[["pid"],["result",["pid"]]]]],[5,"setsid","","Create new session and set process group id (see setsid(2)).",null,[[],[["pid"],["result",["pid"]]]]],[5,"getsid","","Get the process group ID of a session leader getsid(2).",null,[[["option",["pid"]],["pid"]],[["pid"],["result",["pid"]]]]],[5,"tcgetpgrp","","Get the terminal foreground process group (see…",null,[[["c_int"]],[["pid"],["result",["pid"]]]]],[5,"tcsetpgrp","","Set the terminal foreground process group (see…",null,[[["c_int"],["pid"]],["result"]]],[5,"getpgrp","","Get the group id of the calling process (see getpgrp(3)).",null,[[],["pid"]]],[5,"dup","","Create a copy of the specified file descriptor (see dup(2)).",null,[[["rawfd"]],[["result",["rawfd"]],["rawfd"]]]],[5,"dup2","","Create a copy of the specified file descriptor using the…",null,[[["rawfd"]],[["result",["rawfd"]],["rawfd"]]]],[5,"dup3","","Create a new copy of the specified file descriptor using…",null,[[["rawfd"],["oflag"]],[["result",["rawfd"]],["rawfd"]]]],[5,"chdir","","Change the current working directory of the calling…",null,[[["p"]],["result"]]],[5,"fchdir","","Change the current working directory of the process to the…",null,[[["rawfd"]],["result"]]],[5,"mkdir","","Creates new directory `path` with access rights `mode`.…",null,[[["mode"],["p"]],["result"]]],[5,"mkfifo","","Creates new fifo special file (named pipe) with path…",null,[[["mode"],["p"]],["result"]]],[5,"symlinkat","","Creates a symbolic link at `path2` which points to `path1`.",null,[[["rawfd"],["option",["rawfd"]],["p1"],["p2"]],["result"]]],[5,"getcwd","","Returns the current directory as a `PathBuf`",null,[[],[["pathbuf"],["result",["pathbuf"]]]]],[5,"chown","","Change the ownership of the file at `path` to be owned by…",null,[[["gid"],["option",["gid"]],["option",["uid"]],["uid"],["p"]],["result"]]],[5,"fchownat","","Change the ownership of the file at `path` to be owned by…",null,[[["gid"],["fchownatflags"],["option",["rawfd"]],["p"],["option",["gid"]],["rawfd"],["option",["uid"]],["uid"]],["result"]]],[5,"execv","","Replace the current process image with a new one (see…",null,[[["cstring"]],[["result",["void"]],["void"]]]],[5,"execve","","Replace the current process image with a new one (see…",null,[[["cstring"]],[["result",["void"]],["void"]]]],[5,"execvp","","Replace the current process image with a new one and…",null,[[["cstring"]],[["result",["void"]],["void"]]]],[5,"daemon","","Daemonize this process by detaching from the controlling…",null,[[["bool"]],["result"]]],[5,"sethostname","","Set the system host name (see sethostname(2)).",null,[[["osstr"],["asref",["osstr"]]],["result"]]],[5,"gethostname","","Get the host name and store it in the provided buffer,…",null,[[],[["result",["cstr"]],["cstr"]]]],[5,"close","","Close a raw file descriptor",null,[[["rawfd"]],["result"]]],[5,"read","","Read from a raw file descriptor.",null,[[["rawfd"]],[["result",["usize"]],["usize"]]]],[5,"write","","Write to a raw file descriptor.",null,[[["rawfd"]],[["result",["usize"]],["usize"]]]],[5,"lseek","","Move the read/write file offset.",null,[[["off_t"],["rawfd"],["whence"]],[["result",["off_t"]],["off_t"]]]],[5,"pipe","","Create an interprocess channel.",null,[[],["result"]]],[5,"pipe2","","Like `pipe`, but allows setting certain file descriptor…",null,[[["oflag"]],["result"]]],[5,"truncate","","Truncate a file to a specified length",null,[[["off_t"],["p"]],["result"]]],[5,"ftruncate","","Truncate a file to a specified length",null,[[["off_t"],["rawfd"]],["result"]]],[5,"isatty","","",null,[[["rawfd"]],[["bool"],["result",["bool"]]]]],[5,"unlink","","Remove a directory entry",null,[[["p"]],["result"]]],[5,"unlinkat","","Remove a directory entry",null,[[["unlinkatflags"],["rawfd"],["option",["rawfd"]],["p"]],["result"]]],[5,"chroot","","",null,[[["p"]],["result"]]],[5,"fsync","","Synchronize changes to a file",null,[[["rawfd"]],["result"]]],[5,"getuid","","Get a real user ID",null,[[],["uid"]]],[5,"geteuid","","Get the effective user ID",null,[[],["uid"]]],[5,"getgid","","Get the real group ID",null,[[],["gid"]]],[5,"getegid","","Get the effective group ID",null,[[],["gid"]]],[5,"seteuid","","Set the effective user ID",null,[[["uid"]],["result"]]],[5,"setegid","","Set the effective group ID",null,[[["gid"]],["result"]]],[5,"setuid","","Set the user ID",null,[[["uid"]],["result"]]],[5,"setgid","","Set the group ID",null,[[["gid"]],["result"]]],[5,"pause","","Suspend the thread until a signal is received.",null,[[]]],[5,"sleep","","Suspend execution for an interval of time",null,[[["c_uint"]],["c_uint"]]],[5,"mkstemp","","Creates a regular file which persists even after process…",null,[[["p"]],["result"]]],[5,"fpathconf","","Like `pathconf`, but works with file descriptors instead…",null,[[["pathconfvar"],["rawfd"]],[["result",["option"]],["option",["c_long"]]]]],[5,"pathconf","","Get path-dependent configurable system variables (see…",null,[[["pathconfvar"],["p"]],[["result",["option"]],["option",["c_long"]]]]],[5,"sysconf","","Get configurable system variables (see sysconf(3))",null,[[["sysconfvar"]],[["result",["option"]],["option",["c_long"]]]]],[5,"access","","Checks the file named by `path` for accessibility…",null,[[["accessflags"],["p"]],["result"]]],[0,"alarm","","Alarm signal scheduling.",null,null],[5,"set","nix::unistd::alarm","Schedule an alarm signal.",null,[[["c_uint"]],[["option",["c_uint"]],["c_uint"]]]],[5,"cancel","","Cancel an previously set alarm signal.",null,[[],[["option",["c_uint"]],["c_uint"]]]],[0,"acct","nix::unistd","",null,null],[5,"enable","nix::unistd::acct","Enable process accounting",null,[[["p"]],["result"]]],[5,"disable","","Disable process accounting",null,[[],["result"]]],[17,"ROOT","nix::unistd","Constant for UID = 0",null,null],[11,"from_raw","","Creates `Uid` from raw `uid_t`.",104,[[["uid_t"]],["self"]]],[11,"current","","Returns Uid of calling process. This is practically a more…",104,[[],["self"]]],[11,"effective","","Returns effective Uid of calling process. This is…",104,[[],["self"]]],[11,"is_root","","Returns true if the `Uid` represents privileged user -…",104,[[["self"]],["bool"]]],[11,"as_raw","","Get the raw `uid_t` wrapped by `self`.",104,[[["self"]],["uid_t"]]],[11,"from_raw","","Creates `Gid` from raw `gid_t`.",105,[[["gid_t"]],["self"]]],[11,"current","","Returns Gid of calling process. This is practically a more…",105,[[],["self"]]],[11,"effective","","Returns effective Gid of calling process. This is…",105,[[],["self"]]],[11,"as_raw","","Get the raw `gid_t` wrapped by `self`.",105,[[["self"]],["gid_t"]]],[11,"from_raw","","Creates `Pid` from raw `pid_t`.",106,[[["pid_t"]],["self"]]],[11,"this","","Returns PID of calling process",106,[[],["self"]]],[11,"parent","","Returns PID of parent of calling process",106,[[],["self"]]],[11,"as_raw","","Get the raw `pid_t` wrapped by `self`.",106,[[["self"]],["pid_t"]]],[11,"is_child","","Return `true` if this is the child process of the `fork()`",98,[[["self"]],["bool"]]],[11,"is_parent","","Returns `true` if this is the parent process of the `fork()`",98,[[["self"]],["bool"]]],[18,"F_OK","","Test for existence of file.",107,null],[18,"R_OK","","Test for read permission.",107,null],[18,"W_OK","","Test for write permission.",107,null],[18,"X_OK","","Test for execute (search) permission.",107,null],[11,"empty","","Returns an empty set of flags",107,[[],["accessflags"]]],[11,"all","","Returns the set containing all flags.",107,[[],["accessflags"]]],[11,"bits","","Returns the raw value of the flags currently stored.",107,[[["self"]],["c_int"]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",107,[[["c_int"]],[["option",["accessflags"]],["accessflags"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",107,[[["c_int"]],["accessflags"]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",107,[[["c_int"]],["accessflags"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",107,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",107,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",107,[[["accessflags"],["self"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",107,[[["accessflags"],["self"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",107,[[["self"],["accessflags"]]]],[11,"remove","","Removes the specified flags in-place.",107,[[["self"],["accessflags"]]]],[11,"toggle","","Toggles the specified flags in-place.",107,[[["self"],["accessflags"]]]],[11,"set","","Inserts or removes the specified flags depending on the…",107,[[["self"],["accessflags"],["bool"]]]],[6,"Result","nix","Nix Result Type",null,null],[8,"NixPath","","",null,null],[10,"len","","",108,[[["self"]],["usize"]]],[10,"with_nix_path","","",108,[[["self"],["f"]],["result"]]],[11,"as_errno","","Convert this `Error` to an `Errno`.",0,[[["self"]],[["option",["errno"]],["errno"]]]],[11,"from_errno","","Create a nix Error from a given errno",0,[[["errno"]],["error"]]],[11,"last","","Get the current errno and convert it to a nix Error",0,[[],["error"]]],[11,"invalid_argument","","Create a new invalid argument error (`EINVAL`)",0,[[],["error"]]],[14,"request_code_none","","Generate an ioctl request code for a command that passes…",null,null],[14,"request_code_write_int","","Generate an ioctl request code for a command that passes…",null,null],[14,"request_code_read","","Generate an ioctl request code for a command that reads.",null,null],[14,"request_code_write","","Generate an ioctl request code for a command that writes.",null,null],[14,"request_code_readwrite","","Generate an ioctl request code for a command that reads…",null,null],[14,"ioctl_none","","Generates a wrapper function for an ioctl that passes no…",null,null],[14,"ioctl_none_bad","","Generates a wrapper function for a \"bad\" ioctl that passes…",null,null],[14,"ioctl_read","","Generates a wrapper function for an ioctl that reads data…",null,null],[14,"ioctl_read_bad","","Generates a wrapper function for a \"bad\" ioctl that reads…",null,null],[14,"ioctl_write_ptr","","Generates a wrapper function for an ioctl that writes data…",null,null],[14,"ioctl_write_ptr_bad","","Generates a wrapper function for a \"bad\" ioctl that writes…",null,null],[14,"ioctl_write_int","","Generates a wrapper function for a ioctl that writes an…",null,null],[14,"ioctl_write_int_bad","","Generates a wrapper function for a \"bad\" ioctl that writes…",null,null],[14,"ioctl_readwrite","","Generates a wrapper function for an ioctl that reads and…",null,null],[14,"ioctl_readwrite_bad","","Generates a wrapper function for a \"bad\" ioctl that reads…",null,null],[14,"ioctl_read_buf","","Generates a wrapper function for an ioctl that reads an…",null,null],[14,"ioctl_write_buf","","Generates a wrapper function for an ioctl that writes an…",null,null],[14,"ioctl_readwrite_buf","","Generates a wrapper function for an ioctl that reads and…",null,null],[14,"cmsg_space","","Create a buffer large enough for storing some control…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","nix::dir","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[],["u"]]],[11,"into_iter","","",109,[[],["i"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","nix::errno","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","nix::fcntl","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","nix::ifaddrs","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[],["u"]]],[11,"into_iter","","",110,[[],["i"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"from","nix::net::if_","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","nix::poll","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","nix::pty","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,[[["self"],["t"]]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"from","nix::sys::aio","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","nix::sys::event","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","nix::sys::mman","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","nix::sys::ptrace","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","nix::sys::select","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","nix::sys::signal","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[],["u"]]],[11,"into_iter","","",112,[[],["i"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,[[["self"],["t"]]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"to_string","","",35,[[["self"]],["string"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","nix::sys::socket","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"to_string","","",50,[[["self"]],["string"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"to_string","","",51,[[["self"]],["string"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"to_string","","",52,[[["self"]],["string"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"to_string","","",53,[[["self"]],["string"]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,[[["self"],["t"]]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[],["u"]]],[11,"into_iter","","",113,[[],["i"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,[[["self"],["t"]]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"to_string","","",56,[[["self"]],["string"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"to_string","","",57,[[["self"]],["string"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"to_string","","",58,[[["self"]],["string"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","nix::sys::socket::sockopt","",114,[[["t"]],["t"]]],[11,"into","","",114,[[],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,[[["self"],["t"]]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,[[["self"],["t"]]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,[[["self"],["t"]]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,[[["self"],["t"]]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,[[["self"],["t"]]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,[[["self"],["t"]]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,[[["self"],["t"]]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,[[["self"],["t"]]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,[[["self"],["t"]]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,[[["self"],["t"]]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,[[["self"],["t"]]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,[[["self"],["t"]]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,[[["self"],["t"]]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,[[["self"],["t"]]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,[[["self"],["t"]]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,[[["self"],["t"]]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,[[["self"],["t"]]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[],["u"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,[[["self"],["t"]]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[],["u"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,[[["self"],["t"]]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[],["u"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,[[["self"],["t"]]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[],["u"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,[[["self"],["t"]]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[],["u"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,[[["self"],["t"]]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[],["u"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,[[["self"],["t"]]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[],["u"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,[[["self"],["t"]]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[],["u"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,[[["self"],["t"]]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[],["u"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,[[["self"],["t"]]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"from","nix::sys::stat","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"from","nix::sys::statfs","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"from","nix::sys::statvfs","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,[[["self"],["t"]]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,[[["self"],["t"]]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"from","nix::sys::termios","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,[[["self"],["t"]]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,[[["self"],["t"]]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,[[["self"],["t"]]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,[[["self"],["t"]]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,[[["self"],["t"]]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,[[["self"],["t"]]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,[[["self"],["t"]]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,[[["self"],["t"]]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,[[["self"],["t"]]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,[[["self"],["t"]]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"from","nix::sys::time","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,[[["self"],["t"]]]],[11,"to_string","","",92,[[["self"]],["string"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,[[["self"],["t"]]]],[11,"to_string","","",93,[[["self"]],["string"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"from","nix::sys::uio","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,[[["self"],["t"]]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"from","nix::sys::utsname","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,[[["self"],["t"]]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"from","nix::sys::wait","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,[[["self"],["t"]]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,[[["self"],["t"]]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"from","nix::unistd","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,[[["self"],["t"]]]],[11,"to_string","","",104,[[["self"]],["string"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,[[["self"],["t"]]]],[11,"to_string","","",105,[[["self"]],["string"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,[[["self"],["t"]]]],[11,"to_string","","",106,[[["self"]],["string"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,[[["self"],["t"]]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,[[["self"],["t"]]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,[[["self"],["t"]]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,[[["self"],["t"]]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,[[["self"],["t"]]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,[[["self"],["t"]]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,[[["self"],["t"]]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"hash","nix::sys::socket","",44,[[["self"],["__h"]]]],[11,"hash","","",45,[[["self"],["__h"]]]],[11,"hash","","",49,[[["self"],["h"]]]],[11,"hash","","",43,[[["self"],["__h"]]]],[11,"hash","nix::pty","",15,[[["self"],["__h"]]]],[11,"hash","nix::sys::socket","",46,[[["self"],["__h"]]]],[11,"hash","","",48,[[["self"],["h"]]]],[11,"hash","","",47,[[["self"],["__h"]]]],[11,"hash","nix::sys::stat","",73,[[["self"],["__h"]]]],[11,"fmt","nix::sys::socket","",49,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",43,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",47,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",46,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","nix::sys::stat","",73,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","nix::sys::socket","",45,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","nix::pty","",15,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","nix::sys::socket","",44,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",48,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"eq","","",47,[[["self"],["sockaddr_in6"]],["bool"]]],[11,"ne","","",47,[[["self"],["sockaddr_in6"]],["bool"]]],[11,"eq","","",43,[[["self"],["cmsghdr"]],["bool"]]],[11,"ne","","",43,[[["self"],["cmsghdr"]],["bool"]]],[11,"eq","nix::pty","",15,[[["self"],["winsize"]],["bool"]]],[11,"ne","","",15,[[["self"],["winsize"]],["bool"]]],[11,"eq","nix::sys::socket","",44,[[["self"],["msghdr"]],["bool"]]],[11,"ne","","",44,[[["self"],["msghdr"]],["bool"]]],[11,"eq","nix::sys::stat","",73,[[["self"],["stat"]],["bool"]]],[11,"ne","","",73,[[["self"],["stat"]],["bool"]]],[11,"eq","nix::sys::socket","",48,[[["self"],["sockaddr_storage"]],["bool"]]],[11,"eq","","",46,[[["sockaddr_in"],["self"]],["bool"]]],[11,"ne","","",46,[[["sockaddr_in"],["self"]],["bool"]]],[11,"eq","","",49,[[["sockaddr_un"],["self"]],["bool"]]],[11,"eq","","",45,[[["sockaddr"],["self"]],["bool"]]],[11,"ne","","",45,[[["sockaddr"],["self"]],["bool"]]],[11,"clone","","",46,[[["self"]],["sockaddr_in"]]],[11,"clone","","",47,[[["self"]],["sockaddr_in6"]]],[11,"clone","","",45,[[["self"]],["sockaddr"]]],[11,"clone","nix::sys::stat","",73,[[["self"]],["stat"]]],[11,"clone","nix::pty","",15,[[["self"]],["winsize"]]],[11,"clone","nix::sys::socket","",49,[[["self"]],["sockaddr_un"]]],[11,"clone","","",43,[[["self"]],["cmsghdr"]]],[11,"clone","","",44,[[["self"]],["msghdr"]]],[11,"clone","","",48,[[["self"]],["sockaddr_storage"]]],[11,"as_bytes_mut","","",72,[[["self"]]]],[11,"get","nix::sys::socket::sockopt","",114,[[["self"],["rawfd"]],[["bool"],["result",["bool"]]]]],[11,"get","","",115,[[["self"],["rawfd"]],[["bool"],["result",["bool"]]]]],[11,"get","","",116,[[["self"],["rawfd"]],[["bool"],["result",["bool"]]]]],[11,"get","","",117,[[["self"],["rawfd"]],[["linger"],["result",["linger"]]]]],[11,"get","","",122,[[["self"],["rawfd"]],[["u8"],["result",["u8"]]]]],[11,"get","","",123,[[["self"],["rawfd"]],[["bool"],["result",["bool"]]]]],[11,"get","","",124,[[["self"],["rawfd"]],[["result",["timeval"]],["timeval"]]]],[11,"get","","",125,[[["self"],["rawfd"]],[["result",["timeval"]],["timeval"]]]],[11,"get","","",126,[[["self"],["rawfd"]],[["bool"],["result",["bool"]]]]],[11,"get","","",127,[[["self"],["rawfd"]],[["bool"],["result",["bool"]]]]],[11,"get","","",128,[[["self"],["rawfd"]],[["i32"],["result",["i32"]]]]],[11,"get","","",129,[[["self"],["rawfd"]],[["bool"],["result",["bool"]]]]],[11,"get","","",130,[[["self"],["rawfd"]],[["u32"],["result",["u32"]]]]],[11,"get","","",131,[[["self"],["rawfd"]],[["result",["usize"]],["usize"]]]],[11,"get","","",132,[[["self"],["rawfd"]],[["result",["usize"]],["usize"]]]],[11,"get","","",133,[[["self"],["rawfd"]],[["result",["socktype"]],["socktype"]]]],[11,"get","","",134,[[["self"],["rawfd"]],[["bool"],["result",["bool"]]]]],[11,"get","","",135,[[["self"],["rawfd"]],[["bool"],["result",["bool"]]]]],[11,"get","","",136,[[["self"],["rawfd"]],[["bool"],["result",["bool"]]]]],[11,"get","","",137,[[["self"],["rawfd"]],[["bool"],["result",["bool"]]]]],[11,"get","","",138,[[["self"],["rawfd"]],[["bool"],["result",["bool"]]]]],[11,"get","","",139,[[["self"],["rawfd"]],[["bool"],["result",["bool"]]]]],[11,"set","","",114,[[["bool"],["self"],["rawfd"]],["result"]]],[11,"set","","",115,[[["bool"],["self"],["rawfd"]],["result"]]],[11,"set","","",116,[[["bool"],["self"],["rawfd"]],["result"]]],[11,"set","","",117,[[["linger"],["self"],["rawfd"]],["result"]]],[11,"set","","",118,[[["ipmembershiprequest"],["self"],["rawfd"]],["result"]]],[11,"set","","",119,[[["ipmembershiprequest"],["self"],["rawfd"]],["result"]]],[11,"set","","",120,[[["ipv6membershiprequest"],["self"],["rawfd"]],["result"]]],[11,"set","","",121,[[["ipv6membershiprequest"],["self"],["rawfd"]],["result"]]],[11,"set","","",122,[[["u8"],["self"],["rawfd"]],["result"]]],[11,"set","","",123,[[["bool"],["self"],["rawfd"]],["result"]]],[11,"set","","",124,[[["timeval"],["self"],["rawfd"]],["result"]]],[11,"set","","",125,[[["timeval"],["self"],["rawfd"]],["result"]]],[11,"set","","",126,[[["bool"],["self"],["rawfd"]],["result"]]],[11,"set","","",127,[[["bool"],["self"],["rawfd"]],["result"]]],[11,"set","","",129,[[["bool"],["self"],["rawfd"]],["result"]]],[11,"set","","",130,[[["u32"],["self"],["rawfd"]],["result"]]],[11,"set","","",131,[[["usize"],["self"],["rawfd"]],["result"]]],[11,"set","","",132,[[["usize"],["self"],["rawfd"]],["result"]]],[11,"set","","",135,[[["bool"],["self"],["rawfd"]],["result"]]],[11,"set","","",136,[[["bool"],["self"],["rawfd"]],["result"]]],[11,"set","","",137,[[["bool"],["self"],["rawfd"]],["result"]]],[11,"set","","",138,[[["bool"],["self"],["rawfd"]],["result"]]],[11,"set","","",139,[[["bool"],["self"],["rawfd"]],["result"]]],[11,"seconds","nix::sys::time","",92,[[["i64"]],["timespec"]]],[11,"milliseconds","","",92,[[["i64"]],["timespec"]]],[11,"microseconds","","Makes a new `TimeSpec` with given number of microseconds.",92,[[["i64"]],["timespec"]]],[11,"nanoseconds","","Makes a new `TimeSpec` with given number of nanoseconds.",92,[[["i64"]],["timespec"]]],[11,"num_seconds","","",92,[[["self"]],["i64"]]],[11,"num_milliseconds","","",92,[[["self"]],["i64"]]],[11,"num_microseconds","","",92,[[["self"]],["i64"]]],[11,"num_nanoseconds","","",92,[[["self"]],["i64"]]],[11,"seconds","","",93,[[["i64"]],["timeval"]]],[11,"milliseconds","","",93,[[["i64"]],["timeval"]]],[11,"microseconds","","Makes a new `TimeVal` with given number of microseconds.",93,[[["i64"]],["timeval"]]],[11,"nanoseconds","","Makes a new `TimeVal` with given number of nanoseconds.…",93,[[["i64"]],["timeval"]]],[11,"num_seconds","","",93,[[["self"]],["i64"]]],[11,"num_milliseconds","","",93,[[["self"]],["i64"]]],[11,"num_microseconds","","",93,[[["self"]],["i64"]]],[11,"num_nanoseconds","","",93,[[["self"]],["i64"]]],[11,"drop","nix::dir","",2,[[["self"]]]],[11,"drop","","",109,[[["self"]]]],[11,"drop","nix::ifaddrs","",110,[[["self"]]]],[11,"drop","nix::pty","",111,[[["self"]]]],[11,"drop","nix::sys::aio","If the `AioCb` has no remaining state in the kernel, just…",23,[[["self"]]]],[11,"as_ref","nix::sys::signal","",35,[[["self"]],["str"]]],[11,"as_ref","","",41,[[["self"]],["sigset_t"]]],[11,"as_ref","nix::sys::time","",92,[[["self"]],["timespec"]]],[11,"as_ref","","",93,[[["self"]],["timeval"]]],[11,"from","nix::sys::signal","",39,[[["sigevent"]],["self"]]],[11,"from","nix::sys::termios","",81,[[["termios"]],["self"]]],[11,"from","","",82,[[["speed_t"]],["baudrate"]]],[11,"from","nix::sys::time","",93,[[["timeval"]],["self"]]],[11,"from","nix","",140,[[["pid"]],["self"]]],[11,"from","","",0,[[["errno"]],["error"]]],[11,"from","","",0,[[["fromutf8error"]],["error"]]],[11,"extend","nix::fcntl","",8,[[["intoiterator"],["self"]]]],[11,"extend","","",9,[[["self"],["intoiterator"]]]],[11,"extend","","",10,[[["self"],["intoiterator"]]]],[11,"extend","nix::net::if_","",12,[[["intoiterator"],["self"]]]],[11,"extend","nix::poll","",14,[[["intoiterator"],["self"]]]],[11,"extend","nix::sys::event","",25,[[["self"],["intoiterator"]]]],[11,"extend","","",26,[[["self"],["intoiterator"]]]],[11,"extend","nix::sys::mman","",29,[[["self"],["intoiterator"]]]],[11,"extend","","",30,[[["self"],["intoiterator"]]]],[11,"extend","","",31,[[["self"],["intoiterator"]]]],[11,"extend","","",32,[[["intoiterator"],["self"]]]],[11,"extend","nix::sys::signal","",40,[[["self"],["intoiterator"]]]],[11,"extend","nix::sys::socket","",68,[[["intoiterator"],["self"]]]],[11,"extend","","",69,[[["self"],["intoiterator"]]]],[11,"extend","nix::sys::stat","",76,[[["self"],["intoiterator"]]]],[11,"extend","","",77,[[["self"],["intoiterator"]]]],[11,"extend","nix::sys::statvfs","",79,[[["intoiterator"],["self"]]]],[11,"extend","nix::sys::termios","",87,[[["self"],["intoiterator"]]]],[11,"extend","","",88,[[["intoiterator"],["self"]]]],[11,"extend","","",89,[[["self"],["intoiterator"]]]],[11,"extend","","",90,[[["intoiterator"],["self"]]]],[11,"extend","nix::sys::wait","",97,[[["intoiterator"],["self"]]]],[11,"extend","nix::unistd","",107,[[["self"],["intoiterator"]]]],[11,"next","nix::dir","",109,[[["self"]],["option"]]],[11,"next","nix::ifaddrs","",110,[[["self"]],["option"]]],[11,"next","nix::sys::signal","",112,[[["self"]],[["option",["signal"]],["signal"]]]],[11,"next","nix::sys::socket","",113,[[["self"]],[["option",["controlmessageowned"]],["controlmessageowned"]]]],[11,"clone","nix::dir","",2,[[["self"]],["dir"]]],[11,"clone","","",3,[[["self"]],["entry"]]],[11,"clone","","",1,[[["self"]],["type"]]],[11,"clone","nix::errno","",4,[[["self"]],["errno"]]],[11,"clone","nix::fcntl","",8,[[["self"]],["atflags"]]],[11,"clone","","",9,[[["self"]],["oflag"]]],[11,"clone","","",10,[[["self"]],["fdflag"]]],[11,"clone","","",7,[[["self"]],["flockarg"]]],[11,"clone","nix::ifaddrs","",11,[[["self"]],["interfaceaddress"]]],[11,"clone","nix::net::if_","",12,[[["self"]],["interfaceflags"]]],[11,"clone","nix::poll","",13,[[["self"]],["pollfd"]]],[11,"clone","","",14,[[["self"]],["pollflags"]]],[11,"clone","nix::pty","",16,[[["self"]],["openptyresult"]]],[11,"clone","","",17,[[["self"]],["forkptyresult"]]],[11,"clone","","",111,[[["self"]],["ptymaster"]]],[11,"clone","nix::sys::aio","",18,[[["self"]],["aiofsyncmode"]]],[11,"clone","","",19,[[["self"]],["lioopcode"]]],[11,"clone","","",20,[[["self"]],["liomode"]]],[11,"clone","","",21,[[["self"]],["aiocancelstat"]]],[11,"clone","nix::sys::event","",27,[[["self"]],["kevent"]]],[11,"clone","","",24,[[["self"]],["eventfilter"]]],[11,"clone","","",25,[[["self"]],["eventflag"]]],[11,"clone","","",26,[[["self"]],["filterflag"]]],[11,"clone","nix::sys::mman","",29,[[["self"]],["protflags"]]],[11,"clone","","",30,[[["self"]],["mapflags"]]],[11,"clone","","",28,[[["self"]],["mmapadvise"]]],[11,"clone","","",31,[[["self"]],["msflags"]]],[11,"clone","","",32,[[["self"]],["mlockallflags"]]],[11,"clone","nix::sys::ptrace","",33,[[["self"]],["request"]]],[11,"clone","nix::sys::select","",34,[[["self"]],["fdset"]]],[11,"clone","nix::sys::signal","",35,[[["self"]],["signal"]]],[11,"clone","","",112,[[["self"]],["signaliterator"]]],[11,"clone","","",40,[[["self"]],["saflags"]]],[11,"clone","","",36,[[["self"]],["sigmaskhow"]]],[11,"clone","","",41,[[["self"]],["sigset"]]],[11,"clone","","",37,[[["self"]],["sighandler"]]],[11,"clone","","",42,[[["self"]],["sigaction"]]],[11,"clone","","",38,[[["self"]],["sigevnotify"]]],[11,"clone","","",39,[[["self"]],["sigevent"]]],[11,"clone","nix::sys::socket","",55,[[["self"]],["addressfamily"]]],[11,"clone","","",57,[[["self"]],["inetaddr"]]],[11,"clone","","",58,[[["self"]],["ipaddr"]]],[11,"clone","","",51,[[["self"]],["ipv4addr"]]],[11,"clone","","",52,[[["self"]],["ipv6addr"]]],[11,"clone","","",50,[[["self"]],["unixaddr"]]],[11,"clone","","",56,[[["self"]],["sockaddr"]]],[11,"clone","","",53,[[["self"]],["linkaddr"]]],[11,"clone","nix::sys::socket::sockopt","",114,[[["self"]],["reuseaddr"]]],[11,"clone","","",115,[[["self"]],["reuseport"]]],[11,"clone","","",116,[[["self"]],["tcpnodelay"]]],[11,"clone","","",117,[[["self"]],["linger"]]],[11,"clone","","",118,[[["self"]],["ipaddmembership"]]],[11,"clone","","",119,[[["self"]],["ipdropmembership"]]],[11,"clone","","",120,[[["self"]],["ipv6addmembership"]]],[11,"clone","","",121,[[["self"]],["ipv6dropmembership"]]],[11,"clone","","",122,[[["self"]],["ipmulticastttl"]]],[11,"clone","","",123,[[["self"]],["ipmulticastloop"]]],[11,"clone","","",124,[[["self"]],["receivetimeout"]]],[11,"clone","","",125,[[["self"]],["sendtimeout"]]],[11,"clone","","",126,[[["self"]],["broadcast"]]],[11,"clone","","",127,[[["self"]],["oobinline"]]],[11,"clone","","",128,[[["self"]],["socketerror"]]],[11,"clone","","",129,[[["self"]],["keepalive"]]],[11,"clone","","",130,[[["self"]],["tcpkeepalive"]]],[11,"clone","","",131,[[["self"]],["rcvbuf"]]],[11,"clone","","",132,[[["self"]],["sndbuf"]]],[11,"clone","","",133,[[["self"]],["socktype"]]],[11,"clone","","",134,[[["self"]],["acceptconn"]]],[11,"clone","","",135,[[["self"]],["receivetimestamp"]]],[11,"clone","","",136,[[["self"]],["ipv4packetinfo"]]],[11,"clone","","",137,[[["self"]],["ipv6recvpacketinfo"]]],[11,"clone","","",138,[[["self"]],["ipv4recvif"]]],[11,"clone","","",139,[[["self"]],["ipv4recvdstaddr"]]],[11,"clone","nix::sys::socket","",59,[[["self"]],["socktype"]]],[11,"clone","","",60,[[["self"]],["sockprotocol"]]],[11,"clone","","",68,[[["self"]],["sockflag"]]],[11,"clone","","",69,[[["self"]],["msgflags"]]],[11,"clone","","",70,[[["self"]],["ipmembershiprequest"]]],[11,"clone","","",71,[[["self"]],["ipv6membershiprequest"]]],[11,"clone","","",72,[[["self"]],["cmsgspace"]]],[11,"clone","","",54,[[["self"]],["recvmsg"]]],[11,"clone","","",113,[[["self"]],["cmsgiterator"]]],[11,"clone","","",61,[[["self"]],["controlmessageowned"]]],[11,"clone","","",62,[[["self"]],["controlmessage"]]],[11,"clone","","",63,[[["self"]],["socklevel"]]],[11,"clone","","",64,[[["self"]],["shutdown"]]],[11,"clone","nix::sys::stat","",76,[[["self"]],["sflag"]]],[11,"clone","","",77,[[["self"]],["mode"]]],[11,"clone","","",74,[[["self"]],["fchmodatflags"]]],[11,"clone","","",75,[[["self"]],["utimensatflags"]]],[11,"clone","nix::sys::statfs","",78,[[["self"]],["statfs"]]],[11,"clone","nix::sys::statvfs","",79,[[["self"]],["fsflags"]]],[11,"clone","","",80,[[["self"]],["statvfs"]]],[11,"clone","nix::sys::termios","",81,[[["self"]],["termios"]]],[11,"clone","","",82,[[["self"]],["baudrate"]]],[11,"clone","","",83,[[["self"]],["setarg"]]],[11,"clone","","",84,[[["self"]],["flusharg"]]],[11,"clone","","",85,[[["self"]],["flowarg"]]],[11,"clone","","",86,[[["self"]],["specialcharacterindices"]]],[11,"clone","","",87,[[["self"]],["inputflags"]]],[11,"clone","","",88,[[["self"]],["outputflags"]]],[11,"clone","","",89,[[["self"]],["controlflags"]]],[11,"clone","","",90,[[["self"]],["localflags"]]],[11,"clone","nix::sys::time","",92,[[["self"]],["timespec"]]],[11,"clone","","",93,[[["self"]],["timeval"]]],[11,"clone","nix::sys::uio","",94,[[["self"]],["iovec"]]],[11,"clone","nix::sys::utsname","",95,[[["self"]],["utsname"]]],[11,"clone","nix::sys::wait","",97,[[["self"]],["waitpidflag"]]],[11,"clone","","",96,[[["self"]],["waitstatus"]]],[11,"clone","nix::unistd","",104,[[["self"]],["uid"]]],[11,"clone","","",105,[[["self"]],["gid"]]],[11,"clone","","",106,[[["self"]],["pid"]]],[11,"clone","","",98,[[["self"]],["forkresult"]]],[11,"clone","","",99,[[["self"]],["fchownatflags"]]],[11,"clone","","",100,[[["self"]],["whence"]]],[11,"clone","","",101,[[["self"]],["unlinkatflags"]]],[11,"clone","","",102,[[["self"]],["pathconfvar"]]],[11,"clone","","",103,[[["self"]],["sysconfvar"]]],[11,"clone","","",107,[[["self"]],["accessflags"]]],[11,"clone","nix","",0,[[["self"]],["error"]]],[11,"default","nix::sys::statvfs","",79,[[],["fsflags"]]],[11,"cmp","nix::fcntl","",8,[[["self"],["atflags"]],["ordering"]]],[11,"cmp","","",9,[[["self"],["oflag"]],["ordering"]]],[11,"cmp","","",10,[[["self"],["fdflag"]],["ordering"]]],[11,"cmp","nix::net::if_","",12,[[["self"],["interfaceflags"]],["ordering"]]],[11,"cmp","nix::poll","",14,[[["self"],["pollflags"]],["ordering"]]],[11,"cmp","nix::sys::aio","",18,[[["aiofsyncmode"],["self"]],["ordering"]]],[11,"cmp","","",19,[[["self"],["lioopcode"]],["ordering"]]],[11,"cmp","","",20,[[["liomode"],["self"]],["ordering"]]],[11,"cmp","nix::sys::event","",24,[[["self"],["eventfilter"]],["ordering"]]],[11,"cmp","","",25,[[["self"],["eventflag"]],["ordering"]]],[11,"cmp","","",26,[[["filterflag"],["self"]],["ordering"]]],[11,"cmp","nix::sys::mman","",29,[[["protflags"],["self"]],["ordering"]]],[11,"cmp","","",30,[[["self"],["mapflags"]],["ordering"]]],[11,"cmp","","",28,[[["self"],["mmapadvise"]],["ordering"]]],[11,"cmp","","",31,[[["self"],["msflags"]],["ordering"]]],[11,"cmp","","",32,[[["self"],["mlockallflags"]],["ordering"]]],[11,"cmp","nix::sys::ptrace","",33,[[["self"],["request"]],["ordering"]]],[11,"cmp","nix::sys::signal","",35,[[["signal"],["self"]],["ordering"]]],[11,"cmp","","",40,[[["saflags"],["self"]],["ordering"]]],[11,"cmp","","",36,[[["self"],["sigmaskhow"]],["ordering"]]],[11,"cmp","nix::sys::socket","",68,[[["self"],["sockflag"]],["ordering"]]],[11,"cmp","","",69,[[["self"],["msgflags"]],["ordering"]]],[11,"cmp","nix::sys::stat","",76,[[["sflag"],["self"]],["ordering"]]],[11,"cmp","","",77,[[["mode"],["self"]],["ordering"]]],[11,"cmp","nix::sys::statvfs","",79,[[["self"],["fsflags"]],["ordering"]]],[11,"cmp","nix::sys::termios","",82,[[["self"],["baudrate"]],["ordering"]]],[11,"cmp","","",83,[[["self"],["setarg"]],["ordering"]]],[11,"cmp","","",84,[[["self"],["flusharg"]],["ordering"]]],[11,"cmp","","",85,[[["self"],["flowarg"]],["ordering"]]],[11,"cmp","","",86,[[["specialcharacterindices"],["self"]],["ordering"]]],[11,"cmp","","",87,[[["inputflags"],["self"]],["ordering"]]],[11,"cmp","","",88,[[["outputflags"],["self"]],["ordering"]]],[11,"cmp","","",89,[[["self"],["controlflags"]],["ordering"]]],[11,"cmp","","",90,[[["localflags"],["self"]],["ordering"]]],[11,"cmp","nix::sys::time","",92,[[["timespec"],["self"]],["ordering"]]],[11,"cmp","","",93,[[["timeval"],["self"]],["ordering"]]],[11,"cmp","nix::sys::wait","",97,[[["self"],["waitpidflag"]],["ordering"]]],[11,"cmp","nix::unistd","",107,[[["self"],["accessflags"]],["ordering"]]],[11,"eq","nix::dir","",2,[[["dir"],["self"]],["bool"]]],[11,"ne","","",2,[[["dir"],["self"]],["bool"]]],[11,"eq","","",109,[[["self"],["iter"]],["bool"]]],[11,"ne","","",109,[[["self"],["iter"]],["bool"]]],[11,"eq","","",3,[[["self"],["entry"]],["bool"]]],[11,"ne","","",3,[[["self"],["entry"]],["bool"]]],[11,"eq","","",1,[[["self"],["type"]],["bool"]]],[11,"eq","nix::errno","",4,[[["self"],["errno"]],["bool"]]],[11,"eq","nix::fcntl","",8,[[["self"],["atflags"]],["bool"]]],[11,"ne","","",8,[[["self"],["atflags"]],["bool"]]],[11,"eq","","",9,[[["self"],["oflag"]],["bool"]]],[11,"ne","","",9,[[["self"],["oflag"]],["bool"]]],[11,"eq","","",10,[[["self"],["fdflag"]],["bool"]]],[11,"ne","","",10,[[["self"],["fdflag"]],["bool"]]],[11,"eq","","",6,[[["self"],["fcntlarg"]],["bool"]]],[11,"ne","","",6,[[["self"],["fcntlarg"]],["bool"]]],[11,"eq","","",7,[[["self"],["flockarg"]],["bool"]]],[11,"eq","nix::ifaddrs","",11,[[["self"],["interfaceaddress"]],["bool"]]],[11,"ne","","",11,[[["self"],["interfaceaddress"]],["bool"]]],[11,"eq","","",110,[[["self"],["interfaceaddressiterator"]],["bool"]]],[11,"ne","","",110,[[["self"],["interfaceaddressiterator"]],["bool"]]],[11,"eq","nix::net::if_","",12,[[["self"],["interfaceflags"]],["bool"]]],[11,"ne","","",12,[[["self"],["interfaceflags"]],["bool"]]],[11,"eq","nix::poll","",13,[[["self"],["pollfd"]],["bool"]]],[11,"ne","","",13,[[["self"],["pollfd"]],["bool"]]],[11,"eq","","",14,[[["self"],["pollflags"]],["bool"]]],[11,"ne","","",14,[[["self"],["pollflags"]],["bool"]]],[11,"eq","nix::pty","",16,[[["self"],["openptyresult"]],["bool"]]],[11,"ne","","",16,[[["self"],["openptyresult"]],["bool"]]],[11,"eq","","",111,[[["self"],["ptymaster"]],["bool"]]],[11,"ne","","",111,[[["self"],["ptymaster"]],["bool"]]],[11,"eq","nix::sys::aio","",18,[[["aiofsyncmode"],["self"]],["bool"]]],[11,"eq","","",19,[[["self"],["lioopcode"]],["bool"]]],[11,"eq","","",20,[[["liomode"],["self"]],["bool"]]],[11,"eq","","",21,[[["self"],["aiocancelstat"]],["bool"]]],[11,"eq","nix::sys::event","",27,[[["self"],["kevent"]],["bool"]]],[11,"ne","","",27,[[["self"],["kevent"]],["bool"]]],[11,"eq","","",24,[[["self"],["eventfilter"]],["bool"]]],[11,"eq","","",25,[[["self"],["eventflag"]],["bool"]]],[11,"ne","","",25,[[["self"],["eventflag"]],["bool"]]],[11,"eq","","",26,[[["filterflag"],["self"]],["bool"]]],[11,"ne","","",26,[[["filterflag"],["self"]],["bool"]]],[11,"eq","nix::sys::mman","",29,[[["protflags"],["self"]],["bool"]]],[11,"ne","","",29,[[["protflags"],["self"]],["bool"]]],[11,"eq","","",30,[[["self"],["mapflags"]],["bool"]]],[11,"ne","","",30,[[["self"],["mapflags"]],["bool"]]],[11,"eq","","",28,[[["self"],["mmapadvise"]],["bool"]]],[11,"eq","","",31,[[["self"],["msflags"]],["bool"]]],[11,"ne","","",31,[[["self"],["msflags"]],["bool"]]],[11,"eq","","",32,[[["self"],["mlockallflags"]],["bool"]]],[11,"ne","","",32,[[["self"],["mlockallflags"]],["bool"]]],[11,"eq","nix::sys::ptrace","",33,[[["self"],["request"]],["bool"]]],[11,"eq","nix::sys::select","",34,[[["fdset"],["self"]],["bool"]]],[11,"ne","","",34,[[["fdset"],["self"]],["bool"]]],[11,"eq","nix::sys::signal","",35,[[["signal"],["self"]],["bool"]]],[11,"eq","","",112,[[["self"],["signaliterator"]],["bool"]]],[11,"ne","","",112,[[["self"],["signaliterator"]],["bool"]]],[11,"eq","","",40,[[["saflags"],["self"]],["bool"]]],[11,"ne","","",40,[[["saflags"],["self"]],["bool"]]],[11,"eq","","",36,[[["self"],["sigmaskhow"]],["bool"]]],[11,"eq","","",41,[[["self"],["sigset"]],["bool"]]],[11,"ne","","",41,[[["self"],["sigset"]],["bool"]]],[11,"eq","","",37,[[["self"],["sighandler"]],["bool"]]],[11,"ne","","",37,[[["self"],["sighandler"]],["bool"]]],[11,"eq","","",42,[[["self"],["sigaction"]],["bool"]]],[11,"ne","","",42,[[["self"],["sigaction"]],["bool"]]],[11,"eq","","",38,[[["self"],["sigevnotify"]],["bool"]]],[11,"ne","","",38,[[["self"],["sigevnotify"]],["bool"]]],[11,"eq","","",39,[[["self"],["sigevent"]],["bool"]]],[11,"ne","","",39,[[["self"],["sigevent"]],["bool"]]],[11,"eq","nix::sys::socket","",55,[[["self"],["addressfamily"]],["bool"]]],[11,"eq","","",57,[[["inetaddr"],["self"]],["bool"]]],[11,"ne","","",57,[[["inetaddr"],["self"]],["bool"]]],[11,"eq","","",58,[[["ipaddr"],["self"]],["bool"]]],[11,"ne","","",58,[[["ipaddr"],["self"]],["bool"]]],[11,"eq","","",51,[[["ipv4addr"],["self"]],["bool"]]],[11,"ne","","",51,[[["ipv4addr"],["self"]],["bool"]]],[11,"eq","","",52,[[["ipv6addr"],["self"]],["bool"]]],[11,"ne","","",52,[[["ipv6addr"],["self"]],["bool"]]],[11,"eq","","",50,[[["self"],["unixaddr"]],["bool"]]],[11,"eq","","",56,[[["self"],["sockaddr"]],["bool"]]],[11,"ne","","",56,[[["self"],["sockaddr"]],["bool"]]],[11,"eq","","",53,[[["linkaddr"],["self"]],["bool"]]],[11,"ne","","",53,[[["linkaddr"],["self"]],["bool"]]],[11,"eq","nix::sys::socket::sockopt","",114,[[["self"],["reuseaddr"]],["bool"]]],[11,"eq","","",115,[[["reuseport"],["self"]],["bool"]]],[11,"eq","","",116,[[["self"],["tcpnodelay"]],["bool"]]],[11,"eq","","",117,[[["linger"],["self"]],["bool"]]],[11,"eq","","",118,[[["ipaddmembership"],["self"]],["bool"]]],[11,"eq","","",119,[[["ipdropmembership"],["self"]],["bool"]]],[11,"eq","","",120,[[["ipv6addmembership"],["self"]],["bool"]]],[11,"eq","","",121,[[["self"],["ipv6dropmembership"]],["bool"]]],[11,"eq","","",122,[[["self"],["ipmulticastttl"]],["bool"]]],[11,"eq","","",123,[[["self"],["ipmulticastloop"]],["bool"]]],[11,"eq","","",124,[[["self"],["receivetimeout"]],["bool"]]],[11,"eq","","",125,[[["self"],["sendtimeout"]],["bool"]]],[11,"eq","","",126,[[["broadcast"],["self"]],["bool"]]],[11,"eq","","",127,[[["self"],["oobinline"]],["bool"]]],[11,"eq","","",128,[[["self"],["socketerror"]],["bool"]]],[11,"eq","","",129,[[["keepalive"],["self"]],["bool"]]],[11,"eq","","",130,[[["tcpkeepalive"],["self"]],["bool"]]],[11,"eq","","",131,[[["self"],["rcvbuf"]],["bool"]]],[11,"eq","","",132,[[["self"],["sndbuf"]],["bool"]]],[11,"eq","","",133,[[["socktype"],["self"]],["bool"]]],[11,"eq","","",134,[[["acceptconn"],["self"]],["bool"]]],[11,"eq","","",135,[[["receivetimestamp"],["self"]],["bool"]]],[11,"eq","","",136,[[["ipv4packetinfo"],["self"]],["bool"]]],[11,"eq","","",137,[[["ipv6recvpacketinfo"],["self"]],["bool"]]],[11,"eq","","",138,[[["self"],["ipv4recvif"]],["bool"]]],[11,"eq","","",139,[[["self"],["ipv4recvdstaddr"]],["bool"]]],[11,"eq","nix::sys::socket","",59,[[["socktype"],["self"]],["bool"]]],[11,"eq","","",60,[[["sockprotocol"],["self"]],["bool"]]],[11,"eq","","",68,[[["self"],["sockflag"]],["bool"]]],[11,"ne","","",68,[[["self"],["sockflag"]],["bool"]]],[11,"eq","","",69,[[["self"],["msgflags"]],["bool"]]],[11,"ne","","",69,[[["self"],["msgflags"]],["bool"]]],[11,"eq","","",70,[[["self"],["ipmembershiprequest"]],["bool"]]],[11,"ne","","",70,[[["self"],["ipmembershiprequest"]],["bool"]]],[11,"eq","","",71,[[["self"],["ipv6membershiprequest"]],["bool"]]],[11,"ne","","",71,[[["self"],["ipv6membershiprequest"]],["bool"]]],[11,"eq","","",72,[[["self"],["cmsgspace"]],["bool"]]],[11,"ne","","",72,[[["self"],["cmsgspace"]],["bool"]]],[11,"eq","","",54,[[["recvmsg"],["self"]],["bool"]]],[11,"ne","","",54,[[["recvmsg"],["self"]],["bool"]]],[11,"eq","","",113,[[["cmsgiterator"],["self"]],["bool"]]],[11,"ne","","",113,[[["cmsgiterator"],["self"]],["bool"]]],[11,"eq","","",61,[[["controlmessageowned"],["self"]],["bool"]]],[11,"ne","","",61,[[["controlmessageowned"],["self"]],["bool"]]],[11,"eq","","",62,[[["self"],["controlmessage"]],["bool"]]],[11,"ne","","",62,[[["self"],["controlmessage"]],["bool"]]],[11,"eq","","",63,[[["socklevel"],["self"]],["bool"]]],[11,"eq","","",64,[[["self"],["shutdown"]],["bool"]]],[11,"eq","nix::sys::stat","",76,[[["sflag"],["self"]],["bool"]]],[11,"ne","","",76,[[["sflag"],["self"]],["bool"]]],[11,"eq","","",77,[[["mode"],["self"]],["bool"]]],[11,"ne","","",77,[[["mode"],["self"]],["bool"]]],[11,"eq","nix::sys::statvfs","",79,[[["self"],["fsflags"]],["bool"]]],[11,"ne","","",79,[[["self"],["fsflags"]],["bool"]]],[11,"eq","","",80,[[["statvfs"],["self"]],["bool"]]],[11,"ne","","",80,[[["statvfs"],["self"]],["bool"]]],[11,"eq","nix::sys::termios","",81,[[["self"],["termios"]],["bool"]]],[11,"ne","","",81,[[["self"],["termios"]],["bool"]]],[11,"eq","","",82,[[["self"],["baudrate"]],["bool"]]],[11,"eq","","",83,[[["self"],["setarg"]],["bool"]]],[11,"eq","","",84,[[["self"],["flusharg"]],["bool"]]],[11,"eq","","",85,[[["self"],["flowarg"]],["bool"]]],[11,"eq","","",86,[[["specialcharacterindices"],["self"]],["bool"]]],[11,"eq","","",87,[[["inputflags"],["self"]],["bool"]]],[11,"ne","","",87,[[["inputflags"],["self"]],["bool"]]],[11,"eq","","",88,[[["outputflags"],["self"]],["bool"]]],[11,"ne","","",88,[[["outputflags"],["self"]],["bool"]]],[11,"eq","","",89,[[["self"],["controlflags"]],["bool"]]],[11,"ne","","",89,[[["self"],["controlflags"]],["bool"]]],[11,"eq","","",90,[[["localflags"],["self"]],["bool"]]],[11,"ne","","",90,[[["localflags"],["self"]],["bool"]]],[11,"eq","nix::sys::time","",92,[[["timespec"],["self"]],["bool"]]],[11,"ne","","",92,[[["timespec"],["self"]],["bool"]]],[11,"eq","","",93,[[["timeval"],["self"]],["bool"]]],[11,"ne","","",93,[[["timeval"],["self"]],["bool"]]],[11,"eq","nix::sys::uio","",94,[[["self"],["iovec"]],["bool"]]],[11,"ne","","",94,[[["self"],["iovec"]],["bool"]]],[11,"eq","nix::sys::utsname","",95,[[["utsname"],["self"]],["bool"]]],[11,"ne","","",95,[[["utsname"],["self"]],["bool"]]],[11,"eq","nix::sys::wait","",97,[[["self"],["waitpidflag"]],["bool"]]],[11,"ne","","",97,[[["self"],["waitpidflag"]],["bool"]]],[11,"eq","","",96,[[["self"],["waitstatus"]],["bool"]]],[11,"ne","","",96,[[["self"],["waitstatus"]],["bool"]]],[11,"eq","nix::unistd","",104,[[["self"],["uid"]],["bool"]]],[11,"ne","","",104,[[["self"],["uid"]],["bool"]]],[11,"eq","","",105,[[["gid"],["self"]],["bool"]]],[11,"ne","","",105,[[["gid"],["self"]],["bool"]]],[11,"eq","","",106,[[["self"],["pid"]],["bool"]]],[11,"ne","","",106,[[["self"],["pid"]],["bool"]]],[11,"eq","","",102,[[["pathconfvar"],["self"]],["bool"]]],[11,"eq","","",103,[[["sysconfvar"],["self"]],["bool"]]],[11,"eq","","",107,[[["self"],["accessflags"]],["bool"]]],[11,"ne","","",107,[[["self"],["accessflags"]],["bool"]]],[11,"eq","nix","",0,[[["error"],["self"]],["bool"]]],[11,"ne","","",0,[[["error"],["self"]],["bool"]]],[11,"partial_cmp","nix::fcntl","",8,[[["self"],["atflags"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",8,[[["self"],["atflags"]],["bool"]]],[11,"le","","",8,[[["self"],["atflags"]],["bool"]]],[11,"gt","","",8,[[["self"],["atflags"]],["bool"]]],[11,"ge","","",8,[[["self"],["atflags"]],["bool"]]],[11,"partial_cmp","","",9,[[["self"],["oflag"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",9,[[["self"],["oflag"]],["bool"]]],[11,"le","","",9,[[["self"],["oflag"]],["bool"]]],[11,"gt","","",9,[[["self"],["oflag"]],["bool"]]],[11,"ge","","",9,[[["self"],["oflag"]],["bool"]]],[11,"partial_cmp","","",10,[[["self"],["fdflag"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",10,[[["self"],["fdflag"]],["bool"]]],[11,"le","","",10,[[["self"],["fdflag"]],["bool"]]],[11,"gt","","",10,[[["self"],["fdflag"]],["bool"]]],[11,"ge","","",10,[[["self"],["fdflag"]],["bool"]]],[11,"partial_cmp","nix::net::if_","",12,[[["self"],["interfaceflags"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",12,[[["self"],["interfaceflags"]],["bool"]]],[11,"le","","",12,[[["self"],["interfaceflags"]],["bool"]]],[11,"gt","","",12,[[["self"],["interfaceflags"]],["bool"]]],[11,"ge","","",12,[[["self"],["interfaceflags"]],["bool"]]],[11,"partial_cmp","nix::poll","",14,[[["self"],["pollflags"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",14,[[["self"],["pollflags"]],["bool"]]],[11,"le","","",14,[[["self"],["pollflags"]],["bool"]]],[11,"gt","","",14,[[["self"],["pollflags"]],["bool"]]],[11,"ge","","",14,[[["self"],["pollflags"]],["bool"]]],[11,"partial_cmp","nix::sys::aio","",18,[[["aiofsyncmode"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",19,[[["self"],["lioopcode"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",20,[[["liomode"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","nix::sys::event","",24,[[["self"],["eventfilter"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",25,[[["self"],["eventflag"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",25,[[["self"],["eventflag"]],["bool"]]],[11,"le","","",25,[[["self"],["eventflag"]],["bool"]]],[11,"gt","","",25,[[["self"],["eventflag"]],["bool"]]],[11,"ge","","",25,[[["self"],["eventflag"]],["bool"]]],[11,"partial_cmp","","",26,[[["filterflag"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",26,[[["filterflag"],["self"]],["bool"]]],[11,"le","","",26,[[["filterflag"],["self"]],["bool"]]],[11,"gt","","",26,[[["filterflag"],["self"]],["bool"]]],[11,"ge","","",26,[[["filterflag"],["self"]],["bool"]]],[11,"partial_cmp","nix::sys::mman","",29,[[["protflags"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",29,[[["protflags"],["self"]],["bool"]]],[11,"le","","",29,[[["protflags"],["self"]],["bool"]]],[11,"gt","","",29,[[["protflags"],["self"]],["bool"]]],[11,"ge","","",29,[[["protflags"],["self"]],["bool"]]],[11,"partial_cmp","","",30,[[["self"],["mapflags"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",30,[[["self"],["mapflags"]],["bool"]]],[11,"le","","",30,[[["self"],["mapflags"]],["bool"]]],[11,"gt","","",30,[[["self"],["mapflags"]],["bool"]]],[11,"ge","","",30,[[["self"],["mapflags"]],["bool"]]],[11,"partial_cmp","","",28,[[["self"],["mmapadvise"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",31,[[["self"],["msflags"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",31,[[["self"],["msflags"]],["bool"]]],[11,"le","","",31,[[["self"],["msflags"]],["bool"]]],[11,"gt","","",31,[[["self"],["msflags"]],["bool"]]],[11,"ge","","",31,[[["self"],["msflags"]],["bool"]]],[11,"partial_cmp","","",32,[[["self"],["mlockallflags"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",32,[[["self"],["mlockallflags"]],["bool"]]],[11,"le","","",32,[[["self"],["mlockallflags"]],["bool"]]],[11,"gt","","",32,[[["self"],["mlockallflags"]],["bool"]]],[11,"ge","","",32,[[["self"],["mlockallflags"]],["bool"]]],[11,"partial_cmp","nix::sys::ptrace","",33,[[["self"],["request"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","nix::sys::signal","",35,[[["signal"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",40,[[["saflags"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",40,[[["saflags"],["self"]],["bool"]]],[11,"le","","",40,[[["saflags"],["self"]],["bool"]]],[11,"gt","","",40,[[["saflags"],["self"]],["bool"]]],[11,"ge","","",40,[[["saflags"],["self"]],["bool"]]],[11,"partial_cmp","","",36,[[["self"],["sigmaskhow"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","nix::sys::socket","",68,[[["self"],["sockflag"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",68,[[["self"],["sockflag"]],["bool"]]],[11,"le","","",68,[[["self"],["sockflag"]],["bool"]]],[11,"gt","","",68,[[["self"],["sockflag"]],["bool"]]],[11,"ge","","",68,[[["self"],["sockflag"]],["bool"]]],[11,"partial_cmp","","",69,[[["self"],["msgflags"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",69,[[["self"],["msgflags"]],["bool"]]],[11,"le","","",69,[[["self"],["msgflags"]],["bool"]]],[11,"gt","","",69,[[["self"],["msgflags"]],["bool"]]],[11,"ge","","",69,[[["self"],["msgflags"]],["bool"]]],[11,"partial_cmp","nix::sys::stat","",76,[[["sflag"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",76,[[["sflag"],["self"]],["bool"]]],[11,"le","","",76,[[["sflag"],["self"]],["bool"]]],[11,"gt","","",76,[[["sflag"],["self"]],["bool"]]],[11,"ge","","",76,[[["sflag"],["self"]],["bool"]]],[11,"partial_cmp","","",77,[[["mode"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",77,[[["mode"],["self"]],["bool"]]],[11,"le","","",77,[[["mode"],["self"]],["bool"]]],[11,"gt","","",77,[[["mode"],["self"]],["bool"]]],[11,"ge","","",77,[[["mode"],["self"]],["bool"]]],[11,"partial_cmp","nix::sys::statvfs","",79,[[["self"],["fsflags"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",79,[[["self"],["fsflags"]],["bool"]]],[11,"le","","",79,[[["self"],["fsflags"]],["bool"]]],[11,"gt","","",79,[[["self"],["fsflags"]],["bool"]]],[11,"ge","","",79,[[["self"],["fsflags"]],["bool"]]],[11,"partial_cmp","nix::sys::termios","",82,[[["self"],["baudrate"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",83,[[["self"],["setarg"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",84,[[["self"],["flusharg"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",85,[[["self"],["flowarg"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",86,[[["specialcharacterindices"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",87,[[["inputflags"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",87,[[["inputflags"],["self"]],["bool"]]],[11,"le","","",87,[[["inputflags"],["self"]],["bool"]]],[11,"gt","","",87,[[["inputflags"],["self"]],["bool"]]],[11,"ge","","",87,[[["inputflags"],["self"]],["bool"]]],[11,"partial_cmp","","",88,[[["outputflags"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",88,[[["outputflags"],["self"]],["bool"]]],[11,"le","","",88,[[["outputflags"],["self"]],["bool"]]],[11,"gt","","",88,[[["outputflags"],["self"]],["bool"]]],[11,"ge","","",88,[[["outputflags"],["self"]],["bool"]]],[11,"partial_cmp","","",89,[[["self"],["controlflags"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",89,[[["self"],["controlflags"]],["bool"]]],[11,"le","","",89,[[["self"],["controlflags"]],["bool"]]],[11,"gt","","",89,[[["self"],["controlflags"]],["bool"]]],[11,"ge","","",89,[[["self"],["controlflags"]],["bool"]]],[11,"partial_cmp","","",90,[[["localflags"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",90,[[["localflags"],["self"]],["bool"]]],[11,"le","","",90,[[["localflags"],["self"]],["bool"]]],[11,"gt","","",90,[[["localflags"],["self"]],["bool"]]],[11,"ge","","",90,[[["localflags"],["self"]],["bool"]]],[11,"partial_cmp","nix::sys::time","",92,[[["timespec"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",93,[[["timeval"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","nix::sys::wait","",97,[[["self"],["waitpidflag"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",97,[[["self"],["waitpidflag"]],["bool"]]],[11,"le","","",97,[[["self"],["waitpidflag"]],["bool"]]],[11,"gt","","",97,[[["self"],["waitpidflag"]],["bool"]]],[11,"ge","","",97,[[["self"],["waitpidflag"]],["bool"]]],[11,"partial_cmp","nix::unistd","",107,[[["self"],["accessflags"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",107,[[["self"],["accessflags"]],["bool"]]],[11,"le","","",107,[[["self"],["accessflags"]],["bool"]]],[11,"gt","","",107,[[["self"],["accessflags"]],["bool"]]],[11,"ge","","",107,[[["self"],["accessflags"]],["bool"]]],[11,"fmt","nix::dir","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::errno","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::fcntl","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::ifaddrs","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::net::if_","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::poll","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::pty","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::aio","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::event","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::mman","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::ptrace","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::select","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::signal","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::socket","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::socket::sockopt","",114,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",117,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",121,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",122,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",124,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",126,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",127,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",128,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",129,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",130,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",131,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",132,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",133,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",134,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",135,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",136,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",137,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",138,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",139,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::socket","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",61,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",62,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::stat","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::statfs","",78,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::statvfs","",79,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::termios","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",88,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",89,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",90,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::time","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::uio","",94,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::utsname","",95,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::sys::wait","",97,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::unistd","",104,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",106,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",102,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",103,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",107,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","nix::errno","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::signal","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::socket","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::time","",92,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",93,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::unistd","",104,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",105,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",106,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix","",0,[[["formatter"],["self"]],["result"]]],[11,"div","nix::sys::time","",92,[[["i32"]],["timespec"]]],[11,"div","","",93,[[["i32"]],["timeval"]]],[11,"sub","nix::fcntl","Returns the set difference of the two sets of flags.",8,[[["atflags"]],["atflags"]]],[11,"sub","","Returns the set difference of the two sets of flags.",9,[[["oflag"]],["oflag"]]],[11,"sub","","Returns the set difference of the two sets of flags.",10,[[["fdflag"]],["fdflag"]]],[11,"sub","nix::net::if_","Returns the set difference of the two sets of flags.",12,[[["interfaceflags"]],["interfaceflags"]]],[11,"sub","nix::poll","Returns the set difference of the two sets of flags.",14,[[["pollflags"]],["pollflags"]]],[11,"sub","nix::sys::event","Returns the set difference of the two sets of flags.",25,[[["eventflag"]],["eventflag"]]],[11,"sub","","Returns the set difference of the two sets of flags.",26,[[["filterflag"]],["filterflag"]]],[11,"sub","nix::sys::mman","Returns the set difference of the two sets of flags.",29,[[["protflags"]],["protflags"]]],[11,"sub","","Returns the set difference of the two sets of flags.",30,[[["mapflags"]],["mapflags"]]],[11,"sub","","Returns the set difference of the two sets of flags.",31,[[["msflags"]],["msflags"]]],[11,"sub","","Returns the set difference of the two sets of flags.",32,[[["mlockallflags"]],["mlockallflags"]]],[11,"sub","nix::sys::signal","Returns the set difference of the two sets of flags.",40,[[["saflags"]],["saflags"]]],[11,"sub","nix::sys::socket","Returns the set difference of the two sets of flags.",68,[[["sockflag"]],["sockflag"]]],[11,"sub","","Returns the set difference of the two sets of flags.",69,[[["msgflags"]],["msgflags"]]],[11,"sub","nix::sys::stat","Returns the set difference of the two sets of flags.",76,[[["sflag"]],["sflag"]]],[11,"sub","","Returns the set difference of the two sets of flags.",77,[[["mode"]],["mode"]]],[11,"sub","nix::sys::statvfs","Returns the set difference of the two sets of flags.",79,[[["fsflags"]],["fsflags"]]],[11,"sub","nix::sys::termios","Returns the set difference of the two sets of flags.",87,[[["inputflags"]],["inputflags"]]],[11,"sub","","Returns the set difference of the two sets of flags.",88,[[["outputflags"]],["outputflags"]]],[11,"sub","","Returns the set difference of the two sets of flags.",89,[[["controlflags"]],["controlflags"]]],[11,"sub","","Returns the set difference of the two sets of flags.",90,[[["localflags"]],["localflags"]]],[11,"sub","nix::sys::time","",92,[[["timespec"]],["timespec"]]],[11,"sub","","",93,[[["timeval"]],["timeval"]]],[11,"sub","nix::sys::wait","Returns the set difference of the two sets of flags.",97,[[["waitpidflag"]],["waitpidflag"]]],[11,"sub","nix::unistd","Returns the set difference of the two sets of flags.",107,[[["accessflags"]],["accessflags"]]],[11,"from_str","nix::sys::signal","",35,[[["str"]],[["result",["signal"]],["signal"]]]],[11,"add","nix::sys::time","",92,[[["timespec"]],["timespec"]]],[11,"add","","",93,[[["timeval"]],["timeval"]]],[11,"mul","","",92,[[["i32"]],["timespec"]]],[11,"mul","","",93,[[["i32"]],["timeval"]]],[11,"neg","","",92,[[],["timespec"]]],[11,"neg","","",93,[[],["timeval"]]],[11,"sub_assign","nix::fcntl","Disables all flags enabled in the set.",8,[[["self"],["atflags"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",9,[[["self"],["oflag"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",10,[[["self"],["fdflag"]]]],[11,"sub_assign","nix::net::if_","Disables all flags enabled in the set.",12,[[["self"],["interfaceflags"]]]],[11,"sub_assign","nix::poll","Disables all flags enabled in the set.",14,[[["self"],["pollflags"]]]],[11,"sub_assign","nix::sys::event","Disables all flags enabled in the set.",25,[[["self"],["eventflag"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",26,[[["self"],["filterflag"]]]],[11,"sub_assign","nix::sys::mman","Disables all flags enabled in the set.",29,[[["self"],["protflags"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",30,[[["self"],["mapflags"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",31,[[["self"],["msflags"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",32,[[["self"],["mlockallflags"]]]],[11,"sub_assign","nix::sys::signal","Disables all flags enabled in the set.",40,[[["saflags"],["self"]]]],[11,"sub_assign","nix::sys::socket","Disables all flags enabled in the set.",68,[[["self"],["sockflag"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",69,[[["msgflags"],["self"]]]],[11,"sub_assign","nix::sys::stat","Disables all flags enabled in the set.",76,[[["sflag"],["self"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",77,[[["self"],["mode"]]]],[11,"sub_assign","nix::sys::statvfs","Disables all flags enabled in the set.",79,[[["fsflags"],["self"]]]],[11,"sub_assign","nix::sys::termios","Disables all flags enabled in the set.",87,[[["self"],["inputflags"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",88,[[["self"],["outputflags"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",89,[[["self"],["controlflags"]]]],[11,"sub_assign","","Disables all flags enabled in the set.",90,[[["self"],["localflags"]]]],[11,"sub_assign","nix::sys::wait","Disables all flags enabled in the set.",97,[[["self"],["waitpidflag"]]]],[11,"sub_assign","nix::unistd","Disables all flags enabled in the set.",107,[[["self"],["accessflags"]]]],[11,"not","nix::fcntl","Returns the complement of this set of flags.",8,[[],["atflags"]]],[11,"not","","Returns the complement of this set of flags.",9,[[],["oflag"]]],[11,"not","","Returns the complement of this set of flags.",10,[[],["fdflag"]]],[11,"not","nix::net::if_","Returns the complement of this set of flags.",12,[[],["interfaceflags"]]],[11,"not","nix::poll","Returns the complement of this set of flags.",14,[[],["pollflags"]]],[11,"not","nix::sys::event","Returns the complement of this set of flags.",25,[[],["eventflag"]]],[11,"not","","Returns the complement of this set of flags.",26,[[],["filterflag"]]],[11,"not","nix::sys::mman","Returns the complement of this set of flags.",29,[[],["protflags"]]],[11,"not","","Returns the complement of this set of flags.",30,[[],["mapflags"]]],[11,"not","","Returns the complement of this set of flags.",31,[[],["msflags"]]],[11,"not","","Returns the complement of this set of flags.",32,[[],["mlockallflags"]]],[11,"not","nix::sys::signal","Returns the complement of this set of flags.",40,[[],["saflags"]]],[11,"not","nix::sys::socket","Returns the complement of this set of flags.",68,[[],["sockflag"]]],[11,"not","","Returns the complement of this set of flags.",69,[[],["msgflags"]]],[11,"not","nix::sys::stat","Returns the complement of this set of flags.",76,[[],["sflag"]]],[11,"not","","Returns the complement of this set of flags.",77,[[],["mode"]]],[11,"not","nix::sys::statvfs","Returns the complement of this set of flags.",79,[[],["fsflags"]]],[11,"not","nix::sys::termios","Returns the complement of this set of flags.",87,[[],["inputflags"]]],[11,"not","","Returns the complement of this set of flags.",88,[[],["outputflags"]]],[11,"not","","Returns the complement of this set of flags.",89,[[],["controlflags"]]],[11,"not","","Returns the complement of this set of flags.",90,[[],["localflags"]]],[11,"not","nix::sys::wait","Returns the complement of this set of flags.",97,[[],["waitpidflag"]]],[11,"not","nix::unistd","Returns the complement of this set of flags.",107,[[],["accessflags"]]],[11,"bitand","nix::fcntl","Returns the intersection between the two sets of flags.",8,[[["atflags"]],["atflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",9,[[["oflag"]],["oflag"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",10,[[["fdflag"]],["fdflag"]]],[11,"bitand","nix::net::if_","Returns the intersection between the two sets of flags.",12,[[["interfaceflags"]],["interfaceflags"]]],[11,"bitand","nix::poll","Returns the intersection between the two sets of flags.",14,[[["pollflags"]],["pollflags"]]],[11,"bitand","nix::sys::event","Returns the intersection between the two sets of flags.",25,[[["eventflag"]],["eventflag"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",26,[[["filterflag"]],["filterflag"]]],[11,"bitand","nix::sys::mman","Returns the intersection between the two sets of flags.",29,[[["protflags"]],["protflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",30,[[["mapflags"]],["mapflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",31,[[["msflags"]],["msflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",32,[[["mlockallflags"]],["mlockallflags"]]],[11,"bitand","nix::sys::signal","Returns the intersection between the two sets of flags.",40,[[["saflags"]],["saflags"]]],[11,"bitand","nix::sys::socket","Returns the intersection between the two sets of flags.",68,[[["sockflag"]],["sockflag"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",69,[[["msgflags"]],["msgflags"]]],[11,"bitand","nix::sys::stat","Returns the intersection between the two sets of flags.",76,[[["sflag"]],["sflag"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",77,[[["mode"]],["mode"]]],[11,"bitand","nix::sys::statvfs","Returns the intersection between the two sets of flags.",79,[[["fsflags"]],["fsflags"]]],[11,"bitand","nix::sys::termios","Returns the intersection between the two sets of flags.",87,[[["inputflags"]],["inputflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",88,[[["outputflags"]],["outputflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",89,[[["controlflags"]],["controlflags"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",90,[[["localflags"]],["localflags"]]],[11,"bitand","nix::sys::wait","Returns the intersection between the two sets of flags.",97,[[["waitpidflag"]],["waitpidflag"]]],[11,"bitand","nix::unistd","Returns the intersection between the two sets of flags.",107,[[["accessflags"]],["accessflags"]]],[11,"bitor","nix::fcntl","Returns the union of the two sets of flags.",8,[[["atflags"]],["atflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",9,[[["oflag"]],["oflag"]]],[11,"bitor","","Returns the union of the two sets of flags.",10,[[["fdflag"]],["fdflag"]]],[11,"bitor","nix::net::if_","Returns the union of the two sets of flags.",12,[[["interfaceflags"]],["interfaceflags"]]],[11,"bitor","nix::poll","Returns the union of the two sets of flags.",14,[[["pollflags"]],["pollflags"]]],[11,"bitor","nix::sys::event","Returns the union of the two sets of flags.",25,[[["eventflag"]],["eventflag"]]],[11,"bitor","","Returns the union of the two sets of flags.",26,[[["filterflag"]],["filterflag"]]],[11,"bitor","nix::sys::mman","Returns the union of the two sets of flags.",29,[[["protflags"]],["protflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",30,[[["mapflags"]],["mapflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",31,[[["msflags"]],["msflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",32,[[["mlockallflags"]],["mlockallflags"]]],[11,"bitor","nix::sys::signal","Returns the union of the two sets of flags.",40,[[["saflags"]],["saflags"]]],[11,"bitor","nix::sys::socket","Returns the union of the two sets of flags.",68,[[["sockflag"]],["sockflag"]]],[11,"bitor","","Returns the union of the two sets of flags.",69,[[["msgflags"]],["msgflags"]]],[11,"bitor","nix::sys::stat","Returns the union of the two sets of flags.",76,[[["sflag"]],["sflag"]]],[11,"bitor","","Returns the union of the two sets of flags.",77,[[["mode"]],["mode"]]],[11,"bitor","nix::sys::statvfs","Returns the union of the two sets of flags.",79,[[["fsflags"]],["fsflags"]]],[11,"bitor","nix::sys::termios","Returns the union of the two sets of flags.",87,[[["inputflags"]],["inputflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",88,[[["outputflags"]],["outputflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",89,[[["controlflags"]],["controlflags"]]],[11,"bitor","","Returns the union of the two sets of flags.",90,[[["localflags"]],["localflags"]]],[11,"bitor","nix::sys::wait","Returns the union of the two sets of flags.",97,[[["waitpidflag"]],["waitpidflag"]]],[11,"bitor","nix::unistd","Returns the union of the two sets of flags.",107,[[["accessflags"]],["accessflags"]]],[11,"bitxor","nix::fcntl","Returns the left flags, but with all the right flags…",8,[[["atflags"]],["atflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",9,[[["oflag"]],["oflag"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",10,[[["fdflag"]],["fdflag"]]],[11,"bitxor","nix::net::if_","Returns the left flags, but with all the right flags…",12,[[["interfaceflags"]],["interfaceflags"]]],[11,"bitxor","nix::poll","Returns the left flags, but with all the right flags…",14,[[["pollflags"]],["pollflags"]]],[11,"bitxor","nix::sys::event","Returns the left flags, but with all the right flags…",25,[[["eventflag"]],["eventflag"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",26,[[["filterflag"]],["filterflag"]]],[11,"bitxor","nix::sys::mman","Returns the left flags, but with all the right flags…",29,[[["protflags"]],["protflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",30,[[["mapflags"]],["mapflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",31,[[["msflags"]],["msflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",32,[[["mlockallflags"]],["mlockallflags"]]],[11,"bitxor","nix::sys::signal","Returns the left flags, but with all the right flags…",40,[[["saflags"]],["saflags"]]],[11,"bitxor","nix::sys::socket","Returns the left flags, but with all the right flags…",68,[[["sockflag"]],["sockflag"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",69,[[["msgflags"]],["msgflags"]]],[11,"bitxor","nix::sys::stat","Returns the left flags, but with all the right flags…",76,[[["sflag"]],["sflag"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",77,[[["mode"]],["mode"]]],[11,"bitxor","nix::sys::statvfs","Returns the left flags, but with all the right flags…",79,[[["fsflags"]],["fsflags"]]],[11,"bitxor","nix::sys::termios","Returns the left flags, but with all the right flags…",87,[[["inputflags"]],["inputflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",88,[[["outputflags"]],["outputflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",89,[[["controlflags"]],["controlflags"]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",90,[[["localflags"]],["localflags"]]],[11,"bitxor","nix::sys::wait","Returns the left flags, but with all the right flags…",97,[[["waitpidflag"]],["waitpidflag"]]],[11,"bitxor","nix::unistd","Returns the left flags, but with all the right flags…",107,[[["accessflags"]],["accessflags"]]],[11,"bitand_assign","nix::fcntl","Disables all flags disabled in the set.",8,[[["self"],["atflags"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",9,[[["self"],["oflag"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",10,[[["self"],["fdflag"]]]],[11,"bitand_assign","nix::net::if_","Disables all flags disabled in the set.",12,[[["self"],["interfaceflags"]]]],[11,"bitand_assign","nix::poll","Disables all flags disabled in the set.",14,[[["self"],["pollflags"]]]],[11,"bitand_assign","nix::sys::event","Disables all flags disabled in the set.",25,[[["self"],["eventflag"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",26,[[["self"],["filterflag"]]]],[11,"bitand_assign","nix::sys::mman","Disables all flags disabled in the set.",29,[[["self"],["protflags"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",30,[[["self"],["mapflags"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",31,[[["self"],["msflags"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",32,[[["self"],["mlockallflags"]]]],[11,"bitand_assign","nix::sys::signal","Disables all flags disabled in the set.",40,[[["saflags"],["self"]]]],[11,"bitand_assign","nix::sys::socket","Disables all flags disabled in the set.",68,[[["self"],["sockflag"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",69,[[["msgflags"],["self"]]]],[11,"bitand_assign","nix::sys::stat","Disables all flags disabled in the set.",76,[[["sflag"],["self"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",77,[[["self"],["mode"]]]],[11,"bitand_assign","nix::sys::statvfs","Disables all flags disabled in the set.",79,[[["fsflags"],["self"]]]],[11,"bitand_assign","nix::sys::termios","Disables all flags disabled in the set.",87,[[["self"],["inputflags"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",88,[[["self"],["outputflags"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",89,[[["self"],["controlflags"]]]],[11,"bitand_assign","","Disables all flags disabled in the set.",90,[[["self"],["localflags"]]]],[11,"bitand_assign","nix::sys::wait","Disables all flags disabled in the set.",97,[[["self"],["waitpidflag"]]]],[11,"bitand_assign","nix::unistd","Disables all flags disabled in the set.",107,[[["self"],["accessflags"]]]],[11,"bitor_assign","nix::fcntl","Adds the set of flags.",8,[[["self"],["atflags"]]]],[11,"bitor_assign","","Adds the set of flags.",9,[[["self"],["oflag"]]]],[11,"bitor_assign","","Adds the set of flags.",10,[[["self"],["fdflag"]]]],[11,"bitor_assign","nix::net::if_","Adds the set of flags.",12,[[["self"],["interfaceflags"]]]],[11,"bitor_assign","nix::poll","Adds the set of flags.",14,[[["self"],["pollflags"]]]],[11,"bitor_assign","nix::sys::event","Adds the set of flags.",25,[[["self"],["eventflag"]]]],[11,"bitor_assign","","Adds the set of flags.",26,[[["self"],["filterflag"]]]],[11,"bitor_assign","nix::sys::mman","Adds the set of flags.",29,[[["self"],["protflags"]]]],[11,"bitor_assign","","Adds the set of flags.",30,[[["self"],["mapflags"]]]],[11,"bitor_assign","","Adds the set of flags.",31,[[["self"],["msflags"]]]],[11,"bitor_assign","","Adds the set of flags.",32,[[["self"],["mlockallflags"]]]],[11,"bitor_assign","nix::sys::signal","Adds the set of flags.",40,[[["saflags"],["self"]]]],[11,"bitor_assign","nix::sys::socket","Adds the set of flags.",68,[[["self"],["sockflag"]]]],[11,"bitor_assign","","Adds the set of flags.",69,[[["msgflags"],["self"]]]],[11,"bitor_assign","nix::sys::stat","Adds the set of flags.",76,[[["sflag"],["self"]]]],[11,"bitor_assign","","Adds the set of flags.",77,[[["self"],["mode"]]]],[11,"bitor_assign","nix::sys::statvfs","Adds the set of flags.",79,[[["fsflags"],["self"]]]],[11,"bitor_assign","nix::sys::termios","Adds the set of flags.",87,[[["self"],["inputflags"]]]],[11,"bitor_assign","","Adds the set of flags.",88,[[["self"],["outputflags"]]]],[11,"bitor_assign","","Adds the set of flags.",89,[[["self"],["controlflags"]]]],[11,"bitor_assign","","Adds the set of flags.",90,[[["self"],["localflags"]]]],[11,"bitor_assign","nix::sys::wait","Adds the set of flags.",97,[[["self"],["waitpidflag"]]]],[11,"bitor_assign","nix::unistd","Adds the set of flags.",107,[[["self"],["accessflags"]]]],[11,"bitxor_assign","nix::fcntl","Toggles the set of flags.",8,[[["self"],["atflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",9,[[["self"],["oflag"]]]],[11,"bitxor_assign","","Toggles the set of flags.",10,[[["self"],["fdflag"]]]],[11,"bitxor_assign","nix::net::if_","Toggles the set of flags.",12,[[["self"],["interfaceflags"]]]],[11,"bitxor_assign","nix::poll","Toggles the set of flags.",14,[[["self"],["pollflags"]]]],[11,"bitxor_assign","nix::sys::event","Toggles the set of flags.",25,[[["self"],["eventflag"]]]],[11,"bitxor_assign","","Toggles the set of flags.",26,[[["self"],["filterflag"]]]],[11,"bitxor_assign","nix::sys::mman","Toggles the set of flags.",29,[[["self"],["protflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",30,[[["self"],["mapflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",31,[[["self"],["msflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",32,[[["self"],["mlockallflags"]]]],[11,"bitxor_assign","nix::sys::signal","Toggles the set of flags.",40,[[["saflags"],["self"]]]],[11,"bitxor_assign","nix::sys::socket","Toggles the set of flags.",68,[[["self"],["sockflag"]]]],[11,"bitxor_assign","","Toggles the set of flags.",69,[[["msgflags"],["self"]]]],[11,"bitxor_assign","nix::sys::stat","Toggles the set of flags.",76,[[["sflag"],["self"]]]],[11,"bitxor_assign","","Toggles the set of flags.",77,[[["self"],["mode"]]]],[11,"bitxor_assign","nix::sys::statvfs","Toggles the set of flags.",79,[[["fsflags"],["self"]]]],[11,"bitxor_assign","nix::sys::termios","Toggles the set of flags.",87,[[["self"],["inputflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",88,[[["self"],["outputflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",89,[[["self"],["controlflags"]]]],[11,"bitxor_assign","","Toggles the set of flags.",90,[[["self"],["localflags"]]]],[11,"bitxor_assign","nix::sys::wait","Toggles the set of flags.",97,[[["self"],["waitpidflag"]]]],[11,"bitxor_assign","nix::unistd","Toggles the set of flags.",107,[[["self"],["accessflags"]]]],[11,"hash","nix::dir","",2,[[["self"],["__h"]]]],[11,"hash","","",109,[[["self"],["__h"]]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","nix::fcntl","",8,[[["self"],["__h"]]]],[11,"hash","","",9,[[["self"],["__h"]]]],[11,"hash","","",10,[[["self"],["__h"]]]],[11,"hash","","",6,[[["self"],["__h"]]]],[11,"hash","","",7,[[["self"],["__h"]]]],[11,"hash","nix::ifaddrs","",11,[[["self"],["__h"]]]],[11,"hash","","",110,[[["self"],["__h"]]]],[11,"hash","nix::net::if_","",12,[[["self"],["__h"]]]],[11,"hash","nix::poll","",13,[[["self"],["__h"]]]],[11,"hash","","",14,[[["self"],["__h"]]]],[11,"hash","nix::pty","",16,[[["self"],["__h"]]]],[11,"hash","","",111,[[["self"],["__h"]]]],[11,"hash","nix::sys::aio","",18,[[["self"],["__h"]]]],[11,"hash","","",19,[[["self"],["__h"]]]],[11,"hash","","",20,[[["self"],["__h"]]]],[11,"hash","","",21,[[["self"],["__h"]]]],[11,"hash","nix::sys::event","",27,[[["self"],["__h"]]]],[11,"hash","","",24,[[["self"],["__h"]]]],[11,"hash","","",25,[[["self"],["__h"]]]],[11,"hash","","",26,[[["self"],["__h"]]]],[11,"hash","nix::sys::mman","",29,[[["self"],["__h"]]]],[11,"hash","","",30,[[["self"],["__h"]]]],[11,"hash","","",28,[[["self"],["__h"]]]],[11,"hash","","",31,[[["self"],["__h"]]]],[11,"hash","","",32,[[["self"],["__h"]]]],[11,"hash","nix::sys::ptrace","",33,[[["self"],["__h"]]]],[11,"hash","nix::sys::select","",34,[[["self"],["__h"]]]],[11,"hash","nix::sys::signal","",35,[[["self"],["__h"]]]],[11,"hash","","",112,[[["self"],["__h"]]]],[11,"hash","","",40,[[["self"],["__h"]]]],[11,"hash","","",36,[[["self"],["__h"]]]],[11,"hash","","",41,[[["self"],["__h"]]]],[11,"hash","","",37,[[["self"],["__h"]]]],[11,"hash","","",42,[[["self"],["__h"]]]],[11,"hash","","",38,[[["self"],["__h"]]]],[11,"hash","","",39,[[["self"],["__h"]]]],[11,"hash","nix::sys::socket","",55,[[["self"],["__h"]]]],[11,"hash","","",57,[[["self"],["__h"]]]],[11,"hash","","",58,[[["self"],["__h"]]]],[11,"hash","","",51,[[["self"],["__h"]]]],[11,"hash","","",52,[[["self"],["__h"]]]],[11,"hash","","",50,[[["self"],["h"]]]],[11,"hash","","",56,[[["self"],["__h"]]]],[11,"hash","","",53,[[["self"],["__h"]]]],[11,"hash","nix::sys::socket::sockopt","",114,[[["self"],["__h"]]]],[11,"hash","","",115,[[["self"],["__h"]]]],[11,"hash","","",116,[[["self"],["__h"]]]],[11,"hash","","",117,[[["self"],["__h"]]]],[11,"hash","","",118,[[["self"],["__h"]]]],[11,"hash","","",119,[[["self"],["__h"]]]],[11,"hash","","",120,[[["self"],["__h"]]]],[11,"hash","","",121,[[["self"],["__h"]]]],[11,"hash","","",122,[[["self"],["__h"]]]],[11,"hash","","",123,[[["self"],["__h"]]]],[11,"hash","","",124,[[["self"],["__h"]]]],[11,"hash","","",125,[[["self"],["__h"]]]],[11,"hash","","",126,[[["self"],["__h"]]]],[11,"hash","","",127,[[["self"],["__h"]]]],[11,"hash","","",128,[[["self"],["__h"]]]],[11,"hash","","",129,[[["self"],["__h"]]]],[11,"hash","","",130,[[["self"],["__h"]]]],[11,"hash","","",131,[[["self"],["__h"]]]],[11,"hash","","",132,[[["self"],["__h"]]]],[11,"hash","","",133,[[["self"],["__h"]]]],[11,"hash","","",134,[[["self"],["__h"]]]],[11,"hash","","",135,[[["self"],["__h"]]]],[11,"hash","","",136,[[["self"],["__h"]]]],[11,"hash","","",137,[[["self"],["__h"]]]],[11,"hash","","",138,[[["self"],["__h"]]]],[11,"hash","","",139,[[["self"],["__h"]]]],[11,"hash","nix::sys::socket","",60,[[["self"],["__h"]]]],[11,"hash","","",68,[[["self"],["__h"]]]],[11,"hash","","",69,[[["self"],["__h"]]]],[11,"hash","","",63,[[["self"],["__h"]]]],[11,"hash","","",64,[[["self"],["__h"]]]],[11,"hash","nix::sys::stat","",76,[[["self"],["__h"]]]],[11,"hash","","",77,[[["self"],["__h"]]]],[11,"hash","nix::sys::statvfs","",79,[[["self"],["__h"]]]],[11,"hash","","",80,[[["self"],["__h"]]]],[11,"hash","nix::sys::termios","",82,[[["self"],["__h"]]]],[11,"hash","","",83,[[["self"],["__h"]]]],[11,"hash","","",84,[[["self"],["__h"]]]],[11,"hash","","",85,[[["self"],["__h"]]]],[11,"hash","","",86,[[["self"],["__h"]]]],[11,"hash","","",87,[[["self"],["__h"]]]],[11,"hash","","",88,[[["self"],["__h"]]]],[11,"hash","","",89,[[["self"],["__h"]]]],[11,"hash","","",90,[[["self"],["__h"]]]],[11,"hash","nix::sys::time","",92,[[["self"],["__h"]]]],[11,"hash","","",93,[[["self"],["__h"]]]],[11,"hash","nix::sys::uio","",94,[[["self"],["__h"]]]],[11,"hash","nix::sys::utsname","",95,[[["self"],["__h"]]]],[11,"hash","nix::sys::wait","",97,[[["self"],["__h"]]]],[11,"hash","","",96,[[["self"],["__h"]]]],[11,"hash","nix::unistd","",104,[[["self"],["__h"]]]],[11,"hash","","",105,[[["self"],["__h"]]]],[11,"hash","","",106,[[["self"],["__h"]]]],[11,"hash","","",102,[[["self"],["__h"]]]],[11,"hash","","",103,[[["self"],["__h"]]]],[11,"hash","","",107,[[["self"],["__h"]]]],[11,"from_iter","nix::fcntl","",8,[[["intoiterator"]],["atflags"]]],[11,"from_iter","","",9,[[["intoiterator"]],["oflag"]]],[11,"from_iter","","",10,[[["intoiterator"]],["fdflag"]]],[11,"from_iter","nix::net::if_","",12,[[["intoiterator"]],["interfaceflags"]]],[11,"from_iter","nix::poll","",14,[[["intoiterator"]],["pollflags"]]],[11,"from_iter","nix::sys::event","",25,[[["intoiterator"]],["eventflag"]]],[11,"from_iter","","",26,[[["intoiterator"]],["filterflag"]]],[11,"from_iter","nix::sys::mman","",29,[[["intoiterator"]],["protflags"]]],[11,"from_iter","","",30,[[["intoiterator"]],["mapflags"]]],[11,"from_iter","","",31,[[["intoiterator"]],["msflags"]]],[11,"from_iter","","",32,[[["intoiterator"]],["mlockallflags"]]],[11,"from_iter","nix::sys::signal","",40,[[["intoiterator"]],["saflags"]]],[11,"from_iter","nix::sys::socket","",68,[[["intoiterator"]],["sockflag"]]],[11,"from_iter","","",69,[[["intoiterator"]],["msgflags"]]],[11,"from_iter","nix::sys::stat","",76,[[["intoiterator"]],["sflag"]]],[11,"from_iter","","",77,[[["intoiterator"]],["mode"]]],[11,"from_iter","nix::sys::statvfs","",79,[[["intoiterator"]],["fsflags"]]],[11,"from_iter","nix::sys::termios","",87,[[["intoiterator"]],["inputflags"]]],[11,"from_iter","","",88,[[["intoiterator"]],["outputflags"]]],[11,"from_iter","","",89,[[["intoiterator"]],["controlflags"]]],[11,"from_iter","","",90,[[["intoiterator"]],["localflags"]]],[11,"from_iter","nix::sys::wait","",97,[[["intoiterator"]],["waitpidflag"]]],[11,"from_iter","nix::unistd","",107,[[["intoiterator"]],["accessflags"]]],[11,"fmt","nix::fcntl","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::net::if_","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::poll","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::event","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::mman","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::signal","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::socket","",68,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::stat","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::statvfs","",79,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::termios","",87,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",88,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",89,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",90,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::wait","",97,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::unistd","",107,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::fcntl","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::net::if_","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::poll","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::event","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::mman","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::signal","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::socket","",68,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::stat","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::statvfs","",79,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::termios","",87,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",88,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",89,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",90,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::wait","",97,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::unistd","",107,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::fcntl","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::net::if_","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::poll","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::event","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::mman","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::signal","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::socket","",68,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::stat","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::statvfs","",79,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::termios","",87,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",88,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",89,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",90,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::wait","",97,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::unistd","",107,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::fcntl","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::net::if_","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::poll","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::event","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::mman","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::signal","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::socket","",68,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::stat","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::statvfs","",79,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::termios","",87,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",88,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",89,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",90,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::sys::wait","",97,[[["formatter"],["self"]],["result"]]],[11,"fmt","nix::unistd","",107,[[["formatter"],["self"]],["result"]]],[11,"description","nix::errno","",4,[[["self"]],["str"]]],[11,"description","nix","",0,[[["self"]],["str"]]],[11,"as_raw_fd","nix::dir","",2,[[["self"]],["rawfd"]]],[11,"as_raw_fd","nix::pty","",111,[[["self"]],["rawfd"]]],[11,"into_raw_fd","","",111,[[],["rawfd"]]]],"p":[[4,"Error"],[4,"Type"],[3,"Dir"],[3,"Entry"],[4,"Errno"],[8,"ErrnoSentinel"],[4,"FcntlArg"],[4,"FlockArg"],[3,"AtFlags"],[3,"OFlag"],[3,"FdFlag"],[3,"InterfaceAddress"],[3,"InterfaceFlags"],[3,"PollFd"],[3,"PollFlags"],[3,"Winsize"],[3,"OpenptyResult"],[3,"ForkptyResult"],[4,"AioFsyncMode"],[4,"LioOpcode"],[4,"LioMode"],[4,"AioCancelStat"],[4,"Buffer"],[3,"AioCb"],[4,"EventFilter"],[3,"EventFlag"],[3,"FilterFlag"],[3,"KEvent"],[4,"MmapAdvise"],[3,"ProtFlags"],[3,"MapFlags"],[3,"MsFlags"],[3,"MlockAllFlags"],[4,"Request"],[3,"FdSet"],[4,"Signal"],[4,"SigmaskHow"],[4,"SigHandler"],[4,"SigevNotify"],[3,"SigEvent"],[3,"SaFlags"],[3,"SigSet"],[3,"SigAction"],[3,"cmsghdr"],[3,"msghdr"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_storage"],[3,"sockaddr_un"],[3,"UnixAddr"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[3,"LinkAddr"],[3,"RecvMsg"],[4,"AddressFamily"],[4,"SockAddr"],[4,"InetAddr"],[4,"IpAddr"],[4,"SockType"],[4,"SockProtocol"],[4,"ControlMessageOwned"],[4,"ControlMessage"],[4,"SockLevel"],[4,"Shutdown"],[8,"CmsgBuffer"],[8,"GetSockOpt"],[8,"SetSockOpt"],[3,"SockFlag"],[3,"MsgFlags"],[3,"IpMembershipRequest"],[3,"Ipv6MembershipRequest"],[3,"CmsgSpace"],[3,"FileStat"],[4,"FchmodatFlags"],[4,"UtimensatFlags"],[3,"SFlag"],[3,"Mode"],[3,"Statfs"],[3,"FsFlags"],[3,"Statvfs"],[3,"Termios"],[4,"BaudRate"],[4,"SetArg"],[4,"FlushArg"],[4,"FlowArg"],[4,"SpecialCharacterIndices"],[3,"InputFlags"],[3,"OutputFlags"],[3,"ControlFlags"],[3,"LocalFlags"],[8,"TimeValLike"],[3,"TimeSpec"],[3,"TimeVal"],[3,"IoVec"],[3,"UtsName"],[4,"WaitStatus"],[3,"WaitPidFlag"],[4,"ForkResult"],[4,"FchownatFlags"],[4,"Whence"],[4,"UnlinkatFlags"],[4,"PathconfVar"],[4,"SysconfVar"],[3,"Uid"],[3,"Gid"],[3,"Pid"],[3,"AccessFlags"],[8,"NixPath"],[3,"Iter"],[3,"InterfaceAddressIterator"],[3,"PtyMaster"],[3,"SignalIterator"],[3,"CmsgIterator"],[3,"ReuseAddr"],[3,"ReusePort"],[3,"TcpNoDelay"],[3,"Linger"],[3,"IpAddMembership"],[3,"IpDropMembership"],[3,"Ipv6AddMembership"],[3,"Ipv6DropMembership"],[3,"IpMulticastTtl"],[3,"IpMulticastLoop"],[3,"ReceiveTimeout"],[3,"SendTimeout"],[3,"Broadcast"],[3,"OobInline"],[3,"SocketError"],[3,"KeepAlive"],[3,"TcpKeepAlive"],[3,"RcvBuf"],[3,"SndBuf"],[3,"SockType"],[3,"AcceptConn"],[3,"ReceiveTimestamp"],[3,"Ipv4PacketInfo"],[3,"Ipv6RecvPacketInfo"],[3,"Ipv4RecvIf"],[3,"Ipv4RecvDstAddr"],[6,"SessionId"]]};
searchIndex["num_cpus"] = {"doc":"A crate with utilities to determine the number of CPUs…","i":[[5,"get","num_cpus","Returns the number of available CPUs of the current system.",null,[[],["usize"]]],[5,"get_physical","","Returns the number of physical cores of the current system.",null,[[],["usize"]]]],"p":[]};
searchIndex["page_size"] = {"doc":"This crate provides an easy, fast, cross-platform way to…","i":[[5,"get","page_size","This function retrieves the system's memory page size.",null,[[],["usize"]]],[5,"get_granularity","","This function retrieves the system's memory allocation…",null,[[],["usize"]]]],"p":[]};
searchIndex["parking_lot"] = {"doc":"This library provides implementations of `Mutex`,…","i":[[3,"Condvar","parking_lot","A Condition Variable",null,null],[3,"WaitTimeoutResult","","A type indicating whether a timed wait on a condition…",null,null],[3,"Once","","A synchronization primitive which can be used to run a…",null,null],[3,"RawMutex","","Raw mutex type backed by the parking lot.",null,null],[3,"RawRwLock","","Raw reader-writer lock type backed by the parking lot.",null,null],[3,"RawThreadId","","Implementation of the `GetThreadId` trait for…",null,null],[4,"OnceState","","Current state of a `Once`.",null,null],[13,"New","","A closure has not been executed yet",0,null],[13,"Poisoned","","A closure was executed but panicked.",0,null],[13,"InProgress","","A thread is currently executing a closure.",0,null],[13,"Done","","A closure has completed successfully.",0,null],[11,"timed_out","","Returns whether the wait was known to have timed out.",1,[[["self"]],["bool"]]],[11,"new","","Creates a new condition variable which is ready to be…",2,[[],["condvar"]]],[11,"notify_one","","Wakes up one blocked thread on this condvar.",2,[[["self"]],["bool"]]],[11,"notify_all","","Wakes up all blocked threads on this condvar.",2,[[["self"]],["usize"]]],[11,"wait","","Blocks the current thread until this condition variable…",2,[[["self"],["mutexguard"]]]],[11,"wait_until","","Waits on this condition variable for a notification,…",2,[[["instant"],["self"],["mutexguard"]],["waittimeoutresult"]]],[11,"wait_for","","Waits on this condition variable for a notification,…",2,[[["duration"],["self"],["mutexguard"]],["waittimeoutresult"]]],[11,"poisoned","","Returns whether the associated `Once` has been poisoned.",0,[[["self"]],["bool"]]],[11,"done","","Returns whether the associated `Once` has successfully…",0,[[["self"]],["bool"]]],[11,"new","","Creates a new `Once` value.",3,[[],["once"]]],[11,"state","","Returns the current state of this `Once`.",3,[[["self"]],["oncestate"]]],[11,"call_once","","Performs an initialization routine once and only once. The…",3,[[["self"],["f"]]]],[11,"call_once_force","","Performs the same function as `call_once` except ignores…",3,[[["self"],["f"]]]],[6,"MappedMutexGuard","","An RAII mutex guard returned by `MutexGuard::map`, which…",null,null],[6,"Mutex","","A mutual exclusion primitive useful for protecting shared…",null,null],[6,"MutexGuard","","An RAII implementation of a \"scoped lock\" of a mutex. When…",null,null],[6,"MappedReentrantMutexGuard","","An RAII mutex guard returned by…",null,null],[6,"ReentrantMutex","","A mutex which can be recursively locked by a single thread.",null,null],[6,"ReentrantMutexGuard","","An RAII implementation of a \"scoped lock\" of a reentrant…",null,null],[6,"MappedRwLockReadGuard","","An RAII read lock guard returned by…",null,null],[6,"MappedRwLockWriteGuard","","An RAII write lock guard returned by…",null,null],[6,"RwLock","","A reader-writer lock",null,null],[6,"RwLockReadGuard","","RAII structure used to release the shared read access of a…",null,null],[6,"RwLockUpgradableReadGuard","","RAII structure used to release the upgradable read access…",null,null],[6,"RwLockWriteGuard","","RAII structure used to release the exclusive write access…",null,null],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"clone","","",1,[[["self"]],["waittimeoutresult"]]],[11,"clone","","",0,[[["self"]],["oncestate"]]],[11,"default","","",2,[[],["condvar"]]],[11,"default","","",3,[[],["once"]]],[11,"eq","","",1,[[["waittimeoutresult"],["self"]],["bool"]]],[11,"ne","","",1,[[["waittimeoutresult"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["oncestate"]],["bool"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"lock","","",4,[[["self"]]]],[11,"try_lock","","",4,[[["self"]],["bool"]]],[11,"unlock","","",4,[[["self"]]]],[11,"unlock_fair","","",4,[[["self"]]]],[11,"bump","","",4,[[["self"]]]],[11,"try_lock_until","","",4,[[["self"],["instant"]],["bool"]]],[11,"try_lock_for","","",4,[[["duration"],["self"]],["bool"]]],[11,"nonzero_thread_id","","",6,[[["self"]],["nonzerousize"]]],[11,"lock_exclusive","","",5,[[["self"]]]],[11,"try_lock_exclusive","","",5,[[["self"]],["bool"]]],[11,"unlock_exclusive","","",5,[[["self"]]]],[11,"lock_shared","","",5,[[["self"]]]],[11,"try_lock_shared","","",5,[[["self"]],["bool"]]],[11,"unlock_shared","","",5,[[["self"]]]],[11,"unlock_shared_fair","","",5,[[["self"]]]],[11,"unlock_exclusive_fair","","",5,[[["self"]]]],[11,"bump_shared","","",5,[[["self"]]]],[11,"bump_exclusive","","",5,[[["self"]]]],[11,"downgrade","","",5,[[["self"]]]],[11,"try_lock_shared_for","","",5,[[["self"]],["bool"]]],[11,"try_lock_shared_until","","",5,[[["self"]],["bool"]]],[11,"try_lock_exclusive_for","","",5,[[["duration"],["self"]],["bool"]]],[11,"try_lock_exclusive_until","","",5,[[["self"],["instant"]],["bool"]]],[11,"lock_shared_recursive","","",5,[[["self"]]]],[11,"try_lock_shared_recursive","","",5,[[["self"]],["bool"]]],[11,"try_lock_shared_recursive_for","","",5,[[["self"]],["bool"]]],[11,"try_lock_shared_recursive_until","","",5,[[["self"]],["bool"]]],[11,"lock_upgradable","","",5,[[["self"]]]],[11,"try_lock_upgradable","","",5,[[["self"]],["bool"]]],[11,"unlock_upgradable","","",5,[[["self"]]]],[11,"upgrade","","",5,[[["self"]]]],[11,"try_upgrade","","",5,[[["self"]],["bool"]]],[11,"unlock_upgradable_fair","","",5,[[["self"]]]],[11,"bump_upgradable","","",5,[[["self"]]]],[11,"downgrade_upgradable","","",5,[[["self"]]]],[11,"downgrade_to_upgradable","","",5,[[["self"]]]],[11,"try_lock_upgradable_until","","",5,[[["self"],["instant"]],["bool"]]],[11,"try_lock_upgradable_for","","",5,[[["duration"],["self"]],["bool"]]],[11,"try_upgrade_until","","",5,[[["self"],["instant"]],["bool"]]],[11,"try_upgrade_for","","",5,[[["duration"],["self"]],["bool"]]]],"p":[[4,"OnceState"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"Once"],[3,"RawMutex"],[3,"RawRwLock"],[3,"RawThreadId"]]};
searchIndex["parking_lot_core"] = {"doc":"This library exposes a low-level API for creating your own…","i":[[3,"ParkToken","parking_lot_core","A value associated with a parked thread which can be used…",null,null],[12,"0","","",0,null],[3,"UnparkResult","","Result of an unpark operation.",null,null],[12,"unparked_threads","","The number of threads that were unparked.",1,null],[12,"requeued_threads","","The number of threads that were requeued.",1,null],[12,"have_more_threads","","Whether there are any threads remaining in the queue. This…",1,null],[12,"be_fair","","This is set to true on average once every 0.5ms for any…",1,null],[3,"UnparkToken","","A value which is passed from an unparker to a parked thread.",null,null],[12,"0","","",2,null],[3,"SpinWait","","A counter used to perform exponential backoff in spin loops.",null,null],[4,"FilterOp","","Operation that `unpark_filter` should perform for each…",null,null],[13,"Unpark","","Unpark the thread and continue scanning the list of parked…",3,null],[13,"Skip","","Don't unpark the thread and continue scanning the list of…",3,null],[13,"Stop","","Don't unpark the thread and stop scanning the list of…",3,null],[4,"ParkResult","","Result of a park operation.",null,null],[13,"Unparked","","We were unparked by another thread with the given token.",4,null],[13,"Invalid","","The validation callback returned false.",4,null],[13,"TimedOut","","The timeout expired.",4,null],[4,"RequeueOp","","Operation that `unpark_requeue` should perform.",null,null],[13,"Abort","","Abort the operation without doing anything.",5,null],[13,"UnparkOneRequeueRest","","Unpark one thread and requeue the rest onto the target…",5,null],[13,"RequeueAll","","Requeue all threads onto the target queue.",5,null],[13,"UnparkOne","","Unpark one thread and leave the rest parked. No requeuing…",5,null],[13,"RequeueOne","","Requeue one thread and leave the rest parked on the…",5,null],[5,"park","","Parks the current thread in the queue associated with the…",null,[[["usize"],["instant"],["option",["instant"]],["parktoken"]],["parkresult"]]],[5,"unpark_all","","Unparks all threads in the queue associated with the given…",null,[[["usize"],["unparktoken"]],["usize"]]],[5,"unpark_filter","","Unparks a number of threads from the front of the queue…",null,[[["usize"]],["unparkresult"]]],[5,"unpark_one","","Unparks one thread from the queue associated with the…",null,[[["usize"]],["unparkresult"]]],[5,"unpark_requeue","","Removes all threads from the queue associated with…",null,[[["usize"]],["unparkresult"]]],[11,"is_unparked","","Returns true if we were unparked by another thread.",4,[[],["bool"]]],[11,"new","","Creates a new `SpinWait`.",6,[[],["self"]]],[11,"reset","","Resets a `SpinWait` to its initial state.",6,[[["self"]]]],[11,"spin","","Spins until the sleep threshold has been reached.",6,[[["self"]],["bool"]]],[11,"spin_no_yield","","Spins without yielding the thread to the OS.",6,[[["self"]]]],[0,"deadlock","","[Experimental] Deadlock detection",null,null],[5,"acquire_resource","parking_lot_core::deadlock","Acquire a resource identified by key in the deadlock…",null,[[["usize"]]]],[5,"release_resource","","Release a resource identified by key in the deadlock…",null,[[["usize"]]]],[17,"DEFAULT_PARK_TOKEN","parking_lot_core","A default park token to use.",null,null],[17,"DEFAULT_UNPARK_TOKEN","","A default unpark token to use.",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"clone","","",4,[[["self"]],["parkresult"]]],[11,"clone","","",1,[[["self"]],["unparkresult"]]],[11,"clone","","",5,[[["self"]],["requeueop"]]],[11,"clone","","",3,[[["self"]],["filterop"]]],[11,"clone","","",2,[[["self"]],["unparktoken"]]],[11,"clone","","",0,[[["self"]],["parktoken"]]],[11,"default","","",1,[[],["unparkresult"]]],[11,"default","","",6,[[],["spinwait"]]],[11,"eq","","",4,[[["parkresult"],["self"]],["bool"]]],[11,"ne","","",4,[[["parkresult"],["self"]],["bool"]]],[11,"eq","","",1,[[["self"],["unparkresult"]],["bool"]]],[11,"ne","","",1,[[["self"],["unparkresult"]],["bool"]]],[11,"eq","","",5,[[["requeueop"],["self"]],["bool"]]],[11,"eq","","",3,[[["self"],["filterop"]],["bool"]]],[11,"eq","","",2,[[["self"],["unparktoken"]],["bool"]]],[11,"ne","","",2,[[["self"],["unparktoken"]],["bool"]]],[11,"eq","","",0,[[["parktoken"],["self"]],["bool"]]],[11,"ne","","",0,[[["parktoken"],["self"]],["bool"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]]],"p":[[3,"ParkToken"],[3,"UnparkResult"],[3,"UnparkToken"],[4,"FilterOp"],[4,"ParkResult"],[4,"RequeueOp"],[3,"SpinWait"]]};
searchIndex["proc_macro2"] = {"doc":"A wrapper around the procedural macro API of the…","i":[[3,"TokenStream","proc_macro2","An abstract stream of tokens, or more concretely a…",null,null],[3,"LexError","","Error returned from `TokenStream::from_str`.",null,null],[3,"Span","","A region of source code, along with macro expansion…",null,null],[3,"Group","","A delimited token stream.",null,null],[3,"Punct","","An `Punct` is an single punctuation character like `+`,…",null,null],[3,"Ident","","A word of Rust code, which may be a keyword or legal…",null,null],[3,"Literal","","A literal string (`\"hello\"`), byte string (`b\"hello\"`),…",null,null],[4,"TokenTree","","A single token or a delimited sequence of token trees…",null,null],[13,"Group","","A token stream surrounded by bracket delimiters.",0,null],[13,"Ident","","An identifier.",0,null],[13,"Punct","","A single punctuation character (`+`, `,`, `$`, etc.).",0,null],[13,"Literal","","A literal character (`'a'`), string (`\"hello\"`), number…",0,null],[4,"Delimiter","","Describes how a sequence of token trees is delimited.",null,null],[13,"Parenthesis","","`( ... )`",1,null],[13,"Brace","","`{ ... }`",1,null],[13,"Bracket","","`[ ... ]`",1,null],[13,"None","","`Ø ... Ø`",1,null],[4,"Spacing","","Whether an `Punct` is followed immediately by another…",null,null],[13,"Alone","","E.g. `+` is `Alone` in `+ =`, `+ident` or `+()`.",2,null],[13,"Joint","","E.g. `+` is `Joint` in `+=` or `'` is `Joint` in `'#`.",2,null],[0,"token_stream","","Public implementation details for the `TokenStream` type,…",null,null],[3,"IntoIter","proc_macro2::token_stream","An iterator over `TokenStream`'s `TokenTree`s.",null,null],[11,"new","proc_macro2","Returns an empty `TokenStream` containing no token trees.",3,[[],["tokenstream"]]],[11,"is_empty","","Checks if this `TokenStream` is empty.",3,[[["self"]],["bool"]]],[11,"call_site","","The span of the invocation of the current procedural macro.",4,[[],["span"]]],[11,"unwrap","","Convert `proc_macro2::Span` to `proc_macro::Span`.",4,[[],["span"]]],[11,"join","","Create a new span encompassing `self` and `other`.",4,[[["self"],["span"]],[["option",["span"]],["span"]]]],[11,"span","","Returns the span of this tree, delegating to the `span`…",0,[[["self"]],["span"]]],[11,"set_span","","Configures the span for only this token.",0,[[["self"],["span"]]]],[11,"new","","Creates a new `Group` with the given delimiter and token…",5,[[["delimiter"],["tokenstream"]],["group"]]],[11,"delimiter","","Returns the delimiter of this `Group`",5,[[["self"]],["delimiter"]]],[11,"stream","","Returns the `TokenStream` of tokens that are delimited in…",5,[[["self"]],["tokenstream"]]],[11,"span","","Returns the span for the delimiters of this token stream,…",5,[[["self"]],["span"]]],[11,"span_open","","Returns the span pointing to the opening delimiter of this…",5,[[["self"]],["span"]]],[11,"span_close","","Returns the span pointing to the closing delimiter of this…",5,[[["self"]],["span"]]],[11,"set_span","","Configures the span for this `Group`'s delimiters, but not…",5,[[["self"],["span"]]]],[11,"new","","Creates a new `Punct` from the given character and spacing.",6,[[["spacing"],["char"]],["punct"]]],[11,"as_char","","Returns the value of this punctuation character as `char`.",6,[[["self"]],["char"]]],[11,"spacing","","Returns the spacing of this punctuation character,…",6,[[["self"]],["spacing"]]],[11,"span","","Returns the span for this punctuation character.",6,[[["self"]],["span"]]],[11,"set_span","","Configure the span for this punctuation character.",6,[[["self"],["span"]]]],[11,"new","","Creates a new `Ident` with the given `string` as well as…",7,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",7,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",7,[[["self"],["span"]]]],[11,"u8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u8"]],["literal"]]],[11,"u16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u16"]],["literal"]]],[11,"u32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u32"]],["literal"]]],[11,"u64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u64"]],["literal"]]],[11,"u128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["u128"]],["literal"]]],[11,"usize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["usize"]],["literal"]]],[11,"i8_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i8"]],["literal"]]],[11,"i16_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i16"]],["literal"]]],[11,"i32_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i32"]],["literal"]]],[11,"i64_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i64"]],["literal"]]],[11,"i128_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["i128"]],["literal"]]],[11,"isize_suffixed","","Creates a new suffixed integer literal with the specified…",8,[[["isize"]],["literal"]]],[11,"u8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u8"]],["literal"]]],[11,"u16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u16"]],["literal"]]],[11,"u32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u32"]],["literal"]]],[11,"u64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u64"]],["literal"]]],[11,"u128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["u128"]],["literal"]]],[11,"usize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["usize"]],["literal"]]],[11,"i8_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i8"]],["literal"]]],[11,"i16_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i16"]],["literal"]]],[11,"i32_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i32"]],["literal"]]],[11,"i64_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i64"]],["literal"]]],[11,"i128_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["i128"]],["literal"]]],[11,"isize_unsuffixed","","Creates a new unsuffixed integer literal with the…",8,[[["isize"]],["literal"]]],[11,"f64_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[["f64"]],["literal"]]],[11,"f64_suffixed","","Creates a new suffixed floating-point literal.",8,[[["f64"]],["literal"]]],[11,"f32_unsuffixed","","Creates a new unsuffixed floating-point literal.",8,[[["f32"]],["literal"]]],[11,"f32_suffixed","","Creates a new suffixed floating-point literal.",8,[[["f32"]],["literal"]]],[11,"string","","String literal.",8,[[["str"]],["literal"]]],[11,"character","","Character literal.",8,[[["char"]],["literal"]]],[11,"byte_string","","Byte string literal.",8,[[],["literal"]]],[11,"span","","Returns the span encompassing this literal.",8,[[["self"]],["span"]]],[11,"set_span","","Configures the span associated for this literal.",8,[[["self"],["span"]]]],[11,"subspan","","Returns a `Span` that is a subset of `self.span()`…",8,[[["usize"],["self"],["rangebounds",["usize"]]],[["option",["span"]],["span"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","proc_macro2::token_stream","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","proc_macro2","",4,[[["span"]],["span"]]],[11,"from","","",3,[[["tokenstream"]],["tokenstream"]]],[11,"from","","",3,[[["tokentree"]],["self"]]],[11,"from","","",0,[[["group"]],["tokentree"]]],[11,"from","","",0,[[["ident"]],["tokentree"]]],[11,"from","","",0,[[["punct"]],["tokentree"]]],[11,"from","","",0,[[["literal"]],["tokentree"]]],[11,"extend","","",3,[[["self"],["intoiterator"]]]],[11,"extend","","",3,[[["self"],["intoiterator"]]]],[11,"into_iter","","",3,[[],["intoiter"]]],[11,"next","proc_macro2::token_stream","",10,[[["self"]],[["tokentree"],["option",["tokentree"]]]]],[11,"clone","proc_macro2","",3,[[["self"]],["tokenstream"]]],[11,"clone","","",4,[[["self"]],["span"]]],[11,"clone","","",0,[[["self"]],["tokentree"]]],[11,"clone","","",5,[[["self"]],["group"]]],[11,"clone","","",1,[[["self"]],["delimiter"]]],[11,"clone","","",6,[[["self"]],["punct"]]],[11,"clone","","",2,[[["self"]],["spacing"]]],[11,"clone","","",7,[[["self"]],["ident"]]],[11,"clone","","",8,[[["self"]],["literal"]]],[11,"clone","proc_macro2::token_stream","",10,[[["self"]],["intoiter"]]],[11,"default","proc_macro2","",3,[[],["self"]]],[11,"cmp","","",7,[[["ident"],["self"]],["ordering"]]],[11,"eq","","",1,[[["delimiter"],["self"]],["bool"]]],[11,"eq","","",2,[[["self"],["spacing"]],["bool"]]],[11,"eq","","",7,[[["ident"],["self"]],["bool"]]],[11,"eq","","",7,[[["t"],["self"]],["bool"]]],[11,"partial_cmp","","",7,[[["ident"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","proc_macro2::token_stream","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","proc_macro2","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"from_str","","",3,[[["str"]],[["result",["tokenstream","lexerror"]],["tokenstream"],["lexerror"]]]],[11,"hash","","",7,[[["self"],["h"]]]],[11,"from_iter","","",3,[[["intoiterator"]],["self"]]],[11,"from_iter","","",3,[[["intoiterator"]],["self"]]]],"p":[[4,"TokenTree"],[4,"Delimiter"],[4,"Spacing"],[3,"TokenStream"],[3,"Span"],[3,"Group"],[3,"Punct"],[3,"Ident"],[3,"Literal"],[3,"LexError"],[3,"IntoIter"]]};
searchIndex["quote"] = {"doc":"This crate provides the [`quote!`] macro for turning Rust…","i":[[8,"TokenStreamExt","quote","TokenStream extension trait with methods for appending…",null,null],[10,"append","","For use by `ToTokens` implementations.",0,[[["u"],["self"]]]],[10,"append_all","","For use by `ToTokens` implementations.",0,[[["self"],["i"]]]],[10,"append_separated","","For use by `ToTokens` implementations.",0,[[["u"],["self"],["i"]]]],[10,"append_terminated","","For use by `ToTokens` implementations.",0,[[["u"],["self"],["i"]]]],[8,"IdentFragment","","Specialized formatting trait used by `format_ident!`.",null,null],[10,"fmt","","Format this value as an identifier fragment.",1,[[["formatter"],["self"]],["result"]]],[11,"span","","Span associated with this `IdentFragment`.",1,[[["self"]],[["span"],["option",["span"]]]]],[8,"ToTokens","","Types that can be interpolated inside a `quote!` invocation.",null,null],[10,"to_tokens","","Write `self` to the given `TokenStream`.",2,[[["tokenstream"],["self"]]]],[11,"to_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[["self"]],["tokenstream"]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream"]]],[14,"format_ident","","Formatting macro for constructing `Ident`s.",null,null],[14,"quote","","The whole point.",null,null],[14,"quote_spanned","","Same as `quote!`, but applies a given span to all tokens…",null,null],[11,"span","","Span associated with this `IdentFragment`.",1,[[["self"]],[["span"],["option",["span"]]]]],[11,"to_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[["self"]],["tokenstream"]]],[11,"into_token_stream","","Convert `self` directly into a `TokenStream` object.",2,[[],["tokenstream"]]]],"p":[[8,"TokenStreamExt"],[8,"IdentFragment"],[8,"ToTokens"]]};
searchIndex["raw_cpuid"] = {"doc":"","i":[[3,"CpuId","raw_cpuid","Main type used to query for information about the CPU…",null,null],[3,"CpuIdResult","","Low-level data-structure to store result of cpuid…",null,null],[12,"eax","","Return value EAX register",0,null],[12,"ebx","","Return value EBX register",0,null],[12,"ecx","","Return value ECX register",0,null],[12,"edx","","Return value EDX register",0,null],[3,"VendorInfo","","",null,null],[3,"CacheInfoIter","","Used to iterate over cache information contained in cpuid…",null,null],[3,"CacheInfo","","Describes any kind of cache (TLB, Data and Instruction…",null,null],[12,"num","","Number as retrieved from cpuid",1,null],[12,"typ","","Cache type",1,null],[3,"ProcessorSerial","","",null,null],[3,"FeatureInfo","","",null,null],[3,"CacheParametersIter","","",null,null],[3,"CacheParameter","","",null,null],[3,"MonitorMwaitInfo","","",null,null],[3,"ThermalPowerInfo","","",null,null],[3,"ExtendedFeatures","","",null,null],[3,"DirectCacheAccessInfo","","",null,null],[3,"PerformanceMonitoringInfo","","",null,null],[3,"ExtendedTopologyIter","","Iterates over the system topology in order to retrieve…",null,null],[3,"ExtendedTopologyLevel","","Gives detailed information about the current level in the…",null,null],[3,"ExtendedStateInfo","","",null,null],[3,"ExtendedStateIter","","",null,null],[3,"ExtendedState","","",null,null],[12,"subleaf","","",2,null],[3,"RdtMonitoringInfo","","",null,null],[3,"L3MonitoringInfo","","",null,null],[3,"RdtAllocationInfo","","",null,null],[3,"L3CatInfo","","L3 Cache Allocation Technology Enumeration Sub-leaf (EAX =…",null,null],[3,"L2CatInfo","","L2 Cache Allocation Technology Enumeration Sub-leaf (EAX =…",null,null],[3,"MemBwAllocationInfo","","Memory Bandwidth Allocation Enumeration Sub-leaf (EAX =…",null,null],[3,"SgxInfo","","Intel SGX Capability Enumeration Leaf, sub-leaf 0 (EAX =…",null,null],[3,"SgxSectionIter","","Iterator over the SGX sub-leafs (ECX >= 2).",null,null],[3,"EpcSection","","EBX:EAX and EDX:ECX provide information on the Enclave…",null,null],[3,"ProcessorTraceInfo","","",null,null],[3,"TscInfo","","Time Stamp Counter and Nominal Core Crystal Clock…",null,null],[3,"ProcessorFrequencyInfo","","Processor Frequency Information",null,null],[3,"DatIter","","Deterministic Address Translation Structure Iterator",null,null],[3,"DatInfo","","Deterministic Address Translation Structure",null,null],[3,"SoCVendorInfo","","",null,null],[3,"SoCVendorAttributesIter","","",null,null],[3,"SoCVendorBrand","","",null,null],[3,"HypervisorInfo","","Information about Hypervisor…",null,null],[3,"ExtendedFunctionInfo","","",null,null],[3,"MemoryEncryptionInfo","","",null,null],[4,"CacheInfoType","","What type of cache are we dealing with?",null,null],[13,"General","","",3,null],[13,"Cache","","",3,null],[13,"TLB","","",3,null],[13,"STLB","","",3,null],[13,"DTLB","","",3,null],[13,"Prefetch","","",3,null],[4,"CacheType","","",null,null],[13,"Null","","Null - No more caches",4,null],[13,"Data","","Data cache",4,null],[13,"Instruction","","Instruction cache",4,null],[13,"Unified","","Data and Instruction cache",4,null],[13,"Reserved","","4-31 = Reserved",4,null],[4,"TopologyType","","What type of core we have at this level in the topology…",null,null],[13,"Invalid","","",5,null],[13,"SMT","","Hyper-thread (Simultaneous multithreading)",5,null],[13,"Core","","",5,null],[4,"SgxSectionInfo","","Intel SGX EPC Enumeration Leaf, sub-leaves (EAX = 12H, ECX…",null,null],[13,"Epc","","",6,null],[4,"DatType","","Deterministic Address Translation cache type (EDX bits 04…",null,null],[13,"Null","","Null (indicates this sub-leaf is not valid).",7,null],[13,"DataTLB","","",7,null],[13,"InstructionTLB","","",7,null],[13,"UnifiedTLB","","Some unified TLBs will allow a single TLB entry to satisfy…",7,null],[13,"Unknown","","",7,null],[4,"Hypervisor","","Identifies the different Hypervisor products.",null,null],[13,"Xen","","",8,null],[13,"VMware","","",8,null],[13,"HyperV","","",8,null],[13,"KVM","","",8,null],[13,"Unknown","","",8,null],[4,"L2Associativity","","",null,null],[13,"Disabled","","",9,null],[13,"DirectMapped","","",9,null],[13,"TwoWay","","",9,null],[13,"FourWay","","",9,null],[13,"EightWay","","",9,null],[13,"SixteenWay","","",9,null],[13,"FullyAssiciative","","",9,null],[13,"Unknown","","",9,null],[0,"native_cpuid","","Uses Rust's `cpuid` function from the `arch` module.",null,null],[5,"cpuid_count","raw_cpuid::native_cpuid","",null,[[["u32"]],["cpuidresult"]]],[17,"CACHE_INFO_TABLE","raw_cpuid","This table is taken from Intel manual (Section CPUID…",null,null],[11,"new","","Return new CPUID struct.",10,[[],["cpuid"]]],[11,"get_vendor_info","","Return information about vendor. This is typically a ASCII…",10,[[["self"]],[["vendorinfo"],["option",["vendorinfo"]]]]],[11,"get_feature_info","","Query a set of features that are available on this CPU.",10,[[["self"]],[["option",["featureinfo"]],["featureinfo"]]]],[11,"get_cache_info","","Query basic information about caches. This will just…",10,[[["self"]],[["cacheinfoiter"],["option",["cacheinfoiter"]]]]],[11,"get_processor_serial","","Retrieve serial number of processor.",10,[[["self"]],[["processorserial"],["option",["processorserial"]]]]],[11,"get_cache_parameters","","Retrieve more elaborate information about caches (as…",10,[[["self"]],[["option",["cacheparametersiter"]],["cacheparametersiter"]]]],[11,"get_monitor_mwait_info","","Information about how monitor/mwait works on this CPU.",10,[[["self"]],[["option",["monitormwaitinfo"]],["monitormwaitinfo"]]]],[11,"get_thermal_power_info","","Query information about thermal and power management…",10,[[["self"]],[["option",["thermalpowerinfo"]],["thermalpowerinfo"]]]],[11,"get_extended_feature_info","","Find out about more features supported by this CPU.",10,[[["self"]],[["extendedfeatures"],["option",["extendedfeatures"]]]]],[11,"get_direct_cache_access_info","","Direct cache access info.",10,[[["self"]],[["option",["directcacheaccessinfo"]],["directcacheaccessinfo"]]]],[11,"get_performance_monitoring_info","","Info about performance monitoring (how many counters etc.).",10,[[["self"]],[["performancemonitoringinfo"],["option",["performancemonitoringinfo"]]]]],[11,"get_extended_topology_info","","Information about topology (how many cores and what kind…",10,[[["self"]],[["extendedtopologyiter"],["option",["extendedtopologyiter"]]]]],[11,"get_extended_state_info","","Information for saving/restoring extended register state.",10,[[["self"]],[["option",["extendedstateinfo"]],["extendedstateinfo"]]]],[11,"get_rdt_monitoring_info","","Quality of service informations.",10,[[["self"]],[["option",["rdtmonitoringinfo"]],["rdtmonitoringinfo"]]]],[11,"get_rdt_allocation_info","","Quality of service enforcement information.",10,[[["self"]],[["rdtallocationinfo"],["option",["rdtallocationinfo"]]]]],[11,"get_sgx_info","","",10,[[["self"]],[["sgxinfo"],["option",["sgxinfo"]]]]],[11,"get_processor_trace_info","","Intel Processor Trace Enumeration Information.",10,[[["self"]],[["processortraceinfo"],["option",["processortraceinfo"]]]]],[11,"get_tsc_info","","Time Stamp Counter/Core Crystal Clock Information.",10,[[["self"]],[["tscinfo"],["option",["tscinfo"]]]]],[11,"get_processor_frequency_info","","Processor Frequency Information.",10,[[["self"]],[["option",["processorfrequencyinfo"]],["processorfrequencyinfo"]]]],[11,"deterministic_address_translation_info","","",10,[[["self"]],[["option",["datiter"]],["datiter"]]]],[11,"get_soc_vendor_info","","",10,[[["self"]],[["option",["socvendorinfo"]],["socvendorinfo"]]]],[11,"get_hypervisor_info","","",10,[[["self"]],[["hypervisorinfo"],["option",["hypervisorinfo"]]]]],[11,"get_extended_function_info","","Extended functionality of CPU described here (including…",10,[[["self"]],[["option",["extendedfunctioninfo"]],["extendedfunctioninfo"]]]],[11,"get_memory_encryption_info","","",10,[[["self"]],[["memoryencryptioninfo"],["option",["memoryencryptioninfo"]]]]],[11,"as_string","","Return vendor identification as human readable string.",11,[[["self"]],["str"]]],[11,"desc","","Description of the cache (from Intel Manual)",1,[[["self"]],["str"]]],[11,"serial_lower","","Bits 00-31 of 96 bit processor serial number. (Available…",12,[[["self"]],["u32"]]],[11,"serial_middle","","Bits 32-63 of 96 bit processor serial number. (Available…",12,[[["self"]],["u32"]]],[11,"extended_family_id","","Version Information: Extended Family",13,[[["self"]],["u8"]]],[11,"extended_model_id","","Version Information: Extended Model",13,[[["self"]],["u8"]]],[11,"family_id","","Version Information: Family",13,[[["self"]],["u8"]]],[11,"model_id","","Version Information: Model",13,[[["self"]],["u8"]]],[11,"stepping_id","","Version Information: Stepping ID",13,[[["self"]],["u8"]]],[11,"brand_index","","Brand Index",13,[[["self"]],["u8"]]],[11,"cflush_cache_line_size","","CLFLUSH line size (Value ∗ 8 = cache line size in bytes)",13,[[["self"]],["u8"]]],[11,"initial_local_apic_id","","Initial APIC ID",13,[[["self"]],["u8"]]],[11,"max_logical_processor_ids","","Maximum number of addressable IDs for logical processors…",13,[[["self"]],["u8"]]],[11,"has_sse3","","Streaming SIMD Extensions 3 (SSE3). A value of 1 indicates…",13,[[["self"]],["bool"]]],[11,"has_pclmulqdq","","PCLMULQDQ. A value of 1 indicates the processor supports…",13,[[["self"]],["bool"]]],[11,"has_ds_area","","64-bit DS Area. A value of 1 indicates the processor…",13,[[["self"]],["bool"]]],[11,"has_monitor_mwait","","MONITOR/MWAIT. A value of 1 indicates the processor…",13,[[["self"]],["bool"]]],[11,"has_cpl","","CPL Qualified Debug Store. A value of 1 indicates the…",13,[[["self"]],["bool"]]],[11,"has_vmx","","Virtual Machine Extensions. A value of 1 indicates that…",13,[[["self"]],["bool"]]],[11,"has_smx","","Safer Mode Extensions. A value of 1 indicates that the…",13,[[["self"]],["bool"]]],[11,"has_eist","","Enhanced Intel SpeedStep® technology. A value of 1…",13,[[["self"]],["bool"]]],[11,"has_tm2","","Thermal Monitor 2. A value of 1 indicates whether the…",13,[[["self"]],["bool"]]],[11,"has_ssse3","","A value of 1 indicates the presence of the Supplemental…",13,[[["self"]],["bool"]]],[11,"has_cnxtid","","L1 Context ID. A value of 1 indicates the L1 data cache…",13,[[["self"]],["bool"]]],[11,"has_fma","","A value of 1 indicates the processor supports FMA…",13,[[["self"]],["bool"]]],[11,"has_cmpxchg16b","","CMPXCHG16B Available. A value of 1 indicates that the…",13,[[["self"]],["bool"]]],[11,"has_pdcm","","Perfmon and Debug Capability: A value of 1 indicates the…",13,[[["self"]],["bool"]]],[11,"has_pcid","","Process-context identifiers. A value of 1 indicates that…",13,[[["self"]],["bool"]]],[11,"has_dca","","A value of 1 indicates the processor supports the ability…",13,[[["self"]],["bool"]]],[11,"has_sse41","","A value of 1 indicates that the processor supports SSE4.1.",13,[[["self"]],["bool"]]],[11,"has_sse42","","A value of 1 indicates that the processor supports SSE4.2.",13,[[["self"]],["bool"]]],[11,"has_x2apic","","A value of 1 indicates that the processor supports x2APIC…",13,[[["self"]],["bool"]]],[11,"has_movbe","","A value of 1 indicates that the processor supports MOVBE…",13,[[["self"]],["bool"]]],[11,"has_popcnt","","A value of 1 indicates that the processor supports the…",13,[[["self"]],["bool"]]],[11,"has_tsc_deadline","","A value of 1 indicates that the processors local APIC…",13,[[["self"]],["bool"]]],[11,"has_aesni","","A value of 1 indicates that the processor supports the…",13,[[["self"]],["bool"]]],[11,"has_xsave","","A value of 1 indicates that the processor supports the…",13,[[["self"]],["bool"]]],[11,"has_oxsave","","A value of 1 indicates that the OS has enabled…",13,[[["self"]],["bool"]]],[11,"has_avx","","A value of 1 indicates the processor supports the AVX…",13,[[["self"]],["bool"]]],[11,"has_f16c","","A value of 1 indicates that processor supports 16-bit…",13,[[["self"]],["bool"]]],[11,"has_rdrand","","A value of 1 indicates that processor supports RDRAND…",13,[[["self"]],["bool"]]],[11,"has_fpu","","Floating Point Unit On-Chip. The processor contains an x87…",13,[[["self"]],["bool"]]],[11,"has_vme","","Virtual 8086 Mode Enhancements. Virtual 8086 mode…",13,[[["self"]],["bool"]]],[11,"has_de","","Debugging Extensions. Support for I/O breakpoints,…",13,[[["self"]],["bool"]]],[11,"has_pse","","Page Size Extension. Large pages of size 4 MByte are…",13,[[["self"]],["bool"]]],[11,"has_tsc","","Time Stamp Counter. The RDTSC instruction is supported,…",13,[[["self"]],["bool"]]],[11,"has_msr","","Model Specific Registers RDMSR and WRMSR Instructions. The…",13,[[["self"]],["bool"]]],[11,"has_pae","","Physical Address Extension. Physical addresses greater…",13,[[["self"]],["bool"]]],[11,"has_mce","","Machine Check Exception. Exception 18 is defined for…",13,[[["self"]],["bool"]]],[11,"has_cmpxchg8b","","CMPXCHG8B Instruction. The compare-and-exchange 8 bytes…",13,[[["self"]],["bool"]]],[11,"has_apic","","APIC On-Chip. The processor contains an Advanced…",13,[[["self"]],["bool"]]],[11,"has_sysenter_sysexit","","SYSENTER and SYSEXIT Instructions. The SYSENTER and…",13,[[["self"]],["bool"]]],[11,"has_mtrr","","Memory Type Range Registers. MTRRs are supported. The…",13,[[["self"]],["bool"]]],[11,"has_pge","","Page Global Bit. The global bit is supported in…",13,[[["self"]],["bool"]]],[11,"has_mca","","Machine Check Architecture. A value of 1 indicates the…",13,[[["self"]],["bool"]]],[11,"has_cmov","","Conditional Move Instructions. The conditional move…",13,[[["self"]],["bool"]]],[11,"has_pat","","Page Attribute Table. Page Attribute Table is supported.…",13,[[["self"]],["bool"]]],[11,"has_pse36","","36-Bit Page Size Extension. 4-MByte pages addressing…",13,[[["self"]],["bool"]]],[11,"has_psn","","Processor Serial Number. The processor supports the 96-bit…",13,[[["self"]],["bool"]]],[11,"has_clflush","","CLFLUSH Instruction. CLFLUSH Instruction is supported.",13,[[["self"]],["bool"]]],[11,"has_ds","","Debug Store. The processor supports the ability to write…",13,[[["self"]],["bool"]]],[11,"has_acpi","","Thermal Monitor and Software Controlled Clock Facilities.…",13,[[["self"]],["bool"]]],[11,"has_mmx","","Intel MMX Technology. The processor supports the Intel MMX…",13,[[["self"]],["bool"]]],[11,"has_fxsave_fxstor","","FXSAVE and FXRSTOR Instructions. The FXSAVE and FXRSTOR…",13,[[["self"]],["bool"]]],[11,"has_sse","","SSE. The processor supports the SSE extensions.",13,[[["self"]],["bool"]]],[11,"has_sse2","","SSE2. The processor supports the SSE2 extensions.",13,[[["self"]],["bool"]]],[11,"has_ss","","Self Snoop. The processor supports the management of…",13,[[["self"]],["bool"]]],[11,"has_htt","","Max APIC IDs reserved field is Valid. A value of 0 for HTT…",13,[[["self"]],["bool"]]],[11,"has_tm","","Thermal Monitor. The processor implements the thermal…",13,[[["self"]],["bool"]]],[11,"has_pbe","","Pending Break Enable. The processor supports the use of…",13,[[["self"]],["bool"]]],[11,"cache_type","","Cache Type",14,[[["self"]],["cachetype"]]],[11,"level","","Cache Level (starts at 1)",14,[[["self"]],["u8"]]],[11,"is_self_initializing","","Self Initializing cache level (does not need SW…",14,[[["self"]],["bool"]]],[11,"is_fully_associative","","Fully Associative cache",14,[[["self"]],["bool"]]],[11,"max_cores_for_cache","","Maximum number of addressable IDs for logical processors…",14,[[["self"]],["usize"]]],[11,"max_cores_for_package","","Maximum number of addressable IDs for processor cores in…",14,[[["self"]],["usize"]]],[11,"coherency_line_size","","System Coherency Line Size (Bits 11-00)",14,[[["self"]],["usize"]]],[11,"physical_line_partitions","","Physical Line partitions (Bits 21-12)",14,[[["self"]],["usize"]]],[11,"associativity","","Ways of associativity (Bits 31-22)",14,[[["self"]],["usize"]]],[11,"sets","","Number of Sets (Bits 31-00)",14,[[["self"]],["usize"]]],[11,"is_write_back_invalidate","","Write-Back Invalidate/Invalidate (Bit 0) False:…",14,[[["self"]],["bool"]]],[11,"is_inclusive","","Cache Inclusiveness (Bit 1) False: Cache is not inclusive…",14,[[["self"]],["bool"]]],[11,"has_complex_indexing","","Complex Cache Indexing (Bit 2) False: Direct mapped cache.…",14,[[["self"]],["bool"]]],[11,"smallest_monitor_line","","Smallest monitor-line size in bytes (default is…",15,[[["self"]],["u16"]]],[11,"largest_monitor_line","","Largest monitor-line size in bytes (default is processor's…",15,[[["self"]],["u16"]]],[11,"extensions_supported","","Enumeration of Monitor-Mwait extensions (beyond EAX and…",15,[[["self"]],["bool"]]],[11,"interrupts_as_break_event","","Supports treating interrupts as break-event for MWAIT,…",15,[[["self"]],["bool"]]],[11,"supported_c0_states","","Number of C0 sub C-states supported using MWAIT (Bits 03 -…",15,[[["self"]],["u16"]]],[11,"supported_c1_states","","Number of C1 sub C-states supported using MWAIT (Bits 07 -…",15,[[["self"]],["u16"]]],[11,"supported_c2_states","","Number of C2 sub C-states supported using MWAIT (Bits 11 -…",15,[[["self"]],["u16"]]],[11,"supported_c3_states","","Number of C3 sub C-states supported using MWAIT (Bits 15 -…",15,[[["self"]],["u16"]]],[11,"supported_c4_states","","Number of C4 sub C-states supported using MWAIT (Bits 19 -…",15,[[["self"]],["u16"]]],[11,"supported_c5_states","","Number of C5 sub C-states supported using MWAIT (Bits 23 -…",15,[[["self"]],["u16"]]],[11,"supported_c6_states","","Number of C6 sub C-states supported using MWAIT (Bits 27 -…",15,[[["self"]],["u16"]]],[11,"supported_c7_states","","Number of C7 sub C-states supported using MWAIT (Bits 31 -…",15,[[["self"]],["u16"]]],[11,"dts_irq_threshold","","Number of Interrupt Thresholds in Digital Thermal Sensor",16,[[["self"]],["u8"]]],[11,"has_dts","","Digital temperature sensor is supported if set.",16,[[["self"]],["bool"]]],[11,"has_turbo_boost","","Intel Turbo Boost Technology Available (see description of…",16,[[["self"]],["bool"]]],[11,"has_arat","","ARAT. APIC-Timer-always-running feature is supported if set.",16,[[["self"]],["bool"]]],[11,"has_pln","","PLN. Power limit notification controls are supported if set.",16,[[["self"]],["bool"]]],[11,"has_ecmd","","ECMD. Clock modulation duty cycle extension is supported…",16,[[["self"]],["bool"]]],[11,"has_ptm","","PTM. Package thermal management is supported if set.",16,[[["self"]],["bool"]]],[11,"has_hwp","","HWP. HWP base registers (IA32_PM_ENABLE[bit 0],…",16,[[["self"]],["bool"]]],[11,"has_hwp_notification","","HWP Notification. IA32_HWP_INTERRUPT MSR is supported if…",16,[[["self"]],["bool"]]],[11,"has_hwp_activity_window","","HWP Activity Window. IA32_HWP_REQUEST[bits 41:32] is…",16,[[["self"]],["bool"]]],[11,"has_hwp_energy_performance_preference","","HWP Energy Performance Preference. IA32_HWP_REQUEST[bits…",16,[[["self"]],["bool"]]],[11,"has_hwp_package_level_request","","HWP Package Level Request. IA32_HWP_REQUEST_PKG MSR is…",16,[[["self"]],["bool"]]],[11,"has_hdc","","HDC. HDC base registers IA32_PKG_HDC_CTL, IA32_PM_CTL1,…",16,[[["self"]],["bool"]]],[11,"has_turbo_boost3","","Intel® Turbo Boost Max Technology 3.0 available.",16,[[["self"]],["bool"]]],[11,"has_hwp_capabilities","","HWP Capabilities. Highest Performance change is supported…",16,[[["self"]],["bool"]]],[11,"has_hwp_peci_override","","HWP PECI override is supported if set.",16,[[["self"]],["bool"]]],[11,"has_flexible_hwp","","Flexible HWP is supported if set.",16,[[["self"]],["bool"]]],[11,"has_hwp_fast_access_mode","","Fast access mode for the IA32_HWP_REQUEST MSR is supported…",16,[[["self"]],["bool"]]],[11,"has_ignore_idle_processor_hwp_request","","Ignoring Idle Logical Processor HWP request is supported…",16,[[["self"]],["bool"]]],[11,"has_hw_coord_feedback","","Hardware Coordination Feedback Capability (Presence of…",16,[[["self"]],["bool"]]],[11,"has_energy_bias_pref","","The processor supports performance-energy bias preference…",16,[[["self"]],["bool"]]],[11,"has_fsgsbase","","FSGSBASE. Supports RDFSBASE/RDGSBASE/WRFSBASE/WRGSBASE if 1.",17,[[["self"]],["bool"]]],[11,"has_tsc_adjust_msr","","IA32_TSC_ADJUST MSR is supported if 1.",17,[[["self"]],["bool"]]],[11,"has_bmi1","","BMI1",17,[[["self"]],["bool"]]],[11,"has_hle","","HLE",17,[[["self"]],["bool"]]],[11,"has_avx2","","AVX2",17,[[["self"]],["bool"]]],[11,"has_fdp","","FDP_EXCPTN_ONLY. x87 FPU Data Pointer updated only on x87…",17,[[["self"]],["bool"]]],[11,"has_smep","","SMEP. Supports Supervisor-Mode Execution Prevention if 1.",17,[[["self"]],["bool"]]],[11,"has_bmi2","","BMI2",17,[[["self"]],["bool"]]],[11,"has_rep_movsb_stosb","","Supports Enhanced REP MOVSB/STOSB if 1.",17,[[["self"]],["bool"]]],[11,"has_invpcid","","INVPCID. If 1, supports INVPCID instruction for system…",17,[[["self"]],["bool"]]],[11,"has_rtm","","RTM",17,[[["self"]],["bool"]]],[11,"has_rdtm","","Supports Intel Resource Director Technology (RDT)…",17,[[["self"]],["bool"]]],[11,"has_fpu_cs_ds_deprecated","","Deprecates FPU CS and FPU DS values if 1.",17,[[["self"]],["bool"]]],[11,"has_mpx","","MPX. Supports Intel Memory Protection Extensions if 1.",17,[[["self"]],["bool"]]],[11,"has_rdta","","Supports Intel Resource Director Technology (RDT)…",17,[[["self"]],["bool"]]],[11,"has_rdseed","","Supports RDSEED.",17,[[["self"]],["bool"]]],[11,"has_rdseet","","Supports RDSEED (deprecated alias).",17,[[["self"]],["bool"]]],[11,"has_adx","","Supports ADX.",17,[[["self"]],["bool"]]],[11,"has_smap","","SMAP. Supports Supervisor-Mode Access Prevention (and the…",17,[[["self"]],["bool"]]],[11,"has_clflushopt","","Supports CLFLUSHOPT.",17,[[["self"]],["bool"]]],[11,"has_processor_trace","","Supports Intel Processor Trace.",17,[[["self"]],["bool"]]],[11,"has_sha","","Supports SHA Instructions.",17,[[["self"]],["bool"]]],[11,"has_sgx","","Supports Intel® Software Guard Extensions (Intel® SGX…",17,[[["self"]],["bool"]]],[11,"has_avx512f","","Supports AVX512F.",17,[[["self"]],["bool"]]],[11,"has_avx512dq","","Supports AVX512DQ.",17,[[["self"]],["bool"]]],[11,"has_avx512_ifma","","AVX512_IFMA",17,[[["self"]],["bool"]]],[11,"has_avx512pf","","AVX512PF",17,[[["self"]],["bool"]]],[11,"has_avx512er","","AVX512ER",17,[[["self"]],["bool"]]],[11,"has_avx512cd","","AVX512CD",17,[[["self"]],["bool"]]],[11,"has_avx512bw","","AVX512BW",17,[[["self"]],["bool"]]],[11,"has_avx512vl","","AVX512VL",17,[[["self"]],["bool"]]],[11,"has_clwb","","CLWB",17,[[["self"]],["bool"]]],[11,"has_prefetchwt1","","Has PREFETCHWT1 (Intel® Xeon Phi™ only).",17,[[["self"]],["bool"]]],[11,"has_umip","","Supports user-mode instruction prevention if 1.",17,[[["self"]],["bool"]]],[11,"has_pku","","Supports protection keys for user-mode pages.",17,[[["self"]],["bool"]]],[11,"has_ospke","","OS has set CR4.PKE to enable protection keys (and the…",17,[[["self"]],["bool"]]],[11,"has_rdpid","","RDPID and IA32_TSC_AUX are available.",17,[[["self"]],["bool"]]],[11,"has_sgx_lc","","Supports SGX Launch Configuration.",17,[[["self"]],["bool"]]],[11,"mawau_value","","The value of MAWAU used by the BNDLDX and BNDSTX…",17,[[["self"]],["u8"]]],[11,"get_dca_cap_value","","Value of bits [31:0] of IA32_PLATFORM_DCA_CAP MSR (address…",18,[[["self"]],["u32"]]],[11,"version_id","","Version ID of architectural performance monitoring. (Bits…",19,[[["self"]],["u8"]]],[11,"number_of_counters","","Number of general-purpose performance monitoring counter…",19,[[["self"]],["u8"]]],[11,"counter_bit_width","","Bit width of general-purpose, performance monitoring…",19,[[["self"]],["u8"]]],[11,"ebx_length","","Length of EBX bit vector to enumerate architectural…",19,[[["self"]],["u8"]]],[11,"fixed_function_counters","","Number of fixed-function performance counters (if Version…",19,[[["self"]],["u8"]]],[11,"fixed_function_counters_bit_width","","Bit width of fixed-function performance counters (if…",19,[[["self"]],["u8"]]],[11,"has_any_thread_deprecation","","AnyThread deprecation",19,[[["self"]],["bool"]]],[11,"is_core_cyc_ev_unavailable","","Core cycle event not available if 1.",19,[[["self"]],["bool"]]],[11,"is_inst_ret_ev_unavailable","","Instruction retired event not available if 1.",19,[[["self"]],["bool"]]],[11,"is_ref_cycle_ev_unavailable","","Reference cycles event not available if 1.",19,[[["self"]],["bool"]]],[11,"is_cache_ref_ev_unavailable","","Last-level cache reference event not available if 1.",19,[[["self"]],["bool"]]],[11,"is_ll_cache_miss_ev_unavailable","","Last-level cache misses event not available if 1.",19,[[["self"]],["bool"]]],[11,"is_branch_inst_ret_ev_unavailable","","Branch instruction retired event not available if 1.",19,[[["self"]],["bool"]]],[11,"is_branch_midpred_ev_unavailable","","Branch mispredict retired event not available if 1.",19,[[["self"]],["bool"]]],[11,"processors","","Number of logical processors at this level type. The…",20,[[["self"]],["u16"]]],[11,"level_number","","Level number.",20,[[["self"]],["u8"]]],[11,"level_type","","",20,[[["self"]],["topologytype"]]],[11,"x2apic_id","","x2APIC ID the current logical processor. (Bits 31-00)",20,[[["self"]],["u32"]]],[11,"shift_right_for_next_apic_id","","Number of bits to shift right on x2APIC ID to get a unique…",20,[[["self"]],["u32"]]],[11,"xcr0_supports_legacy_x87","","Support for legacy x87 in XCR0.",21,[[["self"]],["bool"]]],[11,"xcr0_supports_sse_128","","Support for SSE 128-bit in XCR0.",21,[[["self"]],["bool"]]],[11,"xcr0_supports_avx_256","","Support for AVX 256-bit in XCR0.",21,[[["self"]],["bool"]]],[11,"xcr0_supports_mpx_bndregs","","Support for MPX BNDREGS in XCR0.",21,[[["self"]],["bool"]]],[11,"xcr0_supports_mpx_bndcsr","","Support for MPX BNDCSR in XCR0.",21,[[["self"]],["bool"]]],[11,"xcr0_supports_avx512_opmask","","Support for AVX512 OPMASK in XCR0.",21,[[["self"]],["bool"]]],[11,"xcr0_supports_avx512_zmm_hi256","","Support for AVX512 ZMM Hi256 XCR0.",21,[[["self"]],["bool"]]],[11,"xcr0_supports_avx512_zmm_hi16","","Support for AVX512 ZMM Hi16 in XCR0.",21,[[["self"]],["bool"]]],[11,"xcr0_supports_pkru","","Support for PKRU in XCR0.",21,[[["self"]],["bool"]]],[11,"ia32_xss_supports_pt","","Support for PT in IA32_XSS.",21,[[["self"]],["bool"]]],[11,"ia32_xss_supports_hdc","","Support for HDC in IA32_XSS.",21,[[["self"]],["bool"]]],[11,"xsave_area_size_enabled_features","","Maximum size (bytes, from the beginning of the…",21,[[["self"]],["u32"]]],[11,"xsave_area_size_supported_features","","Maximum size (bytes, from the beginning of the…",21,[[["self"]],["u32"]]],[11,"has_xsaveopt","","CPU has xsaveopt feature.",21,[[["self"]],["bool"]]],[11,"has_xsavec","","Supports XSAVEC and the compacted form of XRSTOR if set.",21,[[["self"]],["bool"]]],[11,"has_xgetbv","","Supports XGETBV with ECX = 1 if set.",21,[[["self"]],["bool"]]],[11,"has_xsaves_xrstors","","Supports XSAVES/XRSTORS and IA32_XSS if set.",21,[[["self"]],["bool"]]],[11,"xsave_size","","The size in bytes of the XSAVE area containing all states…",21,[[["self"]],["u32"]]],[11,"iter","","Iterator over extended state enumeration levels >= 2.",21,[[["self"]],["extendedstateiter"]]],[11,"size","","The size in bytes (from the offset specified in EBX) of…",2,[[["self"]],["u32"]]],[11,"offset","","The offset in bytes of this extended state components save…",2,[[["self"]],["u32"]]],[11,"is_in_ia32_xss","","True if the bit n (corresponding to the sub-leaf index) is…",2,[[["self"]],["bool"]]],[11,"is_in_xcr0","","True if bit n is supported in XCR0.",2,[[["self"]],["bool"]]],[11,"is_compacted_format","","Returns true when the compacted format of an XSAVE area is…",2,[[["self"]],["bool"]]],[11,"rmid_range","","Maximum range (zero-based) of RMID within this physical…",22,[[["self"]],["u32"]]],[11,"has_l3_monitoring","","Supports L3 Cache Intel RDT Monitoring.",22,[[["self"]],["bool"]]],[11,"l3_monitoring","","L3 Cache Monitoring.",22,[[["self"]],[["option",["l3monitoringinfo"]],["l3monitoringinfo"]]]],[11,"conversion_factor","","Conversion factor from reported IA32_QM_CTR value to…",23,[[["self"]],["u32"]]],[11,"maximum_rmid_range","","Maximum range (zero-based) of RMID of L3.",23,[[["self"]],["u32"]]],[11,"has_occupancy_monitoring","","Supports occupancy monitoring.",23,[[["self"]],["bool"]]],[11,"has_total_bandwidth_monitoring","","Supports total bandwidth monitoring.",23,[[["self"]],["bool"]]],[11,"has_local_bandwidth_monitoring","","Supports local bandwidth monitoring.",23,[[["self"]],["bool"]]],[11,"has_l3_cat","","Supports L3 Cache Allocation.",24,[[["self"]],["bool"]]],[11,"has_l2_cat","","Supports L2 Cache Allocation.",24,[[["self"]],["bool"]]],[11,"has_memory_bandwidth_allocation","","Supports Memory Bandwidth Allocation.",24,[[["self"]],["bool"]]],[11,"l3_cat","","L3 Cache Allocation Information.",24,[[["self"]],[["l3catinfo"],["option",["l3catinfo"]]]]],[11,"l2_cat","","L2 Cache Allocation Information.",24,[[["self"]],[["option",["l2catinfo"]],["l2catinfo"]]]],[11,"memory_bandwidth_allocation","","Memory Bandwidth Allocation Information.",24,[[["self"]],[["option",["membwallocationinfo"]],["membwallocationinfo"]]]],[11,"capacity_mask_length","","Length of the capacity bit mask using minus-one notation.",25,[[["self"]],["u8"]]],[11,"isolation_bitmap","","Bit-granular map of isolation/contention of allocation…",25,[[["self"]],["u32"]]],[11,"highest_cos","","Highest COS number supported for this Leaf.",25,[[["self"]],["u16"]]],[11,"has_code_data_prioritization","","Is Code and Data Prioritization Technology supported?",25,[[["self"]],["bool"]]],[11,"capacity_mask_length","","Length of the capacity bit mask using minus-one notation.",26,[[["self"]],["u8"]]],[11,"isolation_bitmap","","Bit-granular map of isolation/contention of allocation…",26,[[["self"]],["u32"]]],[11,"highest_cos","","Highest COS number supported for this Leaf.",26,[[["self"]],["u16"]]],[11,"max_hba_throttling","","Reports the maximum MBA throttling value supported for the…",27,[[["self"]],["u16"]]],[11,"highest_cos","","Highest COS number supported for this Leaf.",27,[[["self"]],["u16"]]],[11,"has_linear_response_delay","","Reports whether the response of the delay values is linear.",27,[[["self"]],["bool"]]],[11,"has_sgx1","","Has SGX1 support.",28,[[["self"]],["bool"]]],[11,"has_sgx2","","Has SGX2 support.",28,[[["self"]],["bool"]]],[11,"has_enclv_leaves_einvirtchild_edecvirtchild_esetcontext","","Supports ENCLV instruction leaves EINCVIRTCHILD,…",28,[[["self"]],["bool"]]],[11,"has_encls_leaves_etrackc_erdinfo_eldbc_elduc","","Supports ENCLS instruction leaves ETRACKC, ERDINFO, ELDBC,…",28,[[["self"]],["bool"]]],[11,"miscselect","","Bit vector of supported extended SGX features.",28,[[["self"]],["u32"]]],[11,"max_enclave_size_non_64bit","","The maximum supported enclave size in non-64-bit mode is…",28,[[["self"]],["u8"]]],[11,"max_enclave_size_64bit","","The maximum supported enclave size in 64-bit mode is…",28,[[["self"]],["u8"]]],[11,"secs_attributes","","Reports the valid bits of SECS.ATTRIBUTES[127:0] that…",28,[[["self"]]]],[11,"iter","","Iterator over SGX sub-leafs.",28,[[["self"]],["sgxsectioniter"]]],[11,"physical_base","","The physical address of the base of the EPC section",29,[[["self"]],["u64"]]],[11,"size","","Size of the corresponding EPC section within the Processor…",29,[[["self"]],["u64"]]],[11,"has_rtit_cr3_match","","If true, Indicates that IA32_RTIT_CTL.CR3Filter can be set…",30,[[["self"]],["bool"]]],[11,"has_configurable_psb_and_cycle_accurate_mode","","If true, Indicates support of Configurable PSB and…",30,[[["self"]],["bool"]]],[11,"has_ip_tracestop_filtering","","If true, Indicates support of IP Filtering, TraceStop…",30,[[["self"]],["bool"]]],[11,"has_mtc_timing_packet_coefi_suppression","","If true, Indicates support of MTC timing packet and…",30,[[["self"]],["bool"]]],[11,"has_ptwrite","","Indicates support of PTWRITE. Writes can set…",30,[[["self"]],["bool"]]],[11,"has_power_event_trace","","Support of Power Event Trace. Writes can set…",30,[[["self"]],["bool"]]],[11,"has_topa","","If true, Tracing can be enabled with IA32_RTIT_CTL.ToPA =…",30,[[["self"]],["bool"]]],[11,"has_topa_maximum_entries","","If true, ToPA tables can hold any number of output…",30,[[["self"]],["bool"]]],[11,"has_single_range_output_scheme","","If true, Indicates support of Single-Range Output scheme.",30,[[["self"]],["bool"]]],[11,"has_trace_transport_subsystem","","If true, Indicates support of output to Trace Transport…",30,[[["self"]],["bool"]]],[11,"has_lip_with_cs_base","","If true, Generated packets which contain IP payloads have…",30,[[["self"]],["bool"]]],[11,"configurable_address_ranges","","Number of configurable Address Ranges for filtering (Bits…",30,[[["self"]],["u8"]]],[11,"supported_mtc_period_encodings","","Bitmap of supported MTC period encodings (Bit 31:16).",30,[[["self"]],["u16"]]],[11,"supported_cycle_threshold_value_encodings","","Bitmap of supported Cycle Threshold value encodings (Bits…",30,[[["self"]],["u16"]]],[11,"supported_psb_frequency_encodings","","Bitmap of supported Configurable PSB frequency encodings…",30,[[["self"]],["u16"]]],[11,"denominator","","An unsigned integer which is the denominator of the…",31,[[["self"]],["u32"]]],[11,"numerator","","An unsigned integer which is the numerator of the…",31,[[["self"]],["u32"]]],[11,"nominal_frequency","","An unsigned integer which is the nominal frequency of the…",31,[[["self"]],["u32"]]],[11,"tsc_frequency","","“TSC frequency” = “core crystal clock frequency” * EBX/EAX.",31,[[["self"]],["u64"]]],[11,"processor_base_frequency","","Processor Base Frequency (in MHz).",32,[[["self"]],["u16"]]],[11,"processor_max_frequency","","Maximum Frequency (in MHz).",32,[[["self"]],["u16"]]],[11,"bus_frequency","","Bus (Reference) Frequency (in MHz).",32,[[["self"]],["u16"]]],[11,"has_4k_entries","","4K page size entries supported by this structure",33,[[["self"]],["bool"]]],[11,"has_2mb_entries","","2MB page size entries supported by this structure",33,[[["self"]],["bool"]]],[11,"has_4mb_entries","","4MB page size entries supported by this structure",33,[[["self"]],["bool"]]],[11,"has_1gb_entries","","1GB page size entries supported by this structure",33,[[["self"]],["bool"]]],[11,"is_fully_associative","","Fully associative structure",33,[[["self"]],["bool"]]],[11,"partitioning","","Partitioning (0: Soft partitioning between the logical…",33,[[["self"]],["u8"]]],[11,"ways","","Ways of associativity.",33,[[["self"]],["u16"]]],[11,"sets","","Number of Sets.",33,[[["self"]],["u32"]]],[11,"cache_type","","Translation cache type field.",33,[[["self"]],["dattype"]]],[11,"cache_level","","Translation cache level (starts at 1)",33,[[["self"]],["u8"]]],[11,"max_addressable_ids","","Maximum number of addressable IDs for logical processors…",33,[[["self"]],["u16"]]],[11,"get_soc_vendor_id","","",34,[[["self"]],["u16"]]],[11,"get_project_id","","",34,[[["self"]],["u32"]]],[11,"get_stepping_id","","",34,[[["self"]],["u32"]]],[11,"get_vendor_brand","","",34,[[["self"]],["socvendorbrand"]]],[11,"get_vendor_attributes","","",34,[[["self"]],[["option",["socvendorattributesiter"]],["socvendorattributesiter"]]]],[11,"as_string","","",35,[[["self"]],["str"]]],[11,"identify","","",36,[[["self"]],["hypervisor"]]],[11,"tsc_frequency","","TSC frequency in kHz.",36,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"apic_frequency","","(Virtual) Bus (local apic timer) frequency in kHz.",36,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"processor_brand_string","","Retrieve processor brand string.",37,[[["self"]],[["option",["str"]],["str"]]]],[11,"extended_signature","","Extended Processor Signature and Feature Bits.",37,[[["self"]],[["u32"],["option",["u32"]]]]],[11,"cache_line_size","","Cache Line size in bytes",37,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"l2_associativity","","L2 Associativity field",37,[[["self"]],[["l2associativity"],["option",["l2associativity"]]]]],[11,"cache_size","","Cache size in 1K units",37,[[["self"]],[["u16"],["option",["u16"]]]]],[11,"physical_address_bits","","#Physical Address Bits",37,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"linear_address_bits","","#Linear Address Bits",37,[[["self"]],[["option",["u8"]],["u8"]]]],[11,"has_invariant_tsc","","Is Invariant TSC available?",37,[[["self"]],["bool"]]],[11,"has_lahf_sahf","","Is LAHF/SAHF available in 64-bit mode?",37,[[["self"]],["bool"]]],[11,"has_lzcnt","","Is LZCNT available?",37,[[["self"]],["bool"]]],[11,"has_prefetchw","","Is PREFETCHW available?",37,[[["self"]],["bool"]]],[11,"has_syscall_sysret","","Are fast system calls available.",37,[[["self"]],["bool"]]],[11,"has_execute_disable","","Is there support for execute disable bit.",37,[[["self"]],["bool"]]],[11,"has_1gib_pages","","Is there support for 1GiB pages.",37,[[["self"]],["bool"]]],[11,"has_rdtscp","","Check support for rdtscp instruction.",37,[[["self"]],["bool"]]],[11,"has_64bit_mode","","Check support for 64-bit mode.",37,[[["self"]],["bool"]]],[11,"has_sme","","Secure Memory Encryption is supported if set.",38,[[["self"]],["bool"]]],[11,"has_sev","","Secure Encrypted Virtualization is supported if set.",38,[[["self"]],["bool"]]],[11,"has_page_flush_msr","","The Page Flush MSR is available if set.",38,[[["self"]],["bool"]]],[11,"has_sev_es","","SEV Encrypted State is supported if set.",38,[[["self"]],["bool"]]],[11,"physical_address_reduction","","",38,[[["self"]],["u8"]]],[11,"c_bit_position","","",38,[[["self"]],["u8"]]],[11,"max_encrypted_guests","","",38,[[["self"]],["u32"]]],[11,"min_sev_no_es_asid","","",38,[[["self"]],["u32"]]],[14,"cpuid","","Macro which queries cpuid directly.",null,null],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"into_iter","","",39,[[],["i"]]],[11,"into","","",39,[[],["u"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"into","","",13,[[],["u"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"into_iter","","",40,[[],["i"]]],[11,"into","","",40,[[],["u"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"into","","",14,[[],["u"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"into","","",15,[[],["u"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"into","","",16,[[],["u"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"into","","",19,[[],["u"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"into_iter","","",41,[[],["i"]]],[11,"into","","",41,[[],["u"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"into","","",21,[[],["u"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"into_iter","","",42,[[],["i"]]],[11,"into","","",42,[[],["u"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"into","","",22,[[],["u"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"into","","",23,[[],["u"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"into","","",24,[[],["u"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"into","","",25,[[],["u"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"into","","",26,[[],["u"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"into_iter","","",43,[[],["i"]]],[11,"into","","",43,[[],["u"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"into","","",30,[[],["u"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"into","","",31,[[],["u"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"into","","",32,[[],["u"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"into_iter","","",44,[[],["i"]]],[11,"into","","",44,[[],["u"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"into","","",33,[[],["u"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"into","","",34,[[],["u"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"into_iter","","",45,[[],["i"]]],[11,"into","","",45,[[],["u"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"into","","",35,[[],["u"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"into","","",36,[[],["u"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"into","","",37,[[],["u"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"into","","",38,[[],["u"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"eq","","",4,[[["cachetype"],["self"]],["bool"]]],[11,"eq","","",5,[[["self"],["topologytype"]],["bool"]]],[11,"eq","","",8,[[["self"],["hypervisor"]],["bool"]]],[11,"ne","","",8,[[["self"],["hypervisor"]],["bool"]]],[11,"eq","","",9,[[["l2associativity"],["self"]],["bool"]]],[11,"next","","Iterate over all cache information.",39,[[["self"]],[["cacheinfo"],["option",["cacheinfo"]]]]],[11,"next","","Iterate over all caches for this CPU. Note: cpuid is…",40,[[["self"]],[["option",["cacheparameter"]],["cacheparameter"]]]],[11,"next","","",41,[[["self"]],[["option",["extendedtopologylevel"]],["extendedtopologylevel"]]]],[11,"next","","",42,[[["self"]],[["extendedstate"],["option",["extendedstate"]]]]],[11,"next","","",43,[[["self"]],[["sgxsectioninfo"],["option",["sgxsectioninfo"]]]]],[11,"next","","Iterate over each sub-leaf with an address translation…",44,[[["self"]],[["datinfo"],["option",["datinfo"]]]]],[11,"next","","Iterate over all SoC vendor specific attributes.",45,[[["self"]],[["cpuidresult"],["option",["cpuidresult"]]]]],[11,"clone","","",0,[[["self"]],["cpuidresult"]]],[11,"clone","","",3,[[["self"]],["cacheinfotype"]]],[11,"clone","","",1,[[["self"]],["cacheinfo"]]],[11,"clone","","",14,[[["self"]],["cacheparameter"]]],[11,"default","","",10,[[],["cpuid"]]],[11,"default","","",0,[[],["cpuidresult"]]],[11,"default","","",11,[[],["vendorinfo"]]],[11,"default","","",39,[[],["cacheinfoiter"]]],[11,"default","","",3,[[],["cacheinfotype"]]],[11,"default","","",1,[[],["cacheinfo"]]],[11,"default","","",12,[[],["processorserial"]]],[11,"default","","",13,[[],["featureinfo"]]],[11,"default","","",40,[[],["cacheparametersiter"]]],[11,"default","","",14,[[],["cacheparameter"]]],[11,"default","","",4,[[],["cachetype"]]],[11,"default","","",15,[[],["monitormwaitinfo"]]],[11,"default","","",16,[[],["thermalpowerinfo"]]],[11,"default","","",17,[[],["extendedfeatures"]]],[11,"default","","",18,[[],["directcacheaccessinfo"]]],[11,"default","","",19,[[],["performancemonitoringinfo"]]],[11,"default","","",41,[[],["extendedtopologyiter"]]],[11,"default","","",20,[[],["extendedtopologylevel"]]],[11,"default","","",5,[[],["topologytype"]]],[11,"default","","",21,[[],["extendedstateinfo"]]],[11,"default","","",42,[[],["extendedstateiter"]]],[11,"default","","",2,[[],["extendedstate"]]],[11,"default","","",22,[[],["rdtmonitoringinfo"]]],[11,"default","","",23,[[],["l3monitoringinfo"]]],[11,"default","","",24,[[],["rdtallocationinfo"]]],[11,"default","","",25,[[],["l3catinfo"]]],[11,"default","","",26,[[],["l2catinfo"]]],[11,"default","","",27,[[],["membwallocationinfo"]]],[11,"default","","",28,[[],["sgxinfo"]]],[11,"default","","",43,[[],["sgxsectioniter"]]],[11,"default","","",6,[[],["sgxsectioninfo"]]],[11,"default","","",29,[[],["epcsection"]]],[11,"default","","",30,[[],["processortraceinfo"]]],[11,"default","","",31,[[],["tscinfo"]]],[11,"default","","",32,[[],["processorfrequencyinfo"]]],[11,"default","","",44,[[],["datiter"]]],[11,"default","","",33,[[],["datinfo"]]],[11,"default","","",7,[[],["dattype"]]],[11,"default","","",34,[[],["socvendorinfo"]]],[11,"default","","",45,[[],["socvendorattributesiter"]]],[11,"default","","",35,[[],["socvendorbrand"]]],[11,"default","","",37,[[],["extendedfunctioninfo"]]],[11,"default","","",9,[[],["l2associativity"]]],[11,"default","","",38,[[],["memoryencryptioninfo"]]]],"p":[[3,"CpuIdResult"],[3,"CacheInfo"],[3,"ExtendedState"],[4,"CacheInfoType"],[4,"CacheType"],[4,"TopologyType"],[4,"SgxSectionInfo"],[4,"DatType"],[4,"Hypervisor"],[4,"L2Associativity"],[3,"CpuId"],[3,"VendorInfo"],[3,"ProcessorSerial"],[3,"FeatureInfo"],[3,"CacheParameter"],[3,"MonitorMwaitInfo"],[3,"ThermalPowerInfo"],[3,"ExtendedFeatures"],[3,"DirectCacheAccessInfo"],[3,"PerformanceMonitoringInfo"],[3,"ExtendedTopologyLevel"],[3,"ExtendedStateInfo"],[3,"RdtMonitoringInfo"],[3,"L3MonitoringInfo"],[3,"RdtAllocationInfo"],[3,"L3CatInfo"],[3,"L2CatInfo"],[3,"MemBwAllocationInfo"],[3,"SgxInfo"],[3,"EpcSection"],[3,"ProcessorTraceInfo"],[3,"TscInfo"],[3,"ProcessorFrequencyInfo"],[3,"DatInfo"],[3,"SoCVendorInfo"],[3,"SoCVendorBrand"],[3,"HypervisorInfo"],[3,"ExtendedFunctionInfo"],[3,"MemoryEncryptionInfo"],[3,"CacheInfoIter"],[3,"CacheParametersIter"],[3,"ExtendedTopologyIter"],[3,"ExtendedStateIter"],[3,"SgxSectionIter"],[3,"DatIter"],[3,"SoCVendorAttributesIter"]]};
searchIndex["rayon"] = {"doc":"Data-parallelism library that makes it easy to convert…","i":[[3,"FnContext","rayon","Provides the calling context to a closure called by…",null,null],[3,"ThreadBuilder","","Thread builder used for customization via…",null,null],[3,"ThreadPool","","Represents a user created [thread-pool].",null,null],[3,"ThreadPoolBuildError","","Error when initializing a thread pool.",null,null],[3,"ThreadPoolBuilder","","Used to create a new [`ThreadPool`] or to configure the…",null,null],[5,"current_num_threads","","Returns the number of threads in the current registry. If…",null,[[],["usize"]]],[5,"current_thread_index","","If called from a Rayon worker thread, returns the index of…",null,[[],[["option",["usize"]],["usize"]]]],[5,"join","","Takes two closures and potentially runs them in parallel.…",null,[[["a"],["b"]]]],[5,"join_context","","Identical to `join`, except that the closures have a…",null,[[["a"],["b"]]]],[5,"scope","","Create a \"fork-join\" scope `s` and invokes the closure…",null,[[["op"]],["r"]]],[3,"Scope","","Represents a fork-join scope which can be used to spawn…",null,null],[5,"scope_fifo","","Create a \"fork-join\" scope `s` with FIFO order, and…",null,[[["op"]],["r"]]],[3,"ScopeFifo","","Represents a fork-join scope which can be used to spawn…",null,null],[5,"spawn","","Fires off a task into the Rayon threadpool in the \"static\"…",null,[[["f"]]]],[5,"spawn_fifo","","Fires off a task into the Rayon threadpool in the \"static\"…",null,[[["f"]]]],[0,"collections","","Parallel iterator types for [standard…",null,null],[0,"binary_heap","rayon::collections","This module contains the parallel iterator types for heaps…",null,null],[3,"IntoIter","rayon::collections::binary_heap","Parallel iterator over a binary heap",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a binary…",null,null],[0,"btree_map","rayon::collections","This module contains the parallel iterator types for…",null,null],[3,"IntoIter","rayon::collections::btree_map","Parallel iterator over a B-Tree map",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a B-Tree…",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a B-Tree map",null,null],[0,"btree_set","rayon::collections","This module contains the parallel iterator types for…",null,null],[3,"IntoIter","rayon::collections::btree_set","Parallel iterator over a B-Tree set",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a B-Tree…",null,null],[0,"hash_map","rayon::collections","This module contains the parallel iterator types for hash…",null,null],[3,"IntoIter","rayon::collections::hash_map","Parallel iterator over a hash map",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a hash map",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a hash map",null,null],[0,"hash_set","rayon::collections","This module contains the parallel iterator types for hash…",null,null],[3,"IntoIter","rayon::collections::hash_set","Parallel iterator over a hash set",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a hash set",null,null],[0,"linked_list","rayon::collections","This module contains the parallel iterator types for…",null,null],[3,"IntoIter","rayon::collections::linked_list","Parallel iterator over a linked list",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a linked…",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a linked list",null,null],[0,"vec_deque","rayon::collections","This module contains the parallel iterator types for…",null,null],[3,"IntoIter","rayon::collections::vec_deque","Parallel iterator over a double-ended queue",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a…",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a…",null,null],[0,"iter","rayon","Traits for writing parallel programs using an…",null,null],[4,"Either","rayon::iter","The enum `Either` with variants `Left` and `Right` is a…",null,null],[13,"Left","","A value of type `L`.",0,null],[13,"Right","","A value of type `R`.",0,null],[3,"IterBridge","","`IterBridge` is a parallel iterator that wraps a…",null,null],[3,"Chain","","`Chain` is an iterator that joins `b` after `a` in one…",null,null],[3,"Chunks","","`Chunks` is an iterator that groups elements of an…",null,null],[3,"Enumerate","","`Enumerate` is an iterator that returns the current count…",null,null],[3,"Filter","","`Filter` takes a predicate `filter_op` and filters out…",null,null],[3,"FilterMap","","`FilterMap` creates an iterator that uses `filter_op` to…",null,null],[3,"FlatMap","","`FlatMap` maps each element to an iterator, then flattens…",null,null],[3,"Flatten","","`Flatten` turns each element to an iterator, then flattens…",null,null],[3,"Fold","","`Fold` is an iterator that applies a function over an…",null,null],[3,"FoldWith","","`FoldWith` is an iterator that applies a function over an…",null,null],[3,"TryFold","","`TryFold` is an iterator that applies a function over an…",null,null],[3,"TryFoldWith","","`TryFoldWith` is an iterator that applies a function over…",null,null],[3,"Skip","","`Skip` is an iterator that skips over the first `n`…",null,null],[3,"Split","","`Split` is a parallel iterator using arbitrary data and a…",null,null],[3,"Take","","`Take` is an iterator that iterates over the first `n`…",null,null],[3,"Map","","`Map` is an iterator that transforms the elements of an…",null,null],[3,"MapInit","","`MapInit` is an iterator that transforms the elements of…",null,null],[3,"MapWith","","`MapWith` is an iterator that transforms the elements of…",null,null],[3,"Zip","","`Zip` is an iterator that zips up `a` and `b` into a…",null,null],[3,"ZipEq","","An [`IndexedParallelIterator`] that iterates over two…",null,null],[3,"MultiZip","","`MultiZip` is an iterator that zips up a tuple of parallel…",null,null],[3,"Interleave","","`Interleave` is an iterator that interleaves elements of…",null,null],[3,"InterleaveShortest","","`InterleaveShortest` is an iterator that works similarly…",null,null],[3,"Intersperse","","`Intersperse` is an iterator that inserts a particular…",null,null],[3,"Update","","`Update` is an iterator that mutates the elements of an…",null,null],[3,"Rev","","`Rev` is an iterator that produces elements in reverse…",null,null],[3,"MaxLen","","`MaxLen` is an iterator that imposes a maximum length on…",null,null],[3,"MinLen","","`MinLen` is an iterator that imposes a minimum length on…",null,null],[3,"Cloned","","`Cloned` is an iterator that clones the elements of an…",null,null],[3,"Copied","","`Copied` is an iterator that copies the elements of an…",null,null],[3,"Inspect","","`Inspect` is an iterator that calls a function with a…",null,null],[3,"PanicFuse","","`PanicFuse` is an adaptor that wraps an iterator with a…",null,null],[3,"WhileSome","","`WhileSome` is an iterator that yields the `Some` elements…",null,null],[3,"Repeat","","Iterator adaptor for the `repeat()` function.",null,null],[3,"RepeatN","","Iterator adaptor for the `repeatn()` function.",null,null],[3,"Empty","","Iterator adaptor for the `empty()` function.",null,null],[3,"Once","","Iterator adaptor for the `once()` function.",null,null],[5,"split","","The `split` function takes arbitrary data and a closure…",null,[[["d"],["s"]],["split"]]],[5,"repeat","","Creates a parallel iterator that endlessly repeats `elt`…",null,[[["send"],["clone"]],[["repeat"],["send"],["clone"]]]],[5,"repeatn","","Creates a parallel iterator that produces `n` repeats of…",null,[[["send"],["usize"],["clone"]],[["send"],["clone"],["repeatn"]]]],[5,"empty","","Creates a parallel iterator that produces nothing.",null,[[],[["send"],["empty"]]]],[5,"once","","Creates a parallel iterator that produces an element…",null,[[["send"]],[["once"],["send"]]]],[0,"plumbing","","Traits and functions used to implement parallel iteration.…",null,null],[5,"bridge","rayon::iter::plumbing","This helper function is used to \"connect\" a parallel…",null,[[["c"],["i"]]]],[5,"bridge_producer_consumer","","This helper function is used to \"connect\" a producer and a…",null,[[["c"],["usize"],["p"]]]],[5,"bridge_unindexed","","A variant of [`bridge_producer_consumer`] where the…",null,[[["c"],["p"]]]],[8,"ProducerCallback","","The `ProducerCallback` trait is a kind of generic closure,…",null,null],[16,"Output","","The type of value returned by this callback. Analogous to…",1,null],[10,"callback","","Invokes the callback with the given producer as argument.…",1,[[["p"]]]],[8,"Producer","","A `Producer` is effectively a \"splittable `IntoIterator`\".…",null,null],[16,"Item","","The type of item that will be produced by this producer…",2,null],[16,"IntoIter","","The type of iterator we will become.",2,null],[10,"into_iter","","Convert `self` into an iterator; at this point, no more…",2,[[]]],[11,"min_len","","The minimum number of items that we will process…",2,[[["self"]],["usize"]]],[11,"max_len","","The maximum number of items that we will process…",2,[[["self"]],["usize"]]],[10,"split_at","","Split into two producers; one produces items `0..index`,…",2,[[["usize"]]]],[11,"fold_with","","Iterate the producer, feeding each element to `folder`,…",2,[[["f"]],["f"]]],[8,"Consumer","","A consumer is effectively a [generalized \"fold\"…",null,null],[16,"Folder","","The type of folder that this consumer can be converted into.",3,null],[16,"Reducer","","The type of reducer that is produced if this consumer is…",3,null],[16,"Result","","The type of result that this consumer will ultimately…",3,null],[10,"split_at","","Divide the consumer into two consumers, one processing…",3,[[["usize"]]]],[10,"into_folder","","Convert the consumer into a folder that can consume items…",3,[[]]],[10,"full","","Hint whether this `Consumer` would like to stop processing…",3,[[["self"]],["bool"]]],[8,"Folder","","The `Folder` trait encapsulates [the standard fold…",null,null],[16,"Result","","The type of result that will ultimately be produced by the…",4,null],[10,"consume","","Consume next item and return new sequential state.",4,[[["item"]],["self"]]],[11,"consume_iter","","Consume items from the iterator until full, and return new…",4,[[["i"]],["self"]]],[10,"complete","","Finish consuming items, produce final result.",4,[[]]],[10,"full","","Hint whether this `Folder` would like to stop processing…",4,[[["self"]],["bool"]]],[8,"Reducer","","The reducer is the final step of a `Consumer` -- after a…",null,null],[10,"reduce","","Reduce two final results into one; this is executed after…",5,[[["result"]],["result"]]],[8,"UnindexedConsumer","","A stateless consumer can be freely copied. These consumers…",null,null],[10,"split_off_left","","Splits off a \"left\" consumer and returns it. The `self`…",6,[[["self"]],["self"]]],[10,"to_reducer","","Creates a reducer that can be used to combine the results…",6,[[["self"]]]],[8,"UnindexedProducer","","A variant on `Producer` which does not know its exact…",null,null],[16,"Item","","The type of item returned by this producer.",7,null],[10,"split","","Split midway into a new producer if possible, otherwise…",7,[[]]],[10,"fold_with","","Iterate the producer, feeding each element to `folder`,…",7,[[["f"]],["f"]]],[11,"take","rayon::iter","Take only `n` repeats of the element, similar to the…",8,[[["usize"]],["repeatn"]]],[11,"zip","","Iterate tuples repeating the element with items from…",8,[[["z"]],[["zip",["repeatn"]],["repeatn"]]]],[8,"ParallelBridge","","Conversion trait to convert an `Iterator` to a…",null,null],[10,"par_bridge","","Create a bridge from this type to a `ParallelIterator`.",9,[[],["iterbridge"]]],[8,"IntoParallelIterator","","`IntoParallelIterator` implements the conversion to a…",null,null],[16,"Iter","","The parallel iterator type that will be created.",10,null],[16,"Item","","The type of item that the parallel iterator will produce.",10,null],[10,"into_par_iter","","Converts `self` into a parallel iterator.",10,[[]]],[8,"IntoParallelRefIterator","","`IntoParallelRefIterator` implements the conversion to a…",null,null],[16,"Iter","","The type of the parallel iterator that will be returned.",11,null],[16,"Item","","The type of item that the parallel iterator will produce.…",11,null],[10,"par_iter","","Converts `self` into a parallel iterator.",11,[[["self"]]]],[8,"IntoParallelRefMutIterator","","`IntoParallelRefMutIterator` implements the conversion to…",null,null],[16,"Iter","","The type of iterator that will be created.",12,null],[16,"Item","","The type of item that will be produced; this is typically…",12,null],[10,"par_iter_mut","","Creates the parallel iterator from `self`.",12,[[["self"]]]],[8,"ParallelIterator","","Parallel version of the standard iterator trait.",null,null],[16,"Item","","The type of item that this parallel iterator produces. For…",13,null],[11,"for_each","","Executes `OP` on each item produced by the iterator, in…",13,[[["op"]]]],[11,"for_each_with","","Executes `OP` on the given `init` value with each item…",13,[[["op"],["t"]]]],[11,"for_each_init","","Executes `OP` on a value returned by `init` with each item…",13,[[["op"],["init"]]]],[11,"try_for_each","","Executes a fallible `OP` on each item produced by the…",13,[[["op"]],["r"]]],[11,"try_for_each_with","","Executes a fallible `OP` on the given `init` value with…",13,[[["op"],["t"]],["r"]]],[11,"try_for_each_init","","Executes a fallible `OP` on a value returned by `init`…",13,[[["op"],["init"]],["r"]]],[11,"count","","Counts the number of items in this parallel iterator.",13,[[],["usize"]]],[11,"map","","Applies `map_op` to each item of this iterator, producing…",13,[[["f"]],["map"]]],[11,"map_with","","Applies `map_op` to the given `init` value with each item…",13,[[["t"],["f"]],["mapwith"]]],[11,"map_init","","Applies `map_op` to a value returned by `init` with each…",13,[[["init"],["f"]],["mapinit"]]],[11,"cloned","","Creates an iterator which clones all of its elements. This…",13,[[],["cloned"]]],[11,"copied","","Creates an iterator which copies all of its elements. This…",13,[[],["copied"]]],[11,"inspect","","Applies `inspect_op` to a reference to each item of this…",13,[[["op"]],["inspect"]]],[11,"update","","Mutates each item of this iterator before yielding it.",13,[[["f"]],["update"]]],[11,"filter","","Applies `filter_op` to each item of this iterator,…",13,[[["p"]],["filter"]]],[11,"filter_map","","Applies `filter_op` to each item of this iterator to get…",13,[[["p"]],["filtermap"]]],[11,"flat_map","","Applies `map_op` to each item of this iterator to get…",13,[[["f"]],["flatmap"]]],[11,"flatten","","An adaptor that flattens iterable `Item`s into one large…",13,[[],["flatten"]]],[11,"reduce","","Reduces the items in the iterator into one item using…",13,[[["op"],["id"]]]],[11,"reduce_with","","Reduces the items in the iterator into one item using…",13,[[["op"]],["option"]]],[11,"try_reduce","","Reduces the items in the iterator into one item using a…",13,[[["op"],["id"]]]],[11,"try_reduce_with","","Reduces the items in the iterator into one item using a…",13,[[["op"]],["option"]]],[11,"fold","","Parallel fold is similar to sequential fold except that…",13,[[["id"],["f"]],["fold"]]],[11,"fold_with","","Applies `fold_op` to the given `init` value with each item…",13,[[["t"],["f"]],["foldwith"]]],[11,"try_fold","","Perform a fallible parallel fold.",13,[[["id"],["f"]],["tryfold"]]],[11,"try_fold_with","","Perform a fallible parallel fold with a cloneable `init`…",13,[[["t"],["f"]],["tryfoldwith"]]],[11,"sum","","Sums up the items in the iterator.",13,[[],["s"]]],[11,"product","","Multiplies all the items in the iterator.",13,[[],["p"]]],[11,"min","","Computes the minimum of all the items in the iterator. If…",13,[[],["option"]]],[11,"min_by","","Computes the minimum of all the items in the iterator with…",13,[[["f"]],["option"]]],[11,"min_by_key","","Computes the item that yields the minimum value for the…",13,[[["f"]],["option"]]],[11,"max","","Computes the maximum of all the items in the iterator. If…",13,[[],["option"]]],[11,"max_by","","Computes the maximum of all the items in the iterator with…",13,[[["f"]],["option"]]],[11,"max_by_key","","Computes the item that yields the maximum value for the…",13,[[["f"]],["option"]]],[11,"chain","","Takes two iterators and creates a new iterator over both.",13,[[["c"]],["chain"]]],[11,"find_any","","Searches for some item in the parallel iterator that…",13,[[["p"]],["option"]]],[11,"find_first","","Searches for the sequentially first item in the parallel…",13,[[["p"]],["option"]]],[11,"find_last","","Searches for the sequentially last item in the parallel…",13,[[["p"]],["option"]]],[11,"find_map_any","","Applies the given predicate to the items in the parallel…",13,[[["p"]],["option"]]],[11,"find_map_first","","Applies the given predicate to the items in the parallel…",13,[[["p"]],["option"]]],[11,"find_map_last","","Applies the given predicate to the items in the parallel…",13,[[["p"]],["option"]]],[11,"any","","Searches for some item in the parallel iterator that…",13,[[["p"]],["bool"]]],[11,"all","","Tests that every item in the parallel iterator matches the…",13,[[["p"]],["bool"]]],[11,"while_some","","Creates an iterator over the `Some` items of this…",13,[[],["whilesome"]]],[11,"panic_fuse","","Wraps an iterator with a fuse in case of panics, to halt…",13,[[],["panicfuse"]]],[11,"collect","","Create a fresh collection containing all the element…",13,[[],["c"]]],[11,"unzip","","Unzips the items of a parallel iterator into a pair of…",13,[[]]],[11,"partition","","Partitions the items of a parallel iterator into a pair of…",13,[[["p"]]]],[11,"partition_map","","Partitions and maps the items of a parallel iterator into…",13,[[["p"]]]],[11,"intersperse","","Intersperses clones of an element between items of this…",13,[[],["intersperse"]]],[10,"drive_unindexed","","Internal method used to define the behavior of this…",13,[[["c"]]]],[11,"opt_len","","Internal method used to define the behavior of this…",13,[[["self"]],[["option",["usize"]],["usize"]]]],[8,"IndexedParallelIterator","","An iterator that supports \"random access\" to its data,…",null,null],[11,"collect_into_vec","","Collects the results of the iterator into the specified…",14,[[["vec"]]]],[11,"unzip_into_vecs","","Unzips the results of the iterator into the specified…",14,[[["vec"],["vec"]]]],[11,"zip","","Iterate over tuples `(A, B)`, where the items `A` are from…",14,[[["z"]],["zip"]]],[11,"zip_eq","","The same as `Zip`, but requires that both iterators have…",14,[[["z"]],["zipeq"]]],[11,"interleave","","Interleave elements of this iterator and the other given…",14,[[["i"]],["interleave"]]],[11,"interleave_shortest","","Interleave elements of this iterator and the other given…",14,[[["i"]],["interleaveshortest"]]],[11,"chunks","","Split an iterator up into fixed-size chunks.",14,[[["usize"]],["chunks"]]],[11,"cmp","","Lexicographically compares the elements of this…",14,[[["i"]],["ordering"]]],[11,"partial_cmp","","Lexicographically compares the elements of this…",14,[[["i"]],[["option",["ordering"]],["ordering"]]]],[11,"eq","","Determines if the elements of this `ParallelIterator` are…",14,[[["i"]],["bool"]]],[11,"ne","","Determines if the elements of this `ParallelIterator` are…",14,[[["i"]],["bool"]]],[11,"lt","","Determines if the elements of this `ParallelIterator` are…",14,[[["i"]],["bool"]]],[11,"le","","Determines if the elements of this `ParallelIterator` are…",14,[[["i"]],["bool"]]],[11,"gt","","Determines if the elements of this `ParallelIterator` are…",14,[[["i"]],["bool"]]],[11,"ge","","Determines if the elements of this `ParallelIterator` are…",14,[[["i"]],["bool"]]],[11,"enumerate","","Yields an index along with each item.",14,[[],["enumerate"]]],[11,"skip","","Creates an iterator that skips the first `n` elements.",14,[[["usize"]],["skip"]]],[11,"take","","Creates an iterator that yields the first `n` elements.",14,[[["usize"]],["take"]]],[11,"position_any","","Searches for some item in the parallel iterator that…",14,[[["p"]],[["option",["usize"]],["usize"]]]],[11,"position_first","","Searches for the sequentially first item in the parallel…",14,[[["p"]],[["option",["usize"]],["usize"]]]],[11,"position_last","","Searches for the sequentially last item in the parallel…",14,[[["p"]],[["option",["usize"]],["usize"]]]],[11,"rev","","Produces a new iterator with the elements of this iterator…",14,[[],["rev"]]],[11,"with_min_len","","Sets the minimum length of iterators desired to process in…",14,[[["usize"]],["minlen"]]],[11,"with_max_len","","Sets the maximum length of iterators desired to process in…",14,[[["usize"]],["maxlen"]]],[10,"len","","Produces an exact count of how many items this iterator…",14,[[["self"]],["usize"]]],[10,"drive","","Internal method used to define the behavior of this…",14,[[["consumer"]]]],[10,"with_producer","","Internal method used to define the behavior of this…",14,[[["producercallback"]]]],[8,"FromParallelIterator","","`FromParallelIterator` implements the creation of a…",null,null],[10,"from_par_iter","","Creates an instance of the collection from the parallel…",15,[[["i"]],["self"]]],[8,"ParallelExtend","","`ParallelExtend` extends an existing collection with items…",null,null],[10,"par_extend","","Extends an instance of the collection with the elements…",16,[[["self"],["i"]]]],[0,"option","rayon","Parallel iterator types for [options][std::option]",null,null],[3,"IntoIter","rayon::option","A parallel iterator over the value in [`Some`] variant of…",null,null],[3,"Iter","","A parallel iterator over a reference to the [`Some`]…",null,null],[3,"IterMut","","A parallel iterator over a mutable reference to the…",null,null],[0,"prelude","rayon","The rayon prelude imports the various `ParallelIterator`…",null,null],[8,"ParallelBridge","rayon::prelude","Conversion trait to convert an `Iterator` to a…",null,null],[10,"par_bridge","","Create a bridge from this type to a `ParallelIterator`.",9,[[],["iterbridge"]]],[0,"range","rayon","Parallel iterator types for [ranges][std::range], the type…",null,null],[3,"Iter","rayon::range","Parallel iterator over a range, implemented for all…",null,null],[0,"range_inclusive","rayon","Parallel iterator types for [inclusive…",null,null],[3,"Iter","rayon::range_inclusive","Parallel iterator over an inclusive range, implemented for…",null,null],[0,"result","rayon","Parallel iterator types for [results][std::result]",null,null],[3,"IntoIter","rayon::result","Parallel iterator over a result",null,null],[3,"Iter","","Parallel iterator over an immutable reference to a result",null,null],[3,"IterMut","","Parallel iterator over a mutable reference to a result",null,null],[0,"slice","rayon","Parallel iterator types for [slices][std::slice]",null,null],[3,"Iter","rayon::slice","Parallel iterator over immutable items in a slice",null,null],[3,"Chunks","","Parallel iterator over immutable non-overlapping chunks of…",null,null],[3,"Windows","","Parallel iterator over immutable overlapping windows of a…",null,null],[3,"IterMut","","Parallel iterator over mutable items in a slice",null,null],[3,"ChunksMut","","Parallel iterator over mutable non-overlapping chunks of a…",null,null],[3,"Split","","Parallel iterator over slices separated by a predicate",null,null],[3,"SplitMut","","Parallel iterator over mutable slices separated by a…",null,null],[8,"ParallelSlice","","Parallel extensions for slices.",null,null],[10,"as_parallel_slice","","Returns a plain slice, which is used to implement the rest…",17,[[["self"]]]],[11,"par_split","","Returns a parallel iterator over subslices separated by…",17,[[["self"],["p"]],["split"]]],[11,"par_windows","","Returns a parallel iterator over all contiguous windows of…",17,[[["self"],["usize"]],["windows"]]],[11,"par_chunks","","Returns a parallel iterator over at most `chunk_size`…",17,[[["self"],["usize"]],["chunks"]]],[8,"ParallelSliceMut","","Parallel extensions for mutable slices.",null,null],[10,"as_parallel_slice_mut","","Returns a plain mutable slice, which is used to implement…",18,[[["self"]]]],[11,"par_split_mut","","Returns a parallel iterator over mutable subslices…",18,[[["self"],["p"]],["splitmut"]]],[11,"par_chunks_mut","","Returns a parallel iterator over at most `chunk_size`…",18,[[["self"],["usize"]],["chunksmut"]]],[11,"par_sort","","Sorts the slice in parallel.",18,[[["self"]]]],[11,"par_sort_by","","Sorts the slice in parallel with a comparator function.",18,[[["self"],["f"]]]],[11,"par_sort_by_key","","Sorts the slice in parallel with a key extraction function.",18,[[["self"],["f"]]]],[11,"par_sort_unstable","","Sorts the slice in parallel, but may not preserve the…",18,[[["self"]]]],[11,"par_sort_unstable_by","","Sorts the slice in parallel with a comparator function,…",18,[[["self"],["f"]]]],[11,"par_sort_unstable_by_key","","Sorts the slice in parallel with a key extraction…",18,[[["self"],["f"]]]],[0,"str","rayon","Parallel iterator types for [strings][std::str]",null,null],[3,"Chars","rayon::str","Parallel iterator over the characters of a string",null,null],[3,"CharIndices","","Parallel iterator over the characters of a string, with…",null,null],[3,"Bytes","","Parallel iterator over the bytes of a string",null,null],[3,"EncodeUtf16","","Parallel iterator over a string encoded as UTF-16",null,null],[3,"Split","","Parallel iterator over substrings separated by a pattern",null,null],[3,"SplitTerminator","","Parallel iterator over substrings separated by a…",null,null],[3,"Lines","","Parallel iterator over lines in a string",null,null],[3,"SplitWhitespace","","Parallel iterator over substrings separated by whitespace",null,null],[3,"Matches","","Parallel iterator over substrings that match a pattern",null,null],[3,"MatchIndices","","Parallel iterator over substrings that match a pattern,…",null,null],[8,"ParallelString","","Parallel extensions for strings.",null,null],[10,"as_parallel_string","","Returns a plain string slice, which is used to implement…",19,[[["self"]],["str"]]],[11,"par_chars","","Returns a parallel iterator over the characters of a string.",19,[[["self"]],["chars"]]],[11,"par_char_indices","","Returns a parallel iterator over the characters of a…",19,[[["self"]],["charindices"]]],[11,"par_bytes","","Returns a parallel iterator over the bytes of a string.",19,[[["self"]],["bytes"]]],[11,"par_encode_utf16","","Returns a parallel iterator over a string encoded as UTF-16.",19,[[["self"]],["encodeutf16"]]],[11,"par_split","","Returns a parallel iterator over substrings separated by a…",19,[[["self"],["pattern"]],[["split"],["pattern"]]]],[11,"par_split_terminator","","Returns a parallel iterator over substrings terminated by…",19,[[["self"],["pattern"]],[["splitterminator"],["pattern"]]]],[11,"par_lines","","Returns a parallel iterator over the lines of a string,…",19,[[["self"]],["lines"]]],[11,"par_split_whitespace","","Returns a parallel iterator over the sub-slices of a…",19,[[["self"]],["splitwhitespace"]]],[11,"par_matches","","Returns a parallel iterator over substrings that match a…",19,[[["self"],["pattern"]],[["matches"],["pattern"]]]],[11,"par_match_indices","","Returns a parallel iterator over substrings that match a…",19,[[["self"],["pattern"]],[["matchindices"],["pattern"]]]],[0,"vec","rayon","Parallel iterator types for [vectors][std::vec] (`Vec<T>`)",null,null],[3,"IntoIter","rayon::vec","Parallel iterator that moves out of a vector.",null,null],[11,"from","rayon","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_string","","",23,[[["self"]],["string"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::binary_heap","",27,[[],["t"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"into_par_iter","","",28,[[],["t"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::btree_map","",29,[[],["t"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"into_par_iter","","",30,[[],["t"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"into_par_iter","","",31,[[],["t"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::btree_set","",32,[[],["t"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"into_par_iter","","",33,[[],["t"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::hash_map","",34,[[],["t"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"into_par_iter","","",35,[[],["t"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"into_par_iter","","",36,[[],["t"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::hash_set","",37,[[],["t"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"into_par_iter","","",38,[[],["t"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::linked_list","",39,[[],["t"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"into_par_iter","","",40,[[],["t"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"into_par_iter","","",41,[[],["t"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::collections::vec_deque","",42,[[],["t"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"into_par_iter","","",43,[[],["t"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"into_par_iter","","",44,[[],["t"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::iter","",0,[[],["t"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"into_par_iter","","",45,[[],["t"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"into_par_iter","","",46,[[],["t"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"into_par_iter","","",47,[[],["t"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"into_par_iter","","",48,[[],["t"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"into_par_iter","","",49,[[],["t"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"into_par_iter","","",50,[[],["t"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"into_par_iter","","",51,[[],["t"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"into_par_iter","","",52,[[],["t"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"into_par_iter","","",53,[[],["t"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"into_par_iter","","",54,[[],["t"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"into_par_iter","","",55,[[],["t"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"into_par_iter","","",56,[[],["t"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"into_par_iter","","",57,[[],["t"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"into_par_iter","","",58,[[],["t"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"into_par_iter","","",59,[[],["t"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"into_par_iter","","",60,[[],["t"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"into_par_iter","","",61,[[],["t"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"into_par_iter","","",62,[[],["t"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"into_par_iter","","",63,[[],["t"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"into_par_iter","","",64,[[],["t"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"into_par_iter","","",65,[[],["t"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"into_par_iter","","",66,[[],["t"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"into_par_iter","","",67,[[],["t"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"into_par_iter","","",68,[[],["t"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,[[["self"],["t"]]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"into_par_iter","","",69,[[],["t"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"into_par_iter","","",70,[[],["t"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"into_par_iter","","",71,[[],["t"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"into_par_iter","","",72,[[],["t"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"into_par_iter","","",73,[[],["t"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"into_par_iter","","",74,[[],["t"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"into_par_iter","","",75,[[],["t"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"into_par_iter","","",76,[[],["t"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"into_par_iter","","",77,[[],["t"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"into_par_iter","","",8,[[],["t"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"into_par_iter","","",78,[[],["t"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"into_par_iter","","",79,[[],["t"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,[[["self"],["t"]]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"into_par_iter","","",80,[[],["t"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,[[["self"],["t"]]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::option","",81,[[],["t"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,[[["self"],["t"]]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"into_par_iter","","",82,[[],["t"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,[[["self"],["t"]]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"into_par_iter","","",83,[[],["t"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::range","",84,[[],["t"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,[[["self"],["t"]]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::range_inclusive","",85,[[],["t"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,[[["self"],["t"]]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::result","",86,[[],["t"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,[[["self"],["t"]]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"into_par_iter","","",87,[[],["t"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,[[["self"],["t"]]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"into_par_iter","","",88,[[],["t"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::slice","",89,[[],["t"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,[[["self"],["t"]]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"into_par_iter","","",90,[[],["t"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,[[["self"],["t"]]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"into_par_iter","","",91,[[],["t"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,[[["self"],["t"]]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"into_par_iter","","",92,[[],["t"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"into_par_iter","","",93,[[],["t"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"into_par_iter","","",94,[[],["t"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,[[["self"],["t"]]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"into_par_iter","","",95,[[],["t"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::str","",96,[[],["t"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,[[["self"],["t"]]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"into_par_iter","","",97,[[],["t"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,[[["self"],["t"]]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"into_par_iter","","",98,[[],["t"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,[[["self"],["t"]]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"into_par_iter","","",99,[[],["t"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,[[["self"],["t"]]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"into_par_iter","","",100,[[],["t"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,[[["self"],["t"]]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"into_par_iter","","",101,[[],["t"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,[[["self"],["t"]]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"into_par_iter","","",102,[[],["t"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,[[["self"],["t"]]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"into_par_iter","","",103,[[],["t"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,[[["self"],["t"]]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"into_par_iter","","",104,[[],["t"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,[[["self"],["t"]]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"into_par_iter","","",105,[[],["t"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,[[["self"],["t"]]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"into_par_iter","rayon::vec","",106,[[],["t"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,[[["self"],["t"]]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"next","rayon::iter","",0,[[["self"]],["option"]]],[11,"size_hint","","",0,[[["self"]]]],[11,"fold","","",0,[[["acc"],["g"]],["acc"]]],[11,"count","","",0,[[],["usize"]]],[11,"last","","",0,[[],["option"]]],[11,"nth","","",0,[[["self"],["usize"]],["option"]]],[11,"collect","","",0,[[],["b"]]],[11,"all","","",0,[[["self"],["f"]],["bool"]]],[11,"as_ref","","",0,[[["self"]]]],[11,"as_ref","","",0,[[["self"]],["str"]]],[11,"as_ref","","",0,[[["self"]],["target"]]],[11,"partial_cmp","","",0,[[["self"],["either"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",0,[[["self"],["either"]],["bool"]]],[11,"le","","",0,[[["self"],["either"]],["bool"]]],[11,"gt","","",0,[[["self"],["either"]],["bool"]]],[11,"ge","","",0,[[["self"],["either"]],["bool"]]],[11,"into","","",0,[[],["result"]]],[11,"deref","","",0,[[["self"]]]],[11,"deref_mut","","",0,[[["self"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"fmt","","",0,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"from","","",0,[[["result"]],["either"]]],[11,"cmp","","",0,[[["self"],["either"]],["ordering"]]],[11,"extend","","",0,[[["self"],["t"]]]],[11,"clone","","",0,[[["self"]],["either"]]],[11,"next_back","","",0,[[["self"]],["option"]]],[11,"as_mut","","",0,[[["self"]],["target"]]],[11,"as_mut","","",0,[[["self"]],["str"]]],[11,"as_mut","","",0,[[["self"]]]],[11,"eq","","",0,[[["self"],["either"]],["bool"]]],[11,"ne","","",0,[[["self"],["either"]],["bool"]]],[11,"description","rayon","",23,[[["self"]],["str"]]],[11,"fmt","","",22,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",25,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",20,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",26,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",24,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",21,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",23,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",23,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"drop","","",22,[[["self"]]]],[11,"default","","",24,[[],[["defaultspawn"],["threadpoolbuilder",["defaultspawn"]]]]],[11,"drive_unindexed","rayon::collections::binary_heap","",27,[[["c"]]]],[11,"opt_len","","",27,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",28,[[["c"]]]],[11,"opt_len","","",28,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::collections::btree_map","",29,[[["c"]]]],[11,"opt_len","","",29,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",30,[[["c"]]]],[11,"opt_len","","",30,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",31,[[["c"]]]],[11,"opt_len","","",31,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::collections::btree_set","",32,[[["c"]]]],[11,"opt_len","","",32,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",33,[[["c"]]]],[11,"opt_len","","",33,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::collections::hash_map","",34,[[["c"]]]],[11,"opt_len","","",34,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",35,[[["c"]]]],[11,"opt_len","","",35,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",36,[[["c"]]]],[11,"opt_len","","",36,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::collections::hash_set","",37,[[["c"]]]],[11,"opt_len","","",37,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",38,[[["c"]]]],[11,"opt_len","","",38,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::collections::linked_list","",39,[[["c"]]]],[11,"opt_len","","",39,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",40,[[["c"]]]],[11,"opt_len","","",40,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",41,[[["c"]]]],[11,"opt_len","","",41,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::collections::vec_deque","",42,[[["c"]]]],[11,"opt_len","","",42,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",43,[[["c"]]]],[11,"opt_len","","",43,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",44,[[["c"]]]],[11,"opt_len","","",44,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::iter","",45,[[["c"]]]],[11,"drive_unindexed","","",46,[[["c"]]]],[11,"opt_len","","",46,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",47,[[["c"]]]],[11,"opt_len","","",47,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",48,[[["c"]]]],[11,"opt_len","","",48,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",49,[[["c"]]]],[11,"drive_unindexed","","",50,[[["c"]]]],[11,"drive_unindexed","","",51,[[["c"]]]],[11,"drive_unindexed","","",52,[[["c"]]]],[11,"drive_unindexed","","",53,[[["c"]]]],[11,"drive_unindexed","","",54,[[["c"]]]],[11,"drive_unindexed","","",55,[[["c"]]]],[11,"drive_unindexed","","",56,[[["c"]]]],[11,"drive_unindexed","","",57,[[["c"]]]],[11,"opt_len","","",57,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",58,[[["c"]]]],[11,"drive_unindexed","","",59,[[["c"]]]],[11,"opt_len","","",59,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",60,[[["c"]]]],[11,"opt_len","","",60,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",62,[[["c"]]]],[11,"opt_len","","",62,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",61,[[["c"]]]],[11,"opt_len","","",61,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",63,[[["c"]]]],[11,"opt_len","","",63,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",64,[[["c"]]]],[11,"opt_len","","",64,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",65,[[["consumer"]]]],[11,"opt_len","","",65,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",66,[[["c"]]]],[11,"opt_len","","",66,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",67,[[["c"]]]],[11,"opt_len","","",67,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",68,[[["c"]]]],[11,"opt_len","","",68,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",69,[[["c"]]]],[11,"opt_len","","",69,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",70,[[["c"]]]],[11,"opt_len","","",70,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",72,[[["c"]]]],[11,"opt_len","","",72,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",71,[[["c"]]]],[11,"opt_len","","",71,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",73,[[["c"]]]],[11,"opt_len","","",73,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",74,[[["c"]]]],[11,"opt_len","","",74,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",75,[[["c"]]]],[11,"opt_len","","",75,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",76,[[["c"]]]],[11,"opt_len","","",76,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",77,[[["c"]]]],[11,"drive_unindexed","","",8,[[["c"]]]],[11,"drive_unindexed","","",78,[[["c"]]]],[11,"opt_len","","",78,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",79,[[["c"]]]],[11,"opt_len","","",79,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",80,[[["c"]]]],[11,"opt_len","","",80,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::option","",81,[[["c"]]]],[11,"opt_len","","",81,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",82,[[["c"]]]],[11,"opt_len","","",82,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",83,[[["c"]]]],[11,"opt_len","","",83,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::range","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",84,[[["c"]]]],[11,"opt_len","","",84,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::range_inclusive","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",85,[[["c"]]]],[11,"opt_len","","",85,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::result","",86,[[["c"]]]],[11,"opt_len","","",86,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",87,[[["c"]]]],[11,"opt_len","","",87,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",88,[[["c"]]]],[11,"opt_len","","",88,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::slice","",89,[[["c"]]]],[11,"opt_len","","",89,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",90,[[["c"]]]],[11,"opt_len","","",90,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",91,[[["c"]]]],[11,"opt_len","","",91,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",92,[[["c"]]]],[11,"opt_len","","",92,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",93,[[["c"]]]],[11,"opt_len","","",93,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","","",94,[[["c"]]]],[11,"drive_unindexed","","",95,[[["c"]]]],[11,"drive_unindexed","rayon::str","",96,[[["c"]]]],[11,"drive_unindexed","","",97,[[["c"]]]],[11,"drive_unindexed","","",98,[[["c"]]]],[11,"drive_unindexed","","",99,[[["c"]]]],[11,"drive_unindexed","","",100,[[["c"]]]],[11,"drive_unindexed","","",101,[[["c"]]]],[11,"drive_unindexed","","",102,[[["c"]]]],[11,"drive_unindexed","","",103,[[["c"]]]],[11,"drive_unindexed","","",104,[[["c"]]]],[11,"drive_unindexed","","",105,[[["c"]]]],[11,"drive_unindexed","rayon::vec","",106,[[["c"]]]],[11,"opt_len","","",106,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive_unindexed","rayon::iter","",0,[[["c"]]]],[11,"opt_len","","",0,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"drive","rayon::collections::binary_heap","",27,[[["c"]]]],[11,"len","","",27,[[["self"]],["usize"]]],[11,"with_producer","","",27,[[["cb"]]]],[11,"drive","","",28,[[["c"]]]],[11,"len","","",28,[[["self"]],["usize"]]],[11,"with_producer","","",28,[[["cb"]]]],[11,"drive","rayon::collections::vec_deque","",42,[[["c"]]]],[11,"len","","",42,[[["self"]],["usize"]]],[11,"with_producer","","",42,[[["cb"]]]],[11,"drive","","",43,[[["c"]]]],[11,"len","","",43,[[["self"]],["usize"]]],[11,"with_producer","","",43,[[["cb"]]]],[11,"drive","","",44,[[["c"]]]],[11,"len","","",44,[[["self"]],["usize"]]],[11,"with_producer","","",44,[[["cb"]]]],[11,"drive","rayon::iter","",46,[[["c"]]]],[11,"len","","",46,[[["self"]],["usize"]]],[11,"with_producer","","",46,[[["cb"]]]],[11,"drive","","",47,[[["c"]]]],[11,"len","","",47,[[["self"]],["usize"]]],[11,"with_producer","","",47,[[["cb"]]]],[11,"drive","","",48,[[["consumer"]]]],[11,"len","","",48,[[["self"]],["usize"]]],[11,"with_producer","","",48,[[["cb"]]]],[11,"len","","",57,[[["self"]],["usize"]]],[11,"drive","","",57,[[["consumer"]]]],[11,"with_producer","","",57,[[["cb"]]]],[11,"len","","",59,[[["self"]],["usize"]]],[11,"drive","","",59,[[["consumer"]]]],[11,"with_producer","","",59,[[["cb"]]]],[11,"drive","","",60,[[["c"]]]],[11,"len","","",60,[[["self"]],["usize"]]],[11,"with_producer","","",60,[[["cb"]]]],[11,"drive","","",62,[[["c"]]]],[11,"len","","",62,[[["self"]],["usize"]]],[11,"with_producer","","",62,[[["cb"]]]],[11,"drive","","",61,[[["c"]]]],[11,"len","","",61,[[["self"]],["usize"]]],[11,"with_producer","","",61,[[["cb"]]]],[11,"drive","","",63,[[["c"]]]],[11,"len","","",63,[[["self"]],["usize"]]],[11,"with_producer","","",63,[[["cb"]]]],[11,"drive","","",64,[[["c"]]]],[11,"len","","",64,[[["self"]],["usize"]]],[11,"with_producer","","",64,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",65,[[["consumer"]]]],[11,"len","","",65,[[["self"]],["usize"]]],[11,"with_producer","","",65,[[["cb"]]]],[11,"drive","","",66,[[["c"]]]],[11,"len","","",66,[[["self"]],["usize"]]],[11,"with_producer","","",66,[[["cb"]]]],[11,"drive","","",67,[[["c"]]]],[11,"len","","",67,[[["self"]],["usize"]]],[11,"with_producer","","",67,[[["cb"]]]],[11,"drive","","",68,[[["c"]]]],[11,"len","","",68,[[["self"]],["usize"]]],[11,"with_producer","","",68,[[["cb"]]]],[11,"drive","","",69,[[["c"]]]],[11,"len","","",69,[[["self"]],["usize"]]],[11,"with_producer","","",69,[[["cb"]]]],[11,"drive","","",70,[[["consumer"]]]],[11,"len","","",70,[[["self"]],["usize"]]],[11,"with_producer","","",70,[[["cb"]]]],[11,"drive","","",72,[[["consumer"]]]],[11,"len","","",72,[[["self"]],["usize"]]],[11,"with_producer","","",72,[[["cb"]]]],[11,"drive","","",71,[[["consumer"]]]],[11,"len","","",71,[[["self"]],["usize"]]],[11,"with_producer","","",71,[[["cb"]]]],[11,"drive","","",73,[[["c"]]]],[11,"len","","",73,[[["self"]],["usize"]]],[11,"with_producer","","",73,[[["cb"]]]],[11,"drive","","",74,[[["c"]]]],[11,"len","","",74,[[["self"]],["usize"]]],[11,"with_producer","","",74,[[["cb"]]]],[11,"drive","","",75,[[["c"]]]],[11,"len","","",75,[[["self"]],["usize"]]],[11,"with_producer","","",75,[[["cb"]]]],[11,"drive","","",76,[[["c"]]]],[11,"len","","",76,[[["self"]],["usize"]]],[11,"with_producer","","",76,[[["cb"]]]],[11,"drive","","",78,[[["c"]]]],[11,"with_producer","","",78,[[["cb"]]]],[11,"len","","",78,[[["self"]],["usize"]]],[11,"drive","","",79,[[["c"]]]],[11,"len","","",79,[[["self"]],["usize"]]],[11,"with_producer","","",79,[[["cb"]]]],[11,"drive","","",80,[[["c"]]]],[11,"len","","",80,[[["self"]],["usize"]]],[11,"with_producer","","",80,[[["cb"]]]],[11,"drive","rayon::option","",81,[[["c"]]]],[11,"len","","",81,[[["self"]],["usize"]]],[11,"with_producer","","",81,[[["cb"]]]],[11,"drive","","",82,[[["c"]]]],[11,"len","","",82,[[["self"]],["usize"]]],[11,"with_producer","","",82,[[["cb"]]]],[11,"drive","","",83,[[["c"]]]],[11,"len","","",83,[[["self"]],["usize"]]],[11,"with_producer","","",83,[[["cb"]]]],[11,"drive","rayon::range","",84,[[["c"]]]],[11,"len","","",84,[[["self"]],["usize"]]],[11,"with_producer","","",84,[[["cb"]]]],[11,"drive","","",84,[[["c"]]]],[11,"len","","",84,[[["self"]],["usize"]]],[11,"with_producer","","",84,[[["cb"]]]],[11,"drive","","",84,[[["c"]]]],[11,"len","","",84,[[["self"]],["usize"]]],[11,"with_producer","","",84,[[["cb"]]]],[11,"drive","","",84,[[["c"]]]],[11,"len","","",84,[[["self"]],["usize"]]],[11,"with_producer","","",84,[[["cb"]]]],[11,"drive","","",84,[[["c"]]]],[11,"len","","",84,[[["self"]],["usize"]]],[11,"with_producer","","",84,[[["cb"]]]],[11,"drive","","",84,[[["c"]]]],[11,"len","","",84,[[["self"]],["usize"]]],[11,"with_producer","","",84,[[["cb"]]]],[11,"drive","","",84,[[["c"]]]],[11,"len","","",84,[[["self"]],["usize"]]],[11,"with_producer","","",84,[[["cb"]]]],[11,"drive","","",84,[[["c"]]]],[11,"len","","",84,[[["self"]],["usize"]]],[11,"with_producer","","",84,[[["cb"]]]],[11,"drive","rayon::range_inclusive","",85,[[["c"]]]],[11,"len","","",85,[[["self"]],["usize"]]],[11,"with_producer","","",85,[[["cb"]]]],[11,"drive","","",85,[[["c"]]]],[11,"len","","",85,[[["self"]],["usize"]]],[11,"with_producer","","",85,[[["cb"]]]],[11,"drive","","",85,[[["c"]]]],[11,"len","","",85,[[["self"]],["usize"]]],[11,"with_producer","","",85,[[["cb"]]]],[11,"drive","","",85,[[["c"]]]],[11,"len","","",85,[[["self"]],["usize"]]],[11,"with_producer","","",85,[[["cb"]]]],[11,"drive","rayon::result","",86,[[["c"]]]],[11,"len","","",86,[[["self"]],["usize"]]],[11,"with_producer","","",86,[[["cb"]]]],[11,"drive","","",87,[[["c"]]]],[11,"len","","",87,[[["self"]],["usize"]]],[11,"with_producer","","",87,[[["cb"]]]],[11,"drive","","",88,[[["c"]]]],[11,"len","","",88,[[["self"]],["usize"]]],[11,"with_producer","","",88,[[["cb"]]]],[11,"drive","rayon::slice","",89,[[["c"]]]],[11,"len","","",89,[[["self"]],["usize"]]],[11,"with_producer","","",89,[[["cb"]]]],[11,"drive","","",90,[[["c"]]]],[11,"len","","",90,[[["self"]],["usize"]]],[11,"with_producer","","",90,[[["cb"]]]],[11,"drive","","",91,[[["c"]]]],[11,"len","","",91,[[["self"]],["usize"]]],[11,"with_producer","","",91,[[["cb"]]]],[11,"drive","","",92,[[["c"]]]],[11,"len","","",92,[[["self"]],["usize"]]],[11,"with_producer","","",92,[[["cb"]]]],[11,"drive","","",93,[[["c"]]]],[11,"len","","",93,[[["self"]],["usize"]]],[11,"with_producer","","",93,[[["cb"]]]],[11,"drive","rayon::vec","",106,[[["c"]]]],[11,"len","","",106,[[["self"]],["usize"]]],[11,"with_producer","","",106,[[["cb"]]]],[11,"drive","rayon::iter","",0,[[["c"]]]],[11,"len","","",0,[[["self"]],["usize"]]],[11,"with_producer","","",0,[[["cb"]]]],[11,"par_extend","","",0,[[["self"],["i"]]]],[11,"clone","rayon::collections::binary_heap","",27,[[["self"]],["intoiter"]]],[11,"clone","","",28,[[["self"]],["self"]]],[11,"clone","rayon::collections::btree_map","",30,[[["self"]],["self"]]],[11,"clone","rayon::collections::btree_set","",33,[[["self"]],["self"]]],[11,"clone","rayon::collections::hash_map","",35,[[["self"]],["self"]]],[11,"clone","rayon::collections::hash_set","",38,[[["self"]],["self"]]],[11,"clone","rayon::collections::linked_list","",39,[[["self"]],["intoiter"]]],[11,"clone","","",40,[[["self"]],["self"]]],[11,"clone","rayon::collections::vec_deque","",42,[[["self"]],["intoiter"]]],[11,"clone","","",43,[[["self"]],["self"]]],[11,"clone","rayon::iter","",45,[[["self"]],["iterbridge"]]],[11,"clone","","",46,[[["self"]],["chain"]]],[11,"clone","","",47,[[["self"]],["chunks"]]],[11,"clone","","",48,[[["self"]],["enumerate"]]],[11,"clone","","",49,[[["self"]],["filter"]]],[11,"clone","","",50,[[["self"]],["filtermap"]]],[11,"clone","","",51,[[["self"]],["flatmap"]]],[11,"clone","","",52,[[["self"]],["flatten"]]],[11,"clone","","",53,[[["self"]],["fold"]]],[11,"clone","","",54,[[["self"]],["foldwith"]]],[11,"clone","","",55,[[["self"]],["tryfold"]]],[11,"clone","","",56,[[["self"]],["tryfoldwith"]]],[11,"clone","","",57,[[["self"]],["skip"]]],[11,"clone","","",58,[[["self"]],["split"]]],[11,"clone","","",59,[[["self"]],["take"]]],[11,"clone","","",60,[[["self"]],["map"]]],[11,"clone","","",62,[[["self"]],["mapwith"]]],[11,"clone","","",61,[[["self"]],["mapinit"]]],[11,"clone","","",63,[[["self"]],["zip"]]],[11,"clone","","",64,[[["self"]],["zipeq"]]],[11,"clone","","",65,[[["self"]],["multizip"]]],[11,"clone","","",66,[[["self"]],["interleave"]]],[11,"clone","","",67,[[["self"]],["interleaveshortest"]]],[11,"clone","","",68,[[["self"]],["intersperse"]]],[11,"clone","","",69,[[["self"]],["update"]]],[11,"clone","","",70,[[["self"]],["rev"]]],[11,"clone","","",72,[[["self"]],["minlen"]]],[11,"clone","","",71,[[["self"]],["maxlen"]]],[11,"clone","","",73,[[["self"]],["cloned"]]],[11,"clone","","",74,[[["self"]],["copied"]]],[11,"clone","","",75,[[["self"]],["inspect"]]],[11,"clone","","",76,[[["self"]],["panicfuse"]]],[11,"clone","","",77,[[["self"]],["whilesome"]]],[11,"clone","","",8,[[["self"]],["repeat"]]],[11,"clone","","",78,[[["self"]],["repeatn"]]],[11,"clone","","",79,[[["self"]],["self"]]],[11,"clone","","",80,[[["self"]],["once"]]],[11,"clone","rayon::option","",81,[[["self"]],["intoiter"]]],[11,"clone","","",82,[[["self"]],["self"]]],[11,"clone","rayon::range","",84,[[["self"]],["iter"]]],[11,"clone","rayon::range_inclusive","",85,[[["self"]],["iter"]]],[11,"clone","rayon::result","",86,[[["self"]],["intoiter"]]],[11,"clone","","",87,[[["self"]],["self"]]],[11,"clone","rayon::slice","",89,[[["self"]],["self"]]],[11,"clone","","",90,[[["self"]],["self"]]],[11,"clone","","",91,[[["self"]],["self"]]],[11,"clone","","",94,[[["self"]],["self"]]],[11,"clone","rayon::str","",96,[[["self"]],["chars"]]],[11,"clone","","",97,[[["self"]],["charindices"]]],[11,"clone","","",98,[[["self"]],["bytes"]]],[11,"clone","","",99,[[["self"]],["encodeutf16"]]],[11,"clone","","",100,[[["self"]],["split"]]],[11,"clone","","",101,[[["self"]],["splitterminator"]]],[11,"clone","","",102,[[["self"]],["lines"]]],[11,"clone","","",103,[[["self"]],["splitwhitespace"]]],[11,"clone","","",104,[[["self"]],["matches"]]],[11,"clone","","",105,[[["self"]],["matchindices"]]],[11,"clone","rayon::vec","",106,[[["self"]],["intoiter"]]],[11,"fmt","rayon::collections::binary_heap","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::collections::btree_map","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::collections::btree_set","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::collections::hash_map","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::collections::hash_set","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::collections::linked_list","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::collections::vec_deque","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::iter","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",51,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",52,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",57,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",63,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",64,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",65,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",66,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",67,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",68,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",77,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",78,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",79,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",80,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::option","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::range","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::range_inclusive","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::result","",86,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::slice","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",90,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",94,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",95,[[["formatter"],["self"]],["result"]]],[11,"fmt","rayon::str","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",97,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",102,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",103,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",104,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"fmt","rayon::vec","",106,[[["self"],["formatter"]],["result"]]],[11,"migrated","rayon","Returns `true` if the closure was called from a different…",20,[[["self"]],["bool"]]],[11,"index","","Get the index of this thread in the pool, within…",21,[[["self"]],["usize"]]],[11,"name","","Get the string that was specified by…",21,[[["self"]],[["str"],["option",["str"]]]]],[11,"stack_size","","Get the value that was specified by…",21,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"run","","Execute the main loop for this thread. This will not…",21,[[]]],[11,"new","","Deprecated in favor of `ThreadPoolBuilder::build`.",22,[[["configuration"]],[["threadpool"],["box",["error"]],["result",["threadpool","box"]]]]],[11,"install","","Executes `op` within the threadpool. Any attempts to use…",22,[[["op"],["self"]],["r"]]],[11,"current_num_threads","","Returns the (current) number of threads in the thread pool.",22,[[["self"]],["usize"]]],[11,"current_thread_index","","If called from a Rayon worker thread in this thread-pool,…",22,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"current_thread_has_pending_tasks","","Returns true if the current worker thread currently has…",22,[[["self"]],[["bool"],["option",["bool"]]]]],[11,"join","","Execute `oper_a` and `oper_b` in the thread-pool and…",22,[[["a"],["self"],["b"]]]],[11,"scope","","Creates a scope that executes within this thread-pool.…",22,[[["op"],["self"]],["r"]]],[11,"scope_fifo","","Creates a scope that executes within this thread-pool.…",22,[[["op"],["self"]],["r"]]],[11,"spawn","","Spawns an asynchronous task in this thread-pool. This task…",22,[[["op"],["self"]]]],[11,"spawn_fifo","","Spawns an asynchronous task in this thread-pool. This task…",22,[[["op"],["self"]]]],[11,"new","","Creates and returns a valid rayon thread pool builder, but…",24,[[],[["defaultspawn"],["threadpoolbuilder",["defaultspawn"]]]]],[11,"build","","Create a new `ThreadPool` initialized using this…",24,[[],[["threadpool"],["result",["threadpool","threadpoolbuilderror"]],["threadpoolbuilderror"]]]],[11,"build_global","","Initializes the global thread pool. This initialization is…",24,[[],[["result",["threadpoolbuilderror"]],["threadpoolbuilderror"]]]],[11,"build_scoped","","Create a scoped `ThreadPool` initialized using this…",24,[[["w"],["f"]],[["result",["threadpoolbuilderror"]],["threadpoolbuilderror"]]]],[11,"spawn_handler","","Set a custom function for spawning threads.",24,[[["f"]],[["customspawn"],["threadpoolbuilder",["customspawn"]]]]],[11,"thread_name","","Set a closure which takes a thread index and returns the…",24,[[["f"]],["threadpoolbuilder"]]],[11,"num_threads","","Set the number of threads to be used in the rayon…",24,[[["usize"]],["threadpoolbuilder"]]],[11,"panic_handler","","Normally, whenever Rayon catches a panic, it tries to…",24,[[["h"]],["threadpoolbuilder"]]],[11,"stack_size","","Set the stack size of the worker threads",24,[[["usize"]],["threadpoolbuilder"]]],[11,"breadth_first","","(DEPRECATED) Suggest to worker threads that they execute…",24,[[],["threadpoolbuilder"]]],[11,"start_handler","","Set a callback to be invoked on thread start.",24,[[["h"]],["threadpoolbuilder"]]],[11,"exit_handler","","Set a callback to be invoked on thread exit.",24,[[["h"]],["threadpoolbuilder"]]],[11,"spawn","","Spawns a job into the fork-join scope `self`. This job…",25,[[["self"],["body"]]]],[11,"spawn_fifo","","Spawns a job into the fork-join scope `self`. This job…",26,[[["self"],["body"]]]],[11,"is_left","rayon::iter","Return true if the value is the `Left` variant.",0,[[["self"]],["bool"]]],[11,"is_right","","Return true if the value is the `Right` variant.",0,[[["self"]],["bool"]]],[11,"left","","Convert the left side of `Either<L, R>` to an `Option<L>`.",0,[[],["option"]]],[11,"right","","Convert the right side of `Either<L, R>` to an `Option<R>`.",0,[[],["option"]]],[11,"as_ref","","Convert `&Either<L, R>` to `Either<&L, &R>`.",0,[[["self"]],[["l"],["either"],["r"]]]],[11,"as_mut","","Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.",0,[[["self"]],[["either"],["l"],["r"]]]],[11,"flip","","Convert `Either<L, R>` to `Either<R, L>`.",0,[[],["either"]]],[11,"map_left","","Apply the function `f` on the value in the `Left` variant…",0,[[["f"]],["either"]]],[11,"map_right","","Apply the function `f` on the value in the `Right` variant…",0,[[["f"]],["either"]]],[11,"either","","Apply one of two functions depending on contents, unifying…",0,[[["f"],["g"]],["t"]]],[11,"either_with","","Like `either`, but provide some context to whichever of…",0,[[["ctx"],["f"],["g"]],["t"]]],[11,"left_and_then","","Apply the function `f` on the value in the `Left` variant…",0,[[["f"]],["either"]]],[11,"right_and_then","","Apply the function `f` on the value in the `Right` variant…",0,[[["f"]],["either"]]],[11,"into_iter","","Convert the inner value to an iterator.",0,[[],["either"]]],[11,"left_or","","Return left value or given value",0,[[["l"]],["l"]]],[11,"left_or_default","","Return left or a default",0,[[],["l"]]],[11,"left_or_else","","Returns left value or computes it from a closure",0,[[["f"]],["l"]]],[11,"right_or","","Return right value or given value",0,[[["r"]],["r"]]],[11,"right_or_default","","Return right or a default",0,[[],["r"]]],[11,"right_or_else","","Returns right value or computes it from a closure",0,[[["f"]],["r"]]],[11,"factor_first","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"factor_second","","Factor out a homogeneous type from an either of pairs.",0,[[]]],[11,"into_inner","","Extract the value of an either over two equivalent types.",0,[[],["t"]]],[11,"map","","Map `f` over the contained value and return the result in…",0,[[["f"]],["either"]]]],"p":[[4,"Either"],[8,"ProducerCallback"],[8,"Producer"],[8,"Consumer"],[8,"Folder"],[8,"Reducer"],[8,"UnindexedConsumer"],[8,"UnindexedProducer"],[3,"Repeat"],[8,"ParallelBridge"],[8,"IntoParallelIterator"],[8,"IntoParallelRefIterator"],[8,"IntoParallelRefMutIterator"],[8,"ParallelIterator"],[8,"IndexedParallelIterator"],[8,"FromParallelIterator"],[8,"ParallelExtend"],[8,"ParallelSlice"],[8,"ParallelSliceMut"],[8,"ParallelString"],[3,"FnContext"],[3,"ThreadBuilder"],[3,"ThreadPool"],[3,"ThreadPoolBuildError"],[3,"ThreadPoolBuilder"],[3,"Scope"],[3,"ScopeFifo"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"IterBridge"],[3,"Chain"],[3,"Chunks"],[3,"Enumerate"],[3,"Filter"],[3,"FilterMap"],[3,"FlatMap"],[3,"Flatten"],[3,"Fold"],[3,"FoldWith"],[3,"TryFold"],[3,"TryFoldWith"],[3,"Skip"],[3,"Split"],[3,"Take"],[3,"Map"],[3,"MapInit"],[3,"MapWith"],[3,"Zip"],[3,"ZipEq"],[3,"MultiZip"],[3,"Interleave"],[3,"InterleaveShortest"],[3,"Intersperse"],[3,"Update"],[3,"Rev"],[3,"MaxLen"],[3,"MinLen"],[3,"Cloned"],[3,"Copied"],[3,"Inspect"],[3,"PanicFuse"],[3,"WhileSome"],[3,"RepeatN"],[3,"Empty"],[3,"Once"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"Iter"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Iter"],[3,"Chunks"],[3,"Windows"],[3,"IterMut"],[3,"ChunksMut"],[3,"Split"],[3,"SplitMut"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"EncodeUtf16"],[3,"Split"],[3,"SplitTerminator"],[3,"Lines"],[3,"SplitWhitespace"],[3,"Matches"],[3,"MatchIndices"],[3,"IntoIter"]]};
searchIndex["rayon_core"] = {"doc":"Under construction","i":[[3,"ThreadBuilder","rayon_core","Thread builder used for customization via…",null,null],[3,"Scope","","Represents a fork-join scope which can be used to spawn…",null,null],[3,"ScopeFifo","","Represents a fork-join scope which can be used to spawn…",null,null],[3,"ThreadPool","","Represents a user created [thread-pool].",null,null],[3,"ThreadPoolBuildError","","Error when initializing a thread pool.",null,null],[3,"ThreadPoolBuilder","","Used to create a new [`ThreadPool`] or to configure the…",null,null],[3,"Configuration","","Contains the rayon thread pool configuration. Use…",null,null],[3,"FnContext","","Provides the calling context to a closure called by…",null,null],[5,"join","","Takes two closures and potentially runs them in parallel.…",null,[[["a"],["b"]]]],[5,"join_context","","Identical to `join`, except that the closures have a…",null,[[["a"],["b"]]]],[5,"scope","","Create a \"fork-join\" scope `s` and invokes the closure…",null,[[["op"]],["r"]]],[5,"scope_fifo","","Create a \"fork-join\" scope `s` with FIFO order, and…",null,[[["op"]],["r"]]],[5,"spawn","","Fires off a task into the Rayon threadpool in the \"static\"…",null,[[["f"]]]],[5,"spawn_fifo","","Fires off a task into the Rayon threadpool in the \"static\"…",null,[[["f"]]]],[5,"current_thread_has_pending_tasks","","If called from a Rayon worker thread, indicates whether…",null,[[],[["option",["bool"]],["bool"]]]],[5,"current_thread_index","","If called from a Rayon worker thread, returns the index of…",null,[[],[["option",["usize"]],["usize"]]]],[5,"current_num_threads","","Returns the number of threads in the current registry. If…",null,[[],["usize"]]],[5,"initialize","","Deprecated in favor of `ThreadPoolBuilder::build_global`.",null,[[["configuration"]],[["box",["error"]],["result",["box"]]]]],[11,"index","","Get the index of this thread in the pool, within…",0,[[["self"]],["usize"]]],[11,"name","","Get the string that was specified by…",0,[[["self"]],[["str"],["option",["str"]]]]],[11,"stack_size","","Get the value that was specified by…",0,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"run","","Execute the main loop for this thread. This will not…",0,[[]]],[11,"spawn","","Spawns a job into the fork-join scope `self`. This job…",1,[[["self"],["body"]]]],[11,"spawn_fifo","","Spawns a job into the fork-join scope `self`. This job…",2,[[["self"],["body"]]]],[11,"new","","Deprecated in favor of `ThreadPoolBuilder::build`.",3,[[["configuration"]],[["box",["error"]],["result",["threadpool","box"]],["threadpool"]]]],[11,"install","","Executes `op` within the threadpool. Any attempts to use…",3,[[["op"],["self"]],["r"]]],[11,"current_num_threads","","Returns the (current) number of threads in the thread pool.",3,[[["self"]],["usize"]]],[11,"current_thread_index","","If called from a Rayon worker thread in this thread-pool,…",3,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"current_thread_has_pending_tasks","","Returns true if the current worker thread currently has…",3,[[["self"]],[["option",["bool"]],["bool"]]]],[11,"join","","Execute `oper_a` and `oper_b` in the thread-pool and…",3,[[["a"],["self"],["b"]]]],[11,"scope","","Creates a scope that executes within this thread-pool.…",3,[[["op"],["self"]],["r"]]],[11,"scope_fifo","","Creates a scope that executes within this thread-pool.…",3,[[["op"],["self"]],["r"]]],[11,"spawn","","Spawns an asynchronous task in this thread-pool. This task…",3,[[["op"],["self"]]]],[11,"spawn_fifo","","Spawns an asynchronous task in this thread-pool. This task…",3,[[["op"],["self"]]]],[11,"new","","Creates and returns a valid rayon thread pool builder, but…",4,[[],["self"]]],[11,"build","","Create a new `ThreadPool` initialized using this…",4,[[],[["threadpoolbuilderror"],["threadpool"],["result",["threadpool","threadpoolbuilderror"]]]]],[11,"build_global","","Initializes the global thread pool. This initialization is…",4,[[],[["result",["threadpoolbuilderror"]],["threadpoolbuilderror"]]]],[11,"build_scoped","","Create a scoped `ThreadPool` initialized using this…",4,[[["w"],["f"]],[["threadpoolbuilderror"],["result",["threadpoolbuilderror"]]]]],[11,"spawn_handler","","Set a custom function for spawning threads.",4,[[["f"]],[["customspawn"],["threadpoolbuilder",["customspawn"]]]]],[11,"thread_name","","Set a closure which takes a thread index and returns the…",4,[[["f"]],["self"]]],[11,"num_threads","","Set the number of threads to be used in the rayon…",4,[[["usize"]],["self"]]],[11,"panic_handler","","Normally, whenever Rayon catches a panic, it tries to…",4,[[["h"]],["self"]]],[11,"stack_size","","Set the stack size of the worker threads",4,[[["usize"]],["self"]]],[11,"breadth_first","","(DEPRECATED) Suggest to worker threads that they execute…",4,[[],["self"]]],[11,"start_handler","","Set a callback to be invoked on thread start.",4,[[["h"]],["self"]]],[11,"exit_handler","","Set a callback to be invoked on thread exit.",4,[[["h"]],["self"]]],[11,"new","","Creates and return a valid rayon thread pool…",5,[[],["configuration"]]],[11,"build","","Deprecated in favor of `ThreadPoolBuilder::build`.",5,[[],[["result",["threadpool","box"]],["threadpool"],["box",["error"]]]]],[11,"thread_name","","Deprecated in favor of `ThreadPoolBuilder::thread_name`.",5,[[["f"]],["self"]]],[11,"num_threads","","Deprecated in favor of `ThreadPoolBuilder::num_threads`.",5,[[["usize"]],["configuration"]]],[11,"panic_handler","","Deprecated in favor of `ThreadPoolBuilder::panic_handler`.",5,[[["h"]],["configuration"]]],[11,"stack_size","","Deprecated in favor of `ThreadPoolBuilder::stack_size`.",5,[[["usize"]],["self"]]],[11,"breadth_first","","Deprecated in favor of `ThreadPoolBuilder::breadth_first`.",5,[[],["self"]]],[11,"start_handler","","Deprecated in favor of `ThreadPoolBuilder::start_handler`.",5,[[["h"]],["configuration"]]],[11,"exit_handler","","Deprecated in favor of `ThreadPoolBuilder::exit_handler`.",5,[[["h"]],["configuration"]]],[11,"migrated","","Returns `true` if the closure was called from a different…",6,[[["self"]],["bool"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"drop","","",3,[[["self"]]]],[11,"default","","",4,[[],["self"]]],[11,"default","","",5,[[],["self"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"description","","",7,[[["self"]],["str"]]]],"p":[[3,"ThreadBuilder"],[3,"Scope"],[3,"ScopeFifo"],[3,"ThreadPool"],[3,"ThreadPoolBuilder"],[3,"Configuration"],[3,"FnContext"],[3,"ThreadPoolBuildError"]]};
searchIndex["scopeguard"] = {"doc":"A scope guard will run a given closure when it goes out of…","i":[[3,"ScopeGuard","scopeguard","`ScopeGuard` is a scope guard that may own a protected…",null,null],[4,"Always","","Always run on scope exit.",null,null],[5,"guard","","Create a new `ScopeGuard` owning `v` and with deferred…",null,[[["t"],["f"]],[["always"],["scopeguard",["always"]]]]],[8,"Strategy","","Controls in which cases the associated code should be run",null,null],[10,"should_run","","Return `true` if the guard’s associated code should run…",0,[[],["bool"]]],[11,"with_strategy","","Create a `ScopeGuard` that owns `v` (accessible through…",1,[[["t"],["f"]],["scopeguard"]]],[11,"into_inner","","“Defuse” the guard and extract the value without calling…",1,[[],["t"]]],[14,"defer","","Macro to create a `ScopeGuard` (always run).",null,null],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"should_run","","",2,[[],["bool"]]],[11,"deref","","",1,[[["self"]],["t"]]],[11,"deref_mut","","",1,[[["self"]],["t"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"drop","","",1,[[["self"]]]]],"p":[[8,"Strategy"],[3,"ScopeGuard"],[4,"Always"]]};
searchIndex["serde"] = {"doc":"Serde","i":[[0,"de","serde","Generic data structure deserialization framework.",null,null],[3,"IgnoredAny","serde::de","An efficient way of discarding data from a deserializer.",null,null],[4,"Unexpected","","`Unexpected` represents an unexpected invocation of any…",null,null],[13,"Bool","","The input contained a boolean value that was not expected.",0,null],[13,"Unsigned","","The input contained an unsigned integer `u8`, `u16`, `u32`…",0,null],[13,"Signed","","The input contained a signed integer `i8`, `i16`, `i32` or…",0,null],[13,"Float","","The input contained a floating point `f32` or `f64` that…",0,null],[13,"Char","","The input contained a `char` that was not expected.",0,null],[13,"Str","","The input contained a `&str` or `String` that was not…",0,null],[13,"Bytes","","The input contained a `&[u8]` or `Vec<u8>` that was not…",0,null],[13,"Unit","","The input contained a unit `()` that was not expected.",0,null],[13,"Option","","The input contained an `Option<T>` that was not expected.",0,null],[13,"NewtypeStruct","","The input contained a newtype struct that was not expected.",0,null],[13,"Seq","","The input contained a sequence that was not expected.",0,null],[13,"Map","","The input contained a map that was not expected.",0,null],[13,"Enum","","The input contained an enum that was not expected.",0,null],[13,"UnitVariant","","The input contained a unit variant that was not expected.",0,null],[13,"NewtypeVariant","","The input contained a newtype variant that was not expected.",0,null],[13,"TupleVariant","","The input contained a tuple variant that was not expected.",0,null],[13,"StructVariant","","The input contained a struct variant that was not expected.",0,null],[13,"Other","","A message stating what uncategorized thing the input…",0,null],[0,"value","","Building blocks for deserializing basic values using the…",null,null],[3,"Error","serde::de::value","A minimal representation of all possible errors that can…",null,null],[3,"UnitDeserializer","","A deserializer holding a `()`.",null,null],[3,"BoolDeserializer","","A deserializer holding a `bool`.",null,null],[3,"I8Deserializer","","A deserializer holding an `i8`.",null,null],[3,"I16Deserializer","","A deserializer holding an `i16`.",null,null],[3,"I32Deserializer","","A deserializer holding an `i32`.",null,null],[3,"I64Deserializer","","A deserializer holding an `i64`.",null,null],[3,"IsizeDeserializer","","A deserializer holding an `isize`.",null,null],[3,"U8Deserializer","","A deserializer holding a `u8`.",null,null],[3,"U16Deserializer","","A deserializer holding a `u16`.",null,null],[3,"U64Deserializer","","A deserializer holding a `u64`.",null,null],[3,"UsizeDeserializer","","A deserializer holding a `usize`.",null,null],[3,"F32Deserializer","","A deserializer holding an `f32`.",null,null],[3,"F64Deserializer","","A deserializer holding an `f64`.",null,null],[3,"CharDeserializer","","A deserializer holding a `char`.",null,null],[3,"I128Deserializer","","A deserializer holding an `i128`.",null,null],[3,"U128Deserializer","","A deserializer holding a `u128`.",null,null],[3,"U32Deserializer","","A deserializer holding a `u32`.",null,null],[3,"StrDeserializer","","A deserializer holding a `&str`.",null,null],[3,"BorrowedStrDeserializer","","A deserializer holding a `&str` with a lifetime tied to…",null,null],[3,"StringDeserializer","","A deserializer holding a `String`.",null,null],[3,"CowStrDeserializer","","A deserializer holding a `Cow<str>`.",null,null],[3,"BorrowedBytesDeserializer","","A deserializer holding a `&[u8]` with a lifetime tied to…",null,null],[3,"SeqDeserializer","","A deserializer that iterates over a sequence.",null,null],[3,"SeqAccessDeserializer","","A deserializer holding a `SeqAccess`.",null,null],[3,"MapDeserializer","","A deserializer that iterates over a map.",null,null],[3,"MapAccessDeserializer","","A deserializer holding a `MapAccess`.",null,null],[11,"new","","Create a new borrowed deserializer from the given string.",1,[[["str"]],["borrowedstrdeserializer"]]],[11,"new","","Create a new borrowed deserializer from the given byte…",2,[[],["borrowedbytesdeserializer"]]],[11,"new","","Construct a new `SeqDeserializer<I, E>`.",3,[[["i"]],["self"]]],[11,"end","","Check for remaining elements after passing a…",3,[[],["result"]]],[11,"new","","Construct a new `SeqAccessDeserializer<A>`.",4,[[["a"]],["self"]]],[11,"new","","Construct a new `MapDeserializer<I, E>`.",5,[[["i"]],["self"]]],[11,"end","","Check for remaining elements after passing a…",5,[[],["result"]]],[11,"new","","Construct a new `MapAccessDeserializer<A>`.",6,[[["a"]],["self"]]],[8,"Error","serde::de","The `Error` trait allows `Deserialize` implementations to…",null,null],[10,"custom","","Raised when there is general error when deserializing a…",7,[[["t"]],["self"]]],[11,"invalid_type","","Raised when a `Deserialize` receives a type different from…",7,[[["expected"],["unexpected"]],["self"]]],[11,"invalid_value","","Raised when a `Deserialize` receives a value of the right…",7,[[["expected"],["unexpected"]],["self"]]],[11,"invalid_length","","Raised when deserializing a sequence or map and the input…",7,[[["usize"],["expected"]],["self"]]],[11,"unknown_variant","","Raised when a `Deserialize` enum type received a variant…",7,[[["str"]],["self"]]],[11,"unknown_field","","Raised when a `Deserialize` struct type received a field…",7,[[["str"]],["self"]]],[11,"missing_field","","Raised when a `Deserialize` struct type expected to…",7,[[["str"]],["self"]]],[11,"duplicate_field","","Raised when a `Deserialize` struct type received more than…",7,[[["str"]],["self"]]],[8,"Expected","","`Expected` represents an explanation of what data a…",null,null],[10,"fmt","","Format an explanation of what data was being expected.…",8,[[["formatter"],["self"]],["result"]]],[8,"Deserialize","","A data structure that can be deserialized from any data…",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[["d"]],["result"]]],[8,"DeserializeOwned","","A data structure that can be deserialized without…",null,null],[8,"DeserializeSeed","","`DeserializeSeed` is the stateful form of the…",null,null],[16,"Value","","The type produced by using this seed.",10,null],[10,"deserialize","","Equivalent to the more common `Deserialize::deserialize`…",10,[[["d"]],["result"]]],[8,"Deserializer","","A data format that can deserialize any data structure…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",11,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",11,[[["v"]],["result"]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",11,[[["v"]],["result"]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[["v"]],["result"]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",11,[[["v"]],["result"]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",11,[[["v"]],["result"]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",11,[[["v"]],["result"]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",11,[[["v"]],["result"]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[["v"]],["result"]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[["v"]],["result"]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[["v"]],["result"]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[["v"]],["result"]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",11,[[["v"]],["result"]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[["v"]],["result"]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[["v"]],["result"]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",11,[[["v"]],["result"]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",11,[[["v"]],["result"]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",11,[[["v"]],["result"]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["v"]],["result"]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["v"]],["result"]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",11,[[["v"]],["result"]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[["v"]],["result"]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["v"]],["result"]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["usize"],["v"]],["result"]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",11,[[["str"],["usize"],["v"]],["result"]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",11,[[["v"]],["result"]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",11,[[["v"]],["result"]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",11,[[["v"]],["result"]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",11,[[["self"]],["bool"]]],[8,"Visitor","","This trait represents a visitor that walks through a…",null,null],[16,"Value","","The value produced by this visitor.",12,null],[10,"expecting","","Format a message stating what data this Visitor expects to…",12,[[["formatter"],["self"]],["result"]]],[11,"visit_bool","","The input contains a boolean.",12,[[["bool"]],["result"]]],[11,"visit_i8","","The input contains an `i8`.",12,[[["i8"]],["result"]]],[11,"visit_i16","","The input contains an `i16`.",12,[[["i16"]],["result"]]],[11,"visit_i32","","The input contains an `i32`.",12,[[["i32"]],["result"]]],[11,"visit_i64","","The input contains an `i64`.",12,[[["i64"]],["result"]]],[11,"visit_i128","","The input contains a `i128`.",12,[[["i128"]],["result"]]],[11,"visit_u8","","The input contains a `u8`.",12,[[["u8"]],["result"]]],[11,"visit_u16","","The input contains a `u16`.",12,[[["u16"]],["result"]]],[11,"visit_u32","","The input contains a `u32`.",12,[[["u32"]],["result"]]],[11,"visit_u64","","The input contains a `u64`.",12,[[["u64"]],["result"]]],[11,"visit_u128","","The input contains a `u128`.",12,[[["u128"]],["result"]]],[11,"visit_f32","","The input contains an `f32`.",12,[[["f32"]],["result"]]],[11,"visit_f64","","The input contains an `f64`.",12,[[["f64"]],["result"]]],[11,"visit_char","","The input contains a `char`.",12,[[["char"]],["result"]]],[11,"visit_str","","The input contains a string. The lifetime of the string is…",12,[[["str"]],["result"]]],[11,"visit_borrowed_str","","The input contains a string that lives at least as long as…",12,[[["str"]],["result"]]],[11,"visit_string","","The input contains a string and ownership of the string is…",12,[[["string"]],["result"]]],[11,"visit_bytes","","The input contains a byte array. The lifetime of the byte…",12,[[],["result"]]],[11,"visit_borrowed_bytes","","The input contains a byte array that lives at least as…",12,[[],["result"]]],[11,"visit_byte_buf","","The input contains a byte array and ownership of the byte…",12,[[["vec",["u8"]],["u8"]],["result"]]],[11,"visit_none","","The input contains an optional that is absent.",12,[[],["result"]]],[11,"visit_some","","The input contains an optional that is present.",12,[[["d"]],["result"]]],[11,"visit_unit","","The input contains a unit `()`.",12,[[],["result"]]],[11,"visit_newtype_struct","","The input contains a newtype struct.",12,[[["d"]],["result"]]],[11,"visit_seq","","The input contains a sequence of elements.",12,[[["a"]],["result"]]],[11,"visit_map","","The input contains a key-value map.",12,[[["a"]],["result"]]],[11,"visit_enum","","The input contains an enum.",12,[[["a"]],["result"]]],[8,"SeqAccess","","Provides a `Visitor` access to each element of a sequence…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",13,null],[10,"next_element_seed","","This returns `Ok(Some(value))` for the next value in the…",13,[[["self"],["t"]],[["option"],["result",["option"]]]]],[11,"next_element","","This returns `Ok(Some(value))` for the next value in the…",13,[[["self"]],[["result",["option"]],["option"]]]],[11,"size_hint","","Returns the number of elements remaining in the sequence,…",13,[[["self"]],[["option",["usize"]],["usize"]]]],[8,"MapAccess","","Provides a `Visitor` access to each entry of a map in the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",14,null],[10,"next_key_seed","","This returns `Ok(Some(key))` for the next key in the map,…",14,[[["self"],["k"]],[["result",["option"]],["option"]]]],[10,"next_value_seed","","This returns a `Ok(value)` for the next value in the map.",14,[[["self"],["v"]],["result"]]],[11,"next_entry_seed","","This returns `Ok(Some((key, value)))` for the next…",14,[[["self"],["k"],["v"]],[["result",["option"]],["option"]]]],[11,"next_key","","This returns `Ok(Some(key))` for the next key in the map,…",14,[[["self"]],[["option"],["result",["option"]]]]],[11,"next_value","","This returns a `Ok(value)` for the next value in the map.",14,[[["self"]],["result"]]],[11,"next_entry","","This returns `Ok(Some((key, value)))` for the next…",14,[[["self"]],[["option"],["result",["option"]]]]],[11,"size_hint","","Returns the number of entries remaining in the map, if…",14,[[["self"]],[["option",["usize"]],["usize"]]]],[8,"EnumAccess","","Provides a `Visitor` access to the data of an enum in the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",15,null],[16,"Variant","","The `Visitor` that will be used to deserialize the content…",15,null],[10,"variant_seed","","`variant` is called to identify which variant to…",15,[[["v"]],["result"]]],[11,"variant","","`variant` is called to identify which variant to…",15,[[],["result"]]],[8,"VariantAccess","","`VariantAccess` is a visitor that is created by the…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",16,null],[10,"unit_variant","","Called when deserializing a variant with no values.",16,[[],["result"]]],[10,"newtype_variant_seed","","Called when deserializing a variant with a single value.",16,[[["t"]],["result"]]],[11,"newtype_variant","","Called when deserializing a variant with a single value.",16,[[],["result"]]],[10,"tuple_variant","","Called when deserializing a tuple-like variant.",16,[[["usize"],["v"]],["result"]]],[10,"struct_variant","","Called when deserializing a struct-like variant.",16,[[["v"]],["result"]]],[8,"IntoDeserializer","","Converts an existing value into a `Deserializer` from…",null,null],[16,"Deserializer","","The type of the deserializer being converted into.",17,null],[10,"into_deserializer","","Convert this value into a deserializer.",17,[[]]],[0,"ser","serde","Generic data structure serialization framework.",null,null],[3,"Impossible","serde::ser","Helper type for implementing a `Serializer` that does not…",null,null],[8,"Error","","Trait used by `Serialize` implementations to generically…",null,null],[10,"custom","","Used when a [`Serialize`] implementation encounters any…",18,[[["t"]],["self"]]],[8,"Serialize","","A data structure that can be serialized into any data…",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[["s"],["self"]],["result"]]],[8,"Serializer","","A data format that can serialize any data structure…",null,null],[16,"Ok","","The output type produced by this `Serializer` during…",20,null],[16,"Error","","The error type when some error occurs during serialization.",20,null],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the…",20,null],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the…",20,null],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for…",20,null],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for…",20,null],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the…",20,null],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing…",20,null],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for…",20,null],[10,"serialize_bool","","Serialize a `bool` value.",20,[[["bool"]],["result"]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[["i8"]],["result"]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[["i16"]],["result"]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[["i32"]],["result"]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[["i64"]],["result"]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[["i128"]],["result"]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[["u8"]],["result"]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[["u16"]],["result"]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[["u32"]],["result"]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[["u64"]],["result"]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[["u128"]],["result"]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[["f32"]],["result"]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[["f64"]],["result"]]],[10,"serialize_char","","Serialize a character.",20,[[["char"]],["result"]]],[10,"serialize_str","","Serialize a `&str`.",20,[[["str"]],["result"]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,[[],["result"]]],[10,"serialize_none","","Serialize a [`None`] value.",20,[[],["result"]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",20,[[["t"]],["result"]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[],["result"]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",20,[[["str"]],["result"]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[["str"],["u32"]],["result"]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[["str"],["t"]],["result"]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",20,[[["str"],["u32"],["t"]],["result"]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",20,[[["option",["usize"]],["usize"]],["result"]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",20,[[["usize"]],["result"]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",20,[[["str"],["usize"]],["result"]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",20,[[["str"],["u32"],["usize"]],["result"]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",20,[[["option",["usize"]],["usize"]],["result"]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",20,[[["str"],["usize"]],["result"]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",20,[[["str"],["u32"],["usize"]],["result"]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[["i"]],["result"]]],[11,"collect_map","","Collect an iterator as a map.",20,[[["i"]],["result"]]],[11,"collect_str","","Serialize a string produced by an implementation of…",20,[[["t"]],["result"]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",20,[[["self"]],["bool"]]],[8,"SerializeSeq","","Returned from `Serializer::serialize_seq`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",21,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",21,null],[10,"serialize_element","","Serialize a sequence element.",21,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a sequence.",21,[[],["result"]]],[8,"SerializeTuple","","Returned from `Serializer::serialize_tuple`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",22,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",22,null],[10,"serialize_element","","Serialize a tuple element.",22,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple.",22,[[],["result"]]],[8,"SerializeTupleStruct","","Returned from `Serializer::serialize_tuple_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",23,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",23,null],[10,"serialize_field","","Serialize a tuple struct field.",23,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple struct.",23,[[],["result"]]],[8,"SerializeTupleVariant","","Returned from `Serializer::serialize_tuple_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",24,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",24,null],[10,"serialize_field","","Serialize a tuple variant field.",24,[[["self"],["t"]],["result"]]],[10,"end","","Finish serializing a tuple variant.",24,[[],["result"]]],[8,"SerializeMap","","Returned from `Serializer::serialize_map`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",25,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",25,null],[10,"serialize_key","","Serialize a map key.",25,[[["self"],["t"]],["result"]]],[10,"serialize_value","","Serialize a map value.",25,[[["self"],["t"]],["result"]]],[11,"serialize_entry","","Serialize a map entry consisting of a key and a value.",25,[[["k"],["self"],["v"]],["result"]]],[10,"end","","Finish serializing a map.",25,[[],["result"]]],[8,"SerializeStruct","","Returned from `Serializer::serialize_struct`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",26,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",26,null],[10,"serialize_field","","Serialize a struct field.",26,[[["self"],["str"],["t"]],["result"]]],[11,"skip_field","","Indicate that a struct field has been skipped.",26,[[["self"],["str"]],["result"]]],[10,"end","","Finish serializing a struct.",26,[[],["result"]]],[8,"SerializeStructVariant","","Returned from `Serializer::serialize_struct_variant`.",null,null],[16,"Ok","","Must match the `Ok` type of our `Serializer`.",27,null],[16,"Error","","Must match the `Error` type of our `Serializer`.",27,null],[10,"serialize_field","","Serialize a struct variant field.",27,[[["self"],["str"],["t"]],["result"]]],[11,"skip_field","","Indicate that a struct variant field has been skipped.",27,[[["self"],["str"]],["result"]]],[10,"end","","Finish serializing a struct variant.",27,[[],["result"]]],[8,"Deserialize","serde","A data structure that can be deserialized from any data…",null,null],[10,"deserialize","","Deserialize this value from the given Serde deserializer.",9,[[["d"]],["result"]]],[8,"Deserializer","","A data format that can deserialize any data structure…",null,null],[16,"Error","","The error type that can be returned if some error occurs…",11,null],[10,"deserialize_any","","Require the `Deserializer` to figure out how to drive the…",11,[[["v"]],["result"]]],[10,"deserialize_bool","","Hint that the `Deserialize` type is expecting a `bool`…",11,[[["v"]],["result"]]],[10,"deserialize_i8","","Hint that the `Deserialize` type is expecting an `i8` value.",11,[[["v"]],["result"]]],[10,"deserialize_i16","","Hint that the `Deserialize` type is expecting an `i16`…",11,[[["v"]],["result"]]],[10,"deserialize_i32","","Hint that the `Deserialize` type is expecting an `i32`…",11,[[["v"]],["result"]]],[10,"deserialize_i64","","Hint that the `Deserialize` type is expecting an `i64`…",11,[[["v"]],["result"]]],[11,"deserialize_i128","","Hint that the `Deserialize` type is expecting an `i128`…",11,[[["v"]],["result"]]],[10,"deserialize_u8","","Hint that the `Deserialize` type is expecting a `u8` value.",11,[[["v"]],["result"]]],[10,"deserialize_u16","","Hint that the `Deserialize` type is expecting a `u16` value.",11,[[["v"]],["result"]]],[10,"deserialize_u32","","Hint that the `Deserialize` type is expecting a `u32` value.",11,[[["v"]],["result"]]],[10,"deserialize_u64","","Hint that the `Deserialize` type is expecting a `u64` value.",11,[[["v"]],["result"]]],[11,"deserialize_u128","","Hint that the `Deserialize` type is expecting an `u128`…",11,[[["v"]],["result"]]],[10,"deserialize_f32","","Hint that the `Deserialize` type is expecting a `f32` value.",11,[[["v"]],["result"]]],[10,"deserialize_f64","","Hint that the `Deserialize` type is expecting a `f64` value.",11,[[["v"]],["result"]]],[10,"deserialize_char","","Hint that the `Deserialize` type is expecting a `char`…",11,[[["v"]],["result"]]],[10,"deserialize_str","","Hint that the `Deserialize` type is expecting a string…",11,[[["v"]],["result"]]],[10,"deserialize_string","","Hint that the `Deserialize` type is expecting a string…",11,[[["v"]],["result"]]],[10,"deserialize_bytes","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["v"]],["result"]]],[10,"deserialize_byte_buf","","Hint that the `Deserialize` type is expecting a byte array…",11,[[["v"]],["result"]]],[10,"deserialize_option","","Hint that the `Deserialize` type is expecting an optional…",11,[[["v"]],["result"]]],[10,"deserialize_unit","","Hint that the `Deserialize` type is expecting a unit value.",11,[[["v"]],["result"]]],[10,"deserialize_unit_struct","","Hint that the `Deserialize` type is expecting a unit…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_newtype_struct","","Hint that the `Deserialize` type is expecting a newtype…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_seq","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["v"]],["result"]]],[10,"deserialize_tuple","","Hint that the `Deserialize` type is expecting a sequence…",11,[[["usize"],["v"]],["result"]]],[10,"deserialize_tuple_struct","","Hint that the `Deserialize` type is expecting a tuple…",11,[[["str"],["usize"],["v"]],["result"]]],[10,"deserialize_map","","Hint that the `Deserialize` type is expecting a map of…",11,[[["v"]],["result"]]],[10,"deserialize_struct","","Hint that the `Deserialize` type is expecting a struct…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_enum","","Hint that the `Deserialize` type is expecting an enum…",11,[[["str"],["v"]],["result"]]],[10,"deserialize_identifier","","Hint that the `Deserialize` type is expecting the name of…",11,[[["v"]],["result"]]],[10,"deserialize_ignored_any","","Hint that the `Deserialize` type needs to deserialize a…",11,[[["v"]],["result"]]],[11,"is_human_readable","","Determine whether `Deserialize` implementations should…",11,[[["self"]],["bool"]]],[8,"Serialize","","A data structure that can be serialized into any data…",null,null],[10,"serialize","","Serialize this value into the given Serde serializer.",19,[[["s"],["self"]],["result"]]],[8,"Serializer","","A data format that can serialize any data structure…",null,null],[16,"Ok","","The output type produced by this `Serializer` during…",20,null],[16,"Error","","The error type when some error occurs during serialization.",20,null],[16,"SerializeSeq","","Type returned from [`serialize_seq`] for serializing the…",20,null],[16,"SerializeTuple","","Type returned from [`serialize_tuple`] for serializing the…",20,null],[16,"SerializeTupleStruct","","Type returned from [`serialize_tuple_struct`] for…",20,null],[16,"SerializeTupleVariant","","Type returned from [`serialize_tuple_variant`] for…",20,null],[16,"SerializeMap","","Type returned from [`serialize_map`] for serializing the…",20,null],[16,"SerializeStruct","","Type returned from [`serialize_struct`] for serializing…",20,null],[16,"SerializeStructVariant","","Type returned from [`serialize_struct_variant`] for…",20,null],[10,"serialize_bool","","Serialize a `bool` value.",20,[[["bool"]],["result"]]],[10,"serialize_i8","","Serialize an `i8` value.",20,[[["i8"]],["result"]]],[10,"serialize_i16","","Serialize an `i16` value.",20,[[["i16"]],["result"]]],[10,"serialize_i32","","Serialize an `i32` value.",20,[[["i32"]],["result"]]],[10,"serialize_i64","","Serialize an `i64` value.",20,[[["i64"]],["result"]]],[11,"serialize_i128","","Serialize an `i128` value.",20,[[["i128"]],["result"]]],[10,"serialize_u8","","Serialize a `u8` value.",20,[[["u8"]],["result"]]],[10,"serialize_u16","","Serialize a `u16` value.",20,[[["u16"]],["result"]]],[10,"serialize_u32","","Serialize a `u32` value.",20,[[["u32"]],["result"]]],[10,"serialize_u64","","Serialize a `u64` value.",20,[[["u64"]],["result"]]],[11,"serialize_u128","","Serialize a `u128` value.",20,[[["u128"]],["result"]]],[10,"serialize_f32","","Serialize an `f32` value.",20,[[["f32"]],["result"]]],[10,"serialize_f64","","Serialize an `f64` value.",20,[[["f64"]],["result"]]],[10,"serialize_char","","Serialize a character.",20,[[["char"]],["result"]]],[10,"serialize_str","","Serialize a `&str`.",20,[[["str"]],["result"]]],[10,"serialize_bytes","","Serialize a chunk of raw byte data.",20,[[],["result"]]],[10,"serialize_none","","Serialize a [`None`] value.",20,[[],["result"]]],[10,"serialize_some","","Serialize a [`Some(T)`] value.",20,[[["t"]],["result"]]],[10,"serialize_unit","","Serialize a `()` value.",20,[[],["result"]]],[10,"serialize_unit_struct","","Serialize a unit struct like `struct Unit` or…",20,[[["str"]],["result"]]],[10,"serialize_unit_variant","","Serialize a unit variant like `E::A` in `enum E { A, B }`.",20,[[["str"],["u32"]],["result"]]],[10,"serialize_newtype_struct","","Serialize a newtype struct like `struct Millimeters(u8)`.",20,[[["str"],["t"]],["result"]]],[10,"serialize_newtype_variant","","Serialize a newtype variant like `E::N` in `enum E { N(u8)…",20,[[["str"],["u32"],["t"]],["result"]]],[10,"serialize_seq","","Begin to serialize a variably sized sequence. This call…",20,[[["option",["usize"]],["usize"]],["result"]]],[10,"serialize_tuple","","Begin to serialize a statically sized sequence whose…",20,[[["usize"]],["result"]]],[10,"serialize_tuple_struct","","Begin to serialize a tuple struct like `struct Rgb(u8, u8,…",20,[[["str"],["usize"]],["result"]]],[10,"serialize_tuple_variant","","Begin to serialize a tuple variant like `E::T` in `enum E…",20,[[["str"],["u32"],["usize"]],["result"]]],[10,"serialize_map","","Begin to serialize a map. This call must be followed by…",20,[[["option",["usize"]],["usize"]],["result"]]],[10,"serialize_struct","","Begin to serialize a struct like `struct Rgb { r: u8, g:…",20,[[["str"],["usize"]],["result"]]],[10,"serialize_struct_variant","","Begin to serialize a struct variant like `E::S` in `enum E…",20,[[["str"],["u32"],["usize"]],["result"]]],[11,"collect_seq","","Collect an iterator as a sequence.",20,[[["i"]],["result"]]],[11,"collect_map","","Collect an iterator as a map.",20,[[["i"]],["result"]]],[11,"collect_str","","Serialize a string produced by an implementation of…",20,[[["t"]],["result"]]],[11,"is_human_readable","","Determine whether `Serialize` implementations should…",20,[[["self"]],["bool"]]],[14,"forward_to_deserialize_any","","Helper macro when implementing the `Deserializer` part of…",null,null],[14,"serde_if_integer128","","Conditional compilation depending on whether Serde is…",null,null],[11,"fmt","serde::de","",28,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","serde::de::value","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"to_string","","",29,[[["self"]],["string"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","serde::ser","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"deserialize","serde::de","",28,[[["d"]],[["result",["ignoredany"]],["ignoredany"]]]],[11,"deserialize_bool","serde::de::value","",30,[[["v"]],["result"]]],[11,"deserialize_i8","","",30,[[["v"]],["result"]]],[11,"deserialize_i16","","",30,[[["v"]],["result"]]],[11,"deserialize_i32","","",30,[[["v"]],["result"]]],[11,"deserialize_i64","","",30,[[["v"]],["result"]]],[11,"deserialize_i128","","",30,[[["v"]],["result"]]],[11,"deserialize_u8","","",30,[[["v"]],["result"]]],[11,"deserialize_u16","","",30,[[["v"]],["result"]]],[11,"deserialize_u32","","",30,[[["v"]],["result"]]],[11,"deserialize_u64","","",30,[[["v"]],["result"]]],[11,"deserialize_u128","","",30,[[["v"]],["result"]]],[11,"deserialize_f32","","",30,[[["v"]],["result"]]],[11,"deserialize_f64","","",30,[[["v"]],["result"]]],[11,"deserialize_char","","",30,[[["v"]],["result"]]],[11,"deserialize_str","","",30,[[["v"]],["result"]]],[11,"deserialize_string","","",30,[[["v"]],["result"]]],[11,"deserialize_bytes","","",30,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",30,[[["v"]],["result"]]],[11,"deserialize_unit","","",30,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",30,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",30,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",30,[[["v"]],["result"]]],[11,"deserialize_tuple","","",30,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",30,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",30,[[["v"]],["result"]]],[11,"deserialize_struct","","",30,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",30,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",30,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",30,[[["v"]],["result"]]],[11,"deserialize_any","","",30,[[["v"]],["result"]]],[11,"deserialize_option","","",30,[[["v"]],["result"]]],[11,"deserialize_bool","","",31,[[["v"]],["result"]]],[11,"deserialize_i8","","",31,[[["v"]],["result"]]],[11,"deserialize_i16","","",31,[[["v"]],["result"]]],[11,"deserialize_i32","","",31,[[["v"]],["result"]]],[11,"deserialize_i64","","",31,[[["v"]],["result"]]],[11,"deserialize_i128","","",31,[[["v"]],["result"]]],[11,"deserialize_u8","","",31,[[["v"]],["result"]]],[11,"deserialize_u16","","",31,[[["v"]],["result"]]],[11,"deserialize_u32","","",31,[[["v"]],["result"]]],[11,"deserialize_u64","","",31,[[["v"]],["result"]]],[11,"deserialize_u128","","",31,[[["v"]],["result"]]],[11,"deserialize_f32","","",31,[[["v"]],["result"]]],[11,"deserialize_f64","","",31,[[["v"]],["result"]]],[11,"deserialize_char","","",31,[[["v"]],["result"]]],[11,"deserialize_str","","",31,[[["v"]],["result"]]],[11,"deserialize_string","","",31,[[["v"]],["result"]]],[11,"deserialize_bytes","","",31,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",31,[[["v"]],["result"]]],[11,"deserialize_option","","",31,[[["v"]],["result"]]],[11,"deserialize_unit","","",31,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",31,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",31,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",31,[[["v"]],["result"]]],[11,"deserialize_tuple","","",31,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",31,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",31,[[["v"]],["result"]]],[11,"deserialize_struct","","",31,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",31,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",31,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",31,[[["v"]],["result"]]],[11,"deserialize_any","","",31,[[["v"]],["result"]]],[11,"deserialize_bool","","",32,[[["v"]],["result"]]],[11,"deserialize_i8","","",32,[[["v"]],["result"]]],[11,"deserialize_i16","","",32,[[["v"]],["result"]]],[11,"deserialize_i32","","",32,[[["v"]],["result"]]],[11,"deserialize_i64","","",32,[[["v"]],["result"]]],[11,"deserialize_i128","","",32,[[["v"]],["result"]]],[11,"deserialize_u8","","",32,[[["v"]],["result"]]],[11,"deserialize_u16","","",32,[[["v"]],["result"]]],[11,"deserialize_u32","","",32,[[["v"]],["result"]]],[11,"deserialize_u64","","",32,[[["v"]],["result"]]],[11,"deserialize_u128","","",32,[[["v"]],["result"]]],[11,"deserialize_f32","","",32,[[["v"]],["result"]]],[11,"deserialize_f64","","",32,[[["v"]],["result"]]],[11,"deserialize_char","","",32,[[["v"]],["result"]]],[11,"deserialize_str","","",32,[[["v"]],["result"]]],[11,"deserialize_string","","",32,[[["v"]],["result"]]],[11,"deserialize_bytes","","",32,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",32,[[["v"]],["result"]]],[11,"deserialize_option","","",32,[[["v"]],["result"]]],[11,"deserialize_unit","","",32,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",32,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",32,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",32,[[["v"]],["result"]]],[11,"deserialize_tuple","","",32,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",32,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",32,[[["v"]],["result"]]],[11,"deserialize_struct","","",32,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",32,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",32,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",32,[[["v"]],["result"]]],[11,"deserialize_any","","",32,[[["v"]],["result"]]],[11,"deserialize_bool","","",33,[[["v"]],["result"]]],[11,"deserialize_i8","","",33,[[["v"]],["result"]]],[11,"deserialize_i16","","",33,[[["v"]],["result"]]],[11,"deserialize_i32","","",33,[[["v"]],["result"]]],[11,"deserialize_i64","","",33,[[["v"]],["result"]]],[11,"deserialize_i128","","",33,[[["v"]],["result"]]],[11,"deserialize_u8","","",33,[[["v"]],["result"]]],[11,"deserialize_u16","","",33,[[["v"]],["result"]]],[11,"deserialize_u32","","",33,[[["v"]],["result"]]],[11,"deserialize_u64","","",33,[[["v"]],["result"]]],[11,"deserialize_u128","","",33,[[["v"]],["result"]]],[11,"deserialize_f32","","",33,[[["v"]],["result"]]],[11,"deserialize_f64","","",33,[[["v"]],["result"]]],[11,"deserialize_char","","",33,[[["v"]],["result"]]],[11,"deserialize_str","","",33,[[["v"]],["result"]]],[11,"deserialize_string","","",33,[[["v"]],["result"]]],[11,"deserialize_bytes","","",33,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",33,[[["v"]],["result"]]],[11,"deserialize_option","","",33,[[["v"]],["result"]]],[11,"deserialize_unit","","",33,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",33,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",33,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",33,[[["v"]],["result"]]],[11,"deserialize_tuple","","",33,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",33,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",33,[[["v"]],["result"]]],[11,"deserialize_struct","","",33,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",33,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",33,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",33,[[["v"]],["result"]]],[11,"deserialize_any","","",33,[[["v"]],["result"]]],[11,"deserialize_bool","","",34,[[["v"]],["result"]]],[11,"deserialize_i8","","",34,[[["v"]],["result"]]],[11,"deserialize_i16","","",34,[[["v"]],["result"]]],[11,"deserialize_i32","","",34,[[["v"]],["result"]]],[11,"deserialize_i64","","",34,[[["v"]],["result"]]],[11,"deserialize_i128","","",34,[[["v"]],["result"]]],[11,"deserialize_u8","","",34,[[["v"]],["result"]]],[11,"deserialize_u16","","",34,[[["v"]],["result"]]],[11,"deserialize_u32","","",34,[[["v"]],["result"]]],[11,"deserialize_u64","","",34,[[["v"]],["result"]]],[11,"deserialize_u128","","",34,[[["v"]],["result"]]],[11,"deserialize_f32","","",34,[[["v"]],["result"]]],[11,"deserialize_f64","","",34,[[["v"]],["result"]]],[11,"deserialize_char","","",34,[[["v"]],["result"]]],[11,"deserialize_str","","",34,[[["v"]],["result"]]],[11,"deserialize_string","","",34,[[["v"]],["result"]]],[11,"deserialize_bytes","","",34,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",34,[[["v"]],["result"]]],[11,"deserialize_option","","",34,[[["v"]],["result"]]],[11,"deserialize_unit","","",34,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",34,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",34,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",34,[[["v"]],["result"]]],[11,"deserialize_tuple","","",34,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",34,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",34,[[["v"]],["result"]]],[11,"deserialize_struct","","",34,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",34,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",34,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",34,[[["v"]],["result"]]],[11,"deserialize_any","","",34,[[["v"]],["result"]]],[11,"deserialize_bool","","",35,[[["v"]],["result"]]],[11,"deserialize_i8","","",35,[[["v"]],["result"]]],[11,"deserialize_i16","","",35,[[["v"]],["result"]]],[11,"deserialize_i32","","",35,[[["v"]],["result"]]],[11,"deserialize_i64","","",35,[[["v"]],["result"]]],[11,"deserialize_i128","","",35,[[["v"]],["result"]]],[11,"deserialize_u8","","",35,[[["v"]],["result"]]],[11,"deserialize_u16","","",35,[[["v"]],["result"]]],[11,"deserialize_u32","","",35,[[["v"]],["result"]]],[11,"deserialize_u64","","",35,[[["v"]],["result"]]],[11,"deserialize_u128","","",35,[[["v"]],["result"]]],[11,"deserialize_f32","","",35,[[["v"]],["result"]]],[11,"deserialize_f64","","",35,[[["v"]],["result"]]],[11,"deserialize_char","","",35,[[["v"]],["result"]]],[11,"deserialize_str","","",35,[[["v"]],["result"]]],[11,"deserialize_string","","",35,[[["v"]],["result"]]],[11,"deserialize_bytes","","",35,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",35,[[["v"]],["result"]]],[11,"deserialize_option","","",35,[[["v"]],["result"]]],[11,"deserialize_unit","","",35,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",35,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",35,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",35,[[["v"]],["result"]]],[11,"deserialize_tuple","","",35,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",35,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",35,[[["v"]],["result"]]],[11,"deserialize_struct","","",35,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",35,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",35,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",35,[[["v"]],["result"]]],[11,"deserialize_any","","",35,[[["v"]],["result"]]],[11,"deserialize_bool","","",36,[[["v"]],["result"]]],[11,"deserialize_i8","","",36,[[["v"]],["result"]]],[11,"deserialize_i16","","",36,[[["v"]],["result"]]],[11,"deserialize_i32","","",36,[[["v"]],["result"]]],[11,"deserialize_i64","","",36,[[["v"]],["result"]]],[11,"deserialize_i128","","",36,[[["v"]],["result"]]],[11,"deserialize_u8","","",36,[[["v"]],["result"]]],[11,"deserialize_u16","","",36,[[["v"]],["result"]]],[11,"deserialize_u32","","",36,[[["v"]],["result"]]],[11,"deserialize_u64","","",36,[[["v"]],["result"]]],[11,"deserialize_u128","","",36,[[["v"]],["result"]]],[11,"deserialize_f32","","",36,[[["v"]],["result"]]],[11,"deserialize_f64","","",36,[[["v"]],["result"]]],[11,"deserialize_char","","",36,[[["v"]],["result"]]],[11,"deserialize_str","","",36,[[["v"]],["result"]]],[11,"deserialize_string","","",36,[[["v"]],["result"]]],[11,"deserialize_bytes","","",36,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",36,[[["v"]],["result"]]],[11,"deserialize_option","","",36,[[["v"]],["result"]]],[11,"deserialize_unit","","",36,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",36,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",36,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",36,[[["v"]],["result"]]],[11,"deserialize_tuple","","",36,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",36,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",36,[[["v"]],["result"]]],[11,"deserialize_struct","","",36,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",36,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",36,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",36,[[["v"]],["result"]]],[11,"deserialize_any","","",36,[[["v"]],["result"]]],[11,"deserialize_bool","","",37,[[["v"]],["result"]]],[11,"deserialize_i8","","",37,[[["v"]],["result"]]],[11,"deserialize_i16","","",37,[[["v"]],["result"]]],[11,"deserialize_i32","","",37,[[["v"]],["result"]]],[11,"deserialize_i64","","",37,[[["v"]],["result"]]],[11,"deserialize_i128","","",37,[[["v"]],["result"]]],[11,"deserialize_u8","","",37,[[["v"]],["result"]]],[11,"deserialize_u16","","",37,[[["v"]],["result"]]],[11,"deserialize_u32","","",37,[[["v"]],["result"]]],[11,"deserialize_u64","","",37,[[["v"]],["result"]]],[11,"deserialize_u128","","",37,[[["v"]],["result"]]],[11,"deserialize_f32","","",37,[[["v"]],["result"]]],[11,"deserialize_f64","","",37,[[["v"]],["result"]]],[11,"deserialize_char","","",37,[[["v"]],["result"]]],[11,"deserialize_str","","",37,[[["v"]],["result"]]],[11,"deserialize_string","","",37,[[["v"]],["result"]]],[11,"deserialize_bytes","","",37,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",37,[[["v"]],["result"]]],[11,"deserialize_option","","",37,[[["v"]],["result"]]],[11,"deserialize_unit","","",37,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",37,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",37,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",37,[[["v"]],["result"]]],[11,"deserialize_tuple","","",37,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",37,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",37,[[["v"]],["result"]]],[11,"deserialize_struct","","",37,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",37,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",37,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",37,[[["v"]],["result"]]],[11,"deserialize_any","","",37,[[["v"]],["result"]]],[11,"deserialize_bool","","",38,[[["v"]],["result"]]],[11,"deserialize_i8","","",38,[[["v"]],["result"]]],[11,"deserialize_i16","","",38,[[["v"]],["result"]]],[11,"deserialize_i32","","",38,[[["v"]],["result"]]],[11,"deserialize_i64","","",38,[[["v"]],["result"]]],[11,"deserialize_i128","","",38,[[["v"]],["result"]]],[11,"deserialize_u8","","",38,[[["v"]],["result"]]],[11,"deserialize_u16","","",38,[[["v"]],["result"]]],[11,"deserialize_u32","","",38,[[["v"]],["result"]]],[11,"deserialize_u64","","",38,[[["v"]],["result"]]],[11,"deserialize_u128","","",38,[[["v"]],["result"]]],[11,"deserialize_f32","","",38,[[["v"]],["result"]]],[11,"deserialize_f64","","",38,[[["v"]],["result"]]],[11,"deserialize_char","","",38,[[["v"]],["result"]]],[11,"deserialize_str","","",38,[[["v"]],["result"]]],[11,"deserialize_string","","",38,[[["v"]],["result"]]],[11,"deserialize_bytes","","",38,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",38,[[["v"]],["result"]]],[11,"deserialize_option","","",38,[[["v"]],["result"]]],[11,"deserialize_unit","","",38,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",38,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",38,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",38,[[["v"]],["result"]]],[11,"deserialize_tuple","","",38,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",38,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",38,[[["v"]],["result"]]],[11,"deserialize_struct","","",38,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",38,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",38,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",38,[[["v"]],["result"]]],[11,"deserialize_any","","",38,[[["v"]],["result"]]],[11,"deserialize_bool","","",39,[[["v"]],["result"]]],[11,"deserialize_i8","","",39,[[["v"]],["result"]]],[11,"deserialize_i16","","",39,[[["v"]],["result"]]],[11,"deserialize_i32","","",39,[[["v"]],["result"]]],[11,"deserialize_i64","","",39,[[["v"]],["result"]]],[11,"deserialize_i128","","",39,[[["v"]],["result"]]],[11,"deserialize_u8","","",39,[[["v"]],["result"]]],[11,"deserialize_u16","","",39,[[["v"]],["result"]]],[11,"deserialize_u32","","",39,[[["v"]],["result"]]],[11,"deserialize_u64","","",39,[[["v"]],["result"]]],[11,"deserialize_u128","","",39,[[["v"]],["result"]]],[11,"deserialize_f32","","",39,[[["v"]],["result"]]],[11,"deserialize_f64","","",39,[[["v"]],["result"]]],[11,"deserialize_char","","",39,[[["v"]],["result"]]],[11,"deserialize_str","","",39,[[["v"]],["result"]]],[11,"deserialize_string","","",39,[[["v"]],["result"]]],[11,"deserialize_bytes","","",39,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",39,[[["v"]],["result"]]],[11,"deserialize_option","","",39,[[["v"]],["result"]]],[11,"deserialize_unit","","",39,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",39,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",39,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",39,[[["v"]],["result"]]],[11,"deserialize_tuple","","",39,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",39,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",39,[[["v"]],["result"]]],[11,"deserialize_struct","","",39,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",39,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",39,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",39,[[["v"]],["result"]]],[11,"deserialize_any","","",39,[[["v"]],["result"]]],[11,"deserialize_bool","","",40,[[["v"]],["result"]]],[11,"deserialize_i8","","",40,[[["v"]],["result"]]],[11,"deserialize_i16","","",40,[[["v"]],["result"]]],[11,"deserialize_i32","","",40,[[["v"]],["result"]]],[11,"deserialize_i64","","",40,[[["v"]],["result"]]],[11,"deserialize_i128","","",40,[[["v"]],["result"]]],[11,"deserialize_u8","","",40,[[["v"]],["result"]]],[11,"deserialize_u16","","",40,[[["v"]],["result"]]],[11,"deserialize_u32","","",40,[[["v"]],["result"]]],[11,"deserialize_u64","","",40,[[["v"]],["result"]]],[11,"deserialize_u128","","",40,[[["v"]],["result"]]],[11,"deserialize_f32","","",40,[[["v"]],["result"]]],[11,"deserialize_f64","","",40,[[["v"]],["result"]]],[11,"deserialize_char","","",40,[[["v"]],["result"]]],[11,"deserialize_str","","",40,[[["v"]],["result"]]],[11,"deserialize_string","","",40,[[["v"]],["result"]]],[11,"deserialize_bytes","","",40,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",40,[[["v"]],["result"]]],[11,"deserialize_option","","",40,[[["v"]],["result"]]],[11,"deserialize_unit","","",40,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",40,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",40,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",40,[[["v"]],["result"]]],[11,"deserialize_tuple","","",40,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",40,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",40,[[["v"]],["result"]]],[11,"deserialize_struct","","",40,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",40,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",40,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",40,[[["v"]],["result"]]],[11,"deserialize_any","","",40,[[["v"]],["result"]]],[11,"deserialize_bool","","",41,[[["v"]],["result"]]],[11,"deserialize_i8","","",41,[[["v"]],["result"]]],[11,"deserialize_i16","","",41,[[["v"]],["result"]]],[11,"deserialize_i32","","",41,[[["v"]],["result"]]],[11,"deserialize_i64","","",41,[[["v"]],["result"]]],[11,"deserialize_i128","","",41,[[["v"]],["result"]]],[11,"deserialize_u8","","",41,[[["v"]],["result"]]],[11,"deserialize_u16","","",41,[[["v"]],["result"]]],[11,"deserialize_u32","","",41,[[["v"]],["result"]]],[11,"deserialize_u64","","",41,[[["v"]],["result"]]],[11,"deserialize_u128","","",41,[[["v"]],["result"]]],[11,"deserialize_f32","","",41,[[["v"]],["result"]]],[11,"deserialize_f64","","",41,[[["v"]],["result"]]],[11,"deserialize_char","","",41,[[["v"]],["result"]]],[11,"deserialize_str","","",41,[[["v"]],["result"]]],[11,"deserialize_string","","",41,[[["v"]],["result"]]],[11,"deserialize_bytes","","",41,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",41,[[["v"]],["result"]]],[11,"deserialize_option","","",41,[[["v"]],["result"]]],[11,"deserialize_unit","","",41,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",41,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",41,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",41,[[["v"]],["result"]]],[11,"deserialize_tuple","","",41,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",41,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",41,[[["v"]],["result"]]],[11,"deserialize_struct","","",41,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",41,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",41,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",41,[[["v"]],["result"]]],[11,"deserialize_any","","",41,[[["v"]],["result"]]],[11,"deserialize_bool","","",42,[[["v"]],["result"]]],[11,"deserialize_i8","","",42,[[["v"]],["result"]]],[11,"deserialize_i16","","",42,[[["v"]],["result"]]],[11,"deserialize_i32","","",42,[[["v"]],["result"]]],[11,"deserialize_i64","","",42,[[["v"]],["result"]]],[11,"deserialize_i128","","",42,[[["v"]],["result"]]],[11,"deserialize_u8","","",42,[[["v"]],["result"]]],[11,"deserialize_u16","","",42,[[["v"]],["result"]]],[11,"deserialize_u32","","",42,[[["v"]],["result"]]],[11,"deserialize_u64","","",42,[[["v"]],["result"]]],[11,"deserialize_u128","","",42,[[["v"]],["result"]]],[11,"deserialize_f32","","",42,[[["v"]],["result"]]],[11,"deserialize_f64","","",42,[[["v"]],["result"]]],[11,"deserialize_char","","",42,[[["v"]],["result"]]],[11,"deserialize_str","","",42,[[["v"]],["result"]]],[11,"deserialize_string","","",42,[[["v"]],["result"]]],[11,"deserialize_bytes","","",42,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",42,[[["v"]],["result"]]],[11,"deserialize_option","","",42,[[["v"]],["result"]]],[11,"deserialize_unit","","",42,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",42,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",42,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",42,[[["v"]],["result"]]],[11,"deserialize_tuple","","",42,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",42,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",42,[[["v"]],["result"]]],[11,"deserialize_struct","","",42,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",42,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",42,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",42,[[["v"]],["result"]]],[11,"deserialize_any","","",42,[[["v"]],["result"]]],[11,"deserialize_bool","","",43,[[["v"]],["result"]]],[11,"deserialize_i8","","",43,[[["v"]],["result"]]],[11,"deserialize_i16","","",43,[[["v"]],["result"]]],[11,"deserialize_i32","","",43,[[["v"]],["result"]]],[11,"deserialize_i64","","",43,[[["v"]],["result"]]],[11,"deserialize_i128","","",43,[[["v"]],["result"]]],[11,"deserialize_u8","","",43,[[["v"]],["result"]]],[11,"deserialize_u16","","",43,[[["v"]],["result"]]],[11,"deserialize_u32","","",43,[[["v"]],["result"]]],[11,"deserialize_u64","","",43,[[["v"]],["result"]]],[11,"deserialize_u128","","",43,[[["v"]],["result"]]],[11,"deserialize_f32","","",43,[[["v"]],["result"]]],[11,"deserialize_f64","","",43,[[["v"]],["result"]]],[11,"deserialize_char","","",43,[[["v"]],["result"]]],[11,"deserialize_str","","",43,[[["v"]],["result"]]],[11,"deserialize_string","","",43,[[["v"]],["result"]]],[11,"deserialize_bytes","","",43,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",43,[[["v"]],["result"]]],[11,"deserialize_option","","",43,[[["v"]],["result"]]],[11,"deserialize_unit","","",43,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",43,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",43,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",43,[[["v"]],["result"]]],[11,"deserialize_tuple","","",43,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",43,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",43,[[["v"]],["result"]]],[11,"deserialize_struct","","",43,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",43,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",43,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",43,[[["v"]],["result"]]],[11,"deserialize_any","","",43,[[["v"]],["result"]]],[11,"deserialize_bool","","",44,[[["v"]],["result"]]],[11,"deserialize_i8","","",44,[[["v"]],["result"]]],[11,"deserialize_i16","","",44,[[["v"]],["result"]]],[11,"deserialize_i32","","",44,[[["v"]],["result"]]],[11,"deserialize_i64","","",44,[[["v"]],["result"]]],[11,"deserialize_i128","","",44,[[["v"]],["result"]]],[11,"deserialize_u8","","",44,[[["v"]],["result"]]],[11,"deserialize_u16","","",44,[[["v"]],["result"]]],[11,"deserialize_u32","","",44,[[["v"]],["result"]]],[11,"deserialize_u64","","",44,[[["v"]],["result"]]],[11,"deserialize_u128","","",44,[[["v"]],["result"]]],[11,"deserialize_f32","","",44,[[["v"]],["result"]]],[11,"deserialize_f64","","",44,[[["v"]],["result"]]],[11,"deserialize_char","","",44,[[["v"]],["result"]]],[11,"deserialize_str","","",44,[[["v"]],["result"]]],[11,"deserialize_string","","",44,[[["v"]],["result"]]],[11,"deserialize_bytes","","",44,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",44,[[["v"]],["result"]]],[11,"deserialize_option","","",44,[[["v"]],["result"]]],[11,"deserialize_unit","","",44,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",44,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",44,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",44,[[["v"]],["result"]]],[11,"deserialize_tuple","","",44,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",44,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",44,[[["v"]],["result"]]],[11,"deserialize_struct","","",44,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",44,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",44,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",44,[[["v"]],["result"]]],[11,"deserialize_any","","",44,[[["v"]],["result"]]],[11,"deserialize_bool","","",45,[[["v"]],["result"]]],[11,"deserialize_i8","","",45,[[["v"]],["result"]]],[11,"deserialize_i16","","",45,[[["v"]],["result"]]],[11,"deserialize_i32","","",45,[[["v"]],["result"]]],[11,"deserialize_i64","","",45,[[["v"]],["result"]]],[11,"deserialize_i128","","",45,[[["v"]],["result"]]],[11,"deserialize_u8","","",45,[[["v"]],["result"]]],[11,"deserialize_u16","","",45,[[["v"]],["result"]]],[11,"deserialize_u32","","",45,[[["v"]],["result"]]],[11,"deserialize_u64","","",45,[[["v"]],["result"]]],[11,"deserialize_u128","","",45,[[["v"]],["result"]]],[11,"deserialize_f32","","",45,[[["v"]],["result"]]],[11,"deserialize_f64","","",45,[[["v"]],["result"]]],[11,"deserialize_char","","",45,[[["v"]],["result"]]],[11,"deserialize_str","","",45,[[["v"]],["result"]]],[11,"deserialize_string","","",45,[[["v"]],["result"]]],[11,"deserialize_bytes","","",45,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",45,[[["v"]],["result"]]],[11,"deserialize_option","","",45,[[["v"]],["result"]]],[11,"deserialize_unit","","",45,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",45,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",45,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",45,[[["v"]],["result"]]],[11,"deserialize_tuple","","",45,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",45,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",45,[[["v"]],["result"]]],[11,"deserialize_struct","","",45,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",45,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",45,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",45,[[["v"]],["result"]]],[11,"deserialize_any","","",45,[[["v"]],["result"]]],[11,"deserialize_bool","","",46,[[["v"]],["result"]]],[11,"deserialize_i8","","",46,[[["v"]],["result"]]],[11,"deserialize_i16","","",46,[[["v"]],["result"]]],[11,"deserialize_i32","","",46,[[["v"]],["result"]]],[11,"deserialize_i64","","",46,[[["v"]],["result"]]],[11,"deserialize_i128","","",46,[[["v"]],["result"]]],[11,"deserialize_u8","","",46,[[["v"]],["result"]]],[11,"deserialize_u16","","",46,[[["v"]],["result"]]],[11,"deserialize_u32","","",46,[[["v"]],["result"]]],[11,"deserialize_u64","","",46,[[["v"]],["result"]]],[11,"deserialize_u128","","",46,[[["v"]],["result"]]],[11,"deserialize_f32","","",46,[[["v"]],["result"]]],[11,"deserialize_f64","","",46,[[["v"]],["result"]]],[11,"deserialize_char","","",46,[[["v"]],["result"]]],[11,"deserialize_str","","",46,[[["v"]],["result"]]],[11,"deserialize_string","","",46,[[["v"]],["result"]]],[11,"deserialize_bytes","","",46,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",46,[[["v"]],["result"]]],[11,"deserialize_option","","",46,[[["v"]],["result"]]],[11,"deserialize_unit","","",46,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",46,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",46,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",46,[[["v"]],["result"]]],[11,"deserialize_tuple","","",46,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",46,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",46,[[["v"]],["result"]]],[11,"deserialize_struct","","",46,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",46,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",46,[[["v"]],["result"]]],[11,"deserialize_any","","",46,[[["v"]],["result"]]],[11,"deserialize_enum","","",46,[[["str"],["v"]],["result"]]],[11,"deserialize_any","","",47,[[["v"]],["result"]]],[11,"deserialize_enum","","",47,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",47,[[["v"]],["result"]]],[11,"deserialize_i8","","",47,[[["v"]],["result"]]],[11,"deserialize_i16","","",47,[[["v"]],["result"]]],[11,"deserialize_i32","","",47,[[["v"]],["result"]]],[11,"deserialize_i64","","",47,[[["v"]],["result"]]],[11,"deserialize_i128","","",47,[[["v"]],["result"]]],[11,"deserialize_u8","","",47,[[["v"]],["result"]]],[11,"deserialize_u16","","",47,[[["v"]],["result"]]],[11,"deserialize_u32","","",47,[[["v"]],["result"]]],[11,"deserialize_u64","","",47,[[["v"]],["result"]]],[11,"deserialize_u128","","",47,[[["v"]],["result"]]],[11,"deserialize_f32","","",47,[[["v"]],["result"]]],[11,"deserialize_f64","","",47,[[["v"]],["result"]]],[11,"deserialize_char","","",47,[[["v"]],["result"]]],[11,"deserialize_str","","",47,[[["v"]],["result"]]],[11,"deserialize_string","","",47,[[["v"]],["result"]]],[11,"deserialize_bytes","","",47,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",47,[[["v"]],["result"]]],[11,"deserialize_option","","",47,[[["v"]],["result"]]],[11,"deserialize_unit","","",47,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",47,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",47,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",47,[[["v"]],["result"]]],[11,"deserialize_tuple","","",47,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",47,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",47,[[["v"]],["result"]]],[11,"deserialize_struct","","",47,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",47,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",47,[[["v"]],["result"]]],[11,"deserialize_any","","",1,[[["v"]],["result"]]],[11,"deserialize_enum","","",1,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",1,[[["v"]],["result"]]],[11,"deserialize_i8","","",1,[[["v"]],["result"]]],[11,"deserialize_i16","","",1,[[["v"]],["result"]]],[11,"deserialize_i32","","",1,[[["v"]],["result"]]],[11,"deserialize_i64","","",1,[[["v"]],["result"]]],[11,"deserialize_i128","","",1,[[["v"]],["result"]]],[11,"deserialize_u8","","",1,[[["v"]],["result"]]],[11,"deserialize_u16","","",1,[[["v"]],["result"]]],[11,"deserialize_u32","","",1,[[["v"]],["result"]]],[11,"deserialize_u64","","",1,[[["v"]],["result"]]],[11,"deserialize_u128","","",1,[[["v"]],["result"]]],[11,"deserialize_f32","","",1,[[["v"]],["result"]]],[11,"deserialize_f64","","",1,[[["v"]],["result"]]],[11,"deserialize_char","","",1,[[["v"]],["result"]]],[11,"deserialize_str","","",1,[[["v"]],["result"]]],[11,"deserialize_string","","",1,[[["v"]],["result"]]],[11,"deserialize_bytes","","",1,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",1,[[["v"]],["result"]]],[11,"deserialize_option","","",1,[[["v"]],["result"]]],[11,"deserialize_unit","","",1,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",1,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",1,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",1,[[["v"]],["result"]]],[11,"deserialize_tuple","","",1,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",1,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",1,[[["v"]],["result"]]],[11,"deserialize_struct","","",1,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",1,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",1,[[["v"]],["result"]]],[11,"deserialize_any","","",48,[[["v"]],["result"]]],[11,"deserialize_enum","","",48,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",48,[[["v"]],["result"]]],[11,"deserialize_i8","","",48,[[["v"]],["result"]]],[11,"deserialize_i16","","",48,[[["v"]],["result"]]],[11,"deserialize_i32","","",48,[[["v"]],["result"]]],[11,"deserialize_i64","","",48,[[["v"]],["result"]]],[11,"deserialize_i128","","",48,[[["v"]],["result"]]],[11,"deserialize_u8","","",48,[[["v"]],["result"]]],[11,"deserialize_u16","","",48,[[["v"]],["result"]]],[11,"deserialize_u32","","",48,[[["v"]],["result"]]],[11,"deserialize_u64","","",48,[[["v"]],["result"]]],[11,"deserialize_u128","","",48,[[["v"]],["result"]]],[11,"deserialize_f32","","",48,[[["v"]],["result"]]],[11,"deserialize_f64","","",48,[[["v"]],["result"]]],[11,"deserialize_char","","",48,[[["v"]],["result"]]],[11,"deserialize_str","","",48,[[["v"]],["result"]]],[11,"deserialize_string","","",48,[[["v"]],["result"]]],[11,"deserialize_bytes","","",48,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",48,[[["v"]],["result"]]],[11,"deserialize_option","","",48,[[["v"]],["result"]]],[11,"deserialize_unit","","",48,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",48,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",48,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",48,[[["v"]],["result"]]],[11,"deserialize_tuple","","",48,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",48,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",48,[[["v"]],["result"]]],[11,"deserialize_struct","","",48,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",48,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",48,[[["v"]],["result"]]],[11,"deserialize_any","","",49,[[["v"]],["result"]]],[11,"deserialize_enum","","",49,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",49,[[["v"]],["result"]]],[11,"deserialize_i8","","",49,[[["v"]],["result"]]],[11,"deserialize_i16","","",49,[[["v"]],["result"]]],[11,"deserialize_i32","","",49,[[["v"]],["result"]]],[11,"deserialize_i64","","",49,[[["v"]],["result"]]],[11,"deserialize_i128","","",49,[[["v"]],["result"]]],[11,"deserialize_u8","","",49,[[["v"]],["result"]]],[11,"deserialize_u16","","",49,[[["v"]],["result"]]],[11,"deserialize_u32","","",49,[[["v"]],["result"]]],[11,"deserialize_u64","","",49,[[["v"]],["result"]]],[11,"deserialize_u128","","",49,[[["v"]],["result"]]],[11,"deserialize_f32","","",49,[[["v"]],["result"]]],[11,"deserialize_f64","","",49,[[["v"]],["result"]]],[11,"deserialize_char","","",49,[[["v"]],["result"]]],[11,"deserialize_str","","",49,[[["v"]],["result"]]],[11,"deserialize_string","","",49,[[["v"]],["result"]]],[11,"deserialize_bytes","","",49,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",49,[[["v"]],["result"]]],[11,"deserialize_option","","",49,[[["v"]],["result"]]],[11,"deserialize_unit","","",49,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",49,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",49,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",49,[[["v"]],["result"]]],[11,"deserialize_tuple","","",49,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",49,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",49,[[["v"]],["result"]]],[11,"deserialize_struct","","",49,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",49,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",49,[[["v"]],["result"]]],[11,"deserialize_any","","",2,[[["v"]],["result"]]],[11,"deserialize_bool","","",2,[[["v"]],["result"]]],[11,"deserialize_i8","","",2,[[["v"]],["result"]]],[11,"deserialize_i16","","",2,[[["v"]],["result"]]],[11,"deserialize_i32","","",2,[[["v"]],["result"]]],[11,"deserialize_i64","","",2,[[["v"]],["result"]]],[11,"deserialize_i128","","",2,[[["v"]],["result"]]],[11,"deserialize_u8","","",2,[[["v"]],["result"]]],[11,"deserialize_u16","","",2,[[["v"]],["result"]]],[11,"deserialize_u32","","",2,[[["v"]],["result"]]],[11,"deserialize_u64","","",2,[[["v"]],["result"]]],[11,"deserialize_u128","","",2,[[["v"]],["result"]]],[11,"deserialize_f32","","",2,[[["v"]],["result"]]],[11,"deserialize_f64","","",2,[[["v"]],["result"]]],[11,"deserialize_char","","",2,[[["v"]],["result"]]],[11,"deserialize_str","","",2,[[["v"]],["result"]]],[11,"deserialize_string","","",2,[[["v"]],["result"]]],[11,"deserialize_bytes","","",2,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",2,[[["v"]],["result"]]],[11,"deserialize_option","","",2,[[["v"]],["result"]]],[11,"deserialize_unit","","",2,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",2,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",2,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",2,[[["v"]],["result"]]],[11,"deserialize_tuple","","",2,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",2,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",2,[[["v"]],["result"]]],[11,"deserialize_struct","","",2,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",2,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",2,[[["v"]],["result"]]],[11,"deserialize_enum","","",2,[[["str"],["v"]],["result"]]],[11,"deserialize_any","","",3,[[["v"]],["result"]]],[11,"deserialize_bool","","",3,[[["v"]],["result"]]],[11,"deserialize_i8","","",3,[[["v"]],["result"]]],[11,"deserialize_i16","","",3,[[["v"]],["result"]]],[11,"deserialize_i32","","",3,[[["v"]],["result"]]],[11,"deserialize_i64","","",3,[[["v"]],["result"]]],[11,"deserialize_i128","","",3,[[["v"]],["result"]]],[11,"deserialize_u8","","",3,[[["v"]],["result"]]],[11,"deserialize_u16","","",3,[[["v"]],["result"]]],[11,"deserialize_u32","","",3,[[["v"]],["result"]]],[11,"deserialize_u64","","",3,[[["v"]],["result"]]],[11,"deserialize_u128","","",3,[[["v"]],["result"]]],[11,"deserialize_f32","","",3,[[["v"]],["result"]]],[11,"deserialize_f64","","",3,[[["v"]],["result"]]],[11,"deserialize_char","","",3,[[["v"]],["result"]]],[11,"deserialize_str","","",3,[[["v"]],["result"]]],[11,"deserialize_string","","",3,[[["v"]],["result"]]],[11,"deserialize_bytes","","",3,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",3,[[["v"]],["result"]]],[11,"deserialize_option","","",3,[[["v"]],["result"]]],[11,"deserialize_unit","","",3,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",3,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",3,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",3,[[["v"]],["result"]]],[11,"deserialize_tuple","","",3,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",3,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",3,[[["v"]],["result"]]],[11,"deserialize_struct","","",3,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",3,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",3,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",3,[[["v"]],["result"]]],[11,"deserialize_any","","",4,[[["v"]],["result"]]],[11,"deserialize_bool","","",4,[[["v"]],["result"]]],[11,"deserialize_i8","","",4,[[["v"]],["result"]]],[11,"deserialize_i16","","",4,[[["v"]],["result"]]],[11,"deserialize_i32","","",4,[[["v"]],["result"]]],[11,"deserialize_i64","","",4,[[["v"]],["result"]]],[11,"deserialize_i128","","",4,[[["v"]],["result"]]],[11,"deserialize_u8","","",4,[[["v"]],["result"]]],[11,"deserialize_u16","","",4,[[["v"]],["result"]]],[11,"deserialize_u32","","",4,[[["v"]],["result"]]],[11,"deserialize_u64","","",4,[[["v"]],["result"]]],[11,"deserialize_u128","","",4,[[["v"]],["result"]]],[11,"deserialize_f32","","",4,[[["v"]],["result"]]],[11,"deserialize_f64","","",4,[[["v"]],["result"]]],[11,"deserialize_char","","",4,[[["v"]],["result"]]],[11,"deserialize_str","","",4,[[["v"]],["result"]]],[11,"deserialize_string","","",4,[[["v"]],["result"]]],[11,"deserialize_bytes","","",4,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",4,[[["v"]],["result"]]],[11,"deserialize_option","","",4,[[["v"]],["result"]]],[11,"deserialize_unit","","",4,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",4,[[["v"]],["result"]]],[11,"deserialize_tuple","","",4,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",4,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",4,[[["v"]],["result"]]],[11,"deserialize_struct","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",4,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",4,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",4,[[["v"]],["result"]]],[11,"deserialize_any","","",5,[[["v"]],["result"]]],[11,"deserialize_seq","","",5,[[["v"]],["result"]]],[11,"deserialize_tuple","","",5,[[["usize"],["v"]],["result"]]],[11,"deserialize_bool","","",5,[[["v"]],["result"]]],[11,"deserialize_i8","","",5,[[["v"]],["result"]]],[11,"deserialize_i16","","",5,[[["v"]],["result"]]],[11,"deserialize_i32","","",5,[[["v"]],["result"]]],[11,"deserialize_i64","","",5,[[["v"]],["result"]]],[11,"deserialize_i128","","",5,[[["v"]],["result"]]],[11,"deserialize_u8","","",5,[[["v"]],["result"]]],[11,"deserialize_u16","","",5,[[["v"]],["result"]]],[11,"deserialize_u32","","",5,[[["v"]],["result"]]],[11,"deserialize_u64","","",5,[[["v"]],["result"]]],[11,"deserialize_u128","","",5,[[["v"]],["result"]]],[11,"deserialize_f32","","",5,[[["v"]],["result"]]],[11,"deserialize_f64","","",5,[[["v"]],["result"]]],[11,"deserialize_char","","",5,[[["v"]],["result"]]],[11,"deserialize_str","","",5,[[["v"]],["result"]]],[11,"deserialize_string","","",5,[[["v"]],["result"]]],[11,"deserialize_bytes","","",5,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",5,[[["v"]],["result"]]],[11,"deserialize_option","","",5,[[["v"]],["result"]]],[11,"deserialize_unit","","",5,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",5,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",5,[[["str"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",5,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",5,[[["v"]],["result"]]],[11,"deserialize_struct","","",5,[[["str"],["v"]],["result"]]],[11,"deserialize_enum","","",5,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",5,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",5,[[["v"]],["result"]]],[11,"deserialize_any","","",6,[[["v"]],["result"]]],[11,"deserialize_enum","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_bool","","",6,[[["v"]],["result"]]],[11,"deserialize_i8","","",6,[[["v"]],["result"]]],[11,"deserialize_i16","","",6,[[["v"]],["result"]]],[11,"deserialize_i32","","",6,[[["v"]],["result"]]],[11,"deserialize_i64","","",6,[[["v"]],["result"]]],[11,"deserialize_i128","","",6,[[["v"]],["result"]]],[11,"deserialize_u8","","",6,[[["v"]],["result"]]],[11,"deserialize_u16","","",6,[[["v"]],["result"]]],[11,"deserialize_u32","","",6,[[["v"]],["result"]]],[11,"deserialize_u64","","",6,[[["v"]],["result"]]],[11,"deserialize_u128","","",6,[[["v"]],["result"]]],[11,"deserialize_f32","","",6,[[["v"]],["result"]]],[11,"deserialize_f64","","",6,[[["v"]],["result"]]],[11,"deserialize_char","","",6,[[["v"]],["result"]]],[11,"deserialize_str","","",6,[[["v"]],["result"]]],[11,"deserialize_string","","",6,[[["v"]],["result"]]],[11,"deserialize_bytes","","",6,[[["v"]],["result"]]],[11,"deserialize_byte_buf","","",6,[[["v"]],["result"]]],[11,"deserialize_option","","",6,[[["v"]],["result"]]],[11,"deserialize_unit","","",6,[[["v"]],["result"]]],[11,"deserialize_unit_struct","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_newtype_struct","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_seq","","",6,[[["v"]],["result"]]],[11,"deserialize_tuple","","",6,[[["usize"],["v"]],["result"]]],[11,"deserialize_tuple_struct","","",6,[[["str"],["usize"],["v"]],["result"]]],[11,"deserialize_map","","",6,[[["v"]],["result"]]],[11,"deserialize_struct","","",6,[[["str"],["v"]],["result"]]],[11,"deserialize_identifier","","",6,[[["v"]],["result"]]],[11,"deserialize_ignored_any","","",6,[[["v"]],["result"]]],[11,"expecting","serde::de","",28,[[["formatter"],["self"]],["result"]]],[11,"visit_bool","","",28,[[["bool"]],["result"]]],[11,"visit_i64","","",28,[[["i64"]],["result"]]],[11,"visit_u64","","",28,[[["u64"]],["result"]]],[11,"visit_f64","","",28,[[["f64"]],["result"]]],[11,"visit_str","","",28,[[["str"]],["result"]]],[11,"visit_none","","",28,[[],["result"]]],[11,"visit_some","","",28,[[["d"]],["result"]]],[11,"visit_newtype_struct","","",28,[[["d"]],["result"]]],[11,"visit_unit","","",28,[[],["result"]]],[11,"visit_seq","","",28,[[["a"]],["result"]]],[11,"visit_map","","",28,[[["a"]],["result"]]],[11,"visit_bytes","","",28,[[],["result"]]],[11,"visit_enum","","",28,[[["a"]],["result"]]],[11,"next_element_seed","serde::de::value","",3,[[["self"],["v"]],[["option"],["result",["option"]]]]],[11,"size_hint","","",3,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"next_element_seed","","",5,[[["self"],["t"]],[["option"],["result",["option"]]]]],[11,"size_hint","","",5,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"next_key_seed","","",5,[[["self"],["t"]],[["option"],["result",["option"]]]]],[11,"next_value_seed","","",5,[[["self"],["t"]],["result"]]],[11,"next_entry_seed","","",5,[[["tv"],["self"],["tk"]],[["result",["option"]],["option"]]]],[11,"size_hint","","",5,[[["self"]],[["option",["usize"]],["usize"]]]],[11,"variant_seed","","",46,[[["t"]],["result"]]],[11,"variant_seed","","",47,[[["t"]],["result"]]],[11,"variant_seed","","",1,[[["t"]],["result"]]],[11,"variant_seed","","",48,[[["t"]],["result"]]],[11,"variant_seed","","",49,[[["t"]],["result"]]],[11,"variant_seed","","",6,[[["t"]],["result"]]],[11,"serialize_element","serde::ser","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_element","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_field","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_field","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_key","","",50,[[["self"],["t"]],["result"]]],[11,"serialize_value","","",50,[[["self"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_field","","",50,[[["self"],["str"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"serialize_field","","",50,[[["self"],["str"],["t"]],["result"]]],[11,"end","","",50,[[],["result"]]],[11,"custom","serde::de::value","",29,[[["t"]],["self"]]],[11,"custom","","",29,[[["t"]],["self"]]],[11,"clone","","",29,[[["self"]],["error"]]],[11,"clone","","",30,[[["self"]],["self"]]],[11,"clone","","",31,[[["self"]],["self"]]],[11,"clone","","",32,[[["self"]],["self"]]],[11,"clone","","",33,[[["self"]],["self"]]],[11,"clone","","",34,[[["self"]],["self"]]],[11,"clone","","",35,[[["self"]],["self"]]],[11,"clone","","",36,[[["self"]],["self"]]],[11,"clone","","",37,[[["self"]],["self"]]],[11,"clone","","",38,[[["self"]],["self"]]],[11,"clone","","",39,[[["self"]],["self"]]],[11,"clone","","",40,[[["self"]],["self"]]],[11,"clone","","",41,[[["self"]],["self"]]],[11,"clone","","",42,[[["self"]],["self"]]],[11,"clone","","",43,[[["self"]],["self"]]],[11,"clone","","",44,[[["self"]],["self"]]],[11,"clone","","",45,[[["self"]],["self"]]],[11,"clone","","",46,[[["self"]],["self"]]],[11,"clone","","",47,[[["self"]],["self"]]],[11,"clone","","",1,[[["self"]],["self"]]],[11,"clone","","",48,[[["self"]],["self"]]],[11,"clone","","",49,[[["self"]],["self"]]],[11,"clone","","",2,[[["self"]],["self"]]],[11,"clone","","",3,[[["self"]],["seqdeserializer"]]],[11,"clone","","",4,[[["self"]],["seqaccessdeserializer"]]],[11,"clone","","",5,[[["self"]],["self"]]],[11,"clone","","",6,[[["self"]],["mapaccessdeserializer"]]],[11,"clone","serde::de","",28,[[["self"]],["ignoredany"]]],[11,"clone","","",0,[[["self"]],["unexpected"]]],[11,"default","","",28,[[],["ignoredany"]]],[11,"eq","serde::de::value","",29,[[["self"],["error"]],["bool"]]],[11,"ne","","",29,[[["self"],["error"]],["bool"]]],[11,"eq","serde::de","",0,[[["unexpected"],["self"]],["bool"]]],[11,"ne","","",0,[[["unexpected"],["self"]],["bool"]]],[11,"fmt","serde::de::value","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",35,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",37,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",40,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",43,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde::de","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","serde::de::value","",29,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","serde::de","",0,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",8,[[["formatter"],["self"]],["result"]]],[11,"description","serde::de::value","",29,[[["self"]],["str"]]]],"p":[[4,"Unexpected"],[3,"BorrowedStrDeserializer"],[3,"BorrowedBytesDeserializer"],[3,"SeqDeserializer"],[3,"SeqAccessDeserializer"],[3,"MapDeserializer"],[3,"MapAccessDeserializer"],[8,"Error"],[8,"Expected"],[8,"Deserialize"],[8,"DeserializeSeed"],[8,"Deserializer"],[8,"Visitor"],[8,"SeqAccess"],[8,"MapAccess"],[8,"EnumAccess"],[8,"VariantAccess"],[8,"IntoDeserializer"],[8,"Error"],[8,"Serialize"],[8,"Serializer"],[8,"SerializeSeq"],[8,"SerializeTuple"],[8,"SerializeTupleStruct"],[8,"SerializeTupleVariant"],[8,"SerializeMap"],[8,"SerializeStruct"],[8,"SerializeStructVariant"],[3,"IgnoredAny"],[3,"Error"],[3,"UnitDeserializer"],[3,"BoolDeserializer"],[3,"I8Deserializer"],[3,"I16Deserializer"],[3,"I32Deserializer"],[3,"I64Deserializer"],[3,"IsizeDeserializer"],[3,"U8Deserializer"],[3,"U16Deserializer"],[3,"U64Deserializer"],[3,"UsizeDeserializer"],[3,"F32Deserializer"],[3,"F64Deserializer"],[3,"CharDeserializer"],[3,"I128Deserializer"],[3,"U128Deserializer"],[3,"U32Deserializer"],[3,"StrDeserializer"],[3,"StringDeserializer"],[3,"CowStrDeserializer"],[3,"Impossible"]]};
searchIndex["serde_bench"] = {"doc":"","i":[[3,"Error","serde_bench","",null,null],[5,"serialize","","",null,[[["vec"],["t"]],["result"]]],[5,"deserialize","","",null,[[],["result"]]],[11,"new","","",0,[[["display"]],["self"]]],[6,"Result","","",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",0,[[["error"]],["self"]]],[11,"from","","",0,[[["utf8error"]],["self"]]],[11,"from","","",0,[[["fromutf8error"]],["self"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"description","","",0,[[["self"]],["str"]]],[11,"custom","","",0,[[["display"]],["self"]]],[11,"custom","","",0,[[["display"]],["self"]]]],"p":[[3,"Error"]]};
searchIndex["serde_bytes"] = {"doc":"Wrapper types to enable optimized handling of `&[u8]` and…","i":[[3,"Bytes","serde_bytes","Wrapper around `[u8]` to serialize and deserialize…",null,null],[3,"ByteBuf","","Wrapper around `Vec<u8>` to serialize and deserialize…",null,null],[5,"serialize","","Serde `serialize_with` function to serialize bytes…",null,[[["t"],["s"]],["result"]]],[5,"deserialize","","Serde `deserialize_with` function to deserialize bytes…",null,[[["d"]],["result"]]],[11,"new","","Wrap an existing `&[u8]`.",0,[[],["self"]]],[11,"new","","Construct a new, empty `ByteBuf`.",1,[[],["self"]]],[11,"with_capacity","","Construct a new, empty `ByteBuf` with the specified…",1,[[["usize"]],["self"]]],[11,"from","","Wrap existing bytes in a `ByteBuf`.",1,[[["into",["vec"]],["vec",["u8"]]],["self"]]],[11,"into_vec","","Unwrap the vector of byte underlying this `ByteBuf`.",1,[[],[["vec",["u8"]],["u8"]]]],[11,"into_boxed_bytes","","",1,[[],[["bytes"],["box",["bytes"]]]]],[8,"Deserialize","","Types that can be deserialized via `#[serde(with =…",null,null],[10,"deserialize","","",2,[[["d"]],["result"]]],[8,"Serialize","","Types that can be serialized via `#[serde(with =…",null,null],[10,"serialize","","",3,[[["s"],["self"]],["result"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"into_iter","","",1,[[],["i"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"deserialize","","",1,[[["d"]],["result"]]],[11,"serialize","","",0,[[["s"],["self"]],["result"]]],[11,"serialize","","",1,[[["s"],["self"]],["result"]]],[11,"as_mut","","",0,[[["self"]]]],[11,"as_mut","","",1,[[["self"]]]],[11,"as_ref","","",0,[[["self"]]]],[11,"as_ref","","",1,[[["self"]]]],[11,"into_iter","","",1,[[]]],[11,"clone","","",1,[[["self"]],["bytebuf"]]],[11,"default","","",1,[[],["bytebuf"]]],[11,"cmp","","",0,[[["bytes"],["self"]],["ordering"]]],[11,"cmp","","",1,[[["self"],["bytebuf"]],["ordering"]]],[11,"eq","","",0,[[["rhs"],["self"]],["bool"]]],[11,"eq","","",1,[[["rhs"],["self"]],["bool"]]],[11,"partial_cmp","","",0,[[["rhs"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",1,[[["rhs"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"to_owned","","",0,[[["self"]]]],[11,"deref","","",0,[[["self"]]]],[11,"deref","","",1,[[["self"]]]],[11,"deref_mut","","",0,[[["self"]]]],[11,"deref_mut","","",1,[[["self"]]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"hash","","",0,[[["self"],["h"]]]],[11,"hash","","",1,[[["self"],["h"]]]],[11,"borrow","","",1,[[["self"]],["bytes"]]],[11,"borrow_mut","","",1,[[["self"]],["bytes"]]],[11,"serialize","","",0,[[["s"],["self"]],["result"]]],[11,"serialize","","",1,[[["s"],["self"]],["result"]]],[11,"deserialize","","",1,[[["d"]],[["result",["bytebuf"]],["bytebuf"]]]]],"p":[[3,"Bytes"],[3,"ByteBuf"],[8,"Deserialize"],[8,"Serialize"]]};
searchIndex["serde_derive"] = {"doc":"This crate provides Serde's two derive macros.","i":[[24,"Serialize","serde_derive","",null,null],[24,"Deserialize","","",null,null]],"p":[]};
searchIndex["smallvec"] = {"doc":"Small vectors in various sizes. These store a certain…","i":[[3,"Drain","smallvec","An iterator that removes the items from a `SmallVec` and…",null,null],[3,"SmallVec","","A `Vec`-like container that can store a small number of…",null,null],[3,"IntoIter","","An iterator that consumes a `SmallVec` and yields its…",null,null],[5,"unreachable","","Hint to the optimizer that any code path which calls this…",null,[[]]],[8,"VecLike","","Common operations implemented by both `Vec` and `SmallVec`.",null,null],[10,"push","","Append an element to the vector.",0,[[["self"],["t"]]]],[8,"ExtendFromSlice","","Trait to be implemented by a collection that can be…",null,null],[10,"extend_from_slice","","Extends a collection from a slice of its element type",1,[[["self"]]]],[8,"Array","","Types that can be used as the backing store for a SmallVec",null,null],[16,"Item","","The type of the array's elements.",2,null],[10,"size","","Returns the number of items the array can hold.",2,[[],["usize"]]],[10,"ptr","","Returns a pointer to the first element of the array.",2,[[["self"]]]],[10,"ptr_mut","","Returns a mutable pointer to the first element of the array.",2,[[["self"]]]],[11,"new","","Construct an empty vector",3,[[],["smallvec"]]],[11,"with_capacity","","Construct an empty vector with enough capacity…",3,[[["usize"]],["self"]]],[11,"from_vec","","Construct a new `SmallVec` from a `Vec<A::Item>`.",3,[[["vec"]],["smallvec"]]],[11,"from_buf","","Constructs a new `SmallVec` on the stack from an `A`…",3,[[["a"]],["smallvec"]]],[11,"from_buf_and_len","","Constructs a new `SmallVec` on the stack from an `A`…",3,[[["a"],["usize"]],["smallvec"]]],[11,"from_buf_and_len_unchecked","","Constructs a new `SmallVec` on the stack from an `A`…",3,[[["a"],["usize"]],["smallvec"]]],[11,"set_len","","Sets the length of a vector.",3,[[["self"],["usize"]]]],[11,"inline_size","","The maximum number of elements this vector can hold inline",3,[[["self"]],["usize"]]],[11,"len","","The number of elements stored in the vector",3,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the vector is empty",3,[[["self"]],["bool"]]],[11,"capacity","","The number of items the vector can hold without reallocating",3,[[["self"]],["usize"]]],[11,"spilled","","Returns `true` if the data has spilled into a separate…",3,[[["self"]],["bool"]]],[11,"drain","","Empty the vector and return an iterator over its former…",3,[[["self"]],["drain"]]],[11,"push","","Append an item to the vector.",3,[[["self"]]]],[11,"pop","","Remove an item from the end of the vector and return it,…",3,[[["self"]],["option"]]],[11,"grow","","Re-allocate to set the capacity to `max(new_cap,…",3,[[["self"],["usize"]]]],[11,"reserve","","Reserve capacity for `additional` more elements to be…",3,[[["self"],["usize"]]]],[11,"reserve_exact","","Reserve the minimum capacity for `additional` more…",3,[[["self"],["usize"]]]],[11,"shrink_to_fit","","Shrink the capacity of the vector as much as possible.",3,[[["self"]]]],[11,"truncate","","Shorten the vector, keeping the first `len` elements and…",3,[[["self"],["usize"]]]],[11,"as_slice","","Extracts a slice containing the entire vector.",3,[[["self"]]]],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",3,[[["self"]]]],[11,"swap_remove","","Remove the element at position `index`, replacing it with…",3,[[["self"],["usize"]]]],[11,"clear","","Remove all elements from the vector.",3,[[["self"]]]],[11,"remove","","Remove and return the element at position `index`,…",3,[[["self"],["usize"]]]],[11,"insert","","Insert an element at position `index`, shifting all…",3,[[["self"],["usize"]]]],[11,"insert_many","","Insert multiple elements at position `index`, shifting all…",3,[[["self"],["usize"],["intoiterator"]]]],[11,"into_vec","","Convert a SmallVec to a Vec, without reallocating if the…",3,[[],["vec"]]],[11,"into_inner","","Convert the SmallVec into an `A` if possible. Otherwise…",3,[[],["result"]]],[11,"retain","","Retains only the elements specified by the predicate.",3,[[["fnmut"],["self"]]]],[11,"dedup","","Removes consecutive duplicate elements.",3,[[["self"]]]],[11,"dedup_by","","Removes consecutive duplicate elements using the given…",3,[[["self"],["f"]]]],[11,"dedup_by_key","","Removes consecutive elements that map to the same key.",3,[[["self"],["f"]]]],[11,"from_raw_parts","","Creates a `SmallVec` directly from the raw components of…",3,[[["usize"]],["smallvec"]]],[11,"from_slice","","Copy the elements from a slice into a new `SmallVec`.",3,[[],["self"]]],[11,"insert_from_slice","","Copy elements from a slice into the vector at position…",3,[[["self"],["usize"]]]],[11,"extend_from_slice","","Copy elements from a slice and append them to the vector.",3,[[["self"]]]],[11,"resize","","Resizes the vector so that its length is equal to `len`.",3,[[["self"],["usize"]]]],[11,"from_elem","","Creates a `SmallVec` with `n` copies of `elem`. ``` use…",3,[[["usize"]],["self"]]],[14,"smallvec","","Creates a [`SmallVec`] containing the arguments.",null,null],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"into_iter","","",4,[[],["i"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"from","","",3,[[],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"into_iter","","",3,[[],["i"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"into_iter","","",5,[[],["i"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"push","","",3,[[["self"]]]],[11,"extend_from_slice","","",3,[[["self"]]]],[11,"drop","","",4,[[["self"]]]],[11,"drop","","",3,[[["self"]]]],[11,"drop","","",5,[[["self"]]]],[11,"as_mut","","",3,[[["self"]]]],[11,"as_ref","","",3,[[["self"]]]],[11,"from","","",3,[[],["smallvec"]]],[11,"from","","",3,[[["vec"]],["smallvec"]]],[11,"from","","",3,[[["a"]],["smallvec"]]],[11,"next_back","","",4,[[["self"]],["option"]]],[11,"next_back","","",5,[[["self"]],["option"]]],[11,"extend","","",3,[[["self"],["intoiterator"]]]],[11,"into_iter","","",3,[[]]],[11,"next","","",4,[[["self"]],["option"]]],[11,"size_hint","","",4,[[["self"]]]],[11,"next","","",5,[[["self"]],["option"]]],[11,"size_hint","","",5,[[["self"]]]],[11,"clone","","",3,[[["self"]],["smallvec"]]],[11,"default","","",3,[[],["smallvec"]]],[11,"cmp","","",3,[[["self"],["smallvec"]],["ordering"]]],[11,"eq","","",3,[[["smallvec"],["self"]],["bool"]]],[11,"ne","","",3,[[["smallvec"],["self"]],["bool"]]],[11,"partial_cmp","","",3,[[["self"],["smallvec"]],[["ordering"],["option",["ordering"]]]]],[11,"deref","","",3,[[["self"]]]],[11,"deref_mut","","",3,[[["self"]]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"index","","",3,[[["self"],["usize"]]]],[11,"index","","",3,[[["usize"],["self"],["range",["usize"]]]]],[11,"index","","",3,[[["rangefrom",["usize"]],["self"],["usize"]]]],[11,"index","","",3,[[["rangeto",["usize"]],["self"],["usize"]]]],[11,"index","","",3,[[["self"],["rangefull"]]]],[11,"index_mut","","",3,[[["self"],["usize"]]]],[11,"index_mut","","",3,[[["self"],["range",["usize"]],["usize"]]]],[11,"index_mut","","",3,[[["self"],["rangefrom",["usize"]],["usize"]]]],[11,"index_mut","","",3,[[["self"],["rangeto",["usize"]],["usize"]]]],[11,"index_mut","","",3,[[["self"],["rangefull"]]]],[11,"hash","","",3,[[["self"],["h"]]]],[11,"from_iter","","",3,[[["intoiterator"]],["smallvec"]]],[11,"borrow","","",3,[[["self"]]]],[11,"borrow_mut","","",3,[[["self"]]]],[11,"write","","",3,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"write_all","","",3,[[["self"]],["result"]]],[11,"flush","","",3,[[["self"]],["result"]]]],"p":[[8,"VecLike"],[8,"ExtendFromSlice"],[8,"Array"],[3,"SmallVec"],[3,"Drain"],[3,"IntoIter"]]};
searchIndex["syn"] = {"doc":"Syn is a parsing library for parsing a stream of Rust…","i":[[3,"Ident","syn","A word of Rust code, which may be a keyword or legal…",null,null],[3,"Attribute","","An attribute like `#[repr(transparent)]`.",null,null],[12,"pound_token","","",0,null],[12,"style","","",0,null],[12,"bracket_token","","",0,null],[12,"path","","",0,null],[12,"tokens","","",0,null],[3,"MetaList","","A structured list within an attribute, like `derive(Copy,…",null,null],[12,"path","","",1,null],[12,"paren_token","","",1,null],[12,"nested","","",1,null],[3,"MetaNameValue","","A name-value pair within an attribute, like `feature =…",null,null],[12,"path","","",2,null],[12,"eq_token","","",2,null],[12,"lit","","",2,null],[3,"Field","","A field of a struct or enum variant.",null,null],[12,"attrs","","Attributes tagged on the field.",3,null],[12,"vis","","Visibility of the field.",3,null],[12,"ident","","Name of the field, if any.",3,null],[12,"colon_token","","",3,null],[12,"ty","","Type of the field.",3,null],[3,"FieldsNamed","","Named fields of a struct or struct variant such as `Point…",null,null],[12,"brace_token","","",4,null],[12,"named","","",4,null],[3,"FieldsUnnamed","","Unnamed fields of a tuple struct or tuple variant such as…",null,null],[12,"paren_token","","",5,null],[12,"unnamed","","",5,null],[3,"Variant","","An enum variant.",null,null],[12,"attrs","","Attributes tagged on the variant.",6,null],[12,"ident","","Name of the variant.",6,null],[12,"fields","","Content stored in the variant.",6,null],[12,"discriminant","","Explicit discriminant: `Variant = 1`",6,null],[3,"VisCrate","","A crate-level visibility: `crate`.",null,null],[12,"crate_token","","",7,null],[3,"VisPublic","","A public visibility level: `pub`.",null,null],[12,"pub_token","","",8,null],[3,"VisRestricted","","A visibility level restricted to some path: `pub(self)` or…",null,null],[12,"pub_token","","",9,null],[12,"paren_token","","",9,null],[12,"in_token","","",9,null],[12,"path","","",9,null],[3,"ExprArray","","A slice literal expression: `[a, b, c, d]`.",null,null],[3,"ExprAssign","","An assignment expression: `a = compute()`.",null,null],[3,"ExprAssignOp","","A compound assignment expression: `counter += 1`.",null,null],[3,"ExprAsync","","An async block: `async { ... }`.",null,null],[3,"ExprAwait","","An await expression: `fut.await`.",null,null],[3,"ExprBinary","","A binary operation: `a + b`, `a * b`.",null,null],[12,"attrs","","",10,null],[12,"left","","",10,null],[12,"op","","",10,null],[12,"right","","",10,null],[3,"ExprBlock","","A blocked scope: `{ ... }`.",null,null],[3,"ExprBox","","A box expression: `box f`.",null,null],[3,"ExprBreak","","A `break`, with an optional label to break and an optional…",null,null],[3,"ExprCall","","A function call expression: `invoke(a, b)`.",null,null],[12,"attrs","","",11,null],[12,"func","","",11,null],[12,"paren_token","","",11,null],[12,"args","","",11,null],[3,"ExprCast","","A cast expression: `foo as f64`.",null,null],[12,"attrs","","",12,null],[12,"expr","","",12,null],[12,"as_token","","",12,null],[12,"ty","","",12,null],[3,"ExprClosure","","A closure expression: `|a, b| a + b`.",null,null],[3,"ExprContinue","","A `continue`, with an optional label.",null,null],[3,"ExprField","","Access of a named struct field (`obj.k`) or unnamed tuple…",null,null],[12,"attrs","","",13,null],[12,"base","","",13,null],[12,"dot_token","","",13,null],[12,"member","","",13,null],[3,"ExprForLoop","","A for loop: `for pat in expr { ... }`.",null,null],[3,"ExprGroup","","An expression contained within invisible delimiters.",null,null],[3,"ExprIf","","An `if` expression with an optional `else` block: `if expr…",null,null],[3,"ExprIndex","","A square bracketed indexing expression: `vector[2]`.",null,null],[12,"attrs","","",14,null],[12,"expr","","",14,null],[12,"bracket_token","","",14,null],[12,"index","","",14,null],[3,"ExprLet","","A `let` guard: `let Some(x) = opt`.",null,null],[3,"ExprLit","","A literal in place of an expression: `1`, `\"foo\"`.",null,null],[12,"attrs","","",15,null],[12,"lit","","",15,null],[3,"ExprLoop","","Conditionless loop: `loop { ... }`.",null,null],[3,"ExprMacro","","A macro invocation expression: `format!(\"{}\", q)`.",null,null],[3,"ExprMatch","","A `match` expression: `match n { Some(n) => {}, None => {}…",null,null],[3,"ExprMethodCall","","A method call expression: `x.foo::<T>(a, b)`.",null,null],[3,"ExprParen","","A parenthesized expression: `(a + b)`.",null,null],[12,"attrs","","",16,null],[12,"paren_token","","",16,null],[12,"expr","","",16,null],[3,"ExprPath","","A path like `std::mem::replace` possibly containing…",null,null],[12,"attrs","","",17,null],[12,"qself","","",17,null],[12,"path","","",17,null],[3,"ExprRange","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",null,null],[3,"ExprReference","","A referencing operation: `&a` or `&mut a`.",null,null],[3,"ExprRepeat","","An array literal constructed from one repeated element:…",null,null],[3,"ExprReturn","","A `return`, with an optional value to be returned.",null,null],[3,"ExprStruct","","A struct literal expression: `Point { x: 1, y: 1 }`.",null,null],[3,"ExprTry","","A try-expression: `expr?`.",null,null],[3,"ExprTryBlock","","A try block: `try { ... }`.",null,null],[3,"ExprTuple","","A tuple expression: `(a, b, c, d)`.",null,null],[3,"ExprType","","A type ascription expression: `foo: f64`.",null,null],[3,"ExprUnary","","A unary operation: `!x`, `*x`.",null,null],[12,"attrs","","",18,null],[12,"op","","",18,null],[12,"expr","","",18,null],[3,"ExprUnsafe","","An unsafe block: `unsafe { ... }`.",null,null],[3,"ExprWhile","","A while loop: `while expr { ... }`.",null,null],[3,"ExprYield","","A yield expression: `yield expr`.",null,null],[3,"Index","","The index of an unnamed tuple struct field.",null,null],[12,"index","","",19,null],[12,"span","","",19,null],[3,"BoundLifetimes","","A set of bound lifetimes: `for<'a, 'b, 'c>`.",null,null],[12,"for_token","","",20,null],[12,"lt_token","","",20,null],[12,"lifetimes","","",20,null],[12,"gt_token","","",20,null],[3,"ConstParam","","A const generic parameter: `const LENGTH: usize`.",null,null],[12,"attrs","","",21,null],[12,"const_token","","",21,null],[12,"ident","","",21,null],[12,"colon_token","","",21,null],[12,"ty","","",21,null],[12,"eq_token","","",21,null],[12,"default","","",21,null],[3,"Generics","","Lifetimes and type parameters attached to a declaration of…",null,null],[12,"lt_token","","",22,null],[12,"params","","",22,null],[12,"gt_token","","",22,null],[12,"where_clause","","",22,null],[3,"LifetimeDef","","A lifetime definition: `'a: 'b + 'c + 'd`.",null,null],[12,"attrs","","",23,null],[12,"lifetime","","",23,null],[12,"colon_token","","",23,null],[12,"bounds","","",23,null],[3,"PredicateEq","","An equality predicate in a `where` clause (unsupported).",null,null],[12,"lhs_ty","","",24,null],[12,"eq_token","","",24,null],[12,"rhs_ty","","",24,null],[3,"PredicateLifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",null,null],[12,"lifetime","","",25,null],[12,"colon_token","","",25,null],[12,"bounds","","",25,null],[3,"PredicateType","","A type predicate in a `where` clause: `for<'c> Foo<'c>:…",null,null],[12,"lifetimes","","Any lifetimes from a `for` binding",26,null],[12,"bounded_ty","","The type being bounded",26,null],[12,"colon_token","","",26,null],[12,"bounds","","Trait and lifetime bounds (`Clone+Send+'static`)",26,null],[3,"TraitBound","","A trait used as a bound on a type parameter.",null,null],[12,"paren_token","","",27,null],[12,"modifier","","",27,null],[12,"lifetimes","","The `for<'a>` in `for<'a> Foo<&'a T>`",27,null],[12,"path","","The `Foo<&'a T>` in `for<'a> Foo<&'a T>`",27,null],[3,"TypeParam","","A generic type parameter: `T: Into<String>`.",null,null],[12,"attrs","","",28,null],[12,"ident","","",28,null],[12,"colon_token","","",28,null],[12,"bounds","","",28,null],[12,"eq_token","","",28,null],[12,"default","","",28,null],[3,"WhereClause","","A `where` clause in a definition: `where T:…",null,null],[12,"where_token","","",29,null],[12,"predicates","","",29,null],[3,"ImplGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Turbofish","","Returned by `TypeGenerics::as_turbofish`.",null,null],[3,"TypeGenerics","","Returned by `Generics::split_for_impl`.",null,null],[3,"Lifetime","","A Rust lifetime: `'a`.",null,null],[12,"apostrophe","","",30,null],[12,"ident","","",30,null],[3,"LitBool","","A boolean literal: `true` or `false`.",null,null],[12,"value","","",31,null],[12,"span","","",31,null],[3,"LitByte","","A byte literal: `b'f'`.",null,null],[3,"LitByteStr","","A byte string literal: `b\"foo\"`.",null,null],[3,"LitChar","","A character literal: `'a'`.",null,null],[3,"LitFloat","","A floating point literal: `1f64` or `1.0e10f64`.",null,null],[3,"LitInt","","An integer literal: `1` or `1u16`.",null,null],[3,"LitStr","","A UTF-8 string literal: `\"foo\"`.",null,null],[3,"Macro","","A macro invocation: `println!(\"{}\", mac)`.",null,null],[12,"path","","",32,null],[12,"bang_token","","",32,null],[12,"delimiter","","",32,null],[12,"tokens","","",32,null],[3,"DataEnum","","An enum input to a `proc_macro_derive` macro.",null,null],[12,"enum_token","","",33,null],[12,"brace_token","","",33,null],[12,"variants","","",33,null],[3,"DataStruct","","A struct input to a `proc_macro_derive` macro.",null,null],[12,"struct_token","","",34,null],[12,"fields","","",34,null],[12,"semi_token","","",34,null],[3,"DataUnion","","An untagged union input to a `proc_macro_derive` macro.",null,null],[12,"union_token","","",35,null],[12,"fields","","",35,null],[3,"DeriveInput","","Data structure sent to a `proc_macro_derive` macro.",null,null],[12,"attrs","","Attributes tagged on the whole struct or enum.",36,null],[12,"vis","","Visibility of the struct or enum.",36,null],[12,"ident","","Name of the struct or enum.",36,null],[12,"generics","","Generics required to complete the definition.",36,null],[12,"data","","Data within the struct or enum.",36,null],[3,"Abi","","The binary interface of a function: `extern \"C\"`.",null,null],[12,"extern_token","","",37,null],[12,"name","","",37,null],[3,"BareFnArg","","An argument in a function type: the `usize` in `fn(usize)…",null,null],[12,"attrs","","",38,null],[12,"name","","",38,null],[12,"ty","","",38,null],[3,"TypeArray","","A fixed size array type: `[T; n]`.",null,null],[12,"bracket_token","","",39,null],[12,"elem","","",39,null],[12,"semi_token","","",39,null],[12,"len","","",39,null],[3,"TypeBareFn","","A bare function type: `fn(usize) -> bool`.",null,null],[12,"lifetimes","","",40,null],[12,"unsafety","","",40,null],[12,"abi","","",40,null],[12,"fn_token","","",40,null],[12,"paren_token","","",40,null],[12,"inputs","","",40,null],[12,"variadic","","",40,null],[12,"output","","",40,null],[3,"TypeGroup","","A type contained within invisible delimiters.",null,null],[12,"group_token","","",41,null],[12,"elem","","",41,null],[3,"TypeImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",null,null],[12,"impl_token","","",42,null],[12,"bounds","","",42,null],[3,"TypeInfer","","Indication that a type should be inferred by the compiler:…",null,null],[12,"underscore_token","","",43,null],[3,"TypeMacro","","A macro in the type position.",null,null],[12,"mac","","",44,null],[3,"TypeNever","","The never type: `!`.",null,null],[12,"bang_token","","",45,null],[3,"TypeParen","","A parenthesized type equivalent to the inner type.",null,null],[12,"paren_token","","",46,null],[12,"elem","","",46,null],[3,"TypePath","","A path like `std::slice::Iter`, optionally qualified with…",null,null],[12,"qself","","",47,null],[12,"path","","",47,null],[3,"TypePtr","","A raw pointer type: `*const T` or `*mut T`.",null,null],[12,"star_token","","",48,null],[12,"const_token","","",48,null],[12,"mutability","","",48,null],[12,"elem","","",48,null],[3,"TypeReference","","A reference type: `&'a T` or `&'a mut T`.",null,null],[12,"and_token","","",49,null],[12,"lifetime","","",49,null],[12,"mutability","","",49,null],[12,"elem","","",49,null],[3,"TypeSlice","","A dynamically sized slice type: `[T]`.",null,null],[12,"bracket_token","","",50,null],[12,"elem","","",50,null],[3,"TypeTraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",null,null],[12,"dyn_token","","",51,null],[12,"bounds","","",51,null],[3,"TypeTuple","","A tuple type: `(A, B, C, String)`.",null,null],[12,"paren_token","","",52,null],[12,"elems","","",52,null],[3,"Variadic","","The variadic argument of a foreign function.",null,null],[12,"attrs","","",53,null],[12,"dots","","",53,null],[3,"AngleBracketedGenericArguments","","Angle bracketed arguments of a path segment: the `<K, V>`…",null,null],[12,"colon2_token","","",54,null],[12,"lt_token","","",54,null],[12,"args","","",54,null],[12,"gt_token","","",54,null],[3,"Binding","","A binding (equality constraint) on an associated type:…",null,null],[12,"ident","","",55,null],[12,"eq_token","","",55,null],[12,"ty","","",55,null],[3,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",null,null],[12,"ident","","",56,null],[12,"colon_token","","",56,null],[12,"bounds","","",56,null],[3,"ParenthesizedGenericArguments","","Arguments of a function path segment: the `(A, B) -> C` in…",null,null],[12,"paren_token","","",57,null],[12,"inputs","","`(A, B)`",57,null],[12,"output","","`C`",57,null],[3,"Path","","A path at which a named item is exported:…",null,null],[12,"leading_colon","","",58,null],[12,"segments","","",58,null],[3,"PathSegment","","A segment of a path together with any path arguments on…",null,null],[12,"ident","","",59,null],[12,"arguments","","",59,null],[3,"QSelf","","The explicit Self type in a qualified path: the `T` in `<T…",null,null],[12,"lt_token","","",60,null],[12,"ty","","",60,null],[12,"position","","",60,null],[12,"as_token","","",60,null],[12,"gt_token","","",60,null],[3,"Error","","Error returned when a Syn parser cannot parse the input…",null,null],[4,"AttrStyle","","Distinguishes between attributes that decorate an item and…",null,null],[13,"Outer","","",61,null],[13,"Inner","","",61,null],[4,"Meta","","Content of a compile-time structured attribute.",null,null],[13,"Path","","",62,null],[13,"List","","A structured list within an attribute, like `derive(Copy,…",62,null],[13,"NameValue","","A name-value pair within an attribute, like `feature =…",62,null],[4,"NestedMeta","","Element of a compile-time attribute list.",null,null],[13,"Meta","","A structured meta item, like the `Copy` in…",63,null],[13,"Lit","","A Rust literal, like the `\"new_name\"` in…",63,null],[4,"Fields","","Data stored within an enum variant or struct.",null,null],[13,"Named","","Named fields of a struct or struct variant such as `Point…",64,null],[13,"Unnamed","","Unnamed fields of a tuple struct or tuple variant such as…",64,null],[13,"Unit","","Unit struct or unit variant such as `None`.",64,null],[4,"Visibility","","The visibility level of an item: inherited or `pub` or…",null,null],[13,"Public","","A public visibility level: `pub`.",65,null],[13,"Crate","","A crate-level visibility: `crate`.",65,null],[13,"Restricted","","A visibility level restricted to some path: `pub(self)` or…",65,null],[13,"Inherited","","An inherited visibility, which usually means private.",65,null],[4,"Expr","","A Rust expression.",null,null],[13,"Array","","A slice literal expression: `[a, b, c, d]`.",66,null],[13,"Assign","","An assignment expression: `a = compute()`.",66,null],[13,"AssignOp","","A compound assignment expression: `counter += 1`.",66,null],[13,"Async","","An async block: `async { ... }`.",66,null],[13,"Await","","An await expression: `fut.await`.",66,null],[13,"Binary","","A binary operation: `a + b`, `a * b`.",66,null],[13,"Block","","A blocked scope: `{ ... }`.",66,null],[13,"Box","","A box expression: `box f`.",66,null],[13,"Break","","A `break`, with an optional label to break and an optional…",66,null],[13,"Call","","A function call expression: `invoke(a, b)`.",66,null],[13,"Cast","","A cast expression: `foo as f64`.",66,null],[13,"Closure","","A closure expression: `|a, b| a + b`.",66,null],[13,"Continue","","A `continue`, with an optional label.",66,null],[13,"Field","","Access of a named struct field (`obj.k`) or unnamed tuple…",66,null],[13,"ForLoop","","A for loop: `for pat in expr { ... }`.",66,null],[13,"Group","","An expression contained within invisible delimiters.",66,null],[13,"If","","An `if` expression with an optional `else` block: `if expr…",66,null],[13,"Index","","A square bracketed indexing expression: `vector[2]`.",66,null],[13,"Let","","A `let` guard: `let Some(x) = opt`.",66,null],[13,"Lit","","A literal in place of an expression: `1`, `\"foo\"`.",66,null],[13,"Loop","","Conditionless loop: `loop { ... }`.",66,null],[13,"Macro","","A macro invocation expression: `format!(\"{}\", q)`.",66,null],[13,"Match","","A `match` expression: `match n { Some(n) => {}, None => {}…",66,null],[13,"MethodCall","","A method call expression: `x.foo::<T>(a, b)`.",66,null],[13,"Paren","","A parenthesized expression: `(a + b)`.",66,null],[13,"Path","","A path like `std::mem::replace` possibly containing…",66,null],[13,"Range","","A range expression: `1..2`, `1..`, `..2`, `1..=2`, `..=2`.",66,null],[13,"Reference","","A referencing operation: `&a` or `&mut a`.",66,null],[13,"Repeat","","An array literal constructed from one repeated element:…",66,null],[13,"Return","","A `return`, with an optional value to be returned.",66,null],[13,"Struct","","A struct literal expression: `Point { x: 1, y: 1 }`.",66,null],[13,"Try","","A try-expression: `expr?`.",66,null],[13,"TryBlock","","A try block: `try { ... }`.",66,null],[13,"Tuple","","A tuple expression: `(a, b, c, d)`.",66,null],[13,"Type","","A type ascription expression: `foo: f64`.",66,null],[13,"Unary","","A unary operation: `!x`, `*x`.",66,null],[13,"Unsafe","","An unsafe block: `unsafe { ... }`.",66,null],[13,"Verbatim","","Tokens in expression position not interpreted by Syn.",66,null],[13,"While","","A while loop: `while expr { ... }`.",66,null],[13,"Yield","","A yield expression: `yield expr`.",66,null],[4,"Member","","A struct or tuple struct field accessed in a struct…",null,null],[13,"Named","","A named field like `self.x`.",67,null],[13,"Unnamed","","An unnamed field like `self.0`.",67,null],[4,"GenericParam","","A generic type parameter, lifetime, or const generic: `T:…",null,null],[13,"Type","","A generic type parameter: `T: Into<String>`.",68,null],[13,"Lifetime","","A lifetime definition: `'a: 'b + 'c + 'd`.",68,null],[13,"Const","","A const generic parameter: `const LENGTH: usize`.",68,null],[4,"TraitBoundModifier","","A modifier on a trait bound, currently only used for the…",null,null],[13,"None","","",69,null],[13,"Maybe","","",69,null],[4,"TypeParamBound","","A trait or lifetime used as a bound on a type parameter.",null,null],[13,"Trait","","",70,null],[13,"Lifetime","","",70,null],[4,"WherePredicate","","A single predicate in a `where` clause: `T:…",null,null],[13,"Type","","A type predicate in a `where` clause: `for<'c> Foo<'c>:…",71,null],[13,"Lifetime","","A lifetime predicate in a `where` clause: `'a: 'b + 'c`.",71,null],[13,"Eq","","An equality predicate in a `where` clause (unsupported).",71,null],[4,"Lit","","A Rust literal such as a string or integer or boolean.",null,null],[13,"Str","","A UTF-8 string literal: `\"foo\"`.",72,null],[13,"ByteStr","","A byte string literal: `b\"foo\"`.",72,null],[13,"Byte","","A byte literal: `b'f'`.",72,null],[13,"Char","","A character literal: `'a'`.",72,null],[13,"Int","","An integer literal: `1` or `1u16`.",72,null],[13,"Float","","A floating point literal: `1f64` or `1.0e10f64`.",72,null],[13,"Bool","","A boolean literal: `true` or `false`.",72,null],[13,"Verbatim","","A raw token literal not interpreted by Syn.",72,null],[4,"StrStyle","","The style of a string literal, either plain quoted or a…",null,null],[13,"Cooked","","An ordinary string like `\"data\"`.",73,null],[13,"Raw","","A raw string like `r##\"data\"##`.",73,null],[4,"MacroDelimiter","","A grouping token that surrounds a macro body: `m!(...)` or…",null,null],[13,"Paren","","",74,null],[13,"Brace","","",74,null],[13,"Bracket","","",74,null],[4,"Data","","The storage of a struct, enum or union data structure.",null,null],[13,"Struct","","A struct input to a `proc_macro_derive` macro.",75,null],[13,"Enum","","An enum input to a `proc_macro_derive` macro.",75,null],[13,"Union","","An untagged union input to a `proc_macro_derive` macro.",75,null],[4,"BinOp","","A binary operator: `+`, `+=`, `&`.",null,null],[13,"Add","","The `+` operator (addition)",76,null],[13,"Sub","","The `-` operator (subtraction)",76,null],[13,"Mul","","The `*` operator (multiplication)",76,null],[13,"Div","","The `/` operator (division)",76,null],[13,"Rem","","The `%` operator (modulus)",76,null],[13,"And","","The `&&` operator (logical and)",76,null],[13,"Or","","The `||` operator (logical or)",76,null],[13,"BitXor","","The `^` operator (bitwise xor)",76,null],[13,"BitAnd","","The `&` operator (bitwise and)",76,null],[13,"BitOr","","The `|` operator (bitwise or)",76,null],[13,"Shl","","The `<<` operator (shift left)",76,null],[13,"Shr","","The `>>` operator (shift right)",76,null],[13,"Eq","","The `==` operator (equality)",76,null],[13,"Lt","","The `<` operator (less than)",76,null],[13,"Le","","The `<=` operator (less than or equal to)",76,null],[13,"Ne","","The `!=` operator (not equal to)",76,null],[13,"Ge","","The `>=` operator (greater than or equal to)",76,null],[13,"Gt","","The `>` operator (greater than)",76,null],[13,"AddEq","","The `+=` operator",76,null],[13,"SubEq","","The `-=` operator",76,null],[13,"MulEq","","The `*=` operator",76,null],[13,"DivEq","","The `/=` operator",76,null],[13,"RemEq","","The `%=` operator",76,null],[13,"BitXorEq","","The `^=` operator",76,null],[13,"BitAndEq","","The `&=` operator",76,null],[13,"BitOrEq","","The `|=` operator",76,null],[13,"ShlEq","","The `<<=` operator",76,null],[13,"ShrEq","","The `>>=` operator",76,null],[4,"UnOp","","A unary operator: `*`, `!`, `-`.",null,null],[13,"Deref","","The `*` operator for dereferencing",77,null],[13,"Not","","The `!` operator for logical inversion",77,null],[13,"Neg","","The `-` operator for negation",77,null],[4,"ReturnType","","Return type of a function signature.",null,null],[13,"Default","","Return type is not specified.",78,null],[13,"Type","","A particular type is returned.",78,null],[4,"Type","","The possible types that a Rust value could have.",null,null],[13,"Array","","A fixed size array type: `[T; n]`.",79,null],[13,"BareFn","","A bare function type: `fn(usize) -> bool`.",79,null],[13,"Group","","A type contained within invisible delimiters.",79,null],[13,"ImplTrait","","An `impl Bound1 + Bound2 + Bound3` type where `Bound` is a…",79,null],[13,"Infer","","Indication that a type should be inferred by the compiler:…",79,null],[13,"Macro","","A macro in the type position.",79,null],[13,"Never","","The never type: `!`.",79,null],[13,"Paren","","A parenthesized type equivalent to the inner type.",79,null],[13,"Path","","A path like `std::slice::Iter`, optionally qualified with…",79,null],[13,"Ptr","","A raw pointer type: `*const T` or `*mut T`.",79,null],[13,"Reference","","A reference type: `&'a T` or `&'a mut T`.",79,null],[13,"Slice","","A dynamically sized slice type: `[T]`.",79,null],[13,"TraitObject","","A trait object type `Bound1 + Bound2 + Bound3` where…",79,null],[13,"Tuple","","A tuple type: `(A, B, C, String)`.",79,null],[13,"Verbatim","","Tokens in type position not interpreted by Syn.",79,null],[4,"GenericArgument","","An individual generic argument, like `'a`, `T`, or `Item =…",null,null],[13,"Lifetime","","A lifetime argument.",80,null],[13,"Type","","A type argument.",80,null],[13,"Binding","","A binding (equality constraint) on an associated type: the…",80,null],[13,"Constraint","","An associated type bound: `Iterator<Item: Display>`.",80,null],[13,"Const","","A const expression. Must be inside of a block.",80,null],[4,"PathArguments","","Angle bracketed or parenthesized arguments of a path…",null,null],[13,"None","","",81,null],[13,"AngleBracketed","","The `<'a, T>` in `std::slice::iter<'a, T>`.",81,null],[13,"Parenthesized","","The `(A, B) -> C` in `Fn(A, B) -> C`.",81,null],[5,"parse","","Parse tokens of source code into the chosen syntax tree…",null,[[["tokenstream"]],[["parse"],["result"]]]],[5,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",null,[[["tokenstream"]],[["parse"],["result"]]]],[5,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",null,[[["str"]],[["parse"],["result"]]]],[0,"token","","Tokens representing Rust punctuation, keywords, and…",null,null],[3,"Underscore","syn::token","`_`",null,null],[12,"spans","","",82,null],[3,"Abstract","","`abstract`",null,null],[12,"span","","",83,null],[3,"As","","`as`",null,null],[12,"span","","",84,null],[3,"Async","","`async`",null,null],[12,"span","","",85,null],[3,"Auto","","`auto`",null,null],[12,"span","","",86,null],[3,"Await","","`await`",null,null],[12,"span","","",87,null],[3,"Become","","`become`",null,null],[12,"span","","",88,null],[3,"Box","","`box`",null,null],[12,"span","","",89,null],[3,"Break","","`break`",null,null],[12,"span","","",90,null],[3,"Const","","`const`",null,null],[12,"span","","",91,null],[3,"Continue","","`continue`",null,null],[12,"span","","",92,null],[3,"Crate","","`crate`",null,null],[12,"span","","",93,null],[3,"Default","","`default`",null,null],[12,"span","","",94,null],[3,"Do","","`do`",null,null],[12,"span","","",95,null],[3,"Dyn","","`dyn`",null,null],[12,"span","","",96,null],[3,"Else","","`else`",null,null],[12,"span","","",97,null],[3,"Enum","","`enum`",null,null],[12,"span","","",98,null],[3,"Extern","","`extern`",null,null],[12,"span","","",99,null],[3,"Final","","`final`",null,null],[12,"span","","",100,null],[3,"Fn","","`fn`",null,null],[12,"span","","",101,null],[3,"For","","`for`",null,null],[12,"span","","",102,null],[3,"If","","`if`",null,null],[12,"span","","",103,null],[3,"Impl","","`impl`",null,null],[12,"span","","",104,null],[3,"In","","`in`",null,null],[12,"span","","",105,null],[3,"Let","","`let`",null,null],[12,"span","","",106,null],[3,"Loop","","`loop`",null,null],[12,"span","","",107,null],[3,"Macro","","`macro`",null,null],[12,"span","","",108,null],[3,"Match","","`match`",null,null],[12,"span","","",109,null],[3,"Mod","","`mod`",null,null],[12,"span","","",110,null],[3,"Move","","`move`",null,null],[12,"span","","",111,null],[3,"Mut","","`mut`",null,null],[12,"span","","",112,null],[3,"Override","","`override`",null,null],[12,"span","","",113,null],[3,"Priv","","`priv`",null,null],[12,"span","","",114,null],[3,"Pub","","`pub`",null,null],[12,"span","","",115,null],[3,"Ref","","`ref`",null,null],[12,"span","","",116,null],[3,"Return","","`return`",null,null],[12,"span","","",117,null],[3,"SelfType","","`Self`",null,null],[12,"span","","",118,null],[3,"SelfValue","","`self`",null,null],[12,"span","","",119,null],[3,"Static","","`static`",null,null],[12,"span","","",120,null],[3,"Struct","","`struct`",null,null],[12,"span","","",121,null],[3,"Super","","`super`",null,null],[12,"span","","",122,null],[3,"Trait","","`trait`",null,null],[12,"span","","",123,null],[3,"Try","","`try`",null,null],[12,"span","","",124,null],[3,"Type","","`type`",null,null],[12,"span","","",125,null],[3,"Typeof","","`typeof`",null,null],[12,"span","","",126,null],[3,"Union","","`union`",null,null],[12,"span","","",127,null],[3,"Unsafe","","`unsafe`",null,null],[12,"span","","",128,null],[3,"Unsized","","`unsized`",null,null],[12,"span","","",129,null],[3,"Use","","`use`",null,null],[12,"span","","",130,null],[3,"Virtual","","`virtual`",null,null],[12,"span","","",131,null],[3,"Where","","`where`",null,null],[12,"span","","",132,null],[3,"While","","`while`",null,null],[12,"span","","",133,null],[3,"Yield","","`yield`",null,null],[12,"span","","",134,null],[3,"Add","","`+`",null,null],[12,"spans","","",135,null],[3,"AddEq","","`+=`",null,null],[12,"spans","","",136,null],[3,"And","","`&`",null,null],[12,"spans","","",137,null],[3,"AndAnd","","`&&`",null,null],[12,"spans","","",138,null],[3,"AndEq","","`&=`",null,null],[12,"spans","","",139,null],[3,"At","","`@`",null,null],[12,"spans","","",140,null],[3,"Bang","","`!`",null,null],[12,"spans","","",141,null],[3,"Caret","","`^`",null,null],[12,"spans","","",142,null],[3,"CaretEq","","`^=`",null,null],[12,"spans","","",143,null],[3,"Colon","","`:`",null,null],[12,"spans","","",144,null],[3,"Colon2","","`::`",null,null],[12,"spans","","",145,null],[3,"Comma","","`,`",null,null],[12,"spans","","",146,null],[3,"Div","","`/`",null,null],[12,"spans","","",147,null],[3,"DivEq","","`/=`",null,null],[12,"spans","","",148,null],[3,"Dollar","","`$`",null,null],[12,"spans","","",149,null],[3,"Dot","","`.`",null,null],[12,"spans","","",150,null],[3,"Dot2","","`..`",null,null],[12,"spans","","",151,null],[3,"Dot3","","`...`",null,null],[12,"spans","","",152,null],[3,"DotDotEq","","`..=`",null,null],[12,"spans","","",153,null],[3,"Eq","","`=`",null,null],[12,"spans","","",154,null],[3,"EqEq","","`==`",null,null],[12,"spans","","",155,null],[3,"Ge","","`>=`",null,null],[12,"spans","","",156,null],[3,"Gt","","`>`",null,null],[12,"spans","","",157,null],[3,"Le","","`<=`",null,null],[12,"spans","","",158,null],[3,"Lt","","`<`",null,null],[12,"spans","","",159,null],[3,"MulEq","","`*=`",null,null],[12,"spans","","",160,null],[3,"Ne","","`!=`",null,null],[12,"spans","","",161,null],[3,"Or","","`|`",null,null],[12,"spans","","",162,null],[3,"OrEq","","`|=`",null,null],[12,"spans","","",163,null],[3,"OrOr","","`||`",null,null],[12,"spans","","",164,null],[3,"Pound","","`#`",null,null],[12,"spans","","",165,null],[3,"Question","","`?`",null,null],[12,"spans","","",166,null],[3,"RArrow","","`->`",null,null],[12,"spans","","",167,null],[3,"LArrow","","`<-`",null,null],[12,"spans","","",168,null],[3,"Rem","","`%`",null,null],[12,"spans","","",169,null],[3,"RemEq","","`%=`",null,null],[12,"spans","","",170,null],[3,"FatArrow","","`=>`",null,null],[12,"spans","","",171,null],[3,"Semi","","`;`",null,null],[12,"spans","","",172,null],[3,"Shl","","`<<`",null,null],[12,"spans","","",173,null],[3,"ShlEq","","`<<=`",null,null],[12,"spans","","",174,null],[3,"Shr","","`>>`",null,null],[12,"spans","","",175,null],[3,"ShrEq","","`>>=`",null,null],[12,"spans","","",176,null],[3,"Star","","`*`",null,null],[12,"spans","","",177,null],[3,"Sub","","`-`",null,null],[12,"spans","","",178,null],[3,"SubEq","","`-=`",null,null],[12,"spans","","",179,null],[3,"Tilde","","`~`",null,null],[12,"spans","","",180,null],[3,"Brace","","`{...}`",null,null],[12,"span","","",181,null],[3,"Bracket","","`[...]`",null,null],[12,"span","","",182,null],[3,"Paren","","`(...)`",null,null],[12,"span","","",183,null],[3,"Group","","None-delimited group",null,null],[12,"span","","",184,null],[8,"Token","","Marker trait for types that represent single tokens.",null,null],[11,"surround","","",181,[[["tokenstream"],["self"],["f"]]]],[11,"surround","","",182,[[["tokenstream"],["self"],["f"]]]],[11,"surround","","",183,[[["tokenstream"],["self"],["f"]]]],[11,"surround","","",184,[[["tokenstream"],["self"],["f"]]]],[11,"parse_meta","syn","Parses the content of the attribute, consisting of the…",0,[[["self"]],[["meta"],["result",["meta"]]]]],[11,"parse_args","","Parse the arguments to the attribute as a syntax tree.",0,[[["self"]],[["parse"],["result"]]]],[11,"parse_args_with","","Parse the arguments to the attribute using the given parser.",0,[[["self"],["parser"]],["result"]]],[11,"parse_outer","","Parses zero or more outer attributes from the stream.",0,[[["parsestream"]],[["result",["vec"]],["vec"]]]],[11,"parse_inner","","Parses zero or more inner attributes from the stream.",0,[[["parsestream"]],[["result",["vec"]],["vec"]]]],[11,"path","","Returns the identifier that begins this structured meta…",62,[[["self"]],["path"]]],[11,"parse_named","","Parses a named (braced struct) field.",3,[[["parsestream"]],["result"]]],[11,"parse_unnamed","","Parses an unnamed (tuple struct) field.",3,[[["parsestream"]],["result"]]],[11,"iter","","Get an iterator over the borrowed [`Field`] items in this…",64,[[["self"]],[["iter",["field"]],["field"]]]],[11,"iter_mut","","Get an iterator over the mutably borrowed [`Field`] items…",64,[[["self"]],[["field"],["itermut",["field"]]]]],[11,"len","","Returns the number of fields.",64,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if there are zero fields.",64,[[["self"]],["bool"]]],[11,"type_params","","Returns an Iterator<Item = &TypeParam> over the type…",22,[[["self"]],["typeparams"]]],[11,"type_params_mut","","Returns an Iterator<Item = &mut TypeParam> over the type…",22,[[["self"]],["typeparamsmut"]]],[11,"lifetimes","","Returns an Iterator<Item = &LifetimeDef> over the lifetime…",22,[[["self"]],["lifetimes"]]],[11,"lifetimes_mut","","Returns an Iterator<Item = &mut LifetimeDef> over the…",22,[[["self"]],["lifetimesmut"]]],[11,"const_params","","Returns an Iterator<Item = &ConstParam> over the constant…",22,[[["self"]],["constparams"]]],[11,"const_params_mut","","Returns an Iterator<Item = &mut ConstParam> over the…",22,[[["self"]],["constparamsmut"]]],[11,"make_where_clause","","Initializes an empty `where`-clause if there is not one…",22,[[["self"]],["whereclause"]]],[11,"split_for_impl","","Split a type's generics into the pieces required for…",22,[[["self"]]]],[11,"as_turbofish","","Turn a type's generics like `<X, Y>` into a turbofish like…",185,[[["self"]],["turbofish"]]],[11,"new","","",23,[[["lifetime"]],["self"]]],[11,"new","","Panics",30,[[["str"],["span"]],["self"]]],[11,"new","","Interpret a Syn literal from a proc-macro2 literal.",72,[[["literal"]],["self"]]],[11,"new","","",186,[[["str"],["span"]],["self"]]],[11,"value","","",186,[[["self"]],["string"]]],[11,"parse","","Parse a syntax tree node from the content of this string…",186,[[["self"]],[["parse"],["result"]]]],[11,"parse_with","","Invoke parser on the content of this string literal.",186,[[["self"],["parser"]],["result"]]],[11,"span","","",186,[[["self"]],["span"]]],[11,"set_span","","",186,[[["self"],["span"]]]],[11,"suffix","","",186,[[["self"]],["str"]]],[11,"new","","",187,[[["span"]],["self"]]],[11,"value","","",187,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"span","","",187,[[["self"]],["span"]]],[11,"set_span","","",187,[[["self"],["span"]]]],[11,"new","","",188,[[["span"],["u8"]],["self"]]],[11,"value","","",188,[[["self"]],["u8"]]],[11,"span","","",188,[[["self"]],["span"]]],[11,"set_span","","",188,[[["self"],["span"]]]],[11,"new","","",189,[[["char"],["span"]],["self"]]],[11,"value","","",189,[[["self"]],["char"]]],[11,"span","","",189,[[["self"]],["span"]]],[11,"set_span","","",189,[[["self"],["span"]]]],[11,"new","","",190,[[["str"],["span"]],["self"]]],[11,"base10_digits","","",190,[[["self"]],["str"]]],[11,"base10_parse","","Parses the literal into a selected number type.",190,[[["self"]],["result"]]],[11,"suffix","","",190,[[["self"]],["str"]]],[11,"span","","",190,[[["self"]],["span"]]],[11,"set_span","","",190,[[["self"],["span"]]]],[11,"new","","",191,[[["str"],["span"]],["self"]]],[11,"base10_digits","","",191,[[["self"]],["str"]]],[11,"base10_parse","","",191,[[["self"]],["result"]]],[11,"suffix","","",191,[[["self"]],["str"]]],[11,"span","","",191,[[["self"]],["span"]]],[11,"set_span","","",191,[[["self"],["span"]]]],[11,"parse_body","","Parse the tokens within the macro invocation's delimiters…",32,[[["self"]],[["parse"],["result"]]]],[11,"parse_body_with","","Parse the tokens within the macro invocation's delimiters…",32,[[["self"],["parser"]],["result"]]],[11,"without_plus","","In some positions, types may not contain the `+`…",79,[[["parsestream"]],["result"]]],[11,"without_plus","","",78,[[["parsestream"]],["result"]]],[11,"parse","","",78,[[["parsestream"],["bool"]],["result"]]],[11,"without_plus","","",51,[[["parsestream"]],["result"]]],[11,"parse","","",51,[[["parsestream"],["bool"]],["result"]]],[11,"parse_mod_style","","Parse a `Path` containing no path arguments on any of its…",58,[[["parsestream"]],["result"]]],[11,"is_ident","","Determines whether this is a path of length 1 equal to the…",58,[[["i"],["self"]],["bool"]]],[11,"get_ident","","If this path consists of a single ident, returns the ident.",58,[[["self"]],[["option",["ident"]],["ident"]]]],[11,"is_empty","","",81,[[["self"]],["bool"]]],[0,"buffer","","A stably addressed token buffer supporting efficient…",null,null],[3,"TokenBuffer","syn::buffer","A buffer that can be efficiently traversed multiple times,…",null,null],[3,"Cursor","","A cheaply copyable cursor into a `TokenBuffer`.",null,null],[11,"new","","Creates a `TokenBuffer` containing all the tokens from the…",192,[[["tokenstream"]],["tokenbuffer"]]],[11,"new2","","Creates a `TokenBuffer` containing all the tokens from the…",192,[[["tokenstream"]],["tokenbuffer"]]],[11,"begin","","Creates a cursor referencing the first token in the buffer…",192,[[["self"]],["cursor"]]],[11,"empty","","Creates a cursor referencing a static empty TokenStream.",193,[[],["self"]]],[11,"eof","","Checks whether the cursor is currently pointing at the end…",193,[[],["bool"]]],[11,"group","","If the cursor is pointing at a `Group` with the given…",193,[[["delimiter"]],["option"]]],[11,"ident","","If the cursor is pointing at a `Ident`, returns it along…",193,[[],["option"]]],[11,"punct","","If the cursor is pointing at an `Punct`, returns it along…",193,[[],["option"]]],[11,"literal","","If the cursor is pointing at a `Literal`, return it along…",193,[[],["option"]]],[11,"lifetime","","If the cursor is pointing at a `Lifetime`, returns it…",193,[[],["option"]]],[11,"token_stream","","Copies all remaining tokens visible from this cursor into…",193,[[],["tokenstream"]]],[11,"token_tree","","If the cursor is pointing at a `TokenTree`, returns it…",193,[[],["option"]]],[11,"span","","Returns the `Span` of the current token, or…",193,[[],["span"]]],[0,"ext","syn","Extension traits to provide parsing methods on foreign…",null,null],[8,"IdentExt","syn::ext","Additional methods for `Ident` not provided by proc-macro2…",null,null],[10,"parse_any","","Parses any identifier including keywords.",194,[[["parsestream"]],["result"]]],[18,"peek_any","","Peeks any identifier including keywords. Usage:…",194,null],[10,"unraw","","Strips the raw marker `r#`, if any, from the beginning of…",194,[[["self"]],["ident"]]],[0,"punctuated","syn","A punctuated sequence of syntax tree nodes separated by…",null,null],[3,"Punctuated","syn::punctuated","A punctuated sequence of syntax tree nodes of type `T`…",null,null],[3,"Pairs","","An iterator over borrowed pairs of type `Pair<&T, &P>`.",null,null],[3,"PairsMut","","An iterator over mutably borrowed pairs of type `Pair<&mut…",null,null],[3,"IntoPairs","","An iterator over owned pairs of type `Pair<T, P>`.",null,null],[3,"IntoIter","","An iterator over owned values of type `T`.",null,null],[3,"Iter","","An iterator over borrowed values of type `&T`.",null,null],[3,"IterMut","","An iterator over mutably borrowed values of type `&mut T`.",null,null],[4,"Pair","","A single syntax tree node of type `T` followed by its…",null,null],[13,"Punctuated","","",195,null],[13,"End","","",195,null],[11,"new","","Creates an empty punctuated sequence.",196,[[],["punctuated"]]],[11,"is_empty","","Determines whether this punctuated sequence is empty,…",196,[[["self"]],["bool"]]],[11,"len","","Returns the number of syntax tree nodes in this punctuated…",196,[[["self"]],["usize"]]],[11,"first","","Borrows the first element in this sequence.",196,[[["self"]],[["t"],["option"]]]],[11,"first_mut","","Mutably borrows the first element in this sequence.",196,[[["self"]],[["t"],["option"]]]],[11,"last","","Borrows the last element in this sequence.",196,[[["self"]],[["t"],["option"]]]],[11,"last_mut","","Mutably borrows the last element in this sequence.",196,[[["self"]],[["t"],["option"]]]],[11,"iter","","Returns an iterator over borrowed syntax tree nodes of…",196,[[["self"]],["iter"]]],[11,"iter_mut","","Returns an iterator over mutably borrowed syntax tree…",196,[[["self"]],["itermut"]]],[11,"pairs","","Returns an iterator over the contents of this sequence as…",196,[[["self"]],["pairs"]]],[11,"pairs_mut","","Returns an iterator over the contents of this sequence as…",196,[[["self"]],["pairsmut"]]],[11,"into_pairs","","Returns an iterator over the contents of this sequence as…",196,[[],["intopairs"]]],[11,"push_value","","Appends a syntax tree node onto the end of this punctuated…",196,[[["self"],["t"]]]],[11,"push_punct","","Appends a trailing punctuation onto the end of this…",196,[[["self"],["p"]]]],[11,"pop","","Removes the last punctuated pair from this sequence, or…",196,[[["self"]],[["option",["pair"]],["pair"]]]],[11,"trailing_punct","","Determines whether this punctuated sequence ends with a…",196,[[["self"]],["bool"]]],[11,"empty_or_trailing","","Returns true if either this `Punctuated` is empty, or it…",196,[[["self"]],["bool"]]],[11,"push","","Appends a syntax tree node onto the end of this punctuated…",196,[[["self"],["t"]]]],[11,"insert","","Inserts an element at position `index`.",196,[[["self"],["usize"],["t"]]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",196,[[["parsestream"]],["result"]]],[11,"parse_terminated_with","","Parses zero or more occurrences of `T` using the given…",196,[[["parsestream"]],["result"]]],[11,"parse_separated_nonempty","","Parses one or more occurrences of `T` separated by…",196,[[["parsestream"]],["result"]]],[11,"parse_separated_nonempty_with","","Parses one or more occurrences of `T` using the given…",196,[[["parsestream"]],["result"]]],[11,"into_value","","Extracts the syntax tree node from this punctuated pair,…",195,[[],["t"]]],[11,"value","","Borrows the syntax tree node from this punctuated pair.",195,[[["self"]],["t"]]],[11,"value_mut","","Mutably borrows the syntax tree node from this punctuated…",195,[[["self"]],["t"]]],[11,"punct","","Borrows the punctuation from this punctuated pair, unless…",195,[[["self"]],[["option"],["p"]]]],[11,"new","","Creates a punctuated pair out of a syntax tree node and an…",195,[[["option"],["t"]],["self"]]],[11,"into_tuple","","Produces this punctuated pair as a tuple of syntax tree…",195,[[]]],[0,"spanned","syn","A trait that can provide the `Span` of the complete…",null,null],[8,"Spanned","syn::spanned","A trait that can provide the `Span` of the complete…",null,null],[10,"span","","Returns a `Span` covering the complete contents of this…",197,[[["self"]],["span"]]],[0,"visit","syn","Syntax tree traversal to walk a shared borrow of a syntax…",null,null],[5,"visit_abi","syn::visit","",null,[[["v"],["abi"]]]],[5,"visit_angle_bracketed_generic_arguments","","",null,[[["anglebracketedgenericarguments"],["v"]]]],[5,"visit_attr_style","","",null,[[["attrstyle"],["v"]]]],[5,"visit_attribute","","",null,[[["attribute"],["v"]]]],[5,"visit_bare_fn_arg","","",null,[[["barefnarg"],["v"]]]],[5,"visit_bin_op","","",null,[[["binop"],["v"]]]],[5,"visit_binding","","",null,[[["binding"],["v"]]]],[5,"visit_bound_lifetimes","","",null,[[["boundlifetimes"],["v"]]]],[5,"visit_const_param","","",null,[[["v"],["constparam"]]]],[5,"visit_constraint","","",null,[[["constraint"],["v"]]]],[5,"visit_data","","",null,[[["v"],["data"]]]],[5,"visit_data_enum","","",null,[[["v"],["dataenum"]]]],[5,"visit_data_struct","","",null,[[["v"],["datastruct"]]]],[5,"visit_data_union","","",null,[[["v"],["dataunion"]]]],[5,"visit_derive_input","","",null,[[["deriveinput"],["v"]]]],[5,"visit_expr","","",null,[[["expr"],["v"]]]],[5,"visit_expr_binary","","",null,[[["exprbinary"],["v"]]]],[5,"visit_expr_call","","",null,[[["exprcall"],["v"]]]],[5,"visit_expr_cast","","",null,[[["v"],["exprcast"]]]],[5,"visit_expr_field","","",null,[[["exprfield"],["v"]]]],[5,"visit_expr_index","","",null,[[["v"],["exprindex"]]]],[5,"visit_expr_lit","","",null,[[["exprlit"],["v"]]]],[5,"visit_expr_paren","","",null,[[["v"],["exprparen"]]]],[5,"visit_expr_path","","",null,[[["v"],["exprpath"]]]],[5,"visit_expr_unary","","",null,[[["v"],["exprunary"]]]],[5,"visit_field","","",null,[[["field"],["v"]]]],[5,"visit_fields","","",null,[[["fields"],["v"]]]],[5,"visit_fields_named","","",null,[[["v"],["fieldsnamed"]]]],[5,"visit_fields_unnamed","","",null,[[["fieldsunnamed"],["v"]]]],[5,"visit_generic_argument","","",null,[[["genericargument"],["v"]]]],[5,"visit_generic_param","","",null,[[["genericparam"],["v"]]]],[5,"visit_generics","","",null,[[["generics"],["v"]]]],[5,"visit_ident","","",null,[[["v"],["ident"]]]],[5,"visit_index","","",null,[[["index"],["v"]]]],[5,"visit_lifetime","","",null,[[["v"],["lifetime"]]]],[5,"visit_lifetime_def","","",null,[[["lifetimedef"],["v"]]]],[5,"visit_lit","","",null,[[["v"],["lit"]]]],[5,"visit_lit_bool","","",null,[[["v"],["litbool"]]]],[5,"visit_lit_byte","","",null,[[["v"],["litbyte"]]]],[5,"visit_lit_byte_str","","",null,[[["litbytestr"],["v"]]]],[5,"visit_lit_char","","",null,[[["litchar"],["v"]]]],[5,"visit_lit_float","","",null,[[["v"],["litfloat"]]]],[5,"visit_lit_int","","",null,[[["litint"],["v"]]]],[5,"visit_lit_str","","",null,[[["v"],["litstr"]]]],[5,"visit_macro","","",null,[[["macro"],["v"]]]],[5,"visit_macro_delimiter","","",null,[[["macrodelimiter"],["v"]]]],[5,"visit_member","","",null,[[["member"],["v"]]]],[5,"visit_meta","","",null,[[["meta"],["v"]]]],[5,"visit_meta_list","","",null,[[["v"],["metalist"]]]],[5,"visit_meta_name_value","","",null,[[["v"],["metanamevalue"]]]],[5,"visit_nested_meta","","",null,[[["nestedmeta"],["v"]]]],[5,"visit_parenthesized_generic_arguments","","",null,[[["v"],["parenthesizedgenericarguments"]]]],[5,"visit_path","","",null,[[["v"],["path"]]]],[5,"visit_path_arguments","","",null,[[["v"],["patharguments"]]]],[5,"visit_path_segment","","",null,[[["v"],["pathsegment"]]]],[5,"visit_predicate_eq","","",null,[[["v"],["predicateeq"]]]],[5,"visit_predicate_lifetime","","",null,[[["predicatelifetime"],["v"]]]],[5,"visit_predicate_type","","",null,[[["v"],["predicatetype"]]]],[5,"visit_qself","","",null,[[["v"],["qself"]]]],[5,"visit_return_type","","",null,[[["returntype"],["v"]]]],[5,"visit_span","","",null,[[["span"],["v"]]]],[5,"visit_trait_bound","","",null,[[["v"],["traitbound"]]]],[5,"visit_trait_bound_modifier","","",null,[[["traitboundmodifier"],["v"]]]],[5,"visit_type","","",null,[[["type"],["v"]]]],[5,"visit_type_array","","",null,[[["typearray"],["v"]]]],[5,"visit_type_bare_fn","","",null,[[["v"],["typebarefn"]]]],[5,"visit_type_group","","",null,[[["typegroup"],["v"]]]],[5,"visit_type_impl_trait","","",null,[[["v"],["typeimpltrait"]]]],[5,"visit_type_infer","","",null,[[["typeinfer"],["v"]]]],[5,"visit_type_macro","","",null,[[["typemacro"],["v"]]]],[5,"visit_type_never","","",null,[[["v"],["typenever"]]]],[5,"visit_type_param","","",null,[[["v"],["typeparam"]]]],[5,"visit_type_param_bound","","",null,[[["v"],["typeparambound"]]]],[5,"visit_type_paren","","",null,[[["typeparen"],["v"]]]],[5,"visit_type_path","","",null,[[["v"],["typepath"]]]],[5,"visit_type_ptr","","",null,[[["v"],["typeptr"]]]],[5,"visit_type_reference","","",null,[[["v"],["typereference"]]]],[5,"visit_type_slice","","",null,[[["v"],["typeslice"]]]],[5,"visit_type_trait_object","","",null,[[["typetraitobject"],["v"]]]],[5,"visit_type_tuple","","",null,[[["v"],["typetuple"]]]],[5,"visit_un_op","","",null,[[["unop"],["v"]]]],[5,"visit_variadic","","",null,[[["v"],["variadic"]]]],[5,"visit_variant","","",null,[[["variant"],["v"]]]],[5,"visit_vis_crate","","",null,[[["v"],["viscrate"]]]],[5,"visit_vis_public","","",null,[[["v"],["vispublic"]]]],[5,"visit_vis_restricted","","",null,[[["v"],["visrestricted"]]]],[5,"visit_visibility","","",null,[[["v"],["visibility"]]]],[5,"visit_where_clause","","",null,[[["v"],["whereclause"]]]],[5,"visit_where_predicate","","",null,[[["wherepredicate"],["v"]]]],[8,"Visit","","Syntax tree traversal to walk a shared borrow of a syntax…",null,null],[11,"visit_abi","","",198,[[["self"],["abi"]]]],[11,"visit_angle_bracketed_generic_arguments","","",198,[[["self"],["anglebracketedgenericarguments"]]]],[11,"visit_attr_style","","",198,[[["attrstyle"],["self"]]]],[11,"visit_attribute","","",198,[[["self"],["attribute"]]]],[11,"visit_bare_fn_arg","","",198,[[["self"],["barefnarg"]]]],[11,"visit_bin_op","","",198,[[["binop"],["self"]]]],[11,"visit_binding","","",198,[[["binding"],["self"]]]],[11,"visit_bound_lifetimes","","",198,[[["self"],["boundlifetimes"]]]],[11,"visit_const_param","","",198,[[["self"],["constparam"]]]],[11,"visit_constraint","","",198,[[["constraint"],["self"]]]],[11,"visit_data","","",198,[[["self"],["data"]]]],[11,"visit_data_enum","","",198,[[["self"],["dataenum"]]]],[11,"visit_data_struct","","",198,[[["self"],["datastruct"]]]],[11,"visit_data_union","","",198,[[["self"],["dataunion"]]]],[11,"visit_derive_input","","",198,[[["self"],["deriveinput"]]]],[11,"visit_expr","","",198,[[["self"],["expr"]]]],[11,"visit_expr_binary","","",198,[[["exprbinary"],["self"]]]],[11,"visit_expr_call","","",198,[[["exprcall"],["self"]]]],[11,"visit_expr_cast","","",198,[[["self"],["exprcast"]]]],[11,"visit_expr_field","","",198,[[["self"],["exprfield"]]]],[11,"visit_expr_index","","",198,[[["self"],["exprindex"]]]],[11,"visit_expr_lit","","",198,[[["self"],["exprlit"]]]],[11,"visit_expr_paren","","",198,[[["self"],["exprparen"]]]],[11,"visit_expr_path","","",198,[[["self"],["exprpath"]]]],[11,"visit_expr_unary","","",198,[[["self"],["exprunary"]]]],[11,"visit_field","","",198,[[["field"],["self"]]]],[11,"visit_fields","","",198,[[["self"],["fields"]]]],[11,"visit_fields_named","","",198,[[["self"],["fieldsnamed"]]]],[11,"visit_fields_unnamed","","",198,[[["fieldsunnamed"],["self"]]]],[11,"visit_generic_argument","","",198,[[["genericargument"],["self"]]]],[11,"visit_generic_param","","",198,[[["self"],["genericparam"]]]],[11,"visit_generics","","",198,[[["generics"],["self"]]]],[11,"visit_ident","","",198,[[["self"],["ident"]]]],[11,"visit_index","","",198,[[["index"],["self"]]]],[11,"visit_lifetime","","",198,[[["self"],["lifetime"]]]],[11,"visit_lifetime_def","","",198,[[["self"],["lifetimedef"]]]],[11,"visit_lit","","",198,[[["self"],["lit"]]]],[11,"visit_lit_bool","","",198,[[["self"],["litbool"]]]],[11,"visit_lit_byte","","",198,[[["self"],["litbyte"]]]],[11,"visit_lit_byte_str","","",198,[[["self"],["litbytestr"]]]],[11,"visit_lit_char","","",198,[[["self"],["litchar"]]]],[11,"visit_lit_float","","",198,[[["self"],["litfloat"]]]],[11,"visit_lit_int","","",198,[[["self"],["litint"]]]],[11,"visit_lit_str","","",198,[[["self"],["litstr"]]]],[11,"visit_macro","","",198,[[["self"],["macro"]]]],[11,"visit_macro_delimiter","","",198,[[["self"],["macrodelimiter"]]]],[11,"visit_member","","",198,[[["member"],["self"]]]],[11,"visit_meta","","",198,[[["meta"],["self"]]]],[11,"visit_meta_list","","",198,[[["self"],["metalist"]]]],[11,"visit_meta_name_value","","",198,[[["self"],["metanamevalue"]]]],[11,"visit_nested_meta","","",198,[[["nestedmeta"],["self"]]]],[11,"visit_parenthesized_generic_arguments","","",198,[[["self"],["parenthesizedgenericarguments"]]]],[11,"visit_path","","",198,[[["self"],["path"]]]],[11,"visit_path_arguments","","",198,[[["self"],["patharguments"]]]],[11,"visit_path_segment","","",198,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq","","",198,[[["self"],["predicateeq"]]]],[11,"visit_predicate_lifetime","","",198,[[["predicatelifetime"],["self"]]]],[11,"visit_predicate_type","","",198,[[["self"],["predicatetype"]]]],[11,"visit_qself","","",198,[[["self"],["qself"]]]],[11,"visit_return_type","","",198,[[["self"],["returntype"]]]],[11,"visit_span","","",198,[[["self"],["span"]]]],[11,"visit_trait_bound","","",198,[[["self"],["traitbound"]]]],[11,"visit_trait_bound_modifier","","",198,[[["traitboundmodifier"],["self"]]]],[11,"visit_type","","",198,[[["self"],["type"]]]],[11,"visit_type_array","","",198,[[["typearray"],["self"]]]],[11,"visit_type_bare_fn","","",198,[[["self"],["typebarefn"]]]],[11,"visit_type_group","","",198,[[["typegroup"],["self"]]]],[11,"visit_type_impl_trait","","",198,[[["self"],["typeimpltrait"]]]],[11,"visit_type_infer","","",198,[[["self"],["typeinfer"]]]],[11,"visit_type_macro","","",198,[[["typemacro"],["self"]]]],[11,"visit_type_never","","",198,[[["self"],["typenever"]]]],[11,"visit_type_param","","",198,[[["self"],["typeparam"]]]],[11,"visit_type_param_bound","","",198,[[["self"],["typeparambound"]]]],[11,"visit_type_paren","","",198,[[["typeparen"],["self"]]]],[11,"visit_type_path","","",198,[[["self"],["typepath"]]]],[11,"visit_type_ptr","","",198,[[["self"],["typeptr"]]]],[11,"visit_type_reference","","",198,[[["self"],["typereference"]]]],[11,"visit_type_slice","","",198,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object","","",198,[[["typetraitobject"],["self"]]]],[11,"visit_type_tuple","","",198,[[["self"],["typetuple"]]]],[11,"visit_un_op","","",198,[[["unop"],["self"]]]],[11,"visit_variadic","","",198,[[["self"],["variadic"]]]],[11,"visit_variant","","",198,[[["variant"],["self"]]]],[11,"visit_vis_crate","","",198,[[["self"],["viscrate"]]]],[11,"visit_vis_public","","",198,[[["self"],["vispublic"]]]],[11,"visit_vis_restricted","","",198,[[["self"],["visrestricted"]]]],[11,"visit_visibility","","",198,[[["self"],["visibility"]]]],[11,"visit_where_clause","","",198,[[["self"],["whereclause"]]]],[11,"visit_where_predicate","","",198,[[["wherepredicate"],["self"]]]],[0,"parse","syn","Parsing interface for parsing a token stream into a syntax…",null,null],[3,"Error","syn::parse","Error returned when a Syn parser cannot parse the input…",null,null],[3,"Lookahead1","","Support for checking the next token in a stream to decide…",null,null],[3,"ParseBuffer","","Cursor position within a buffered token stream.",null,null],[3,"StepCursor","","Cursor state associated with speculative parsing.",null,null],[3,"Nothing","","An empty syntax tree node that consumes no tokens when…",null,null],[0,"discouraged","","Extensions to the parsing API with niche applicability.",null,null],[8,"Speculative","syn::parse::discouraged","Extensions to the `ParseStream` API to support speculative…",null,null],[10,"advance_to","","Advance this parse stream to the position of a forked…",199,[[["self"]]]],[6,"Result","syn::parse","The result of a Syn parser.",null,null],[6,"ParseStream","","Input to a Syn parser function.",null,null],[8,"Peek","","Types that can be parsed by looking at just one token.",null,null],[8,"Parse","","Parsing interface implemented by all types that can be…",null,null],[10,"parse","","",200,[[["parsestream"]],["result"]]],[8,"Parser","","Parser that can parse Rust tokens into a particular syntax…",null,null],[16,"Output","","",201,null],[10,"parse2","","Parse a proc-macro2 token stream into the chosen syntax…",201,[[["tokenstream"]],["result"]]],[11,"parse","","Parse tokens of source code into the chosen syntax tree…",201,[[["tokenstream"]],["result"]]],[11,"parse_str","","Parse a string of Rust code into the chosen syntax tree…",201,[[["str"]],["result"]]],[11,"error","","Triggers an error at the current position of the parse…",202,[[["display"]],["error"]]],[11,"parse","","Parses a syntax tree node of type `T`, advancing the…",203,[[["self"]],[["parse"],["result"]]]],[11,"call","","Calls the given parser function to parse a syntax tree…",203,[[["self"]],["result"]]],[11,"peek","","Looks at the next token in the parse stream to determine…",203,[[["peek"],["self"]],["bool"]]],[11,"peek2","","Looks at the second-next token in the parse stream.",203,[[["peek"],["self"]],["bool"]]],[11,"peek3","","Looks at the third-next token in the parse stream.",203,[[["peek"],["self"]],["bool"]]],[11,"parse_terminated","","Parses zero or more occurrences of `T` separated by…",203,[[["self"]],[["result",["punctuated"]],["punctuated"]]]],[11,"is_empty","","Returns whether there are tokens remaining in this stream.",203,[[["self"]],["bool"]]],[11,"lookahead1","","Constructs a helper for peeking at the next token in this…",203,[[["self"]],["lookahead1"]]],[11,"fork","","Forks a parse stream so that parsing tokens out of either…",203,[[["self"]],["self"]]],[11,"error","","Triggers an error at the current position of the parse…",203,[[["display"],["self"]],["error"]]],[11,"step","","Speculatively parses tokens from this parse stream,…",203,[[["self"],["f"]],["result"]]],[11,"span","","Returns the `Span` of the next token in the parse stream,…",203,[[["self"]],["span"]]],[11,"cursor","","Provides low-level access to the token representation…",203,[[["self"]],["cursor"]]],[11,"new","syn","Usually the [`ParseStream::error`] method will be used…",204,[[["display"],["span"]],["self"]]],[11,"new_spanned","","Creates an error with the specified message spanning the…",204,[[["display"],["totokens"]],["self"]]],[11,"span","","The source location of the error.",204,[[["self"]],["span"]]],[11,"to_compile_error","","Render the error as an invocation of [`compile_error!`].",204,[[["self"]],["tokenstream"]]],[11,"combine","","Add another error message to self such that when…",204,[[["error"],["self"]]]],[6,"AttributeArgs","","Conventional argument type associated with an invocation…",null,null],[6,"Result","","The result of a Syn parser.",null,null],[14,"parenthesized","","Parse a set of parentheses and expose their content to…",null,null],[14,"braced","","Parse a set of curly braces and expose their content to…",null,null],[14,"bracketed","","Parse a set of square brackets and expose their content to…",null,null],[14,"Token","","A type-macro that expands to the name of the Rust type…",null,null],[14,"parse_quote","","Quasi-quotation macro that accepts input like the…",null,null],[14,"parse_macro_input","","Parse the input TokenStream of a macro, triggering a…",null,null],[14,"custom_keyword","","Define a type that supports parsing and printing a given…",null,null],[14,"custom_punctuation","","Define a type that supports parsing and printing a…",null,null],[11,"peek","","",205,[[["cursor"]],["bool"]]],[11,"display","","",205,[[],["str"]]],[11,"span","","",205,[[["self"]],["span"]]],[11,"from","","",205,[[["t"]],["t"]]],[11,"into","","",205,[[],["u"]]],[11,"to_owned","","",205,[[["self"]],["t"]]],[11,"clone_into","","",205,[[["self"],["t"]]]],[11,"to_string","","",205,[[["self"]],["string"]]],[11,"try_from","","",205,[[["u"]],["result"]]],[11,"try_into","","",205,[[],["result"]]],[11,"borrow","","",205,[[["self"]],["t"]]],[11,"borrow_mut","","",205,[[["self"]],["t"]]],[11,"type_id","","",205,[[["self"]],["typeid"]]],[11,"span","","",0,[[["self"]],["span"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"span","","",1,[[["self"]],["span"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"span","","",2,[[["self"]],["span"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"span","","",3,[[["self"]],["span"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"span","","",4,[[["self"]],["span"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"span","","",5,[[["self"]],["span"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"span","","",6,[[["self"]],["span"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"span","","",7,[[["self"]],["span"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"span","","",8,[[["self"]],["span"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"span","","",9,[[["self"]],["span"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"span","","",206,[[["self"]],["span"]]],[11,"from","","",206,[[["t"]],["t"]]],[11,"into","","",206,[[],["u"]]],[11,"to_owned","","",206,[[["self"]],["t"]]],[11,"clone_into","","",206,[[["self"],["t"]]]],[11,"try_from","","",206,[[["u"]],["result"]]],[11,"try_into","","",206,[[],["result"]]],[11,"borrow","","",206,[[["self"]],["t"]]],[11,"borrow_mut","","",206,[[["self"]],["t"]]],[11,"type_id","","",206,[[["self"]],["typeid"]]],[11,"span","","",207,[[["self"]],["span"]]],[11,"from","","",207,[[["t"]],["t"]]],[11,"into","","",207,[[],["u"]]],[11,"to_owned","","",207,[[["self"]],["t"]]],[11,"clone_into","","",207,[[["self"],["t"]]]],[11,"try_from","","",207,[[["u"]],["result"]]],[11,"try_into","","",207,[[],["result"]]],[11,"borrow","","",207,[[["self"]],["t"]]],[11,"borrow_mut","","",207,[[["self"]],["t"]]],[11,"type_id","","",207,[[["self"]],["typeid"]]],[11,"span","","",208,[[["self"]],["span"]]],[11,"from","","",208,[[["t"]],["t"]]],[11,"into","","",208,[[],["u"]]],[11,"to_owned","","",208,[[["self"]],["t"]]],[11,"clone_into","","",208,[[["self"],["t"]]]],[11,"try_from","","",208,[[["u"]],["result"]]],[11,"try_into","","",208,[[],["result"]]],[11,"borrow","","",208,[[["self"]],["t"]]],[11,"borrow_mut","","",208,[[["self"]],["t"]]],[11,"type_id","","",208,[[["self"]],["typeid"]]],[11,"span","","",209,[[["self"]],["span"]]],[11,"from","","",209,[[["t"]],["t"]]],[11,"into","","",209,[[],["u"]]],[11,"to_owned","","",209,[[["self"]],["t"]]],[11,"clone_into","","",209,[[["self"],["t"]]]],[11,"try_from","","",209,[[["u"]],["result"]]],[11,"try_into","","",209,[[],["result"]]],[11,"borrow","","",209,[[["self"]],["t"]]],[11,"borrow_mut","","",209,[[["self"]],["t"]]],[11,"type_id","","",209,[[["self"]],["typeid"]]],[11,"span","","",210,[[["self"]],["span"]]],[11,"from","","",210,[[["t"]],["t"]]],[11,"into","","",210,[[],["u"]]],[11,"to_owned","","",210,[[["self"]],["t"]]],[11,"clone_into","","",210,[[["self"],["t"]]]],[11,"try_from","","",210,[[["u"]],["result"]]],[11,"try_into","","",210,[[],["result"]]],[11,"borrow","","",210,[[["self"]],["t"]]],[11,"borrow_mut","","",210,[[["self"]],["t"]]],[11,"type_id","","",210,[[["self"]],["typeid"]]],[11,"span","","",10,[[["self"]],["span"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"span","","",211,[[["self"]],["span"]]],[11,"from","","",211,[[["t"]],["t"]]],[11,"into","","",211,[[],["u"]]],[11,"to_owned","","",211,[[["self"]],["t"]]],[11,"clone_into","","",211,[[["self"],["t"]]]],[11,"try_from","","",211,[[["u"]],["result"]]],[11,"try_into","","",211,[[],["result"]]],[11,"borrow","","",211,[[["self"]],["t"]]],[11,"borrow_mut","","",211,[[["self"]],["t"]]],[11,"type_id","","",211,[[["self"]],["typeid"]]],[11,"span","","",212,[[["self"]],["span"]]],[11,"from","","",212,[[["t"]],["t"]]],[11,"into","","",212,[[],["u"]]],[11,"to_owned","","",212,[[["self"]],["t"]]],[11,"clone_into","","",212,[[["self"],["t"]]]],[11,"try_from","","",212,[[["u"]],["result"]]],[11,"try_into","","",212,[[],["result"]]],[11,"borrow","","",212,[[["self"]],["t"]]],[11,"borrow_mut","","",212,[[["self"]],["t"]]],[11,"type_id","","",212,[[["self"]],["typeid"]]],[11,"span","","",213,[[["self"]],["span"]]],[11,"from","","",213,[[["t"]],["t"]]],[11,"into","","",213,[[],["u"]]],[11,"to_owned","","",213,[[["self"]],["t"]]],[11,"clone_into","","",213,[[["self"],["t"]]]],[11,"try_from","","",213,[[["u"]],["result"]]],[11,"try_into","","",213,[[],["result"]]],[11,"borrow","","",213,[[["self"]],["t"]]],[11,"borrow_mut","","",213,[[["self"]],["t"]]],[11,"type_id","","",213,[[["self"]],["typeid"]]],[11,"span","","",11,[[["self"]],["span"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"span","","",12,[[["self"]],["span"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"span","","",214,[[["self"]],["span"]]],[11,"from","","",214,[[["t"]],["t"]]],[11,"into","","",214,[[],["u"]]],[11,"to_owned","","",214,[[["self"]],["t"]]],[11,"clone_into","","",214,[[["self"],["t"]]]],[11,"try_from","","",214,[[["u"]],["result"]]],[11,"try_into","","",214,[[],["result"]]],[11,"borrow","","",214,[[["self"]],["t"]]],[11,"borrow_mut","","",214,[[["self"]],["t"]]],[11,"type_id","","",214,[[["self"]],["typeid"]]],[11,"span","","",215,[[["self"]],["span"]]],[11,"from","","",215,[[["t"]],["t"]]],[11,"into","","",215,[[],["u"]]],[11,"to_owned","","",215,[[["self"]],["t"]]],[11,"clone_into","","",215,[[["self"],["t"]]]],[11,"try_from","","",215,[[["u"]],["result"]]],[11,"try_into","","",215,[[],["result"]]],[11,"borrow","","",215,[[["self"]],["t"]]],[11,"borrow_mut","","",215,[[["self"]],["t"]]],[11,"type_id","","",215,[[["self"]],["typeid"]]],[11,"span","","",13,[[["self"]],["span"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"span","","",216,[[["self"]],["span"]]],[11,"from","","",216,[[["t"]],["t"]]],[11,"into","","",216,[[],["u"]]],[11,"to_owned","","",216,[[["self"]],["t"]]],[11,"clone_into","","",216,[[["self"],["t"]]]],[11,"try_from","","",216,[[["u"]],["result"]]],[11,"try_into","","",216,[[],["result"]]],[11,"borrow","","",216,[[["self"]],["t"]]],[11,"borrow_mut","","",216,[[["self"]],["t"]]],[11,"type_id","","",216,[[["self"]],["typeid"]]],[11,"span","","",217,[[["self"]],["span"]]],[11,"from","","",217,[[["t"]],["t"]]],[11,"into","","",217,[[],["u"]]],[11,"to_owned","","",217,[[["self"]],["t"]]],[11,"clone_into","","",217,[[["self"],["t"]]]],[11,"try_from","","",217,[[["u"]],["result"]]],[11,"try_into","","",217,[[],["result"]]],[11,"borrow","","",217,[[["self"]],["t"]]],[11,"borrow_mut","","",217,[[["self"]],["t"]]],[11,"type_id","","",217,[[["self"]],["typeid"]]],[11,"span","","",218,[[["self"]],["span"]]],[11,"from","","",218,[[["t"]],["t"]]],[11,"into","","",218,[[],["u"]]],[11,"to_owned","","",218,[[["self"]],["t"]]],[11,"clone_into","","",218,[[["self"],["t"]]]],[11,"try_from","","",218,[[["u"]],["result"]]],[11,"try_into","","",218,[[],["result"]]],[11,"borrow","","",218,[[["self"]],["t"]]],[11,"borrow_mut","","",218,[[["self"]],["t"]]],[11,"type_id","","",218,[[["self"]],["typeid"]]],[11,"span","","",14,[[["self"]],["span"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"span","","",219,[[["self"]],["span"]]],[11,"from","","",219,[[["t"]],["t"]]],[11,"into","","",219,[[],["u"]]],[11,"to_owned","","",219,[[["self"]],["t"]]],[11,"clone_into","","",219,[[["self"],["t"]]]],[11,"try_from","","",219,[[["u"]],["result"]]],[11,"try_into","","",219,[[],["result"]]],[11,"borrow","","",219,[[["self"]],["t"]]],[11,"borrow_mut","","",219,[[["self"]],["t"]]],[11,"type_id","","",219,[[["self"]],["typeid"]]],[11,"span","","",15,[[["self"]],["span"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"span","","",220,[[["self"]],["span"]]],[11,"from","","",220,[[["t"]],["t"]]],[11,"into","","",220,[[],["u"]]],[11,"to_owned","","",220,[[["self"]],["t"]]],[11,"clone_into","","",220,[[["self"],["t"]]]],[11,"try_from","","",220,[[["u"]],["result"]]],[11,"try_into","","",220,[[],["result"]]],[11,"borrow","","",220,[[["self"]],["t"]]],[11,"borrow_mut","","",220,[[["self"]],["t"]]],[11,"type_id","","",220,[[["self"]],["typeid"]]],[11,"span","","",221,[[["self"]],["span"]]],[11,"from","","",221,[[["t"]],["t"]]],[11,"into","","",221,[[],["u"]]],[11,"to_owned","","",221,[[["self"]],["t"]]],[11,"clone_into","","",221,[[["self"],["t"]]]],[11,"try_from","","",221,[[["u"]],["result"]]],[11,"try_into","","",221,[[],["result"]]],[11,"borrow","","",221,[[["self"]],["t"]]],[11,"borrow_mut","","",221,[[["self"]],["t"]]],[11,"type_id","","",221,[[["self"]],["typeid"]]],[11,"span","","",222,[[["self"]],["span"]]],[11,"from","","",222,[[["t"]],["t"]]],[11,"into","","",222,[[],["u"]]],[11,"to_owned","","",222,[[["self"]],["t"]]],[11,"clone_into","","",222,[[["self"],["t"]]]],[11,"try_from","","",222,[[["u"]],["result"]]],[11,"try_into","","",222,[[],["result"]]],[11,"borrow","","",222,[[["self"]],["t"]]],[11,"borrow_mut","","",222,[[["self"]],["t"]]],[11,"type_id","","",222,[[["self"]],["typeid"]]],[11,"span","","",223,[[["self"]],["span"]]],[11,"from","","",223,[[["t"]],["t"]]],[11,"into","","",223,[[],["u"]]],[11,"to_owned","","",223,[[["self"]],["t"]]],[11,"clone_into","","",223,[[["self"],["t"]]]],[11,"try_from","","",223,[[["u"]],["result"]]],[11,"try_into","","",223,[[],["result"]]],[11,"borrow","","",223,[[["self"]],["t"]]],[11,"borrow_mut","","",223,[[["self"]],["t"]]],[11,"type_id","","",223,[[["self"]],["typeid"]]],[11,"span","","",16,[[["self"]],["span"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"span","","",17,[[["self"]],["span"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"span","","",224,[[["self"]],["span"]]],[11,"from","","",224,[[["t"]],["t"]]],[11,"into","","",224,[[],["u"]]],[11,"to_owned","","",224,[[["self"]],["t"]]],[11,"clone_into","","",224,[[["self"],["t"]]]],[11,"try_from","","",224,[[["u"]],["result"]]],[11,"try_into","","",224,[[],["result"]]],[11,"borrow","","",224,[[["self"]],["t"]]],[11,"borrow_mut","","",224,[[["self"]],["t"]]],[11,"type_id","","",224,[[["self"]],["typeid"]]],[11,"span","","",225,[[["self"]],["span"]]],[11,"from","","",225,[[["t"]],["t"]]],[11,"into","","",225,[[],["u"]]],[11,"to_owned","","",225,[[["self"]],["t"]]],[11,"clone_into","","",225,[[["self"],["t"]]]],[11,"try_from","","",225,[[["u"]],["result"]]],[11,"try_into","","",225,[[],["result"]]],[11,"borrow","","",225,[[["self"]],["t"]]],[11,"borrow_mut","","",225,[[["self"]],["t"]]],[11,"type_id","","",225,[[["self"]],["typeid"]]],[11,"span","","",226,[[["self"]],["span"]]],[11,"from","","",226,[[["t"]],["t"]]],[11,"into","","",226,[[],["u"]]],[11,"to_owned","","",226,[[["self"]],["t"]]],[11,"clone_into","","",226,[[["self"],["t"]]]],[11,"try_from","","",226,[[["u"]],["result"]]],[11,"try_into","","",226,[[],["result"]]],[11,"borrow","","",226,[[["self"]],["t"]]],[11,"borrow_mut","","",226,[[["self"]],["t"]]],[11,"type_id","","",226,[[["self"]],["typeid"]]],[11,"span","","",227,[[["self"]],["span"]]],[11,"from","","",227,[[["t"]],["t"]]],[11,"into","","",227,[[],["u"]]],[11,"to_owned","","",227,[[["self"]],["t"]]],[11,"clone_into","","",227,[[["self"],["t"]]]],[11,"try_from","","",227,[[["u"]],["result"]]],[11,"try_into","","",227,[[],["result"]]],[11,"borrow","","",227,[[["self"]],["t"]]],[11,"borrow_mut","","",227,[[["self"]],["t"]]],[11,"type_id","","",227,[[["self"]],["typeid"]]],[11,"span","","",228,[[["self"]],["span"]]],[11,"from","","",228,[[["t"]],["t"]]],[11,"into","","",228,[[],["u"]]],[11,"to_owned","","",228,[[["self"]],["t"]]],[11,"clone_into","","",228,[[["self"],["t"]]]],[11,"try_from","","",228,[[["u"]],["result"]]],[11,"try_into","","",228,[[],["result"]]],[11,"borrow","","",228,[[["self"]],["t"]]],[11,"borrow_mut","","",228,[[["self"]],["t"]]],[11,"type_id","","",228,[[["self"]],["typeid"]]],[11,"span","","",229,[[["self"]],["span"]]],[11,"from","","",229,[[["t"]],["t"]]],[11,"into","","",229,[[],["u"]]],[11,"to_owned","","",229,[[["self"]],["t"]]],[11,"clone_into","","",229,[[["self"],["t"]]]],[11,"try_from","","",229,[[["u"]],["result"]]],[11,"try_into","","",229,[[],["result"]]],[11,"borrow","","",229,[[["self"]],["t"]]],[11,"borrow_mut","","",229,[[["self"]],["t"]]],[11,"type_id","","",229,[[["self"]],["typeid"]]],[11,"span","","",230,[[["self"]],["span"]]],[11,"from","","",230,[[["t"]],["t"]]],[11,"into","","",230,[[],["u"]]],[11,"to_owned","","",230,[[["self"]],["t"]]],[11,"clone_into","","",230,[[["self"],["t"]]]],[11,"try_from","","",230,[[["u"]],["result"]]],[11,"try_into","","",230,[[],["result"]]],[11,"borrow","","",230,[[["self"]],["t"]]],[11,"borrow_mut","","",230,[[["self"]],["t"]]],[11,"type_id","","",230,[[["self"]],["typeid"]]],[11,"span","","",231,[[["self"]],["span"]]],[11,"from","","",231,[[["t"]],["t"]]],[11,"into","","",231,[[],["u"]]],[11,"to_owned","","",231,[[["self"]],["t"]]],[11,"clone_into","","",231,[[["self"],["t"]]]],[11,"try_from","","",231,[[["u"]],["result"]]],[11,"try_into","","",231,[[],["result"]]],[11,"borrow","","",231,[[["self"]],["t"]]],[11,"borrow_mut","","",231,[[["self"]],["t"]]],[11,"type_id","","",231,[[["self"]],["typeid"]]],[11,"span","","",232,[[["self"]],["span"]]],[11,"from","","",232,[[["t"]],["t"]]],[11,"into","","",232,[[],["u"]]],[11,"to_owned","","",232,[[["self"]],["t"]]],[11,"clone_into","","",232,[[["self"],["t"]]]],[11,"try_from","","",232,[[["u"]],["result"]]],[11,"try_into","","",232,[[],["result"]]],[11,"borrow","","",232,[[["self"]],["t"]]],[11,"borrow_mut","","",232,[[["self"]],["t"]]],[11,"type_id","","",232,[[["self"]],["typeid"]]],[11,"span","","",18,[[["self"]],["span"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"span","","",233,[[["self"]],["span"]]],[11,"from","","",233,[[["t"]],["t"]]],[11,"into","","",233,[[],["u"]]],[11,"to_owned","","",233,[[["self"]],["t"]]],[11,"clone_into","","",233,[[["self"],["t"]]]],[11,"try_from","","",233,[[["u"]],["result"]]],[11,"try_into","","",233,[[],["result"]]],[11,"borrow","","",233,[[["self"]],["t"]]],[11,"borrow_mut","","",233,[[["self"]],["t"]]],[11,"type_id","","",233,[[["self"]],["typeid"]]],[11,"span","","",234,[[["self"]],["span"]]],[11,"from","","",234,[[["t"]],["t"]]],[11,"into","","",234,[[],["u"]]],[11,"to_owned","","",234,[[["self"]],["t"]]],[11,"clone_into","","",234,[[["self"],["t"]]]],[11,"try_from","","",234,[[["u"]],["result"]]],[11,"try_into","","",234,[[],["result"]]],[11,"borrow","","",234,[[["self"]],["t"]]],[11,"borrow_mut","","",234,[[["self"]],["t"]]],[11,"type_id","","",234,[[["self"]],["typeid"]]],[11,"span","","",235,[[["self"]],["span"]]],[11,"from","","",235,[[["t"]],["t"]]],[11,"into","","",235,[[],["u"]]],[11,"to_owned","","",235,[[["self"]],["t"]]],[11,"clone_into","","",235,[[["self"],["t"]]]],[11,"try_from","","",235,[[["u"]],["result"]]],[11,"try_into","","",235,[[],["result"]]],[11,"borrow","","",235,[[["self"]],["t"]]],[11,"borrow_mut","","",235,[[["self"]],["t"]]],[11,"type_id","","",235,[[["self"]],["typeid"]]],[11,"span","","",19,[[["self"]],["span"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"span","","",20,[[["self"]],["span"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"span","","",21,[[["self"]],["span"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"span","","",22,[[["self"]],["span"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"span","","",23,[[["self"]],["span"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"span","","",24,[[["self"]],["span"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"span","","",25,[[["self"]],["span"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"span","","",26,[[["self"]],["span"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"span","","",27,[[["self"]],["span"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"span","","",28,[[["self"]],["span"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"span","","",29,[[["self"]],["span"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"span","","",236,[[["self"]],["span"]]],[11,"from","","",236,[[["t"]],["t"]]],[11,"into","","",236,[[],["u"]]],[11,"to_owned","","",236,[[["self"]],["t"]]],[11,"clone_into","","",236,[[["self"],["t"]]]],[11,"try_from","","",236,[[["u"]],["result"]]],[11,"try_into","","",236,[[],["result"]]],[11,"borrow","","",236,[[["self"]],["t"]]],[11,"borrow_mut","","",236,[[["self"]],["t"]]],[11,"type_id","","",236,[[["self"]],["typeid"]]],[11,"span","","",237,[[["self"]],["span"]]],[11,"from","","",237,[[["t"]],["t"]]],[11,"into","","",237,[[],["u"]]],[11,"to_owned","","",237,[[["self"]],["t"]]],[11,"clone_into","","",237,[[["self"],["t"]]]],[11,"try_from","","",237,[[["u"]],["result"]]],[11,"try_into","","",237,[[],["result"]]],[11,"borrow","","",237,[[["self"]],["t"]]],[11,"borrow_mut","","",237,[[["self"]],["t"]]],[11,"type_id","","",237,[[["self"]],["typeid"]]],[11,"span","","",185,[[["self"]],["span"]]],[11,"from","","",185,[[["t"]],["t"]]],[11,"into","","",185,[[],["u"]]],[11,"to_owned","","",185,[[["self"]],["t"]]],[11,"clone_into","","",185,[[["self"],["t"]]]],[11,"try_from","","",185,[[["u"]],["result"]]],[11,"try_into","","",185,[[],["result"]]],[11,"borrow","","",185,[[["self"]],["t"]]],[11,"borrow_mut","","",185,[[["self"]],["t"]]],[11,"type_id","","",185,[[["self"]],["typeid"]]],[11,"peek","","",30,[[["cursor"]],["bool"]]],[11,"display","","",30,[[],["str"]]],[11,"span","","",30,[[["self"]],["span"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"to_string","","",30,[[["self"]],["string"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"peek","","",31,[[["cursor"]],["bool"]]],[11,"display","","",31,[[],["str"]]],[11,"span","","",31,[[["self"]],["span"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"peek","","",188,[[["cursor"]],["bool"]]],[11,"display","","",188,[[],["str"]]],[11,"span","","",188,[[["self"]],["span"]]],[11,"from","","",188,[[["t"]],["t"]]],[11,"into","","",188,[[],["u"]]],[11,"to_owned","","",188,[[["self"]],["t"]]],[11,"clone_into","","",188,[[["self"],["t"]]]],[11,"try_from","","",188,[[["u"]],["result"]]],[11,"try_into","","",188,[[],["result"]]],[11,"borrow","","",188,[[["self"]],["t"]]],[11,"borrow_mut","","",188,[[["self"]],["t"]]],[11,"type_id","","",188,[[["self"]],["typeid"]]],[11,"peek","","",187,[[["cursor"]],["bool"]]],[11,"display","","",187,[[],["str"]]],[11,"span","","",187,[[["self"]],["span"]]],[11,"from","","",187,[[["t"]],["t"]]],[11,"into","","",187,[[],["u"]]],[11,"to_owned","","",187,[[["self"]],["t"]]],[11,"clone_into","","",187,[[["self"],["t"]]]],[11,"try_from","","",187,[[["u"]],["result"]]],[11,"try_into","","",187,[[],["result"]]],[11,"borrow","","",187,[[["self"]],["t"]]],[11,"borrow_mut","","",187,[[["self"]],["t"]]],[11,"type_id","","",187,[[["self"]],["typeid"]]],[11,"peek","","",189,[[["cursor"]],["bool"]]],[11,"display","","",189,[[],["str"]]],[11,"span","","",189,[[["self"]],["span"]]],[11,"from","","",189,[[["t"]],["t"]]],[11,"into","","",189,[[],["u"]]],[11,"to_owned","","",189,[[["self"]],["t"]]],[11,"clone_into","","",189,[[["self"],["t"]]]],[11,"try_from","","",189,[[["u"]],["result"]]],[11,"try_into","","",189,[[],["result"]]],[11,"borrow","","",189,[[["self"]],["t"]]],[11,"borrow_mut","","",189,[[["self"]],["t"]]],[11,"type_id","","",189,[[["self"]],["typeid"]]],[11,"peek","","",191,[[["cursor"]],["bool"]]],[11,"display","","",191,[[],["str"]]],[11,"span","","",191,[[["self"]],["span"]]],[11,"from","","",191,[[["t"]],["t"]]],[11,"into","","",191,[[],["u"]]],[11,"to_owned","","",191,[[["self"]],["t"]]],[11,"clone_into","","",191,[[["self"],["t"]]]],[11,"to_string","","",191,[[["self"]],["string"]]],[11,"try_from","","",191,[[["u"]],["result"]]],[11,"try_into","","",191,[[],["result"]]],[11,"borrow","","",191,[[["self"]],["t"]]],[11,"borrow_mut","","",191,[[["self"]],["t"]]],[11,"type_id","","",191,[[["self"]],["typeid"]]],[11,"peek","","",190,[[["cursor"]],["bool"]]],[11,"display","","",190,[[],["str"]]],[11,"span","","",190,[[["self"]],["span"]]],[11,"from","","",190,[[["t"]],["t"]]],[11,"into","","",190,[[],["u"]]],[11,"to_owned","","",190,[[["self"]],["t"]]],[11,"clone_into","","",190,[[["self"],["t"]]]],[11,"to_string","","",190,[[["self"]],["string"]]],[11,"try_from","","",190,[[["u"]],["result"]]],[11,"try_into","","",190,[[],["result"]]],[11,"borrow","","",190,[[["self"]],["t"]]],[11,"borrow_mut","","",190,[[["self"]],["t"]]],[11,"type_id","","",190,[[["self"]],["typeid"]]],[11,"peek","","",186,[[["cursor"]],["bool"]]],[11,"display","","",186,[[],["str"]]],[11,"span","","",186,[[["self"]],["span"]]],[11,"from","","",186,[[["t"]],["t"]]],[11,"into","","",186,[[],["u"]]],[11,"to_owned","","",186,[[["self"]],["t"]]],[11,"clone_into","","",186,[[["self"],["t"]]]],[11,"try_from","","",186,[[["u"]],["result"]]],[11,"try_into","","",186,[[],["result"]]],[11,"borrow","","",186,[[["self"]],["t"]]],[11,"borrow_mut","","",186,[[["self"]],["t"]]],[11,"type_id","","",186,[[["self"]],["typeid"]]],[11,"span","","",32,[[["self"]],["span"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"to_owned","","",35,[[["self"]],["t"]]],[11,"clone_into","","",35,[[["self"],["t"]]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"span","","",36,[[["self"]],["span"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"span","","",37,[[["self"]],["span"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"span","","",38,[[["self"]],["span"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"span","","",39,[[["self"]],["span"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"span","","",40,[[["self"]],["span"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"span","","",41,[[["self"]],["span"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"span","","",42,[[["self"]],["span"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"span","","",43,[[["self"]],["span"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"to_owned","","",43,[[["self"]],["t"]]],[11,"clone_into","","",43,[[["self"],["t"]]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"span","","",44,[[["self"]],["span"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"span","","",45,[[["self"]],["span"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"span","","",46,[[["self"]],["span"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"span","","",47,[[["self"]],["span"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"span","","",48,[[["self"]],["span"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"span","","",49,[[["self"]],["span"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"span","","",50,[[["self"]],["span"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"span","","",51,[[["self"]],["span"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"span","","",52,[[["self"]],["span"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"span","","",53,[[["self"]],["span"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"span","","",54,[[["self"]],["span"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"span","","",55,[[["self"]],["span"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"span","","",56,[[["self"]],["span"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"span","","",57,[[["self"]],["span"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"span","","",58,[[["self"]],["span"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"span","","",59,[[["self"]],["span"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",204,[[["t"]],["t"]]],[11,"into","","",204,[[],["u"]]],[11,"into_iter","","",204,[[],["i"]]],[11,"to_owned","","",204,[[["self"]],["t"]]],[11,"clone_into","","",204,[[["self"],["t"]]]],[11,"to_string","","",204,[[["self"]],["string"]]],[11,"try_from","","",204,[[["u"]],["result"]]],[11,"try_into","","",204,[[],["result"]]],[11,"borrow","","",204,[[["self"]],["t"]]],[11,"borrow_mut","","",204,[[["self"]],["t"]]],[11,"type_id","","",204,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"span","","",62,[[["self"]],["span"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"span","","",63,[[["self"]],["span"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"span","","",64,[[["self"]],["span"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"into_iter","","",64,[[],["i"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"span","","",65,[[["self"]],["span"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_owned","","",65,[[["self"]],["t"]]],[11,"clone_into","","",65,[[["self"],["t"]]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"span","","",66,[[["self"]],["span"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"span","","",67,[[["self"]],["span"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"span","","",68,[[["self"]],["span"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"to_owned","","",68,[[["self"]],["t"]]],[11,"clone_into","","",68,[[["self"],["t"]]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"span","","",69,[[["self"]],["span"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"span","","",70,[[["self"]],["span"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"span","","",71,[[["self"]],["span"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"peek","","",72,[[["cursor"]],["bool"]]],[11,"display","","",72,[[],["str"]]],[11,"span","","",72,[[["self"]],["span"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"span","","",76,[[["self"]],["span"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"span","","",77,[[["self"]],["span"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"to_owned","","",77,[[["self"]],["t"]]],[11,"clone_into","","",77,[[["self"],["t"]]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"span","","",78,[[["self"]],["span"]]],[11,"from","","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"to_owned","","",78,[[["self"]],["t"]]],[11,"clone_into","","",78,[[["self"],["t"]]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"span","","",79,[[["self"]],["span"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"to_owned","","",79,[[["self"]],["t"]]],[11,"clone_into","","",79,[[["self"],["t"]]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"span","","",80,[[["self"]],["span"]]],[11,"from","","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"to_owned","","",80,[[["self"]],["t"]]],[11,"clone_into","","",80,[[["self"],["t"]]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"span","","",81,[[["self"]],["span"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,[[["self"],["t"]]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"peek","syn::token","",82,[[["cursor"]],["bool"]]],[11,"display","","",82,[[],["str"]]],[11,"span","","",82,[[["self"]],["span"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,[[["self"],["t"]]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"peek","","",83,[[["cursor"]],["bool"]]],[11,"display","","",83,[[],["str"]]],[11,"span","","",83,[[["self"]],["span"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,[[["self"],["t"]]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"peek","","",84,[[["cursor"]],["bool"]]],[11,"display","","",84,[[],["str"]]],[11,"span","","",84,[[["self"]],["span"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,[[["self"],["t"]]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"peek","","",85,[[["cursor"]],["bool"]]],[11,"display","","",85,[[],["str"]]],[11,"span","","",85,[[["self"]],["span"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,[[["self"],["t"]]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"peek","","",86,[[["cursor"]],["bool"]]],[11,"display","","",86,[[],["str"]]],[11,"span","","",86,[[["self"]],["span"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,[[["self"],["t"]]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"peek","","",87,[[["cursor"]],["bool"]]],[11,"display","","",87,[[],["str"]]],[11,"span","","",87,[[["self"]],["span"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,[[["self"],["t"]]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"peek","","",88,[[["cursor"]],["bool"]]],[11,"display","","",88,[[],["str"]]],[11,"span","","",88,[[["self"]],["span"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,[[["self"],["t"]]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"peek","","",89,[[["cursor"]],["bool"]]],[11,"display","","",89,[[],["str"]]],[11,"span","","",89,[[["self"]],["span"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,[[["self"],["t"]]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"peek","","",90,[[["cursor"]],["bool"]]],[11,"display","","",90,[[],["str"]]],[11,"span","","",90,[[["self"]],["span"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,[[["self"],["t"]]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"peek","","",91,[[["cursor"]],["bool"]]],[11,"display","","",91,[[],["str"]]],[11,"span","","",91,[[["self"]],["span"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,[[["self"],["t"]]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"peek","","",92,[[["cursor"]],["bool"]]],[11,"display","","",92,[[],["str"]]],[11,"span","","",92,[[["self"]],["span"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,[[["self"],["t"]]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"peek","","",93,[[["cursor"]],["bool"]]],[11,"display","","",93,[[],["str"]]],[11,"span","","",93,[[["self"]],["span"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,[[["self"],["t"]]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"peek","","",94,[[["cursor"]],["bool"]]],[11,"display","","",94,[[],["str"]]],[11,"span","","",94,[[["self"]],["span"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,[[["self"],["t"]]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"peek","","",95,[[["cursor"]],["bool"]]],[11,"display","","",95,[[],["str"]]],[11,"span","","",95,[[["self"]],["span"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,[[["self"],["t"]]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"peek","","",96,[[["cursor"]],["bool"]]],[11,"display","","",96,[[],["str"]]],[11,"span","","",96,[[["self"]],["span"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"to_owned","","",96,[[["self"]],["t"]]],[11,"clone_into","","",96,[[["self"],["t"]]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"peek","","",97,[[["cursor"]],["bool"]]],[11,"display","","",97,[[],["str"]]],[11,"span","","",97,[[["self"]],["span"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"to_owned","","",97,[[["self"]],["t"]]],[11,"clone_into","","",97,[[["self"],["t"]]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"peek","","",98,[[["cursor"]],["bool"]]],[11,"display","","",98,[[],["str"]]],[11,"span","","",98,[[["self"]],["span"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,[[["self"],["t"]]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"peek","","",99,[[["cursor"]],["bool"]]],[11,"display","","",99,[[],["str"]]],[11,"span","","",99,[[["self"]],["span"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,[[["self"],["t"]]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"peek","","",100,[[["cursor"]],["bool"]]],[11,"display","","",100,[[],["str"]]],[11,"span","","",100,[[["self"]],["span"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,[[["self"],["t"]]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"peek","","",101,[[["cursor"]],["bool"]]],[11,"display","","",101,[[],["str"]]],[11,"span","","",101,[[["self"]],["span"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,[[["self"],["t"]]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"peek","","",102,[[["cursor"]],["bool"]]],[11,"display","","",102,[[],["str"]]],[11,"span","","",102,[[["self"]],["span"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,[[["self"],["t"]]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"peek","","",103,[[["cursor"]],["bool"]]],[11,"display","","",103,[[],["str"]]],[11,"span","","",103,[[["self"]],["span"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"to_owned","","",103,[[["self"]],["t"]]],[11,"clone_into","","",103,[[["self"],["t"]]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"peek","","",104,[[["cursor"]],["bool"]]],[11,"display","","",104,[[],["str"]]],[11,"span","","",104,[[["self"]],["span"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"to_owned","","",104,[[["self"]],["t"]]],[11,"clone_into","","",104,[[["self"],["t"]]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"peek","","",105,[[["cursor"]],["bool"]]],[11,"display","","",105,[[],["str"]]],[11,"span","","",105,[[["self"]],["span"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,[[["self"],["t"]]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"peek","","",106,[[["cursor"]],["bool"]]],[11,"display","","",106,[[],["str"]]],[11,"span","","",106,[[["self"]],["span"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,[[["self"],["t"]]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"peek","","",107,[[["cursor"]],["bool"]]],[11,"display","","",107,[[],["str"]]],[11,"span","","",107,[[["self"]],["span"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,[[["self"],["t"]]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"peek","","",108,[[["cursor"]],["bool"]]],[11,"display","","",108,[[],["str"]]],[11,"span","","",108,[[["self"]],["span"]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,[[["self"],["t"]]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"peek","","",109,[[["cursor"]],["bool"]]],[11,"display","","",109,[[],["str"]]],[11,"span","","",109,[[["self"]],["span"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,[[["self"],["t"]]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"peek","","",110,[[["cursor"]],["bool"]]],[11,"display","","",110,[[],["str"]]],[11,"span","","",110,[[["self"]],["span"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,[[["self"],["t"]]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"peek","","",111,[[["cursor"]],["bool"]]],[11,"display","","",111,[[],["str"]]],[11,"span","","",111,[[["self"]],["span"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,[[["self"],["t"]]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"peek","","",112,[[["cursor"]],["bool"]]],[11,"display","","",112,[[],["str"]]],[11,"span","","",112,[[["self"]],["span"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,[[["self"],["t"]]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"peek","","",113,[[["cursor"]],["bool"]]],[11,"display","","",113,[[],["str"]]],[11,"span","","",113,[[["self"]],["span"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,[[["self"],["t"]]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"peek","","",114,[[["cursor"]],["bool"]]],[11,"display","","",114,[[],["str"]]],[11,"span","","",114,[[["self"]],["span"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,[[["self"],["t"]]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"peek","","",115,[[["cursor"]],["bool"]]],[11,"display","","",115,[[],["str"]]],[11,"span","","",115,[[["self"]],["span"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,[[["self"],["t"]]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"peek","","",116,[[["cursor"]],["bool"]]],[11,"display","","",116,[[],["str"]]],[11,"span","","",116,[[["self"]],["span"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,[[["self"],["t"]]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"peek","","",117,[[["cursor"]],["bool"]]],[11,"display","","",117,[[],["str"]]],[11,"span","","",117,[[["self"]],["span"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,[[["self"],["t"]]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"peek","","",118,[[["cursor"]],["bool"]]],[11,"display","","",118,[[],["str"]]],[11,"span","","",118,[[["self"]],["span"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,[[["self"],["t"]]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"peek","","",119,[[["cursor"]],["bool"]]],[11,"display","","",119,[[],["str"]]],[11,"span","","",119,[[["self"]],["span"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,[[["self"],["t"]]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"peek","","",120,[[["cursor"]],["bool"]]],[11,"display","","",120,[[],["str"]]],[11,"span","","",120,[[["self"]],["span"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,[[["self"],["t"]]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"peek","","",121,[[["cursor"]],["bool"]]],[11,"display","","",121,[[],["str"]]],[11,"span","","",121,[[["self"]],["span"]]],[11,"from","","",121,[[["t"]],["t"]]],[11,"into","","",121,[[],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,[[["self"],["t"]]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"peek","","",122,[[["cursor"]],["bool"]]],[11,"display","","",122,[[],["str"]]],[11,"span","","",122,[[["self"]],["span"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,[[["self"],["t"]]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"peek","","",123,[[["cursor"]],["bool"]]],[11,"display","","",123,[[],["str"]]],[11,"span","","",123,[[["self"]],["span"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,[[["self"],["t"]]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"peek","","",124,[[["cursor"]],["bool"]]],[11,"display","","",124,[[],["str"]]],[11,"span","","",124,[[["self"]],["span"]]],[11,"from","","",124,[[["t"]],["t"]]],[11,"into","","",124,[[],["u"]]],[11,"to_owned","","",124,[[["self"]],["t"]]],[11,"clone_into","","",124,[[["self"],["t"]]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"peek","","",125,[[["cursor"]],["bool"]]],[11,"display","","",125,[[],["str"]]],[11,"span","","",125,[[["self"]],["span"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[],["u"]]],[11,"to_owned","","",125,[[["self"]],["t"]]],[11,"clone_into","","",125,[[["self"],["t"]]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"peek","","",126,[[["cursor"]],["bool"]]],[11,"display","","",126,[[],["str"]]],[11,"span","","",126,[[["self"]],["span"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[],["u"]]],[11,"to_owned","","",126,[[["self"]],["t"]]],[11,"clone_into","","",126,[[["self"],["t"]]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"peek","","",127,[[["cursor"]],["bool"]]],[11,"display","","",127,[[],["str"]]],[11,"span","","",127,[[["self"]],["span"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[],["u"]]],[11,"to_owned","","",127,[[["self"]],["t"]]],[11,"clone_into","","",127,[[["self"],["t"]]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"peek","","",128,[[["cursor"]],["bool"]]],[11,"display","","",128,[[],["str"]]],[11,"span","","",128,[[["self"]],["span"]]],[11,"from","","",128,[[["t"]],["t"]]],[11,"into","","",128,[[],["u"]]],[11,"to_owned","","",128,[[["self"]],["t"]]],[11,"clone_into","","",128,[[["self"],["t"]]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"peek","","",129,[[["cursor"]],["bool"]]],[11,"display","","",129,[[],["str"]]],[11,"span","","",129,[[["self"]],["span"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[],["u"]]],[11,"to_owned","","",129,[[["self"]],["t"]]],[11,"clone_into","","",129,[[["self"],["t"]]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"peek","","",130,[[["cursor"]],["bool"]]],[11,"display","","",130,[[],["str"]]],[11,"span","","",130,[[["self"]],["span"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[],["u"]]],[11,"to_owned","","",130,[[["self"]],["t"]]],[11,"clone_into","","",130,[[["self"],["t"]]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"peek","","",131,[[["cursor"]],["bool"]]],[11,"display","","",131,[[],["str"]]],[11,"span","","",131,[[["self"]],["span"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[],["u"]]],[11,"to_owned","","",131,[[["self"]],["t"]]],[11,"clone_into","","",131,[[["self"],["t"]]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"peek","","",132,[[["cursor"]],["bool"]]],[11,"display","","",132,[[],["str"]]],[11,"span","","",132,[[["self"]],["span"]]],[11,"from","","",132,[[["t"]],["t"]]],[11,"into","","",132,[[],["u"]]],[11,"to_owned","","",132,[[["self"]],["t"]]],[11,"clone_into","","",132,[[["self"],["t"]]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"peek","","",133,[[["cursor"]],["bool"]]],[11,"display","","",133,[[],["str"]]],[11,"span","","",133,[[["self"]],["span"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[],["u"]]],[11,"to_owned","","",133,[[["self"]],["t"]]],[11,"clone_into","","",133,[[["self"],["t"]]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"peek","","",134,[[["cursor"]],["bool"]]],[11,"display","","",134,[[],["str"]]],[11,"span","","",134,[[["self"]],["span"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[],["u"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,[[["self"],["t"]]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"peek","","",135,[[["cursor"]],["bool"]]],[11,"display","","",135,[[],["str"]]],[11,"span","","",135,[[["self"]],["span"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[],["u"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,[[["self"],["t"]]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"peek","","",136,[[["cursor"]],["bool"]]],[11,"display","","",136,[[],["str"]]],[11,"span","","",136,[[["self"]],["span"]]],[11,"from","","",136,[[["t"]],["t"]]],[11,"into","","",136,[[],["u"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,[[["self"],["t"]]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"peek","","",137,[[["cursor"]],["bool"]]],[11,"display","","",137,[[],["str"]]],[11,"span","","",137,[[["self"]],["span"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[],["u"]]],[11,"to_owned","","",137,[[["self"]],["t"]]],[11,"clone_into","","",137,[[["self"],["t"]]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"peek","","",138,[[["cursor"]],["bool"]]],[11,"display","","",138,[[],["str"]]],[11,"span","","",138,[[["self"]],["span"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[],["u"]]],[11,"to_owned","","",138,[[["self"]],["t"]]],[11,"clone_into","","",138,[[["self"],["t"]]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"peek","","",139,[[["cursor"]],["bool"]]],[11,"display","","",139,[[],["str"]]],[11,"span","","",139,[[["self"]],["span"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[],["u"]]],[11,"to_owned","","",139,[[["self"]],["t"]]],[11,"clone_into","","",139,[[["self"],["t"]]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"peek","","",140,[[["cursor"]],["bool"]]],[11,"display","","",140,[[],["str"]]],[11,"span","","",140,[[["self"]],["span"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[],["u"]]],[11,"to_owned","","",140,[[["self"]],["t"]]],[11,"clone_into","","",140,[[["self"],["t"]]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"peek","","",141,[[["cursor"]],["bool"]]],[11,"display","","",141,[[],["str"]]],[11,"span","","",141,[[["self"]],["span"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[],["u"]]],[11,"to_owned","","",141,[[["self"]],["t"]]],[11,"clone_into","","",141,[[["self"],["t"]]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"peek","","",142,[[["cursor"]],["bool"]]],[11,"display","","",142,[[],["str"]]],[11,"span","","",142,[[["self"]],["span"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[],["u"]]],[11,"to_owned","","",142,[[["self"]],["t"]]],[11,"clone_into","","",142,[[["self"],["t"]]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"peek","","",143,[[["cursor"]],["bool"]]],[11,"display","","",143,[[],["str"]]],[11,"span","","",143,[[["self"]],["span"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[],["u"]]],[11,"to_owned","","",143,[[["self"]],["t"]]],[11,"clone_into","","",143,[[["self"],["t"]]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"peek","","",144,[[["cursor"]],["bool"]]],[11,"display","","",144,[[],["str"]]],[11,"span","","",144,[[["self"]],["span"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[],["u"]]],[11,"to_owned","","",144,[[["self"]],["t"]]],[11,"clone_into","","",144,[[["self"],["t"]]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"peek","","",145,[[["cursor"]],["bool"]]],[11,"display","","",145,[[],["str"]]],[11,"span","","",145,[[["self"]],["span"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[],["u"]]],[11,"to_owned","","",145,[[["self"]],["t"]]],[11,"clone_into","","",145,[[["self"],["t"]]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"peek","","",146,[[["cursor"]],["bool"]]],[11,"display","","",146,[[],["str"]]],[11,"span","","",146,[[["self"]],["span"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[],["u"]]],[11,"to_owned","","",146,[[["self"]],["t"]]],[11,"clone_into","","",146,[[["self"],["t"]]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"peek","","",147,[[["cursor"]],["bool"]]],[11,"display","","",147,[[],["str"]]],[11,"span","","",147,[[["self"]],["span"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[],["u"]]],[11,"to_owned","","",147,[[["self"]],["t"]]],[11,"clone_into","","",147,[[["self"],["t"]]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"peek","","",148,[[["cursor"]],["bool"]]],[11,"display","","",148,[[],["str"]]],[11,"span","","",148,[[["self"]],["span"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[],["u"]]],[11,"to_owned","","",148,[[["self"]],["t"]]],[11,"clone_into","","",148,[[["self"],["t"]]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"peek","","",149,[[["cursor"]],["bool"]]],[11,"display","","",149,[[],["str"]]],[11,"span","","",149,[[["self"]],["span"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[],["u"]]],[11,"to_owned","","",149,[[["self"]],["t"]]],[11,"clone_into","","",149,[[["self"],["t"]]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"peek","","",150,[[["cursor"]],["bool"]]],[11,"display","","",150,[[],["str"]]],[11,"span","","",150,[[["self"]],["span"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[],["u"]]],[11,"to_owned","","",150,[[["self"]],["t"]]],[11,"clone_into","","",150,[[["self"],["t"]]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"peek","","",151,[[["cursor"]],["bool"]]],[11,"display","","",151,[[],["str"]]],[11,"span","","",151,[[["self"]],["span"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[],["u"]]],[11,"to_owned","","",151,[[["self"]],["t"]]],[11,"clone_into","","",151,[[["self"],["t"]]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"try_into","","",151,[[],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"type_id","","",151,[[["self"]],["typeid"]]],[11,"peek","","",152,[[["cursor"]],["bool"]]],[11,"display","","",152,[[],["str"]]],[11,"span","","",152,[[["self"]],["span"]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"into","","",152,[[],["u"]]],[11,"to_owned","","",152,[[["self"]],["t"]]],[11,"clone_into","","",152,[[["self"],["t"]]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"peek","","",153,[[["cursor"]],["bool"]]],[11,"display","","",153,[[],["str"]]],[11,"span","","",153,[[["self"]],["span"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[],["u"]]],[11,"to_owned","","",153,[[["self"]],["t"]]],[11,"clone_into","","",153,[[["self"],["t"]]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"peek","","",154,[[["cursor"]],["bool"]]],[11,"display","","",154,[[],["str"]]],[11,"span","","",154,[[["self"]],["span"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[],["u"]]],[11,"to_owned","","",154,[[["self"]],["t"]]],[11,"clone_into","","",154,[[["self"],["t"]]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"peek","","",155,[[["cursor"]],["bool"]]],[11,"display","","",155,[[],["str"]]],[11,"span","","",155,[[["self"]],["span"]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"into","","",155,[[],["u"]]],[11,"to_owned","","",155,[[["self"]],["t"]]],[11,"clone_into","","",155,[[["self"],["t"]]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"try_into","","",155,[[],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"type_id","","",155,[[["self"]],["typeid"]]],[11,"peek","","",156,[[["cursor"]],["bool"]]],[11,"display","","",156,[[],["str"]]],[11,"span","","",156,[[["self"]],["span"]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"into","","",156,[[],["u"]]],[11,"to_owned","","",156,[[["self"]],["t"]]],[11,"clone_into","","",156,[[["self"],["t"]]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"try_into","","",156,[[],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"type_id","","",156,[[["self"]],["typeid"]]],[11,"peek","","",157,[[["cursor"]],["bool"]]],[11,"display","","",157,[[],["str"]]],[11,"span","","",157,[[["self"]],["span"]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"into","","",157,[[],["u"]]],[11,"to_owned","","",157,[[["self"]],["t"]]],[11,"clone_into","","",157,[[["self"],["t"]]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"try_into","","",157,[[],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"type_id","","",157,[[["self"]],["typeid"]]],[11,"peek","","",158,[[["cursor"]],["bool"]]],[11,"display","","",158,[[],["str"]]],[11,"span","","",158,[[["self"]],["span"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[],["u"]]],[11,"to_owned","","",158,[[["self"]],["t"]]],[11,"clone_into","","",158,[[["self"],["t"]]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"try_into","","",158,[[],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"type_id","","",158,[[["self"]],["typeid"]]],[11,"peek","","",159,[[["cursor"]],["bool"]]],[11,"display","","",159,[[],["str"]]],[11,"span","","",159,[[["self"]],["span"]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"into","","",159,[[],["u"]]],[11,"to_owned","","",159,[[["self"]],["t"]]],[11,"clone_into","","",159,[[["self"],["t"]]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"try_into","","",159,[[],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"type_id","","",159,[[["self"]],["typeid"]]],[11,"peek","","",160,[[["cursor"]],["bool"]]],[11,"display","","",160,[[],["str"]]],[11,"span","","",160,[[["self"]],["span"]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[],["u"]]],[11,"to_owned","","",160,[[["self"]],["t"]]],[11,"clone_into","","",160,[[["self"],["t"]]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"try_into","","",160,[[],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"type_id","","",160,[[["self"]],["typeid"]]],[11,"peek","","",161,[[["cursor"]],["bool"]]],[11,"display","","",161,[[],["str"]]],[11,"span","","",161,[[["self"]],["span"]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"into","","",161,[[],["u"]]],[11,"to_owned","","",161,[[["self"]],["t"]]],[11,"clone_into","","",161,[[["self"],["t"]]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"try_into","","",161,[[],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"type_id","","",161,[[["self"]],["typeid"]]],[11,"peek","","",162,[[["cursor"]],["bool"]]],[11,"display","","",162,[[],["str"]]],[11,"span","","",162,[[["self"]],["span"]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[],["u"]]],[11,"to_owned","","",162,[[["self"]],["t"]]],[11,"clone_into","","",162,[[["self"],["t"]]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"try_into","","",162,[[],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"type_id","","",162,[[["self"]],["typeid"]]],[11,"peek","","",163,[[["cursor"]],["bool"]]],[11,"display","","",163,[[],["str"]]],[11,"span","","",163,[[["self"]],["span"]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"into","","",163,[[],["u"]]],[11,"to_owned","","",163,[[["self"]],["t"]]],[11,"clone_into","","",163,[[["self"],["t"]]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"try_into","","",163,[[],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"type_id","","",163,[[["self"]],["typeid"]]],[11,"peek","","",164,[[["cursor"]],["bool"]]],[11,"display","","",164,[[],["str"]]],[11,"span","","",164,[[["self"]],["span"]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"into","","",164,[[],["u"]]],[11,"to_owned","","",164,[[["self"]],["t"]]],[11,"clone_into","","",164,[[["self"],["t"]]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"try_into","","",164,[[],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"type_id","","",164,[[["self"]],["typeid"]]],[11,"peek","","",165,[[["cursor"]],["bool"]]],[11,"display","","",165,[[],["str"]]],[11,"span","","",165,[[["self"]],["span"]]],[11,"from","","",165,[[["t"]],["t"]]],[11,"into","","",165,[[],["u"]]],[11,"to_owned","","",165,[[["self"]],["t"]]],[11,"clone_into","","",165,[[["self"],["t"]]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"try_into","","",165,[[],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"type_id","","",165,[[["self"]],["typeid"]]],[11,"peek","","",166,[[["cursor"]],["bool"]]],[11,"display","","",166,[[],["str"]]],[11,"span","","",166,[[["self"]],["span"]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"into","","",166,[[],["u"]]],[11,"to_owned","","",166,[[["self"]],["t"]]],[11,"clone_into","","",166,[[["self"],["t"]]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"try_into","","",166,[[],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"type_id","","",166,[[["self"]],["typeid"]]],[11,"peek","","",167,[[["cursor"]],["bool"]]],[11,"display","","",167,[[],["str"]]],[11,"span","","",167,[[["self"]],["span"]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"into","","",167,[[],["u"]]],[11,"to_owned","","",167,[[["self"]],["t"]]],[11,"clone_into","","",167,[[["self"],["t"]]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"try_into","","",167,[[],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"type_id","","",167,[[["self"]],["typeid"]]],[11,"peek","","",168,[[["cursor"]],["bool"]]],[11,"display","","",168,[[],["str"]]],[11,"span","","",168,[[["self"]],["span"]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"into","","",168,[[],["u"]]],[11,"to_owned","","",168,[[["self"]],["t"]]],[11,"clone_into","","",168,[[["self"],["t"]]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"try_into","","",168,[[],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"type_id","","",168,[[["self"]],["typeid"]]],[11,"peek","","",169,[[["cursor"]],["bool"]]],[11,"display","","",169,[[],["str"]]],[11,"span","","",169,[[["self"]],["span"]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"into","","",169,[[],["u"]]],[11,"to_owned","","",169,[[["self"]],["t"]]],[11,"clone_into","","",169,[[["self"],["t"]]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"try_into","","",169,[[],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"type_id","","",169,[[["self"]],["typeid"]]],[11,"peek","","",170,[[["cursor"]],["bool"]]],[11,"display","","",170,[[],["str"]]],[11,"span","","",170,[[["self"]],["span"]]],[11,"from","","",170,[[["t"]],["t"]]],[11,"into","","",170,[[],["u"]]],[11,"to_owned","","",170,[[["self"]],["t"]]],[11,"clone_into","","",170,[[["self"],["t"]]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"try_into","","",170,[[],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"type_id","","",170,[[["self"]],["typeid"]]],[11,"peek","","",171,[[["cursor"]],["bool"]]],[11,"display","","",171,[[],["str"]]],[11,"span","","",171,[[["self"]],["span"]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"into","","",171,[[],["u"]]],[11,"to_owned","","",171,[[["self"]],["t"]]],[11,"clone_into","","",171,[[["self"],["t"]]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"try_into","","",171,[[],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"type_id","","",171,[[["self"]],["typeid"]]],[11,"peek","","",172,[[["cursor"]],["bool"]]],[11,"display","","",172,[[],["str"]]],[11,"span","","",172,[[["self"]],["span"]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"into","","",172,[[],["u"]]],[11,"to_owned","","",172,[[["self"]],["t"]]],[11,"clone_into","","",172,[[["self"],["t"]]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"try_into","","",172,[[],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"type_id","","",172,[[["self"]],["typeid"]]],[11,"peek","","",173,[[["cursor"]],["bool"]]],[11,"display","","",173,[[],["str"]]],[11,"span","","",173,[[["self"]],["span"]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"into","","",173,[[],["u"]]],[11,"to_owned","","",173,[[["self"]],["t"]]],[11,"clone_into","","",173,[[["self"],["t"]]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"try_into","","",173,[[],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"type_id","","",173,[[["self"]],["typeid"]]],[11,"peek","","",174,[[["cursor"]],["bool"]]],[11,"display","","",174,[[],["str"]]],[11,"span","","",174,[[["self"]],["span"]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"into","","",174,[[],["u"]]],[11,"to_owned","","",174,[[["self"]],["t"]]],[11,"clone_into","","",174,[[["self"],["t"]]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"try_into","","",174,[[],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"type_id","","",174,[[["self"]],["typeid"]]],[11,"peek","","",175,[[["cursor"]],["bool"]]],[11,"display","","",175,[[],["str"]]],[11,"span","","",175,[[["self"]],["span"]]],[11,"from","","",175,[[["t"]],["t"]]],[11,"into","","",175,[[],["u"]]],[11,"to_owned","","",175,[[["self"]],["t"]]],[11,"clone_into","","",175,[[["self"],["t"]]]],[11,"try_from","","",175,[[["u"]],["result"]]],[11,"try_into","","",175,[[],["result"]]],[11,"borrow","","",175,[[["self"]],["t"]]],[11,"borrow_mut","","",175,[[["self"]],["t"]]],[11,"type_id","","",175,[[["self"]],["typeid"]]],[11,"peek","","",176,[[["cursor"]],["bool"]]],[11,"display","","",176,[[],["str"]]],[11,"span","","",176,[[["self"]],["span"]]],[11,"from","","",176,[[["t"]],["t"]]],[11,"into","","",176,[[],["u"]]],[11,"to_owned","","",176,[[["self"]],["t"]]],[11,"clone_into","","",176,[[["self"],["t"]]]],[11,"try_from","","",176,[[["u"]],["result"]]],[11,"try_into","","",176,[[],["result"]]],[11,"borrow","","",176,[[["self"]],["t"]]],[11,"borrow_mut","","",176,[[["self"]],["t"]]],[11,"type_id","","",176,[[["self"]],["typeid"]]],[11,"peek","","",177,[[["cursor"]],["bool"]]],[11,"display","","",177,[[],["str"]]],[11,"span","","",177,[[["self"]],["span"]]],[11,"from","","",177,[[["t"]],["t"]]],[11,"into","","",177,[[],["u"]]],[11,"to_owned","","",177,[[["self"]],["t"]]],[11,"clone_into","","",177,[[["self"],["t"]]]],[11,"try_from","","",177,[[["u"]],["result"]]],[11,"try_into","","",177,[[],["result"]]],[11,"borrow","","",177,[[["self"]],["t"]]],[11,"borrow_mut","","",177,[[["self"]],["t"]]],[11,"type_id","","",177,[[["self"]],["typeid"]]],[11,"peek","","",178,[[["cursor"]],["bool"]]],[11,"display","","",178,[[],["str"]]],[11,"span","","",178,[[["self"]],["span"]]],[11,"from","","",178,[[["t"]],["t"]]],[11,"into","","",178,[[],["u"]]],[11,"to_owned","","",178,[[["self"]],["t"]]],[11,"clone_into","","",178,[[["self"],["t"]]]],[11,"try_from","","",178,[[["u"]],["result"]]],[11,"try_into","","",178,[[],["result"]]],[11,"borrow","","",178,[[["self"]],["t"]]],[11,"borrow_mut","","",178,[[["self"]],["t"]]],[11,"type_id","","",178,[[["self"]],["typeid"]]],[11,"peek","","",179,[[["cursor"]],["bool"]]],[11,"display","","",179,[[],["str"]]],[11,"span","","",179,[[["self"]],["span"]]],[11,"from","","",179,[[["t"]],["t"]]],[11,"into","","",179,[[],["u"]]],[11,"to_owned","","",179,[[["self"]],["t"]]],[11,"clone_into","","",179,[[["self"],["t"]]]],[11,"try_from","","",179,[[["u"]],["result"]]],[11,"try_into","","",179,[[],["result"]]],[11,"borrow","","",179,[[["self"]],["t"]]],[11,"borrow_mut","","",179,[[["self"]],["t"]]],[11,"type_id","","",179,[[["self"]],["typeid"]]],[11,"peek","","",180,[[["cursor"]],["bool"]]],[11,"display","","",180,[[],["str"]]],[11,"span","","",180,[[["self"]],["span"]]],[11,"from","","",180,[[["t"]],["t"]]],[11,"into","","",180,[[],["u"]]],[11,"to_owned","","",180,[[["self"]],["t"]]],[11,"clone_into","","",180,[[["self"],["t"]]]],[11,"try_from","","",180,[[["u"]],["result"]]],[11,"try_into","","",180,[[],["result"]]],[11,"borrow","","",180,[[["self"]],["t"]]],[11,"borrow_mut","","",180,[[["self"]],["t"]]],[11,"type_id","","",180,[[["self"]],["typeid"]]],[11,"peek","","",181,[[["cursor"]],["bool"]]],[11,"display","","",181,[[],["str"]]],[11,"from","","",181,[[["t"]],["t"]]],[11,"into","","",181,[[],["u"]]],[11,"to_owned","","",181,[[["self"]],["t"]]],[11,"clone_into","","",181,[[["self"],["t"]]]],[11,"try_from","","",181,[[["u"]],["result"]]],[11,"try_into","","",181,[[],["result"]]],[11,"borrow","","",181,[[["self"]],["t"]]],[11,"borrow_mut","","",181,[[["self"]],["t"]]],[11,"type_id","","",181,[[["self"]],["typeid"]]],[11,"peek","","",182,[[["cursor"]],["bool"]]],[11,"display","","",182,[[],["str"]]],[11,"from","","",182,[[["t"]],["t"]]],[11,"into","","",182,[[],["u"]]],[11,"to_owned","","",182,[[["self"]],["t"]]],[11,"clone_into","","",182,[[["self"],["t"]]]],[11,"try_from","","",182,[[["u"]],["result"]]],[11,"try_into","","",182,[[],["result"]]],[11,"borrow","","",182,[[["self"]],["t"]]],[11,"borrow_mut","","",182,[[["self"]],["t"]]],[11,"type_id","","",182,[[["self"]],["typeid"]]],[11,"peek","","",183,[[["cursor"]],["bool"]]],[11,"display","","",183,[[],["str"]]],[11,"from","","",183,[[["t"]],["t"]]],[11,"into","","",183,[[],["u"]]],[11,"to_owned","","",183,[[["self"]],["t"]]],[11,"clone_into","","",183,[[["self"],["t"]]]],[11,"try_from","","",183,[[["u"]],["result"]]],[11,"try_into","","",183,[[],["result"]]],[11,"borrow","","",183,[[["self"]],["t"]]],[11,"borrow_mut","","",183,[[["self"]],["t"]]],[11,"type_id","","",183,[[["self"]],["typeid"]]],[11,"peek","","",184,[[["cursor"]],["bool"]]],[11,"display","","",184,[[],["str"]]],[11,"from","","",184,[[["t"]],["t"]]],[11,"into","","",184,[[],["u"]]],[11,"to_owned","","",184,[[["self"]],["t"]]],[11,"clone_into","","",184,[[["self"],["t"]]]],[11,"try_from","","",184,[[["u"]],["result"]]],[11,"try_into","","",184,[[],["result"]]],[11,"borrow","","",184,[[["self"]],["t"]]],[11,"borrow_mut","","",184,[[["self"]],["t"]]],[11,"type_id","","",184,[[["self"]],["typeid"]]],[11,"from","syn::buffer","",192,[[["t"]],["t"]]],[11,"into","","",192,[[],["u"]]],[11,"try_from","","",192,[[["u"]],["result"]]],[11,"try_into","","",192,[[],["result"]]],[11,"borrow","","",192,[[["self"]],["t"]]],[11,"borrow_mut","","",192,[[["self"]],["t"]]],[11,"type_id","","",192,[[["self"]],["typeid"]]],[11,"from","","",193,[[["t"]],["t"]]],[11,"into","","",193,[[],["u"]]],[11,"to_owned","","",193,[[["self"]],["t"]]],[11,"clone_into","","",193,[[["self"],["t"]]]],[11,"try_from","","",193,[[["u"]],["result"]]],[11,"try_into","","",193,[[],["result"]]],[11,"borrow","","",193,[[["self"]],["t"]]],[11,"borrow_mut","","",193,[[["self"]],["t"]]],[11,"type_id","","",193,[[["self"]],["typeid"]]],[11,"span","syn::punctuated","",196,[[["self"]],["span"]]],[11,"from","","",196,[[["t"]],["t"]]],[11,"into","","",196,[[],["u"]]],[11,"into_iter","","",196,[[],["i"]]],[11,"to_owned","","",196,[[["self"]],["t"]]],[11,"clone_into","","",196,[[["self"],["t"]]]],[11,"try_from","","",196,[[["u"]],["result"]]],[11,"try_into","","",196,[[],["result"]]],[11,"borrow","","",196,[[["self"]],["t"]]],[11,"borrow_mut","","",196,[[["self"]],["t"]]],[11,"type_id","","",196,[[["self"]],["typeid"]]],[11,"from","","",238,[[["t"]],["t"]]],[11,"into","","",238,[[],["u"]]],[11,"into_iter","","",238,[[],["i"]]],[11,"to_owned","","",238,[[["self"]],["t"]]],[11,"clone_into","","",238,[[["self"],["t"]]]],[11,"try_from","","",238,[[["u"]],["result"]]],[11,"try_into","","",238,[[],["result"]]],[11,"borrow","","",238,[[["self"]],["t"]]],[11,"borrow_mut","","",238,[[["self"]],["t"]]],[11,"type_id","","",238,[[["self"]],["typeid"]]],[11,"from","","",239,[[["t"]],["t"]]],[11,"into","","",239,[[],["u"]]],[11,"into_iter","","",239,[[],["i"]]],[11,"try_from","","",239,[[["u"]],["result"]]],[11,"try_into","","",239,[[],["result"]]],[11,"borrow","","",239,[[["self"]],["t"]]],[11,"borrow_mut","","",239,[[["self"]],["t"]]],[11,"type_id","","",239,[[["self"]],["typeid"]]],[11,"from","","",240,[[["t"]],["t"]]],[11,"into","","",240,[[],["u"]]],[11,"into_iter","","",240,[[],["i"]]],[11,"to_owned","","",240,[[["self"]],["t"]]],[11,"clone_into","","",240,[[["self"],["t"]]]],[11,"try_from","","",240,[[["u"]],["result"]]],[11,"try_into","","",240,[[],["result"]]],[11,"borrow","","",240,[[["self"]],["t"]]],[11,"borrow_mut","","",240,[[["self"]],["t"]]],[11,"type_id","","",240,[[["self"]],["typeid"]]],[11,"from","","",241,[[["t"]],["t"]]],[11,"into","","",241,[[],["u"]]],[11,"into_iter","","",241,[[],["i"]]],[11,"to_owned","","",241,[[["self"]],["t"]]],[11,"clone_into","","",241,[[["self"],["t"]]]],[11,"try_from","","",241,[[["u"]],["result"]]],[11,"try_into","","",241,[[],["result"]]],[11,"borrow","","",241,[[["self"]],["t"]]],[11,"borrow_mut","","",241,[[["self"]],["t"]]],[11,"type_id","","",241,[[["self"]],["typeid"]]],[11,"from","","",242,[[["t"]],["t"]]],[11,"into","","",242,[[],["u"]]],[11,"into_iter","","",242,[[],["i"]]],[11,"to_owned","","",242,[[["self"]],["t"]]],[11,"clone_into","","",242,[[["self"],["t"]]]],[11,"try_from","","",242,[[["u"]],["result"]]],[11,"try_into","","",242,[[],["result"]]],[11,"borrow","","",242,[[["self"]],["t"]]],[11,"borrow_mut","","",242,[[["self"]],["t"]]],[11,"type_id","","",242,[[["self"]],["typeid"]]],[11,"from","","",243,[[["t"]],["t"]]],[11,"into","","",243,[[],["u"]]],[11,"into_iter","","",243,[[],["i"]]],[11,"try_from","","",243,[[["u"]],["result"]]],[11,"try_into","","",243,[[],["result"]]],[11,"borrow","","",243,[[["self"]],["t"]]],[11,"borrow_mut","","",243,[[["self"]],["t"]]],[11,"type_id","","",243,[[["self"]],["typeid"]]],[11,"span","","",195,[[["self"]],["span"]]],[11,"from","","",195,[[["t"]],["t"]]],[11,"into","","",195,[[],["u"]]],[11,"to_owned","","",195,[[["self"]],["t"]]],[11,"clone_into","","",195,[[["self"],["t"]]]],[11,"try_from","","",195,[[["u"]],["result"]]],[11,"try_into","","",195,[[],["result"]]],[11,"borrow","","",195,[[["self"]],["t"]]],[11,"borrow_mut","","",195,[[["self"]],["t"]]],[11,"type_id","","",195,[[["self"]],["typeid"]]],[11,"from","syn::parse","",244,[[["t"]],["t"]]],[11,"into","","",244,[[],["u"]]],[11,"try_from","","",244,[[["u"]],["result"]]],[11,"try_into","","",244,[[],["result"]]],[11,"borrow","","",244,[[["self"]],["t"]]],[11,"borrow_mut","","",244,[[["self"]],["t"]]],[11,"type_id","","",244,[[["self"]],["typeid"]]],[11,"from","","",203,[[["t"]],["t"]]],[11,"into","","",203,[[],["u"]]],[11,"to_string","","",203,[[["self"]],["string"]]],[11,"try_from","","",203,[[["u"]],["result"]]],[11,"try_into","","",203,[[],["result"]]],[11,"borrow","","",203,[[["self"]],["t"]]],[11,"borrow_mut","","",203,[[["self"]],["t"]]],[11,"type_id","","",203,[[["self"]],["typeid"]]],[11,"from","","",202,[[["t"]],["t"]]],[11,"into","","",202,[[],["u"]]],[11,"to_owned","","",202,[[["self"]],["t"]]],[11,"clone_into","","",202,[[["self"],["t"]]]],[11,"try_from","","",202,[[["u"]],["result"]]],[11,"try_into","","",202,[[],["result"]]],[11,"borrow","","",202,[[["self"]],["t"]]],[11,"borrow_mut","","",202,[[["self"]],["t"]]],[11,"type_id","","",202,[[["self"]],["typeid"]]],[11,"from","","",245,[[["t"]],["t"]]],[11,"into","","",245,[[],["u"]]],[11,"try_from","","",245,[[["u"]],["result"]]],[11,"try_into","","",245,[[],["result"]]],[11,"borrow","","",245,[[["self"]],["t"]]],[11,"borrow_mut","","",245,[[["self"]],["t"]]],[11,"type_id","","",245,[[["self"]],["typeid"]]],[11,"eq","syn","",205,[[["t"],["self"]],["bool"]]],[11,"eq","","",205,[[["self"],["ident"]],["bool"]]],[11,"cmp","","",205,[[["self"],["ident"]],["ordering"]]],[11,"hash","","",205,[[["self"],["h"]]]],[11,"fmt","","",205,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"clone","","",205,[[["self"]],["ident"]]],[11,"fmt","","",205,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"partial_cmp","","",205,[[["self"],["ident"]],[["option",["ordering"]],["ordering"]]]],[11,"to_tokens","","",205,[[["self"],["tokenstream"]]]],[11,"span","","",205,[[["self"]],[["option",["span"]],["span"]]]],[11,"fmt","","",205,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"peek","","",30,[[["cursor"]],["bool"]]],[11,"display","","",30,[[],["str"]]],[11,"peek","","",72,[[["cursor"]],["bool"]]],[11,"display","","",72,[[],["str"]]],[11,"peek","","",186,[[["cursor"]],["bool"]]],[11,"display","","",186,[[],["str"]]],[11,"peek","","",187,[[["cursor"]],["bool"]]],[11,"display","","",187,[[],["str"]]],[11,"peek","","",188,[[["cursor"]],["bool"]]],[11,"display","","",188,[[],["str"]]],[11,"peek","","",189,[[["cursor"]],["bool"]]],[11,"display","","",189,[[],["str"]]],[11,"peek","","",190,[[["cursor"]],["bool"]]],[11,"display","","",190,[[],["str"]]],[11,"peek","","",191,[[["cursor"]],["bool"]]],[11,"display","","",191,[[],["str"]]],[11,"peek","","",31,[[["cursor"]],["bool"]]],[11,"display","","",31,[[],["str"]]],[11,"peek","syn::token","",82,[[["cursor"]],["bool"]]],[11,"display","","",82,[[],["str"]]],[11,"peek","","",183,[[["cursor"]],["bool"]]],[11,"display","","",183,[[],["str"]]],[11,"peek","","",181,[[["cursor"]],["bool"]]],[11,"display","","",181,[[],["str"]]],[11,"peek","","",182,[[["cursor"]],["bool"]]],[11,"display","","",182,[[],["str"]]],[11,"peek","","",184,[[["cursor"]],["bool"]]],[11,"display","","",184,[[],["str"]]],[11,"peek","","",83,[[["cursor"]],["bool"]]],[11,"display","","",83,[[],["str"]]],[11,"peek","","",84,[[["cursor"]],["bool"]]],[11,"display","","",84,[[],["str"]]],[11,"peek","","",85,[[["cursor"]],["bool"]]],[11,"display","","",85,[[],["str"]]],[11,"peek","","",86,[[["cursor"]],["bool"]]],[11,"display","","",86,[[],["str"]]],[11,"peek","","",87,[[["cursor"]],["bool"]]],[11,"display","","",87,[[],["str"]]],[11,"peek","","",88,[[["cursor"]],["bool"]]],[11,"display","","",88,[[],["str"]]],[11,"peek","","",89,[[["cursor"]],["bool"]]],[11,"display","","",89,[[],["str"]]],[11,"peek","","",90,[[["cursor"]],["bool"]]],[11,"display","","",90,[[],["str"]]],[11,"peek","","",91,[[["cursor"]],["bool"]]],[11,"display","","",91,[[],["str"]]],[11,"peek","","",92,[[["cursor"]],["bool"]]],[11,"display","","",92,[[],["str"]]],[11,"peek","","",93,[[["cursor"]],["bool"]]],[11,"display","","",93,[[],["str"]]],[11,"peek","","",94,[[["cursor"]],["bool"]]],[11,"display","","",94,[[],["str"]]],[11,"peek","","",95,[[["cursor"]],["bool"]]],[11,"display","","",95,[[],["str"]]],[11,"peek","","",96,[[["cursor"]],["bool"]]],[11,"display","","",96,[[],["str"]]],[11,"peek","","",97,[[["cursor"]],["bool"]]],[11,"display","","",97,[[],["str"]]],[11,"peek","","",98,[[["cursor"]],["bool"]]],[11,"display","","",98,[[],["str"]]],[11,"peek","","",99,[[["cursor"]],["bool"]]],[11,"display","","",99,[[],["str"]]],[11,"peek","","",100,[[["cursor"]],["bool"]]],[11,"display","","",100,[[],["str"]]],[11,"peek","","",101,[[["cursor"]],["bool"]]],[11,"display","","",101,[[],["str"]]],[11,"peek","","",102,[[["cursor"]],["bool"]]],[11,"display","","",102,[[],["str"]]],[11,"peek","","",103,[[["cursor"]],["bool"]]],[11,"display","","",103,[[],["str"]]],[11,"peek","","",104,[[["cursor"]],["bool"]]],[11,"display","","",104,[[],["str"]]],[11,"peek","","",105,[[["cursor"]],["bool"]]],[11,"display","","",105,[[],["str"]]],[11,"peek","","",106,[[["cursor"]],["bool"]]],[11,"display","","",106,[[],["str"]]],[11,"peek","","",107,[[["cursor"]],["bool"]]],[11,"display","","",107,[[],["str"]]],[11,"peek","","",108,[[["cursor"]],["bool"]]],[11,"display","","",108,[[],["str"]]],[11,"peek","","",109,[[["cursor"]],["bool"]]],[11,"display","","",109,[[],["str"]]],[11,"peek","","",110,[[["cursor"]],["bool"]]],[11,"display","","",110,[[],["str"]]],[11,"peek","","",111,[[["cursor"]],["bool"]]],[11,"display","","",111,[[],["str"]]],[11,"peek","","",112,[[["cursor"]],["bool"]]],[11,"display","","",112,[[],["str"]]],[11,"peek","","",113,[[["cursor"]],["bool"]]],[11,"display","","",113,[[],["str"]]],[11,"peek","","",114,[[["cursor"]],["bool"]]],[11,"display","","",114,[[],["str"]]],[11,"peek","","",115,[[["cursor"]],["bool"]]],[11,"display","","",115,[[],["str"]]],[11,"peek","","",116,[[["cursor"]],["bool"]]],[11,"display","","",116,[[],["str"]]],[11,"peek","","",117,[[["cursor"]],["bool"]]],[11,"display","","",117,[[],["str"]]],[11,"peek","","",118,[[["cursor"]],["bool"]]],[11,"display","","",118,[[],["str"]]],[11,"peek","","",119,[[["cursor"]],["bool"]]],[11,"display","","",119,[[],["str"]]],[11,"peek","","",120,[[["cursor"]],["bool"]]],[11,"display","","",120,[[],["str"]]],[11,"peek","","",121,[[["cursor"]],["bool"]]],[11,"display","","",121,[[],["str"]]],[11,"peek","","",122,[[["cursor"]],["bool"]]],[11,"display","","",122,[[],["str"]]],[11,"peek","","",123,[[["cursor"]],["bool"]]],[11,"display","","",123,[[],["str"]]],[11,"peek","","",124,[[["cursor"]],["bool"]]],[11,"display","","",124,[[],["str"]]],[11,"peek","","",125,[[["cursor"]],["bool"]]],[11,"display","","",125,[[],["str"]]],[11,"peek","","",126,[[["cursor"]],["bool"]]],[11,"display","","",126,[[],["str"]]],[11,"peek","","",127,[[["cursor"]],["bool"]]],[11,"display","","",127,[[],["str"]]],[11,"peek","","",128,[[["cursor"]],["bool"]]],[11,"display","","",128,[[],["str"]]],[11,"peek","","",129,[[["cursor"]],["bool"]]],[11,"display","","",129,[[],["str"]]],[11,"peek","","",130,[[["cursor"]],["bool"]]],[11,"display","","",130,[[],["str"]]],[11,"peek","","",131,[[["cursor"]],["bool"]]],[11,"display","","",131,[[],["str"]]],[11,"peek","","",132,[[["cursor"]],["bool"]]],[11,"display","","",132,[[],["str"]]],[11,"peek","","",133,[[["cursor"]],["bool"]]],[11,"display","","",133,[[],["str"]]],[11,"peek","","",134,[[["cursor"]],["bool"]]],[11,"display","","",134,[[],["str"]]],[11,"peek","","",135,[[["cursor"]],["bool"]]],[11,"display","","",135,[[],["str"]]],[11,"peek","","",136,[[["cursor"]],["bool"]]],[11,"display","","",136,[[],["str"]]],[11,"peek","","",137,[[["cursor"]],["bool"]]],[11,"display","","",137,[[],["str"]]],[11,"peek","","",138,[[["cursor"]],["bool"]]],[11,"display","","",138,[[],["str"]]],[11,"peek","","",139,[[["cursor"]],["bool"]]],[11,"display","","",139,[[],["str"]]],[11,"peek","","",140,[[["cursor"]],["bool"]]],[11,"display","","",140,[[],["str"]]],[11,"peek","","",141,[[["cursor"]],["bool"]]],[11,"display","","",141,[[],["str"]]],[11,"peek","","",142,[[["cursor"]],["bool"]]],[11,"display","","",142,[[],["str"]]],[11,"peek","","",143,[[["cursor"]],["bool"]]],[11,"display","","",143,[[],["str"]]],[11,"peek","","",144,[[["cursor"]],["bool"]]],[11,"display","","",144,[[],["str"]]],[11,"peek","","",145,[[["cursor"]],["bool"]]],[11,"display","","",145,[[],["str"]]],[11,"peek","","",146,[[["cursor"]],["bool"]]],[11,"display","","",146,[[],["str"]]],[11,"peek","","",147,[[["cursor"]],["bool"]]],[11,"display","","",147,[[],["str"]]],[11,"peek","","",148,[[["cursor"]],["bool"]]],[11,"display","","",148,[[],["str"]]],[11,"peek","","",149,[[["cursor"]],["bool"]]],[11,"display","","",149,[[],["str"]]],[11,"peek","","",150,[[["cursor"]],["bool"]]],[11,"display","","",150,[[],["str"]]],[11,"peek","","",151,[[["cursor"]],["bool"]]],[11,"display","","",151,[[],["str"]]],[11,"peek","","",152,[[["cursor"]],["bool"]]],[11,"display","","",152,[[],["str"]]],[11,"peek","","",153,[[["cursor"]],["bool"]]],[11,"display","","",153,[[],["str"]]],[11,"peek","","",154,[[["cursor"]],["bool"]]],[11,"display","","",154,[[],["str"]]],[11,"peek","","",155,[[["cursor"]],["bool"]]],[11,"display","","",155,[[],["str"]]],[11,"peek","","",156,[[["cursor"]],["bool"]]],[11,"display","","",156,[[],["str"]]],[11,"peek","","",157,[[["cursor"]],["bool"]]],[11,"display","","",157,[[],["str"]]],[11,"peek","","",158,[[["cursor"]],["bool"]]],[11,"display","","",158,[[],["str"]]],[11,"peek","","",159,[[["cursor"]],["bool"]]],[11,"display","","",159,[[],["str"]]],[11,"peek","","",160,[[["cursor"]],["bool"]]],[11,"display","","",160,[[],["str"]]],[11,"peek","","",161,[[["cursor"]],["bool"]]],[11,"display","","",161,[[],["str"]]],[11,"peek","","",162,[[["cursor"]],["bool"]]],[11,"display","","",162,[[],["str"]]],[11,"peek","","",163,[[["cursor"]],["bool"]]],[11,"display","","",163,[[],["str"]]],[11,"peek","","",164,[[["cursor"]],["bool"]]],[11,"display","","",164,[[],["str"]]],[11,"peek","","",165,[[["cursor"]],["bool"]]],[11,"display","","",165,[[],["str"]]],[11,"peek","","",166,[[["cursor"]],["bool"]]],[11,"display","","",166,[[],["str"]]],[11,"peek","","",167,[[["cursor"]],["bool"]]],[11,"display","","",167,[[],["str"]]],[11,"peek","","",168,[[["cursor"]],["bool"]]],[11,"display","","",168,[[],["str"]]],[11,"peek","","",169,[[["cursor"]],["bool"]]],[11,"display","","",169,[[],["str"]]],[11,"peek","","",170,[[["cursor"]],["bool"]]],[11,"display","","",170,[[],["str"]]],[11,"peek","","",171,[[["cursor"]],["bool"]]],[11,"display","","",171,[[],["str"]]],[11,"peek","","",172,[[["cursor"]],["bool"]]],[11,"display","","",172,[[],["str"]]],[11,"peek","","",173,[[["cursor"]],["bool"]]],[11,"display","","",173,[[],["str"]]],[11,"peek","","",174,[[["cursor"]],["bool"]]],[11,"display","","",174,[[],["str"]]],[11,"peek","","",175,[[["cursor"]],["bool"]]],[11,"display","","",175,[[],["str"]]],[11,"peek","","",176,[[["cursor"]],["bool"]]],[11,"display","","",176,[[],["str"]]],[11,"peek","","",177,[[["cursor"]],["bool"]]],[11,"display","","",177,[[],["str"]]],[11,"peek","","",178,[[["cursor"]],["bool"]]],[11,"display","","",178,[[],["str"]]],[11,"peek","","",179,[[["cursor"]],["bool"]]],[11,"display","","",179,[[],["str"]]],[11,"peek","","",180,[[["cursor"]],["bool"]]],[11,"display","","",180,[[],["str"]]],[11,"peek","syn","",205,[[["cursor"]],["bool"]]],[11,"display","","",205,[[],["str"]]],[11,"parse_any","","",205,[[["parsestream"]],["result"]]],[11,"unraw","","",205,[[["self"]],["ident"]]],[11,"advance_to","syn::parse","",203,[[["self"]]]],[11,"parse","syn::token","",82,[[["parsestream"]],["result"]]],[11,"parse","","",83,[[["parsestream"]],["result"]]],[11,"parse","","",84,[[["parsestream"]],["result"]]],[11,"parse","","",85,[[["parsestream"]],["result"]]],[11,"parse","","",86,[[["parsestream"]],["result"]]],[11,"parse","","",87,[[["parsestream"]],["result"]]],[11,"parse","","",88,[[["parsestream"]],["result"]]],[11,"parse","","",89,[[["parsestream"]],["result"]]],[11,"parse","","",90,[[["parsestream"]],["result"]]],[11,"parse","","",91,[[["parsestream"]],["result"]]],[11,"parse","","",92,[[["parsestream"]],["result"]]],[11,"parse","","",93,[[["parsestream"]],["result"]]],[11,"parse","","",94,[[["parsestream"]],["result"]]],[11,"parse","","",95,[[["parsestream"]],["result"]]],[11,"parse","","",96,[[["parsestream"]],["result"]]],[11,"parse","","",97,[[["parsestream"]],["result"]]],[11,"parse","","",98,[[["parsestream"]],["result"]]],[11,"parse","","",99,[[["parsestream"]],["result"]]],[11,"parse","","",100,[[["parsestream"]],["result"]]],[11,"parse","","",101,[[["parsestream"]],["result"]]],[11,"parse","","",102,[[["parsestream"]],["result"]]],[11,"parse","","",103,[[["parsestream"]],["result"]]],[11,"parse","","",104,[[["parsestream"]],["result"]]],[11,"parse","","",105,[[["parsestream"]],["result"]]],[11,"parse","","",106,[[["parsestream"]],["result"]]],[11,"parse","","",107,[[["parsestream"]],["result"]]],[11,"parse","","",108,[[["parsestream"]],["result"]]],[11,"parse","","",109,[[["parsestream"]],["result"]]],[11,"parse","","",110,[[["parsestream"]],["result"]]],[11,"parse","","",111,[[["parsestream"]],["result"]]],[11,"parse","","",112,[[["parsestream"]],["result"]]],[11,"parse","","",113,[[["parsestream"]],["result"]]],[11,"parse","","",114,[[["parsestream"]],["result"]]],[11,"parse","","",115,[[["parsestream"]],["result"]]],[11,"parse","","",116,[[["parsestream"]],["result"]]],[11,"parse","","",117,[[["parsestream"]],["result"]]],[11,"parse","","",118,[[["parsestream"]],["result"]]],[11,"parse","","",119,[[["parsestream"]],["result"]]],[11,"parse","","",120,[[["parsestream"]],["result"]]],[11,"parse","","",121,[[["parsestream"]],["result"]]],[11,"parse","","",122,[[["parsestream"]],["result"]]],[11,"parse","","",123,[[["parsestream"]],["result"]]],[11,"parse","","",124,[[["parsestream"]],["result"]]],[11,"parse","","",125,[[["parsestream"]],["result"]]],[11,"parse","","",126,[[["parsestream"]],["result"]]],[11,"parse","","",127,[[["parsestream"]],["result"]]],[11,"parse","","",128,[[["parsestream"]],["result"]]],[11,"parse","","",129,[[["parsestream"]],["result"]]],[11,"parse","","",130,[[["parsestream"]],["result"]]],[11,"parse","","",131,[[["parsestream"]],["result"]]],[11,"parse","","",132,[[["parsestream"]],["result"]]],[11,"parse","","",133,[[["parsestream"]],["result"]]],[11,"parse","","",134,[[["parsestream"]],["result"]]],[11,"parse","","",135,[[["parsestream"]],["result"]]],[11,"parse","","",136,[[["parsestream"]],["result"]]],[11,"parse","","",137,[[["parsestream"]],["result"]]],[11,"parse","","",138,[[["parsestream"]],["result"]]],[11,"parse","","",139,[[["parsestream"]],["result"]]],[11,"parse","","",140,[[["parsestream"]],["result"]]],[11,"parse","","",141,[[["parsestream"]],["result"]]],[11,"parse","","",142,[[["parsestream"]],["result"]]],[11,"parse","","",143,[[["parsestream"]],["result"]]],[11,"parse","","",144,[[["parsestream"]],["result"]]],[11,"parse","","",145,[[["parsestream"]],["result"]]],[11,"parse","","",146,[[["parsestream"]],["result"]]],[11,"parse","","",147,[[["parsestream"]],["result"]]],[11,"parse","","",148,[[["parsestream"]],["result"]]],[11,"parse","","",149,[[["parsestream"]],["result"]]],[11,"parse","","",150,[[["parsestream"]],["result"]]],[11,"parse","","",151,[[["parsestream"]],["result"]]],[11,"parse","","",152,[[["parsestream"]],["result"]]],[11,"parse","","",153,[[["parsestream"]],["result"]]],[11,"parse","","",154,[[["parsestream"]],["result"]]],[11,"parse","","",155,[[["parsestream"]],["result"]]],[11,"parse","","",156,[[["parsestream"]],["result"]]],[11,"parse","","",157,[[["parsestream"]],["result"]]],[11,"parse","","",158,[[["parsestream"]],["result"]]],[11,"parse","","",159,[[["parsestream"]],["result"]]],[11,"parse","","",160,[[["parsestream"]],["result"]]],[11,"parse","","",161,[[["parsestream"]],["result"]]],[11,"parse","","",162,[[["parsestream"]],["result"]]],[11,"parse","","",163,[[["parsestream"]],["result"]]],[11,"parse","","",164,[[["parsestream"]],["result"]]],[11,"parse","","",165,[[["parsestream"]],["result"]]],[11,"parse","","",166,[[["parsestream"]],["result"]]],[11,"parse","","",167,[[["parsestream"]],["result"]]],[11,"parse","","",168,[[["parsestream"]],["result"]]],[11,"parse","","",169,[[["parsestream"]],["result"]]],[11,"parse","","",170,[[["parsestream"]],["result"]]],[11,"parse","","",171,[[["parsestream"]],["result"]]],[11,"parse","","",172,[[["parsestream"]],["result"]]],[11,"parse","","",173,[[["parsestream"]],["result"]]],[11,"parse","","",174,[[["parsestream"]],["result"]]],[11,"parse","","",175,[[["parsestream"]],["result"]]],[11,"parse","","",176,[[["parsestream"]],["result"]]],[11,"parse","","",177,[[["parsestream"]],["result"]]],[11,"parse","","",178,[[["parsestream"]],["result"]]],[11,"parse","","",179,[[["parsestream"]],["result"]]],[11,"parse","","",180,[[["parsestream"]],["result"]]],[11,"parse","syn","",205,[[["parsestream"]],["result"]]],[11,"parse","","",62,[[["parsestream"]],["result"]]],[11,"parse","","",1,[[["parsestream"]],["result"]]],[11,"parse","","",2,[[["parsestream"]],["result"]]],[11,"parse","","",63,[[["parsestream"]],["result"]]],[11,"parse","","",6,[[["parsestream"]],["result"]]],[11,"parse","","",4,[[["parsestream"]],["result"]]],[11,"parse","","",5,[[["parsestream"]],["result"]]],[11,"parse","","",65,[[["parsestream"]],["result"]]],[11,"parse","","",66,[[["parsestream"]],["result"]]],[11,"parse","","",15,[[["parsestream"]],["result"]]],[11,"parse","","",17,[[["parsestream"]],["result"]]],[11,"parse","","",67,[[["parsestream"]],["result"]]],[11,"parse","","",19,[[["parsestream"]],["result"]]],[11,"parse","","",22,[[["parsestream"]],["result"]]],[11,"parse","","",68,[[["parsestream"]],["result"]]],[11,"parse","","",23,[[["parsestream"]],["result"]]],[11,"parse","","",20,[[["parsestream"]],["result"]]],[11,"parse","","",28,[[["parsestream"]],["result"]]],[11,"parse","","",70,[[["parsestream"]],["result"]]],[11,"parse","","",27,[[["parsestream"]],["result"]]],[11,"parse","","",69,[[["parsestream"]],["result"]]],[11,"parse","","",21,[[["parsestream"]],["result"]]],[11,"parse","","",29,[[["parsestream"]],["result"]]],[11,"parse","","",71,[[["parsestream"]],["result"]]],[11,"parse","","",30,[[["parsestream"]],["result"]]],[11,"parse","","",72,[[["parsestream"]],["result"]]],[11,"parse","","",186,[[["parsestream"]],["result"]]],[11,"parse","","",187,[[["parsestream"]],["result"]]],[11,"parse","","",188,[[["parsestream"]],["result"]]],[11,"parse","","",189,[[["parsestream"]],["result"]]],[11,"parse","","",190,[[["parsestream"]],["result"]]],[11,"parse","","",191,[[["parsestream"]],["result"]]],[11,"parse","","",31,[[["parsestream"]],["result"]]],[11,"parse","","",32,[[["parsestream"]],["result"]]],[11,"parse","","",36,[[["parsestream"]],["result"]]],[11,"parse","","",76,[[["parsestream"]],["result"]]],[11,"parse","","",77,[[["parsestream"]],["result"]]],[11,"parse","","",79,[[["parsestream"]],["result"]]],[11,"parse","","",50,[[["parsestream"]],["result"]]],[11,"parse","","",39,[[["parsestream"]],["result"]]],[11,"parse","","",48,[[["parsestream"]],["result"]]],[11,"parse","","",49,[[["parsestream"]],["result"]]],[11,"parse","","",40,[[["parsestream"]],["result"]]],[11,"parse","","",45,[[["parsestream"]],["result"]]],[11,"parse","","",43,[[["parsestream"]],["result"]]],[11,"parse","","",52,[[["parsestream"]],["result"]]],[11,"parse","","",44,[[["parsestream"]],["result"]]],[11,"parse","","",47,[[["parsestream"]],["result"]]],[11,"parse","","",78,[[["parsestream"]],["result"]]],[11,"parse","","",51,[[["parsestream"]],["result"]]],[11,"parse","","",42,[[["parsestream"]],["result"]]],[11,"parse","","",41,[[["parsestream"]],["result"]]],[11,"parse","","",46,[[["parsestream"]],["result"]]],[11,"parse","","",38,[[["parsestream"]],["result"]]],[11,"parse","","",37,[[["parsestream"]],["result"]]],[11,"parse","","",58,[[["parsestream"]],["result"]]],[11,"parse","","",80,[[["parsestream"]],["result"]]],[11,"parse","","",54,[[["parsestream"]],["result"]]],[11,"parse","","",57,[[["parsestream"]],["result"]]],[11,"parse","","",59,[[["parsestream"]],["result"]]],[11,"parse","","",55,[[["parsestream"]],["result"]]],[11,"parse","syn::parse","",245,[[["parsestream"]],["result"]]],[11,"drop","","",203,[[["self"]]]],[11,"from","syn","",205,[[["selfvalue"]],["ident"]]],[11,"from","","",205,[[["selftype"]],["ident"]]],[11,"from","","",205,[[["super"]],["ident"]]],[11,"from","","",205,[[["crate"]],["ident"]]],[11,"from","","",205,[[["extern"]],["ident"]]],[11,"from","","",205,[[["underscore"]],["ident"]]],[11,"from","","",62,[[["path"]],["meta"]]],[11,"from","","",62,[[["metalist"]],["meta"]]],[11,"from","","",62,[[["metanamevalue"]],["meta"]]],[11,"from","","",63,[[["meta"]],["nestedmeta"]]],[11,"from","","",63,[[["lit"]],["nestedmeta"]]],[11,"from","","",64,[[["fieldsnamed"]],["fields"]]],[11,"from","","",64,[[["fieldsunnamed"]],["fields"]]],[11,"from","","",65,[[["vispublic"]],["visibility"]]],[11,"from","","",65,[[["viscrate"]],["visibility"]]],[11,"from","","",65,[[["visrestricted"]],["visibility"]]],[11,"from","","",66,[[["exprarray"]],["expr"]]],[11,"from","","",66,[[["exprassign"]],["expr"]]],[11,"from","","",66,[[["exprassignop"]],["expr"]]],[11,"from","","",66,[[["exprasync"]],["expr"]]],[11,"from","","",66,[[["exprawait"]],["expr"]]],[11,"from","","",66,[[["exprbinary"]],["expr"]]],[11,"from","","",66,[[["exprblock"]],["expr"]]],[11,"from","","",66,[[["exprbox"]],["expr"]]],[11,"from","","",66,[[["exprbreak"]],["expr"]]],[11,"from","","",66,[[["exprcall"]],["expr"]]],[11,"from","","",66,[[["exprcast"]],["expr"]]],[11,"from","","",66,[[["exprclosure"]],["expr"]]],[11,"from","","",66,[[["exprcontinue"]],["expr"]]],[11,"from","","",66,[[["exprfield"]],["expr"]]],[11,"from","","",66,[[["exprforloop"]],["expr"]]],[11,"from","","",66,[[["exprgroup"]],["expr"]]],[11,"from","","",66,[[["exprif"]],["expr"]]],[11,"from","","",66,[[["exprindex"]],["expr"]]],[11,"from","","",66,[[["exprlet"]],["expr"]]],[11,"from","","",66,[[["exprlit"]],["expr"]]],[11,"from","","",66,[[["exprloop"]],["expr"]]],[11,"from","","",66,[[["exprmacro"]],["expr"]]],[11,"from","","",66,[[["exprmatch"]],["expr"]]],[11,"from","","",66,[[["exprmethodcall"]],["expr"]]],[11,"from","","",66,[[["exprparen"]],["expr"]]],[11,"from","","",66,[[["exprpath"]],["expr"]]],[11,"from","","",66,[[["exprrange"]],["expr"]]],[11,"from","","",66,[[["exprreference"]],["expr"]]],[11,"from","","",66,[[["exprrepeat"]],["expr"]]],[11,"from","","",66,[[["exprreturn"]],["expr"]]],[11,"from","","",66,[[["exprstruct"]],["expr"]]],[11,"from","","",66,[[["exprtry"]],["expr"]]],[11,"from","","",66,[[["exprtryblock"]],["expr"]]],[11,"from","","",66,[[["exprtuple"]],["expr"]]],[11,"from","","",66,[[["exprtype"]],["expr"]]],[11,"from","","",66,[[["exprunary"]],["expr"]]],[11,"from","","",66,[[["exprunsafe"]],["expr"]]],[11,"from","","",66,[[["exprwhile"]],["expr"]]],[11,"from","","",66,[[["expryield"]],["expr"]]],[11,"from","","",19,[[["usize"]],["index"]]],[11,"from","","",68,[[["typeparam"]],["genericparam"]]],[11,"from","","",68,[[["lifetimedef"]],["genericparam"]]],[11,"from","","",68,[[["constparam"]],["genericparam"]]],[11,"from","","",28,[[["ident"]],["self"]]],[11,"from","","",70,[[["traitbound"]],["typeparambound"]]],[11,"from","","",70,[[["lifetime"]],["typeparambound"]]],[11,"from","","",71,[[["predicatetype"]],["wherepredicate"]]],[11,"from","","",71,[[["predicatelifetime"]],["wherepredicate"]]],[11,"from","","",71,[[["predicateeq"]],["wherepredicate"]]],[11,"from","","",72,[[["litstr"]],["lit"]]],[11,"from","","",72,[[["litbytestr"]],["lit"]]],[11,"from","","",72,[[["litbyte"]],["lit"]]],[11,"from","","",72,[[["litchar"]],["lit"]]],[11,"from","","",72,[[["litint"]],["lit"]]],[11,"from","","",72,[[["litfloat"]],["lit"]]],[11,"from","","",72,[[["litbool"]],["lit"]]],[11,"from","","",190,[[["literal"]],["self"]]],[11,"from","","",191,[[["literal"]],["self"]]],[11,"from","","",75,[[["datastruct"]],["data"]]],[11,"from","","",75,[[["dataenum"]],["data"]]],[11,"from","","",75,[[["dataunion"]],["data"]]],[11,"from","","",79,[[["typearray"]],["type"]]],[11,"from","","",79,[[["typebarefn"]],["type"]]],[11,"from","","",79,[[["typegroup"]],["type"]]],[11,"from","","",79,[[["typeimpltrait"]],["type"]]],[11,"from","","",79,[[["typeinfer"]],["type"]]],[11,"from","","",79,[[["typemacro"]],["type"]]],[11,"from","","",79,[[["typenever"]],["type"]]],[11,"from","","",79,[[["typeparen"]],["type"]]],[11,"from","","",79,[[["typepath"]],["type"]]],[11,"from","","",79,[[["typeptr"]],["type"]]],[11,"from","","",79,[[["typereference"]],["type"]]],[11,"from","","",79,[[["typeslice"]],["type"]]],[11,"from","","",79,[[["typetraitobject"]],["type"]]],[11,"from","","",79,[[["typetuple"]],["type"]]],[11,"from","","",58,[[["t"]],["self"]]],[11,"from","","",59,[[["t"]],["self"]]],[11,"from","","",204,[[["lexerror"]],["self"]]],[11,"next_back","syn::punctuated","",238,[[["self"]],["option"]]],[11,"next_back","","",239,[[["self"]],["option"]]],[11,"next_back","","",240,[[["self"]],["option"]]],[11,"next_back","","",241,[[["self"]],["option"]]],[11,"next_back","","",242,[[["self"]],["option"]]],[11,"next_back","","",243,[[["self"]],["option"]]],[11,"len","","",238,[[["self"]],["usize"]]],[11,"len","","",239,[[["self"]],["usize"]]],[11,"len","","",240,[[["self"]],["usize"]]],[11,"len","","",241,[[["self"]],["usize"]]],[11,"len","","",242,[[["self"]],["usize"]]],[11,"len","","",243,[[["self"]],["usize"]]],[11,"extend","","",196,[[["intoiterator"],["self"]]]],[11,"extend","","",196,[[["self"],["intoiterator"]]]],[11,"into_iter","syn","",64,[[]]],[11,"into_iter","syn::punctuated","",196,[[]]],[11,"into_iter","syn","",204,[[]]],[11,"next","syn::punctuated","",238,[[["self"]],["option"]]],[11,"size_hint","","",238,[[["self"]]]],[11,"next","","",239,[[["self"]],["option"]]],[11,"size_hint","","",239,[[["self"]]]],[11,"next","","",240,[[["self"]],["option"]]],[11,"size_hint","","",240,[[["self"]]]],[11,"next","","",241,[[["self"]],["option"]]],[11,"size_hint","","",241,[[["self"]]]],[11,"next","","",242,[[["self"]],["option"]]],[11,"size_hint","","",242,[[["self"]]]],[11,"next","","",243,[[["self"]],["option"]]],[11,"size_hint","","",243,[[["self"]]]],[11,"clone","syn::token","",82,[[["self"]],["underscore"]]],[11,"clone","","",83,[[["self"]],["abstract"]]],[11,"clone","","",84,[[["self"]],["as"]]],[11,"clone","","",85,[[["self"]],["async"]]],[11,"clone","","",86,[[["self"]],["auto"]]],[11,"clone","","",87,[[["self"]],["await"]]],[11,"clone","","",88,[[["self"]],["become"]]],[11,"clone","","",89,[[["self"]],["box"]]],[11,"clone","","",90,[[["self"]],["break"]]],[11,"clone","","",91,[[["self"]],["const"]]],[11,"clone","","",92,[[["self"]],["continue"]]],[11,"clone","","",93,[[["self"]],["crate"]]],[11,"clone","","",94,[[["self"]],["default"]]],[11,"clone","","",95,[[["self"]],["do"]]],[11,"clone","","",96,[[["self"]],["dyn"]]],[11,"clone","","",97,[[["self"]],["else"]]],[11,"clone","","",98,[[["self"]],["enum"]]],[11,"clone","","",99,[[["self"]],["extern"]]],[11,"clone","","",100,[[["self"]],["final"]]],[11,"clone","","",101,[[["self"]],["fn"]]],[11,"clone","","",102,[[["self"]],["for"]]],[11,"clone","","",103,[[["self"]],["if"]]],[11,"clone","","",104,[[["self"]],["impl"]]],[11,"clone","","",105,[[["self"]],["in"]]],[11,"clone","","",106,[[["self"]],["let"]]],[11,"clone","","",107,[[["self"]],["loop"]]],[11,"clone","","",108,[[["self"]],["macro"]]],[11,"clone","","",109,[[["self"]],["match"]]],[11,"clone","","",110,[[["self"]],["mod"]]],[11,"clone","","",111,[[["self"]],["move"]]],[11,"clone","","",112,[[["self"]],["mut"]]],[11,"clone","","",113,[[["self"]],["override"]]],[11,"clone","","",114,[[["self"]],["priv"]]],[11,"clone","","",115,[[["self"]],["pub"]]],[11,"clone","","",116,[[["self"]],["ref"]]],[11,"clone","","",117,[[["self"]],["return"]]],[11,"clone","","",118,[[["self"]],["selftype"]]],[11,"clone","","",119,[[["self"]],["selfvalue"]]],[11,"clone","","",120,[[["self"]],["static"]]],[11,"clone","","",121,[[["self"]],["struct"]]],[11,"clone","","",122,[[["self"]],["super"]]],[11,"clone","","",123,[[["self"]],["trait"]]],[11,"clone","","",124,[[["self"]],["try"]]],[11,"clone","","",125,[[["self"]],["type"]]],[11,"clone","","",126,[[["self"]],["typeof"]]],[11,"clone","","",127,[[["self"]],["union"]]],[11,"clone","","",128,[[["self"]],["unsafe"]]],[11,"clone","","",129,[[["self"]],["unsized"]]],[11,"clone","","",130,[[["self"]],["use"]]],[11,"clone","","",131,[[["self"]],["virtual"]]],[11,"clone","","",132,[[["self"]],["where"]]],[11,"clone","","",133,[[["self"]],["while"]]],[11,"clone","","",134,[[["self"]],["yield"]]],[11,"clone","","",135,[[["self"]],["add"]]],[11,"clone","","",136,[[["self"]],["addeq"]]],[11,"clone","","",137,[[["self"]],["and"]]],[11,"clone","","",138,[[["self"]],["andand"]]],[11,"clone","","",139,[[["self"]],["andeq"]]],[11,"clone","","",140,[[["self"]],["at"]]],[11,"clone","","",141,[[["self"]],["bang"]]],[11,"clone","","",142,[[["self"]],["caret"]]],[11,"clone","","",143,[[["self"]],["careteq"]]],[11,"clone","","",144,[[["self"]],["colon"]]],[11,"clone","","",145,[[["self"]],["colon2"]]],[11,"clone","","",146,[[["self"]],["comma"]]],[11,"clone","","",147,[[["self"]],["div"]]],[11,"clone","","",148,[[["self"]],["diveq"]]],[11,"clone","","",149,[[["self"]],["dollar"]]],[11,"clone","","",150,[[["self"]],["dot"]]],[11,"clone","","",151,[[["self"]],["dot2"]]],[11,"clone","","",152,[[["self"]],["dot3"]]],[11,"clone","","",153,[[["self"]],["dotdoteq"]]],[11,"clone","","",154,[[["self"]],["eq"]]],[11,"clone","","",155,[[["self"]],["eqeq"]]],[11,"clone","","",156,[[["self"]],["ge"]]],[11,"clone","","",157,[[["self"]],["gt"]]],[11,"clone","","",158,[[["self"]],["le"]]],[11,"clone","","",159,[[["self"]],["lt"]]],[11,"clone","","",160,[[["self"]],["muleq"]]],[11,"clone","","",161,[[["self"]],["ne"]]],[11,"clone","","",162,[[["self"]],["or"]]],[11,"clone","","",163,[[["self"]],["oreq"]]],[11,"clone","","",164,[[["self"]],["oror"]]],[11,"clone","","",165,[[["self"]],["pound"]]],[11,"clone","","",166,[[["self"]],["question"]]],[11,"clone","","",167,[[["self"]],["rarrow"]]],[11,"clone","","",168,[[["self"]],["larrow"]]],[11,"clone","","",169,[[["self"]],["rem"]]],[11,"clone","","",170,[[["self"]],["remeq"]]],[11,"clone","","",171,[[["self"]],["fatarrow"]]],[11,"clone","","",172,[[["self"]],["semi"]]],[11,"clone","","",173,[[["self"]],["shl"]]],[11,"clone","","",174,[[["self"]],["shleq"]]],[11,"clone","","",175,[[["self"]],["shr"]]],[11,"clone","","",176,[[["self"]],["shreq"]]],[11,"clone","","",177,[[["self"]],["star"]]],[11,"clone","","",178,[[["self"]],["sub"]]],[11,"clone","","",179,[[["self"]],["subeq"]]],[11,"clone","","",180,[[["self"]],["tilde"]]],[11,"clone","","",181,[[["self"]],["brace"]]],[11,"clone","","",182,[[["self"]],["bracket"]]],[11,"clone","","",183,[[["self"]],["paren"]]],[11,"clone","","",184,[[["self"]],["group"]]],[11,"clone","syn","",0,[[["self"]],["attribute"]]],[11,"clone","","",61,[[["self"]],["attrstyle"]]],[11,"clone","","",62,[[["self"]],["meta"]]],[11,"clone","","",1,[[["self"]],["metalist"]]],[11,"clone","","",2,[[["self"]],["metanamevalue"]]],[11,"clone","","",63,[[["self"]],["nestedmeta"]]],[11,"clone","","",6,[[["self"]],["variant"]]],[11,"clone","","",64,[[["self"]],["fields"]]],[11,"clone","","",4,[[["self"]],["fieldsnamed"]]],[11,"clone","","",5,[[["self"]],["fieldsunnamed"]]],[11,"clone","","",3,[[["self"]],["field"]]],[11,"clone","","",65,[[["self"]],["visibility"]]],[11,"clone","","",8,[[["self"]],["vispublic"]]],[11,"clone","","",7,[[["self"]],["viscrate"]]],[11,"clone","","",9,[[["self"]],["visrestricted"]]],[11,"clone","","",66,[[["self"]],["expr"]]],[11,"clone","","",206,[[["self"]],["exprarray"]]],[11,"clone","","",207,[[["self"]],["exprassign"]]],[11,"clone","","",208,[[["self"]],["exprassignop"]]],[11,"clone","","",209,[[["self"]],["exprasync"]]],[11,"clone","","",210,[[["self"]],["exprawait"]]],[11,"clone","","",10,[[["self"]],["exprbinary"]]],[11,"clone","","",211,[[["self"]],["exprblock"]]],[11,"clone","","",212,[[["self"]],["exprbox"]]],[11,"clone","","",213,[[["self"]],["exprbreak"]]],[11,"clone","","",11,[[["self"]],["exprcall"]]],[11,"clone","","",12,[[["self"]],["exprcast"]]],[11,"clone","","",214,[[["self"]],["exprclosure"]]],[11,"clone","","",215,[[["self"]],["exprcontinue"]]],[11,"clone","","",13,[[["self"]],["exprfield"]]],[11,"clone","","",216,[[["self"]],["exprforloop"]]],[11,"clone","","",217,[[["self"]],["exprgroup"]]],[11,"clone","","",218,[[["self"]],["exprif"]]],[11,"clone","","",14,[[["self"]],["exprindex"]]],[11,"clone","","",219,[[["self"]],["exprlet"]]],[11,"clone","","",15,[[["self"]],["exprlit"]]],[11,"clone","","",220,[[["self"]],["exprloop"]]],[11,"clone","","",221,[[["self"]],["exprmacro"]]],[11,"clone","","",222,[[["self"]],["exprmatch"]]],[11,"clone","","",223,[[["self"]],["exprmethodcall"]]],[11,"clone","","",16,[[["self"]],["exprparen"]]],[11,"clone","","",17,[[["self"]],["exprpath"]]],[11,"clone","","",224,[[["self"]],["exprrange"]]],[11,"clone","","",225,[[["self"]],["exprreference"]]],[11,"clone","","",226,[[["self"]],["exprrepeat"]]],[11,"clone","","",227,[[["self"]],["exprreturn"]]],[11,"clone","","",228,[[["self"]],["exprstruct"]]],[11,"clone","","",229,[[["self"]],["exprtry"]]],[11,"clone","","",230,[[["self"]],["exprtryblock"]]],[11,"clone","","",231,[[["self"]],["exprtuple"]]],[11,"clone","","",232,[[["self"]],["exprtype"]]],[11,"clone","","",18,[[["self"]],["exprunary"]]],[11,"clone","","",233,[[["self"]],["exprunsafe"]]],[11,"clone","","",234,[[["self"]],["exprwhile"]]],[11,"clone","","",235,[[["self"]],["expryield"]]],[11,"clone","","",67,[[["self"]],["member"]]],[11,"clone","","",19,[[["self"]],["index"]]],[11,"clone","","",22,[[["self"]],["generics"]]],[11,"clone","","",68,[[["self"]],["genericparam"]]],[11,"clone","","",28,[[["self"]],["typeparam"]]],[11,"clone","","",23,[[["self"]],["lifetimedef"]]],[11,"clone","","",21,[[["self"]],["constparam"]]],[11,"clone","","",236,[[["self"]],["implgenerics"]]],[11,"clone","","",185,[[["self"]],["typegenerics"]]],[11,"clone","","",237,[[["self"]],["turbofish"]]],[11,"clone","","",20,[[["self"]],["boundlifetimes"]]],[11,"clone","","",70,[[["self"]],["typeparambound"]]],[11,"clone","","",27,[[["self"]],["traitbound"]]],[11,"clone","","",69,[[["self"]],["traitboundmodifier"]]],[11,"clone","","",29,[[["self"]],["whereclause"]]],[11,"clone","","",71,[[["self"]],["wherepredicate"]]],[11,"clone","","",26,[[["self"]],["predicatetype"]]],[11,"clone","","",25,[[["self"]],["predicatelifetime"]]],[11,"clone","","",24,[[["self"]],["predicateeq"]]],[11,"clone","","",30,[[["self"]],["lifetime"]]],[11,"clone","","",72,[[["self"]],["lit"]]],[11,"clone","","",186,[[["self"]],["litstr"]]],[11,"clone","","",187,[[["self"]],["litbytestr"]]],[11,"clone","","",188,[[["self"]],["litbyte"]]],[11,"clone","","",189,[[["self"]],["litchar"]]],[11,"clone","","",190,[[["self"]],["litint"]]],[11,"clone","","",191,[[["self"]],["litfloat"]]],[11,"clone","","",31,[[["self"]],["litbool"]]],[11,"clone","","",73,[[["self"]],["strstyle"]]],[11,"clone","","",32,[[["self"]],["macro"]]],[11,"clone","","",74,[[["self"]],["macrodelimiter"]]],[11,"clone","","",36,[[["self"]],["deriveinput"]]],[11,"clone","","",75,[[["self"]],["data"]]],[11,"clone","","",34,[[["self"]],["datastruct"]]],[11,"clone","","",33,[[["self"]],["dataenum"]]],[11,"clone","","",35,[[["self"]],["dataunion"]]],[11,"clone","","",76,[[["self"]],["binop"]]],[11,"clone","","",77,[[["self"]],["unop"]]],[11,"clone","","",79,[[["self"]],["type"]]],[11,"clone","","",39,[[["self"]],["typearray"]]],[11,"clone","","",40,[[["self"]],["typebarefn"]]],[11,"clone","","",41,[[["self"]],["typegroup"]]],[11,"clone","","",42,[[["self"]],["typeimpltrait"]]],[11,"clone","","",43,[[["self"]],["typeinfer"]]],[11,"clone","","",44,[[["self"]],["typemacro"]]],[11,"clone","","",45,[[["self"]],["typenever"]]],[11,"clone","","",46,[[["self"]],["typeparen"]]],[11,"clone","","",47,[[["self"]],["typepath"]]],[11,"clone","","",48,[[["self"]],["typeptr"]]],[11,"clone","","",49,[[["self"]],["typereference"]]],[11,"clone","","",50,[[["self"]],["typeslice"]]],[11,"clone","","",51,[[["self"]],["typetraitobject"]]],[11,"clone","","",52,[[["self"]],["typetuple"]]],[11,"clone","","",37,[[["self"]],["abi"]]],[11,"clone","","",38,[[["self"]],["barefnarg"]]],[11,"clone","","",53,[[["self"]],["variadic"]]],[11,"clone","","",78,[[["self"]],["returntype"]]],[11,"clone","","",58,[[["self"]],["path"]]],[11,"clone","","",59,[[["self"]],["pathsegment"]]],[11,"clone","","",81,[[["self"]],["patharguments"]]],[11,"clone","","",80,[[["self"]],["genericargument"]]],[11,"clone","","",54,[[["self"]],["anglebracketedgenericarguments"]]],[11,"clone","","",55,[[["self"]],["binding"]]],[11,"clone","","",56,[[["self"]],["constraint"]]],[11,"clone","","",57,[[["self"]],["parenthesizedgenericarguments"]]],[11,"clone","","",60,[[["self"]],["qself"]]],[11,"clone","syn::buffer","",193,[[["self"]],["cursor"]]],[11,"clone","syn::punctuated","",196,[[["self"]],["punctuated"]]],[11,"clone","","",238,[[["self"]],["self"]]],[11,"clone","","",240,[[["self"]],["intopairs"]]],[11,"clone","","",241,[[["self"]],["intoiter"]]],[11,"clone","","",242,[[["self"]],["self"]]],[11,"clone","","",195,[[["self"]],["pair"]]],[11,"clone","syn::parse","",202,[[["self"]],["stepcursor"]]],[11,"clone","syn","",204,[[["self"]],["error"]]],[11,"default","syn::token","",82,[[],["self"]]],[11,"default","","",83,[[],["self"]]],[11,"default","","",84,[[],["self"]]],[11,"default","","",85,[[],["self"]]],[11,"default","","",86,[[],["self"]]],[11,"default","","",87,[[],["self"]]],[11,"default","","",88,[[],["self"]]],[11,"default","","",89,[[],["self"]]],[11,"default","","",90,[[],["self"]]],[11,"default","","",91,[[],["self"]]],[11,"default","","",92,[[],["self"]]],[11,"default","","",93,[[],["self"]]],[11,"default","","",94,[[],["self"]]],[11,"default","","",95,[[],["self"]]],[11,"default","","",96,[[],["self"]]],[11,"default","","",97,[[],["self"]]],[11,"default","","",98,[[],["self"]]],[11,"default","","",99,[[],["self"]]],[11,"default","","",100,[[],["self"]]],[11,"default","","",101,[[],["self"]]],[11,"default","","",102,[[],["self"]]],[11,"default","","",103,[[],["self"]]],[11,"default","","",104,[[],["self"]]],[11,"default","","",105,[[],["self"]]],[11,"default","","",106,[[],["self"]]],[11,"default","","",107,[[],["self"]]],[11,"default","","",108,[[],["self"]]],[11,"default","","",109,[[],["self"]]],[11,"default","","",110,[[],["self"]]],[11,"default","","",111,[[],["self"]]],[11,"default","","",112,[[],["self"]]],[11,"default","","",113,[[],["self"]]],[11,"default","","",114,[[],["self"]]],[11,"default","","",115,[[],["self"]]],[11,"default","","",116,[[],["self"]]],[11,"default","","",117,[[],["self"]]],[11,"default","","",118,[[],["self"]]],[11,"default","","",119,[[],["self"]]],[11,"default","","",120,[[],["self"]]],[11,"default","","",121,[[],["self"]]],[11,"default","","",122,[[],["self"]]],[11,"default","","",123,[[],["self"]]],[11,"default","","",124,[[],["self"]]],[11,"default","","",125,[[],["self"]]],[11,"default","","",126,[[],["self"]]],[11,"default","","",127,[[],["self"]]],[11,"default","","",128,[[],["self"]]],[11,"default","","",129,[[],["self"]]],[11,"default","","",130,[[],["self"]]],[11,"default","","",131,[[],["self"]]],[11,"default","","",132,[[],["self"]]],[11,"default","","",133,[[],["self"]]],[11,"default","","",134,[[],["self"]]],[11,"default","","",135,[[],["self"]]],[11,"default","","",136,[[],["self"]]],[11,"default","","",137,[[],["self"]]],[11,"default","","",138,[[],["self"]]],[11,"default","","",139,[[],["self"]]],[11,"default","","",140,[[],["self"]]],[11,"default","","",141,[[],["self"]]],[11,"default","","",142,[[],["self"]]],[11,"default","","",143,[[],["self"]]],[11,"default","","",144,[[],["self"]]],[11,"default","","",145,[[],["self"]]],[11,"default","","",146,[[],["self"]]],[11,"default","","",147,[[],["self"]]],[11,"default","","",148,[[],["self"]]],[11,"default","","",149,[[],["self"]]],[11,"default","","",150,[[],["self"]]],[11,"default","","",151,[[],["self"]]],[11,"default","","",152,[[],["self"]]],[11,"default","","",153,[[],["self"]]],[11,"default","","",154,[[],["self"]]],[11,"default","","",155,[[],["self"]]],[11,"default","","",156,[[],["self"]]],[11,"default","","",157,[[],["self"]]],[11,"default","","",158,[[],["self"]]],[11,"default","","",159,[[],["self"]]],[11,"default","","",160,[[],["self"]]],[11,"default","","",161,[[],["self"]]],[11,"default","","",162,[[],["self"]]],[11,"default","","",163,[[],["self"]]],[11,"default","","",164,[[],["self"]]],[11,"default","","",165,[[],["self"]]],[11,"default","","",166,[[],["self"]]],[11,"default","","",167,[[],["self"]]],[11,"default","","",168,[[],["self"]]],[11,"default","","",169,[[],["self"]]],[11,"default","","",170,[[],["self"]]],[11,"default","","",171,[[],["self"]]],[11,"default","","",172,[[],["self"]]],[11,"default","","",173,[[],["self"]]],[11,"default","","",174,[[],["self"]]],[11,"default","","",175,[[],["self"]]],[11,"default","","",176,[[],["self"]]],[11,"default","","",177,[[],["self"]]],[11,"default","","",178,[[],["self"]]],[11,"default","","",179,[[],["self"]]],[11,"default","","",180,[[],["self"]]],[11,"default","","",181,[[],["self"]]],[11,"default","","",182,[[],["self"]]],[11,"default","","",183,[[],["self"]]],[11,"default","","",184,[[],["self"]]],[11,"default","syn","",22,[[],["generics"]]],[11,"default","","",20,[[],["boundlifetimes"]]],[11,"default","","",81,[[],["self"]]],[11,"default","syn::punctuated","",196,[[],["self"]]],[11,"cmp","syn","",30,[[["lifetime"],["self"]],["ordering"]]],[11,"eq","","",67,[[["self"],["member"]],["bool"]]],[11,"ne","","",67,[[["self"],["member"]],["bool"]]],[11,"eq","","",19,[[["self"]],["bool"]]],[11,"eq","","",30,[[["lifetime"],["self"]],["bool"]]],[11,"eq","syn::buffer","",193,[[["self"],["cursor"]],["bool"]]],[11,"ne","","",193,[[["self"],["cursor"]],["bool"]]],[11,"partial_cmp","syn","",30,[[["lifetime"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"deref","syn::token","",82,[[["self"]]]],[11,"deref","","",135,[[["self"]]]],[11,"deref","","",137,[[["self"]]]],[11,"deref","","",140,[[["self"]]]],[11,"deref","","",141,[[["self"]]]],[11,"deref","","",142,[[["self"]]]],[11,"deref","","",144,[[["self"]]]],[11,"deref","","",146,[[["self"]]]],[11,"deref","","",147,[[["self"]]]],[11,"deref","","",149,[[["self"]]]],[11,"deref","","",150,[[["self"]]]],[11,"deref","","",154,[[["self"]]]],[11,"deref","","",157,[[["self"]]]],[11,"deref","","",159,[[["self"]]]],[11,"deref","","",162,[[["self"]]]],[11,"deref","","",165,[[["self"]]]],[11,"deref","","",166,[[["self"]]]],[11,"deref","","",169,[[["self"]]]],[11,"deref","","",172,[[["self"]]]],[11,"deref","","",177,[[["self"]]]],[11,"deref","","",178,[[["self"]]]],[11,"deref","","",180,[[["self"]]]],[11,"deref","syn::parse","",202,[[["self"]]]],[11,"deref_mut","syn::token","",82,[[["self"]]]],[11,"deref_mut","","",135,[[["self"]]]],[11,"deref_mut","","",137,[[["self"]]]],[11,"deref_mut","","",140,[[["self"]]]],[11,"deref_mut","","",141,[[["self"]]]],[11,"deref_mut","","",142,[[["self"]]]],[11,"deref_mut","","",144,[[["self"]]]],[11,"deref_mut","","",146,[[["self"]]]],[11,"deref_mut","","",147,[[["self"]]]],[11,"deref_mut","","",149,[[["self"]]]],[11,"deref_mut","","",150,[[["self"]]]],[11,"deref_mut","","",154,[[["self"]]]],[11,"deref_mut","","",157,[[["self"]]]],[11,"deref_mut","","",159,[[["self"]]]],[11,"deref_mut","","",162,[[["self"]]]],[11,"deref_mut","","",165,[[["self"]]]],[11,"deref_mut","","",166,[[["self"]]]],[11,"deref_mut","","",169,[[["self"]]]],[11,"deref_mut","","",172,[[["self"]]]],[11,"deref_mut","","",177,[[["self"]]]],[11,"deref_mut","","",178,[[["self"]]]],[11,"deref_mut","","",180,[[["self"]]]],[11,"fmt","syn::parse","",203,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn","",204,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",190,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",191,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn::parse","",203,[[["formatter"],["self"]],["result"]]],[11,"fmt","syn","",204,[[["formatter"],["self"]],["result"]]],[11,"index","syn::punctuated","",196,[[["self"],["usize"]]]],[11,"index_mut","","",196,[[["self"],["usize"]]]],[11,"hash","syn","",67,[[["self"],["__h"]]]],[11,"hash","","",19,[[["self"],["h"]]]],[11,"hash","","",30,[[["self"],["h"]]]],[11,"from_iter","syn::punctuated","",196,[[["intoiterator"]],["self"]]],[11,"from_iter","","",196,[[["intoiterator"]],["self"]]],[11,"description","syn","",204,[[["self"]],["str"]]],[11,"to_tokens","syn::token","",82,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",83,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",84,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",85,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",86,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",87,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",88,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",89,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",90,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",91,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",92,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",93,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",94,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",95,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",96,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",97,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",98,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",99,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",100,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",101,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",102,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",103,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",104,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",105,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",106,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",107,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",108,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",109,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",110,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",111,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",112,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",113,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",114,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",115,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",116,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",117,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",118,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",119,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",120,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",121,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",122,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",123,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",124,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",125,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",126,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",127,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",128,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",129,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",130,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",131,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",132,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",133,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",134,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",135,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",136,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",137,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",138,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",139,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",140,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",141,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",142,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",143,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",144,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",145,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",146,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",147,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",148,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",149,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",150,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",151,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",152,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",153,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",154,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",155,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",156,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",157,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",158,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",159,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",160,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",161,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",162,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",163,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",164,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",165,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",166,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",167,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",168,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",169,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",170,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",171,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",172,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",173,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",174,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",175,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",176,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",177,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",178,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",179,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",180,[[["tokenstream"],["self"]]]],[11,"to_tokens","syn","",62,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",63,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",0,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",1,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",2,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",64,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",65,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",6,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",4,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",5,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",3,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",8,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",7,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",9,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",66,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",206,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",207,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",208,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",209,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",210,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",211,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",212,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",213,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",214,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",215,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",216,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",217,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",218,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",219,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",220,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",221,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",222,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",223,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",224,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",225,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",226,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",227,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",228,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",229,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",230,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",231,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",232,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",233,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",234,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",235,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",11,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",10,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",18,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",15,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",12,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",13,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",67,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",19,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",14,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",17,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",16,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",68,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",70,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",71,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",22,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",236,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",185,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",237,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",20,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",23,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",28,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",27,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",69,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",21,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",29,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",26,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",25,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",24,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",30,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",72,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",186,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",187,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",188,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",189,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",190,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",191,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",31,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",32,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",36,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",76,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",77,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",79,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",50,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",39,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",48,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",49,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",40,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",45,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",52,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",47,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",51,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",42,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",41,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",46,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",43,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",44,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",78,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",38,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",53,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",37,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",58,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",59,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",81,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",80,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",54,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",55,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",56,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",57,[[["tokenstream"],["self"]]]],[11,"to_tokens","syn::punctuated","",196,[[["tokenstream"],["self"]]]],[11,"to_tokens","","",195,[[["tokenstream"],["self"]]]],[11,"fmt","syn","",67,[[["formatter"],["self"]],["result"]]],[11,"span","","",67,[[["self"]],[["span"],["option",["span"]]]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"span","","",19,[[["self"]],[["span"],["option",["span"]]]]],[11,"new","","Creates a new `Ident` with the given `string` as well as…",205,[[["str"],["span"]],["ident"]]],[11,"span","","Returns the span of this `Ident`.",205,[[["self"]],["span"]]],[11,"set_span","","Configures the span of this `Ident`, possibly changing its…",205,[[["self"],["span"]]]],[11,"visit_abi","syn::visit","",198,[[["self"],["abi"]]]],[11,"visit_angle_bracketed_generic_arguments","","",198,[[["self"],["anglebracketedgenericarguments"]]]],[11,"visit_attr_style","","",198,[[["attrstyle"],["self"]]]],[11,"visit_attribute","","",198,[[["self"],["attribute"]]]],[11,"visit_bare_fn_arg","","",198,[[["self"],["barefnarg"]]]],[11,"visit_bin_op","","",198,[[["binop"],["self"]]]],[11,"visit_binding","","",198,[[["binding"],["self"]]]],[11,"visit_bound_lifetimes","","",198,[[["self"],["boundlifetimes"]]]],[11,"visit_const_param","","",198,[[["self"],["constparam"]]]],[11,"visit_constraint","","",198,[[["constraint"],["self"]]]],[11,"visit_data","","",198,[[["self"],["data"]]]],[11,"visit_data_enum","","",198,[[["self"],["dataenum"]]]],[11,"visit_data_struct","","",198,[[["self"],["datastruct"]]]],[11,"visit_data_union","","",198,[[["self"],["dataunion"]]]],[11,"visit_derive_input","","",198,[[["self"],["deriveinput"]]]],[11,"visit_expr","","",198,[[["self"],["expr"]]]],[11,"visit_expr_binary","","",198,[[["exprbinary"],["self"]]]],[11,"visit_expr_call","","",198,[[["exprcall"],["self"]]]],[11,"visit_expr_cast","","",198,[[["self"],["exprcast"]]]],[11,"visit_expr_field","","",198,[[["self"],["exprfield"]]]],[11,"visit_expr_index","","",198,[[["self"],["exprindex"]]]],[11,"visit_expr_lit","","",198,[[["self"],["exprlit"]]]],[11,"visit_expr_paren","","",198,[[["self"],["exprparen"]]]],[11,"visit_expr_path","","",198,[[["self"],["exprpath"]]]],[11,"visit_expr_unary","","",198,[[["self"],["exprunary"]]]],[11,"visit_field","","",198,[[["field"],["self"]]]],[11,"visit_fields","","",198,[[["self"],["fields"]]]],[11,"visit_fields_named","","",198,[[["self"],["fieldsnamed"]]]],[11,"visit_fields_unnamed","","",198,[[["fieldsunnamed"],["self"]]]],[11,"visit_generic_argument","","",198,[[["genericargument"],["self"]]]],[11,"visit_generic_param","","",198,[[["self"],["genericparam"]]]],[11,"visit_generics","","",198,[[["generics"],["self"]]]],[11,"visit_ident","","",198,[[["self"],["ident"]]]],[11,"visit_index","","",198,[[["index"],["self"]]]],[11,"visit_lifetime","","",198,[[["self"],["lifetime"]]]],[11,"visit_lifetime_def","","",198,[[["self"],["lifetimedef"]]]],[11,"visit_lit","","",198,[[["self"],["lit"]]]],[11,"visit_lit_bool","","",198,[[["self"],["litbool"]]]],[11,"visit_lit_byte","","",198,[[["self"],["litbyte"]]]],[11,"visit_lit_byte_str","","",198,[[["self"],["litbytestr"]]]],[11,"visit_lit_char","","",198,[[["self"],["litchar"]]]],[11,"visit_lit_float","","",198,[[["self"],["litfloat"]]]],[11,"visit_lit_int","","",198,[[["self"],["litint"]]]],[11,"visit_lit_str","","",198,[[["self"],["litstr"]]]],[11,"visit_macro","","",198,[[["self"],["macro"]]]],[11,"visit_macro_delimiter","","",198,[[["self"],["macrodelimiter"]]]],[11,"visit_member","","",198,[[["member"],["self"]]]],[11,"visit_meta","","",198,[[["meta"],["self"]]]],[11,"visit_meta_list","","",198,[[["self"],["metalist"]]]],[11,"visit_meta_name_value","","",198,[[["self"],["metanamevalue"]]]],[11,"visit_nested_meta","","",198,[[["nestedmeta"],["self"]]]],[11,"visit_parenthesized_generic_arguments","","",198,[[["self"],["parenthesizedgenericarguments"]]]],[11,"visit_path","","",198,[[["self"],["path"]]]],[11,"visit_path_arguments","","",198,[[["self"],["patharguments"]]]],[11,"visit_path_segment","","",198,[[["self"],["pathsegment"]]]],[11,"visit_predicate_eq","","",198,[[["self"],["predicateeq"]]]],[11,"visit_predicate_lifetime","","",198,[[["predicatelifetime"],["self"]]]],[11,"visit_predicate_type","","",198,[[["self"],["predicatetype"]]]],[11,"visit_qself","","",198,[[["self"],["qself"]]]],[11,"visit_return_type","","",198,[[["self"],["returntype"]]]],[11,"visit_span","","",198,[[["self"],["span"]]]],[11,"visit_trait_bound","","",198,[[["self"],["traitbound"]]]],[11,"visit_trait_bound_modifier","","",198,[[["traitboundmodifier"],["self"]]]],[11,"visit_type","","",198,[[["self"],["type"]]]],[11,"visit_type_array","","",198,[[["typearray"],["self"]]]],[11,"visit_type_bare_fn","","",198,[[["self"],["typebarefn"]]]],[11,"visit_type_group","","",198,[[["typegroup"],["self"]]]],[11,"visit_type_impl_trait","","",198,[[["self"],["typeimpltrait"]]]],[11,"visit_type_infer","","",198,[[["self"],["typeinfer"]]]],[11,"visit_type_macro","","",198,[[["typemacro"],["self"]]]],[11,"visit_type_never","","",198,[[["self"],["typenever"]]]],[11,"visit_type_param","","",198,[[["self"],["typeparam"]]]],[11,"visit_type_param_bound","","",198,[[["self"],["typeparambound"]]]],[11,"visit_type_paren","","",198,[[["typeparen"],["self"]]]],[11,"visit_type_path","","",198,[[["self"],["typepath"]]]],[11,"visit_type_ptr","","",198,[[["self"],["typeptr"]]]],[11,"visit_type_reference","","",198,[[["self"],["typereference"]]]],[11,"visit_type_slice","","",198,[[["self"],["typeslice"]]]],[11,"visit_type_trait_object","","",198,[[["typetraitobject"],["self"]]]],[11,"visit_type_tuple","","",198,[[["self"],["typetuple"]]]],[11,"visit_un_op","","",198,[[["unop"],["self"]]]],[11,"visit_variadic","","",198,[[["self"],["variadic"]]]],[11,"visit_variant","","",198,[[["variant"],["self"]]]],[11,"visit_vis_crate","","",198,[[["self"],["viscrate"]]]],[11,"visit_vis_public","","",198,[[["self"],["vispublic"]]]],[11,"visit_vis_restricted","","",198,[[["self"],["visrestricted"]]]],[11,"visit_visibility","","",198,[[["self"],["visibility"]]]],[11,"visit_where_clause","","",198,[[["self"],["whereclause"]]]],[11,"visit_where_predicate","","",198,[[["wherepredicate"],["self"]]]],[11,"peek","syn::parse","Looks at the next token in the parse stream to determine…",244,[[["peek"],["self"]],["bool"]]],[11,"error","","Triggers an error at the current position of the parse…",244,[[],["error"]]]],"p":[[3,"Attribute"],[3,"MetaList"],[3,"MetaNameValue"],[3,"Field"],[3,"FieldsNamed"],[3,"FieldsUnnamed"],[3,"Variant"],[3,"VisCrate"],[3,"VisPublic"],[3,"VisRestricted"],[3,"ExprBinary"],[3,"ExprCall"],[3,"ExprCast"],[3,"ExprField"],[3,"ExprIndex"],[3,"ExprLit"],[3,"ExprParen"],[3,"ExprPath"],[3,"ExprUnary"],[3,"Index"],[3,"BoundLifetimes"],[3,"ConstParam"],[3,"Generics"],[3,"LifetimeDef"],[3,"PredicateEq"],[3,"PredicateLifetime"],[3,"PredicateType"],[3,"TraitBound"],[3,"TypeParam"],[3,"WhereClause"],[3,"Lifetime"],[3,"LitBool"],[3,"Macro"],[3,"DataEnum"],[3,"DataStruct"],[3,"DataUnion"],[3,"DeriveInput"],[3,"Abi"],[3,"BareFnArg"],[3,"TypeArray"],[3,"TypeBareFn"],[3,"TypeGroup"],[3,"TypeImplTrait"],[3,"TypeInfer"],[3,"TypeMacro"],[3,"TypeNever"],[3,"TypeParen"],[3,"TypePath"],[3,"TypePtr"],[3,"TypeReference"],[3,"TypeSlice"],[3,"TypeTraitObject"],[3,"TypeTuple"],[3,"Variadic"],[3,"AngleBracketedGenericArguments"],[3,"Binding"],[3,"Constraint"],[3,"ParenthesizedGenericArguments"],[3,"Path"],[3,"PathSegment"],[3,"QSelf"],[4,"AttrStyle"],[4,"Meta"],[4,"NestedMeta"],[4,"Fields"],[4,"Visibility"],[4,"Expr"],[4,"Member"],[4,"GenericParam"],[4,"TraitBoundModifier"],[4,"TypeParamBound"],[4,"WherePredicate"],[4,"Lit"],[4,"StrStyle"],[4,"MacroDelimiter"],[4,"Data"],[4,"BinOp"],[4,"UnOp"],[4,"ReturnType"],[4,"Type"],[4,"GenericArgument"],[4,"PathArguments"],[3,"Underscore"],[3,"Abstract"],[3,"As"],[3,"Async"],[3,"Auto"],[3,"Await"],[3,"Become"],[3,"Box"],[3,"Break"],[3,"Const"],[3,"Continue"],[3,"Crate"],[3,"Default"],[3,"Do"],[3,"Dyn"],[3,"Else"],[3,"Enum"],[3,"Extern"],[3,"Final"],[3,"Fn"],[3,"For"],[3,"If"],[3,"Impl"],[3,"In"],[3,"Let"],[3,"Loop"],[3,"Macro"],[3,"Match"],[3,"Mod"],[3,"Move"],[3,"Mut"],[3,"Override"],[3,"Priv"],[3,"Pub"],[3,"Ref"],[3,"Return"],[3,"SelfType"],[3,"SelfValue"],[3,"Static"],[3,"Struct"],[3,"Super"],[3,"Trait"],[3,"Try"],[3,"Type"],[3,"Typeof"],[3,"Union"],[3,"Unsafe"],[3,"Unsized"],[3,"Use"],[3,"Virtual"],[3,"Where"],[3,"While"],[3,"Yield"],[3,"Add"],[3,"AddEq"],[3,"And"],[3,"AndAnd"],[3,"AndEq"],[3,"At"],[3,"Bang"],[3,"Caret"],[3,"CaretEq"],[3,"Colon"],[3,"Colon2"],[3,"Comma"],[3,"Div"],[3,"DivEq"],[3,"Dollar"],[3,"Dot"],[3,"Dot2"],[3,"Dot3"],[3,"DotDotEq"],[3,"Eq"],[3,"EqEq"],[3,"Ge"],[3,"Gt"],[3,"Le"],[3,"Lt"],[3,"MulEq"],[3,"Ne"],[3,"Or"],[3,"OrEq"],[3,"OrOr"],[3,"Pound"],[3,"Question"],[3,"RArrow"],[3,"LArrow"],[3,"Rem"],[3,"RemEq"],[3,"FatArrow"],[3,"Semi"],[3,"Shl"],[3,"ShlEq"],[3,"Shr"],[3,"ShrEq"],[3,"Star"],[3,"Sub"],[3,"SubEq"],[3,"Tilde"],[3,"Brace"],[3,"Bracket"],[3,"Paren"],[3,"Group"],[3,"TypeGenerics"],[3,"LitStr"],[3,"LitByteStr"],[3,"LitByte"],[3,"LitChar"],[3,"LitInt"],[3,"LitFloat"],[3,"TokenBuffer"],[3,"Cursor"],[8,"IdentExt"],[4,"Pair"],[3,"Punctuated"],[8,"Spanned"],[8,"Visit"],[8,"Speculative"],[8,"Parse"],[8,"Parser"],[3,"StepCursor"],[3,"ParseBuffer"],[3,"Error"],[3,"Ident"],[3,"ExprArray"],[3,"ExprAssign"],[3,"ExprAssignOp"],[3,"ExprAsync"],[3,"ExprAwait"],[3,"ExprBlock"],[3,"ExprBox"],[3,"ExprBreak"],[3,"ExprClosure"],[3,"ExprContinue"],[3,"ExprForLoop"],[3,"ExprGroup"],[3,"ExprIf"],[3,"ExprLet"],[3,"ExprLoop"],[3,"ExprMacro"],[3,"ExprMatch"],[3,"ExprMethodCall"],[3,"ExprRange"],[3,"ExprReference"],[3,"ExprRepeat"],[3,"ExprReturn"],[3,"ExprStruct"],[3,"ExprTry"],[3,"ExprTryBlock"],[3,"ExprTuple"],[3,"ExprType"],[3,"ExprUnsafe"],[3,"ExprWhile"],[3,"ExprYield"],[3,"ImplGenerics"],[3,"Turbofish"],[3,"Pairs"],[3,"PairsMut"],[3,"IntoPairs"],[3,"IntoIter"],[3,"Iter"],[3,"IterMut"],[3,"Lookahead1"],[3,"Nothing"]]};
searchIndex["target_lexicon"] = {"doc":"Target triple support.","i":[[3,"Triple","target_lexicon","A target \"triple\". Historically such things had three…",null,null],[12,"architecture","","The \"architecture\" (and sometimes the subarchitecture).",0,null],[12,"vendor","","The \"vendor\" (whatever that means).",0,null],[12,"operating_system","","The \"operating system\" (sometimes also the environment).",0,null],[12,"environment","","The \"environment\" on top of the operating system (often…",0,null],[12,"binary_format","","The \"binary format\" (rarely used).",0,null],[4,"ParseError","","An error returned from parsing a triple.",null,null],[13,"UnrecognizedArchitecture","","",1,null],[13,"UnrecognizedVendor","","",1,null],[13,"UnrecognizedOperatingSystem","","",1,null],[13,"UnrecognizedEnvironment","","",1,null],[13,"UnrecognizedBinaryFormat","","",1,null],[13,"UnrecognizedField","","",1,null],[4,"Aarch64Architecture","","",null,null],[13,"Aarch64","","",2,null],[13,"Aarch64be","","",2,null],[4,"Architecture","","The \"architecture\" field, which in some cases also…",null,null],[13,"Unknown","","",3,null],[13,"Arm","","",3,null],[13,"AmdGcn","","",3,null],[13,"Aarch64","","",3,null],[13,"Asmjs","","",3,null],[13,"Hexagon","","",3,null],[13,"I386","","",3,null],[13,"I586","","",3,null],[13,"I686","","",3,null],[13,"Mips","","",3,null],[13,"Mips64","","",3,null],[13,"Mips64el","","",3,null],[13,"Mipsel","","",3,null],[13,"Mipsisa32r6","","",3,null],[13,"Mipsisa32r6el","","",3,null],[13,"Mipsisa64r6","","",3,null],[13,"Mipsisa64r6el","","",3,null],[13,"Msp430","","",3,null],[13,"Nvptx64","","",3,null],[13,"Powerpc","","",3,null],[13,"Powerpc64","","",3,null],[13,"Powerpc64le","","",3,null],[13,"Riscv32","","",3,null],[13,"Riscv32i","","",3,null],[13,"Riscv32imac","","",3,null],[13,"Riscv32imc","","",3,null],[13,"Riscv64","","",3,null],[13,"Riscv64gc","","",3,null],[13,"Riscv64imac","","",3,null],[13,"S390x","","",3,null],[13,"Sparc","","",3,null],[13,"Sparc64","","",3,null],[13,"Sparcv9","","",3,null],[13,"Wasm32","","",3,null],[13,"X86_64","","",3,null],[4,"ArmArchitecture","","",null,null],[13,"Arm","","",4,null],[13,"Armeb","","",4,null],[13,"Armv4","","",4,null],[13,"Armv4t","","",4,null],[13,"Armv5t","","",4,null],[13,"Armv5te","","",4,null],[13,"Armv5tej","","",4,null],[13,"Armv6","","",4,null],[13,"Armv6j","","",4,null],[13,"Armv6k","","",4,null],[13,"Armv6z","","",4,null],[13,"Armv6kz","","",4,null],[13,"Armv6t2","","",4,null],[13,"Armv6m","","",4,null],[13,"Armv7","","",4,null],[13,"Armv7a","","",4,null],[13,"Armv7ve","","",4,null],[13,"Armv7m","","",4,null],[13,"Armv7r","","",4,null],[13,"Armv7s","","",4,null],[13,"Armv8","","",4,null],[13,"Armv8a","","",4,null],[13,"Armv8_1a","","",4,null],[13,"Armv8_2a","","",4,null],[13,"Armv8_3a","","",4,null],[13,"Armv8_4a","","",4,null],[13,"Armv8_5a","","",4,null],[13,"Armv8mBase","","",4,null],[13,"Armv8mMain","","",4,null],[13,"Armv8r","","",4,null],[13,"Armebv7r","","",4,null],[13,"Thumbeb","","",4,null],[13,"Thumbv6m","","",4,null],[13,"Thumbv7a","","",4,null],[13,"Thumbv7em","","",4,null],[13,"Thumbv7m","","",4,null],[13,"Thumbv7neon","","",4,null],[13,"Thumbv8mBase","","",4,null],[13,"Thumbv8mMain","","",4,null],[4,"BinaryFormat","","The \"binary format\" field, which is usually omitted, and…",null,null],[13,"Unknown","","",5,null],[13,"Elf","","",5,null],[13,"Coff","","",5,null],[13,"Macho","","",5,null],[13,"Wasm","","",5,null],[4,"Environment","","The \"environment\" field, which specifies an ABI…",null,null],[13,"Unknown","","",6,null],[13,"AmdGiz","","",6,null],[13,"Android","","",6,null],[13,"Androideabi","","",6,null],[13,"Eabi","","",6,null],[13,"Eabihf","","",6,null],[13,"Gnu","","",6,null],[13,"Gnuabi64","","",6,null],[13,"Gnueabi","","",6,null],[13,"Gnueabihf","","",6,null],[13,"Gnuspe","","",6,null],[13,"Gnux32","","",6,null],[13,"Musl","","",6,null],[13,"Musleabi","","",6,null],[13,"Musleabihf","","",6,null],[13,"Muslabi64","","",6,null],[13,"Msvc","","",6,null],[13,"Kernel","","",6,null],[13,"Uclibc","","",6,null],[13,"Sgx","","",6,null],[13,"Softfloat","","",6,null],[13,"Spe","","",6,null],[4,"OperatingSystem","","The \"operating system\" field, which sometimes implies an…",null,null],[13,"Unknown","","",7,null],[13,"AmdHsa","","",7,null],[13,"Bitrig","","",7,null],[13,"Cloudabi","","",7,null],[13,"Cuda","","",7,null],[13,"Darwin","","",7,null],[13,"Dragonfly","","",7,null],[13,"Emscripten","","",7,null],[13,"Freebsd","","",7,null],[13,"Fuchsia","","",7,null],[13,"Haiku","","",7,null],[13,"Hermit","","",7,null],[13,"Ios","","",7,null],[13,"L4re","","",7,null],[13,"Linux","","",7,null],[13,"MacOSX","","",7,null],[12,"major","target_lexicon::OperatingSystem","",7,null],[12,"minor","","",7,null],[12,"patch","","",7,null],[13,"Nebulet","target_lexicon","",7,null],[13,"Netbsd","","",7,null],[13,"None_","","",7,null],[13,"Openbsd","","",7,null],[13,"Redox","","",7,null],[13,"Solaris","","",7,null],[13,"Uefi","","",7,null],[13,"VxWorks","","",7,null],[13,"Wasi","","",7,null],[13,"Windows","","",7,null],[4,"Vendor","","The \"vendor\" field, which in practice is little more than…",null,null],[13,"Unknown","","",8,null],[13,"Amd","","",8,null],[13,"Apple","","",8,null],[13,"Experimental","","",8,null],[13,"Fortanix","","",8,null],[13,"Nvidia","","",8,null],[13,"Pc","","",8,null],[13,"Rumprun","","",8,null],[13,"Sun","","",8,null],[13,"Uwp","","",8,null],[13,"Wrs","","",8,null],[4,"CallingConvention","","The calling convention, which specifies things like which…",null,null],[13,"SystemV","","\"System V\", which is used on most Unix-like platfoms. Note…",9,null],[13,"WasmBasicCAbi","","The WebAssembly C ABI.…",9,null],[13,"WindowsFastcall","","\"Windows Fastcall\", which is used on Windows. Note that…",9,null],[4,"Endianness","","The target memory endianness.",null,null],[13,"Little","","",10,null],[13,"Big","","",10,null],[4,"PointerWidth","","The width of a pointer (in the default address space).",null,null],[13,"U16","","",11,null],[13,"U32","","",11,null],[13,"U64","","",11,null],[11,"host","","Return the architecture for the current host.",3,[[],["self"]]],[11,"host","","Return the vendor for the current host.",8,[[],["self"]]],[11,"host","","Return the operating system for the current host.",7,[[],["self"]]],[11,"host","","Return the environment for the current host.",6,[[],["self"]]],[11,"host","","Return the binary format for the current host.",5,[[],["self"]]],[11,"host","","Return the triple for the current host.",0,[[],["self"]]],[11,"is_thumb","","Test if this architecture uses the Thumb instruction set.",4,[[],["bool"]]],[11,"pointer_width","","Return the pointer bit width of this target's architecture.",4,[[],["pointerwidth"]]],[11,"endianness","","Return the endianness of this architecture.",4,[[],["endianness"]]],[11,"is_thumb","","Test if this architecture uses the Thumb instruction set.",2,[[],["bool"]]],[11,"pointer_width","","Return the pointer bit width of this target's architecture.",2,[[],["pointerwidth"]]],[11,"endianness","","Return the endianness of this architecture.",2,[[],["endianness"]]],[11,"endianness","","Return the endianness of this architecture.",3,[[],[["result",["endianness"]],["endianness"]]]],[11,"pointer_width","","Return the pointer bit width of this target's architecture.",3,[[],[["result",["pointerwidth"]],["pointerwidth"]]]],[11,"bits","","Return the number of bits in a pointer.",11,[[],["u8"]]],[11,"bytes","","Return the number of bytes in a pointer.",11,[[],["u8"]]],[11,"endianness","","Return the endianness of this target's architecture.",0,[[["self"]],[["result",["endianness"]],["endianness"]]]],[11,"pointer_width","","Return the pointer width of this target's architecture.",0,[[["self"]],[["result",["pointerwidth"]],["pointerwidth"]]]],[11,"default_calling_convention","","Return the default calling convention for the given target…",0,[[["self"]],[["result",["callingconvention"]],["callingconvention"]]]],[17,"HOST","","The `Triple` of the current host.",null,null],[14,"triple","","A convenient syntax for triple literals.",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"to_string","","",0,[[["self"]],["string"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"to_string","","",6,[[["self"]],["string"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"to_string","","",8,[[["self"]],["string"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"eq","","",1,[[["parseerror"],["self"]],["bool"]]],[11,"ne","","",1,[[["parseerror"],["self"]],["bool"]]],[11,"eq","","",3,[[["architecture"],["self"]],["bool"]]],[11,"ne","","",3,[[["architecture"],["self"]],["bool"]]],[11,"eq","","",4,[[["self"],["armarchitecture"]],["bool"]]],[11,"eq","","",2,[[["self"],["aarch64architecture"]],["bool"]]],[11,"eq","","",8,[[["self"],["vendor"]],["bool"]]],[11,"eq","","",7,[[["operatingsystem"],["self"]],["bool"]]],[11,"ne","","",7,[[["operatingsystem"],["self"]],["bool"]]],[11,"eq","","",6,[[["environment"],["self"]],["bool"]]],[11,"eq","","",5,[[["binaryformat"],["self"]],["bool"]]],[11,"eq","","",10,[[["endianness"],["self"]],["bool"]]],[11,"eq","","",11,[[["pointerwidth"],["self"]],["bool"]]],[11,"eq","","",9,[[["callingconvention"],["self"]],["bool"]]],[11,"eq","","",0,[[["self"],["triple"]],["bool"]]],[11,"ne","","",0,[[["self"],["triple"]],["bool"]]],[11,"from_str","","",4,[[["str"]],["result"]]],[11,"from_str","","",2,[[["str"]],["result"]]],[11,"from_str","","",3,[[["str"]],["result"]]],[11,"from_str","","",8,[[["str"]],["result"]]],[11,"from_str","","",7,[[["str"]],["result"]]],[11,"from_str","","",6,[[["str"]],["result"]]],[11,"from_str","","",5,[[["str"]],["result"]]],[11,"from_str","","",0,[[["str"]],["result"]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"hash","","",2,[[["self"],["__h"]]]],[11,"hash","","",8,[[["self"],["__h"]]]],[11,"hash","","",7,[[["self"],["__h"]]]],[11,"hash","","",6,[[["self"],["__h"]]]],[11,"hash","","",5,[[["self"],["__h"]]]],[11,"hash","","",10,[[["self"],["__h"]]]],[11,"hash","","",11,[[["self"],["__h"]]]],[11,"hash","","",9,[[["self"],["__h"]]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"clone","","",1,[[["self"]],["parseerror"]]],[11,"clone","","",3,[[["self"]],["architecture"]]],[11,"clone","","",4,[[["self"]],["armarchitecture"]]],[11,"clone","","",2,[[["self"]],["aarch64architecture"]]],[11,"clone","","",8,[[["self"]],["vendor"]]],[11,"clone","","",7,[[["self"]],["operatingsystem"]]],[11,"clone","","",6,[[["self"]],["environment"]]],[11,"clone","","",5,[[["self"]],["binaryformat"]]],[11,"clone","","",10,[[["self"]],["endianness"]]],[11,"clone","","",11,[[["self"]],["pointerwidth"]]],[11,"clone","","",9,[[["self"]],["callingconvention"]]],[11,"clone","","",0,[[["self"]],["triple"]]],[11,"default","","",0,[[],["self"]]],[11,"default","","",3,[[],["self"]]],[11,"default","","",8,[[],["self"]]],[11,"default","","",7,[[],["self"]]],[11,"default","","",6,[[],["self"]]],[11,"default","","",5,[[],["self"]]]],"p":[[3,"Triple"],[4,"ParseError"],[4,"Aarch64Architecture"],[4,"Architecture"],[4,"ArmArchitecture"],[4,"BinaryFormat"],[4,"Environment"],[4,"OperatingSystem"],[4,"Vendor"],[4,"CallingConvention"],[4,"Endianness"],[4,"PointerWidth"]]};
searchIndex["thiserror"] = {"doc":"This library provides a convenient derive macro for the…","i":[[24,"Error","thiserror","",null,null]],"p":[]};
searchIndex["thiserror_impl"] = {"doc":"","i":[[24,"Error","thiserror_impl","",null,null]],"p":[]};
searchIndex["typenum"] = {"doc":"This crate provides type-level numbers evaluated at…","i":[[3,"Greater","typenum","A potential output from `Cmp`, this is the type equivalent…",null,null],[3,"Less","","A potential output from `Cmp`, this is the type equivalent…",null,null],[3,"Equal","","A potential output from `Cmp`, this is the type equivalent…",null,null],[0,"consts","","Type aliases for many constants.",null,null],[6,"True","typenum::consts","",null,null],[6,"False","","",null,null],[6,"U0","","",null,null],[6,"U1","","",null,null],[6,"P1","","",null,null],[6,"N1","","",null,null],[6,"U2","","",null,null],[6,"P2","","",null,null],[6,"N2","","",null,null],[6,"U3","","",null,null],[6,"P3","","",null,null],[6,"N3","","",null,null],[6,"U4","","",null,null],[6,"P4","","",null,null],[6,"N4","","",null,null],[6,"U5","","",null,null],[6,"P5","","",null,null],[6,"N5","","",null,null],[6,"U6","","",null,null],[6,"P6","","",null,null],[6,"N6","","",null,null],[6,"U7","","",null,null],[6,"P7","","",null,null],[6,"N7","","",null,null],[6,"U8","","",null,null],[6,"P8","","",null,null],[6,"N8","","",null,null],[6,"U9","","",null,null],[6,"P9","","",null,null],[6,"N9","","",null,null],[6,"U10","","",null,null],[6,"P10","","",null,null],[6,"N10","","",null,null],[6,"U11","","",null,null],[6,"P11","","",null,null],[6,"N11","","",null,null],[6,"U12","","",null,null],[6,"P12","","",null,null],[6,"N12","","",null,null],[6,"U13","","",null,null],[6,"P13","","",null,null],[6,"N13","","",null,null],[6,"U14","","",null,null],[6,"P14","","",null,null],[6,"N14","","",null,null],[6,"U15","","",null,null],[6,"P15","","",null,null],[6,"N15","","",null,null],[6,"U16","","",null,null],[6,"P16","","",null,null],[6,"N16","","",null,null],[6,"U17","","",null,null],[6,"P17","","",null,null],[6,"N17","","",null,null],[6,"U18","","",null,null],[6,"P18","","",null,null],[6,"N18","","",null,null],[6,"U19","","",null,null],[6,"P19","","",null,null],[6,"N19","","",null,null],[6,"U20","","",null,null],[6,"P20","","",null,null],[6,"N20","","",null,null],[6,"U21","","",null,null],[6,"P21","","",null,null],[6,"N21","","",null,null],[6,"U22","","",null,null],[6,"P22","","",null,null],[6,"N22","","",null,null],[6,"U23","","",null,null],[6,"P23","","",null,null],[6,"N23","","",null,null],[6,"U24","","",null,null],[6,"P24","","",null,null],[6,"N24","","",null,null],[6,"U25","","",null,null],[6,"P25","","",null,null],[6,"N25","","",null,null],[6,"U26","","",null,null],[6,"P26","","",null,null],[6,"N26","","",null,null],[6,"U27","","",null,null],[6,"P27","","",null,null],[6,"N27","","",null,null],[6,"U28","","",null,null],[6,"P28","","",null,null],[6,"N28","","",null,null],[6,"U29","","",null,null],[6,"P29","","",null,null],[6,"N29","","",null,null],[6,"U30","","",null,null],[6,"P30","","",null,null],[6,"N30","","",null,null],[6,"U31","","",null,null],[6,"P31","","",null,null],[6,"N31","","",null,null],[6,"U32","","",null,null],[6,"P32","","",null,null],[6,"N32","","",null,null],[6,"U33","","",null,null],[6,"P33","","",null,null],[6,"N33","","",null,null],[6,"U34","","",null,null],[6,"P34","","",null,null],[6,"N34","","",null,null],[6,"U35","","",null,null],[6,"P35","","",null,null],[6,"N35","","",null,null],[6,"U36","","",null,null],[6,"P36","","",null,null],[6,"N36","","",null,null],[6,"U37","","",null,null],[6,"P37","","",null,null],[6,"N37","","",null,null],[6,"U38","","",null,null],[6,"P38","","",null,null],[6,"N38","","",null,null],[6,"U39","","",null,null],[6,"P39","","",null,null],[6,"N39","","",null,null],[6,"U40","","",null,null],[6,"P40","","",null,null],[6,"N40","","",null,null],[6,"U41","","",null,null],[6,"P41","","",null,null],[6,"N41","","",null,null],[6,"U42","","",null,null],[6,"P42","","",null,null],[6,"N42","","",null,null],[6,"U43","","",null,null],[6,"P43","","",null,null],[6,"N43","","",null,null],[6,"U44","","",null,null],[6,"P44","","",null,null],[6,"N44","","",null,null],[6,"U45","","",null,null],[6,"P45","","",null,null],[6,"N45","","",null,null],[6,"U46","","",null,null],[6,"P46","","",null,null],[6,"N46","","",null,null],[6,"U47","","",null,null],[6,"P47","","",null,null],[6,"N47","","",null,null],[6,"U48","","",null,null],[6,"P48","","",null,null],[6,"N48","","",null,null],[6,"U49","","",null,null],[6,"P49","","",null,null],[6,"N49","","",null,null],[6,"U50","","",null,null],[6,"P50","","",null,null],[6,"N50","","",null,null],[6,"U51","","",null,null],[6,"P51","","",null,null],[6,"N51","","",null,null],[6,"U52","","",null,null],[6,"P52","","",null,null],[6,"N52","","",null,null],[6,"U53","","",null,null],[6,"P53","","",null,null],[6,"N53","","",null,null],[6,"U54","","",null,null],[6,"P54","","",null,null],[6,"N54","","",null,null],[6,"U55","","",null,null],[6,"P55","","",null,null],[6,"N55","","",null,null],[6,"U56","","",null,null],[6,"P56","","",null,null],[6,"N56","","",null,null],[6,"U57","","",null,null],[6,"P57","","",null,null],[6,"N57","","",null,null],[6,"U58","","",null,null],[6,"P58","","",null,null],[6,"N58","","",null,null],[6,"U59","","",null,null],[6,"P59","","",null,null],[6,"N59","","",null,null],[6,"U60","","",null,null],[6,"P60","","",null,null],[6,"N60","","",null,null],[6,"U61","","",null,null],[6,"P61","","",null,null],[6,"N61","","",null,null],[6,"U62","","",null,null],[6,"P62","","",null,null],[6,"N62","","",null,null],[6,"U63","","",null,null],[6,"P63","","",null,null],[6,"N63","","",null,null],[6,"U64","","",null,null],[6,"P64","","",null,null],[6,"N64","","",null,null],[6,"U65","","",null,null],[6,"P65","","",null,null],[6,"N65","","",null,null],[6,"U66","","",null,null],[6,"P66","","",null,null],[6,"N66","","",null,null],[6,"U67","","",null,null],[6,"P67","","",null,null],[6,"N67","","",null,null],[6,"U68","","",null,null],[6,"P68","","",null,null],[6,"N68","","",null,null],[6,"U69","","",null,null],[6,"P69","","",null,null],[6,"N69","","",null,null],[6,"U70","","",null,null],[6,"P70","","",null,null],[6,"N70","","",null,null],[6,"U71","","",null,null],[6,"P71","","",null,null],[6,"N71","","",null,null],[6,"U72","","",null,null],[6,"P72","","",null,null],[6,"N72","","",null,null],[6,"U73","","",null,null],[6,"P73","","",null,null],[6,"N73","","",null,null],[6,"U74","","",null,null],[6,"P74","","",null,null],[6,"N74","","",null,null],[6,"U75","","",null,null],[6,"P75","","",null,null],[6,"N75","","",null,null],[6,"U76","","",null,null],[6,"P76","","",null,null],[6,"N76","","",null,null],[6,"U77","","",null,null],[6,"P77","","",null,null],[6,"N77","","",null,null],[6,"U78","","",null,null],[6,"P78","","",null,null],[6,"N78","","",null,null],[6,"U79","","",null,null],[6,"P79","","",null,null],[6,"N79","","",null,null],[6,"U80","","",null,null],[6,"P80","","",null,null],[6,"N80","","",null,null],[6,"U81","","",null,null],[6,"P81","","",null,null],[6,"N81","","",null,null],[6,"U82","","",null,null],[6,"P82","","",null,null],[6,"N82","","",null,null],[6,"U83","","",null,null],[6,"P83","","",null,null],[6,"N83","","",null,null],[6,"U84","","",null,null],[6,"P84","","",null,null],[6,"N84","","",null,null],[6,"U85","","",null,null],[6,"P85","","",null,null],[6,"N85","","",null,null],[6,"U86","","",null,null],[6,"P86","","",null,null],[6,"N86","","",null,null],[6,"U87","","",null,null],[6,"P87","","",null,null],[6,"N87","","",null,null],[6,"U88","","",null,null],[6,"P88","","",null,null],[6,"N88","","",null,null],[6,"U89","","",null,null],[6,"P89","","",null,null],[6,"N89","","",null,null],[6,"U90","","",null,null],[6,"P90","","",null,null],[6,"N90","","",null,null],[6,"U91","","",null,null],[6,"P91","","",null,null],[6,"N91","","",null,null],[6,"U92","","",null,null],[6,"P92","","",null,null],[6,"N92","","",null,null],[6,"U93","","",null,null],[6,"P93","","",null,null],[6,"N93","","",null,null],[6,"U94","","",null,null],[6,"P94","","",null,null],[6,"N94","","",null,null],[6,"U95","","",null,null],[6,"P95","","",null,null],[6,"N95","","",null,null],[6,"U96","","",null,null],[6,"P96","","",null,null],[6,"N96","","",null,null],[6,"U97","","",null,null],[6,"P97","","",null,null],[6,"N97","","",null,null],[6,"U98","","",null,null],[6,"P98","","",null,null],[6,"N98","","",null,null],[6,"U99","","",null,null],[6,"P99","","",null,null],[6,"N99","","",null,null],[6,"U100","","",null,null],[6,"P100","","",null,null],[6,"N100","","",null,null],[6,"U101","","",null,null],[6,"P101","","",null,null],[6,"N101","","",null,null],[6,"U102","","",null,null],[6,"P102","","",null,null],[6,"N102","","",null,null],[6,"U103","","",null,null],[6,"P103","","",null,null],[6,"N103","","",null,null],[6,"U104","","",null,null],[6,"P104","","",null,null],[6,"N104","","",null,null],[6,"U105","","",null,null],[6,"P105","","",null,null],[6,"N105","","",null,null],[6,"U106","","",null,null],[6,"P106","","",null,null],[6,"N106","","",null,null],[6,"U107","","",null,null],[6,"P107","","",null,null],[6,"N107","","",null,null],[6,"U108","","",null,null],[6,"P108","","",null,null],[6,"N108","","",null,null],[6,"U109","","",null,null],[6,"P109","","",null,null],[6,"N109","","",null,null],[6,"U110","","",null,null],[6,"P110","","",null,null],[6,"N110","","",null,null],[6,"U111","","",null,null],[6,"P111","","",null,null],[6,"N111","","",null,null],[6,"U112","","",null,null],[6,"P112","","",null,null],[6,"N112","","",null,null],[6,"U113","","",null,null],[6,"P113","","",null,null],[6,"N113","","",null,null],[6,"U114","","",null,null],[6,"P114","","",null,null],[6,"N114","","",null,null],[6,"U115","","",null,null],[6,"P115","","",null,null],[6,"N115","","",null,null],[6,"U116","","",null,null],[6,"P116","","",null,null],[6,"N116","","",null,null],[6,"U117","","",null,null],[6,"P117","","",null,null],[6,"N117","","",null,null],[6,"U118","","",null,null],[6,"P118","","",null,null],[6,"N118","","",null,null],[6,"U119","","",null,null],[6,"P119","","",null,null],[6,"N119","","",null,null],[6,"U120","","",null,null],[6,"P120","","",null,null],[6,"N120","","",null,null],[6,"U121","","",null,null],[6,"P121","","",null,null],[6,"N121","","",null,null],[6,"U122","","",null,null],[6,"P122","","",null,null],[6,"N122","","",null,null],[6,"U123","","",null,null],[6,"P123","","",null,null],[6,"N123","","",null,null],[6,"U124","","",null,null],[6,"P124","","",null,null],[6,"N124","","",null,null],[6,"U125","","",null,null],[6,"P125","","",null,null],[6,"N125","","",null,null],[6,"U126","","",null,null],[6,"P126","","",null,null],[6,"N126","","",null,null],[6,"U127","","",null,null],[6,"P127","","",null,null],[6,"N127","","",null,null],[6,"U128","","",null,null],[6,"P128","","",null,null],[6,"N128","","",null,null],[6,"U129","","",null,null],[6,"P129","","",null,null],[6,"N129","","",null,null],[6,"U130","","",null,null],[6,"P130","","",null,null],[6,"N130","","",null,null],[6,"U131","","",null,null],[6,"P131","","",null,null],[6,"N131","","",null,null],[6,"U132","","",null,null],[6,"P132","","",null,null],[6,"N132","","",null,null],[6,"U133","","",null,null],[6,"P133","","",null,null],[6,"N133","","",null,null],[6,"U134","","",null,null],[6,"P134","","",null,null],[6,"N134","","",null,null],[6,"U135","","",null,null],[6,"P135","","",null,null],[6,"N135","","",null,null],[6,"U136","","",null,null],[6,"P136","","",null,null],[6,"N136","","",null,null],[6,"U137","","",null,null],[6,"P137","","",null,null],[6,"N137","","",null,null],[6,"U138","","",null,null],[6,"P138","","",null,null],[6,"N138","","",null,null],[6,"U139","","",null,null],[6,"P139","","",null,null],[6,"N139","","",null,null],[6,"U140","","",null,null],[6,"P140","","",null,null],[6,"N140","","",null,null],[6,"U141","","",null,null],[6,"P141","","",null,null],[6,"N141","","",null,null],[6,"U142","","",null,null],[6,"P142","","",null,null],[6,"N142","","",null,null],[6,"U143","","",null,null],[6,"P143","","",null,null],[6,"N143","","",null,null],[6,"U144","","",null,null],[6,"P144","","",null,null],[6,"N144","","",null,null],[6,"U145","","",null,null],[6,"P145","","",null,null],[6,"N145","","",null,null],[6,"U146","","",null,null],[6,"P146","","",null,null],[6,"N146","","",null,null],[6,"U147","","",null,null],[6,"P147","","",null,null],[6,"N147","","",null,null],[6,"U148","","",null,null],[6,"P148","","",null,null],[6,"N148","","",null,null],[6,"U149","","",null,null],[6,"P149","","",null,null],[6,"N149","","",null,null],[6,"U150","","",null,null],[6,"P150","","",null,null],[6,"N150","","",null,null],[6,"U151","","",null,null],[6,"P151","","",null,null],[6,"N151","","",null,null],[6,"U152","","",null,null],[6,"P152","","",null,null],[6,"N152","","",null,null],[6,"U153","","",null,null],[6,"P153","","",null,null],[6,"N153","","",null,null],[6,"U154","","",null,null],[6,"P154","","",null,null],[6,"N154","","",null,null],[6,"U155","","",null,null],[6,"P155","","",null,null],[6,"N155","","",null,null],[6,"U156","","",null,null],[6,"P156","","",null,null],[6,"N156","","",null,null],[6,"U157","","",null,null],[6,"P157","","",null,null],[6,"N157","","",null,null],[6,"U158","","",null,null],[6,"P158","","",null,null],[6,"N158","","",null,null],[6,"U159","","",null,null],[6,"P159","","",null,null],[6,"N159","","",null,null],[6,"U160","","",null,null],[6,"P160","","",null,null],[6,"N160","","",null,null],[6,"U161","","",null,null],[6,"P161","","",null,null],[6,"N161","","",null,null],[6,"U162","","",null,null],[6,"P162","","",null,null],[6,"N162","","",null,null],[6,"U163","","",null,null],[6,"P163","","",null,null],[6,"N163","","",null,null],[6,"U164","","",null,null],[6,"P164","","",null,null],[6,"N164","","",null,null],[6,"U165","","",null,null],[6,"P165","","",null,null],[6,"N165","","",null,null],[6,"U166","","",null,null],[6,"P166","","",null,null],[6,"N166","","",null,null],[6,"U167","","",null,null],[6,"P167","","",null,null],[6,"N167","","",null,null],[6,"U168","","",null,null],[6,"P168","","",null,null],[6,"N168","","",null,null],[6,"U169","","",null,null],[6,"P169","","",null,null],[6,"N169","","",null,null],[6,"U170","","",null,null],[6,"P170","","",null,null],[6,"N170","","",null,null],[6,"U171","","",null,null],[6,"P171","","",null,null],[6,"N171","","",null,null],[6,"U172","","",null,null],[6,"P172","","",null,null],[6,"N172","","",null,null],[6,"U173","","",null,null],[6,"P173","","",null,null],[6,"N173","","",null,null],[6,"U174","","",null,null],[6,"P174","","",null,null],[6,"N174","","",null,null],[6,"U175","","",null,null],[6,"P175","","",null,null],[6,"N175","","",null,null],[6,"U176","","",null,null],[6,"P176","","",null,null],[6,"N176","","",null,null],[6,"U177","","",null,null],[6,"P177","","",null,null],[6,"N177","","",null,null],[6,"U178","","",null,null],[6,"P178","","",null,null],[6,"N178","","",null,null],[6,"U179","","",null,null],[6,"P179","","",null,null],[6,"N179","","",null,null],[6,"U180","","",null,null],[6,"P180","","",null,null],[6,"N180","","",null,null],[6,"U181","","",null,null],[6,"P181","","",null,null],[6,"N181","","",null,null],[6,"U182","","",null,null],[6,"P182","","",null,null],[6,"N182","","",null,null],[6,"U183","","",null,null],[6,"P183","","",null,null],[6,"N183","","",null,null],[6,"U184","","",null,null],[6,"P184","","",null,null],[6,"N184","","",null,null],[6,"U185","","",null,null],[6,"P185","","",null,null],[6,"N185","","",null,null],[6,"U186","","",null,null],[6,"P186","","",null,null],[6,"N186","","",null,null],[6,"U187","","",null,null],[6,"P187","","",null,null],[6,"N187","","",null,null],[6,"U188","","",null,null],[6,"P188","","",null,null],[6,"N188","","",null,null],[6,"U189","","",null,null],[6,"P189","","",null,null],[6,"N189","","",null,null],[6,"U190","","",null,null],[6,"P190","","",null,null],[6,"N190","","",null,null],[6,"U191","","",null,null],[6,"P191","","",null,null],[6,"N191","","",null,null],[6,"U192","","",null,null],[6,"P192","","",null,null],[6,"N192","","",null,null],[6,"U193","","",null,null],[6,"P193","","",null,null],[6,"N193","","",null,null],[6,"U194","","",null,null],[6,"P194","","",null,null],[6,"N194","","",null,null],[6,"U195","","",null,null],[6,"P195","","",null,null],[6,"N195","","",null,null],[6,"U196","","",null,null],[6,"P196","","",null,null],[6,"N196","","",null,null],[6,"U197","","",null,null],[6,"P197","","",null,null],[6,"N197","","",null,null],[6,"U198","","",null,null],[6,"P198","","",null,null],[6,"N198","","",null,null],[6,"U199","","",null,null],[6,"P199","","",null,null],[6,"N199","","",null,null],[6,"U200","","",null,null],[6,"P200","","",null,null],[6,"N200","","",null,null],[6,"U201","","",null,null],[6,"P201","","",null,null],[6,"N201","","",null,null],[6,"U202","","",null,null],[6,"P202","","",null,null],[6,"N202","","",null,null],[6,"U203","","",null,null],[6,"P203","","",null,null],[6,"N203","","",null,null],[6,"U204","","",null,null],[6,"P204","","",null,null],[6,"N204","","",null,null],[6,"U205","","",null,null],[6,"P205","","",null,null],[6,"N205","","",null,null],[6,"U206","","",null,null],[6,"P206","","",null,null],[6,"N206","","",null,null],[6,"U207","","",null,null],[6,"P207","","",null,null],[6,"N207","","",null,null],[6,"U208","","",null,null],[6,"P208","","",null,null],[6,"N208","","",null,null],[6,"U209","","",null,null],[6,"P209","","",null,null],[6,"N209","","",null,null],[6,"U210","","",null,null],[6,"P210","","",null,null],[6,"N210","","",null,null],[6,"U211","","",null,null],[6,"P211","","",null,null],[6,"N211","","",null,null],[6,"U212","","",null,null],[6,"P212","","",null,null],[6,"N212","","",null,null],[6,"U213","","",null,null],[6,"P213","","",null,null],[6,"N213","","",null,null],[6,"U214","","",null,null],[6,"P214","","",null,null],[6,"N214","","",null,null],[6,"U215","","",null,null],[6,"P215","","",null,null],[6,"N215","","",null,null],[6,"U216","","",null,null],[6,"P216","","",null,null],[6,"N216","","",null,null],[6,"U217","","",null,null],[6,"P217","","",null,null],[6,"N217","","",null,null],[6,"U218","","",null,null],[6,"P218","","",null,null],[6,"N218","","",null,null],[6,"U219","","",null,null],[6,"P219","","",null,null],[6,"N219","","",null,null],[6,"U220","","",null,null],[6,"P220","","",null,null],[6,"N220","","",null,null],[6,"U221","","",null,null],[6,"P221","","",null,null],[6,"N221","","",null,null],[6,"U222","","",null,null],[6,"P222","","",null,null],[6,"N222","","",null,null],[6,"U223","","",null,null],[6,"P223","","",null,null],[6,"N223","","",null,null],[6,"U224","","",null,null],[6,"P224","","",null,null],[6,"N224","","",null,null],[6,"U225","","",null,null],[6,"P225","","",null,null],[6,"N225","","",null,null],[6,"U226","","",null,null],[6,"P226","","",null,null],[6,"N226","","",null,null],[6,"U227","","",null,null],[6,"P227","","",null,null],[6,"N227","","",null,null],[6,"U228","","",null,null],[6,"P228","","",null,null],[6,"N228","","",null,null],[6,"U229","","",null,null],[6,"P229","","",null,null],[6,"N229","","",null,null],[6,"U230","","",null,null],[6,"P230","","",null,null],[6,"N230","","",null,null],[6,"U231","","",null,null],[6,"P231","","",null,null],[6,"N231","","",null,null],[6,"U232","","",null,null],[6,"P232","","",null,null],[6,"N232","","",null,null],[6,"U233","","",null,null],[6,"P233","","",null,null],[6,"N233","","",null,null],[6,"U234","","",null,null],[6,"P234","","",null,null],[6,"N234","","",null,null],[6,"U235","","",null,null],[6,"P235","","",null,null],[6,"N235","","",null,null],[6,"U236","","",null,null],[6,"P236","","",null,null],[6,"N236","","",null,null],[6,"U237","","",null,null],[6,"P237","","",null,null],[6,"N237","","",null,null],[6,"U238","","",null,null],[6,"P238","","",null,null],[6,"N238","","",null,null],[6,"U239","","",null,null],[6,"P239","","",null,null],[6,"N239","","",null,null],[6,"U240","","",null,null],[6,"P240","","",null,null],[6,"N240","","",null,null],[6,"U241","","",null,null],[6,"P241","","",null,null],[6,"N241","","",null,null],[6,"U242","","",null,null],[6,"P242","","",null,null],[6,"N242","","",null,null],[6,"U243","","",null,null],[6,"P243","","",null,null],[6,"N243","","",null,null],[6,"U244","","",null,null],[6,"P244","","",null,null],[6,"N244","","",null,null],[6,"U245","","",null,null],[6,"P245","","",null,null],[6,"N245","","",null,null],[6,"U246","","",null,null],[6,"P246","","",null,null],[6,"N246","","",null,null],[6,"U247","","",null,null],[6,"P247","","",null,null],[6,"N247","","",null,null],[6,"U248","","",null,null],[6,"P248","","",null,null],[6,"N248","","",null,null],[6,"U249","","",null,null],[6,"P249","","",null,null],[6,"N249","","",null,null],[6,"U250","","",null,null],[6,"P250","","",null,null],[6,"N250","","",null,null],[6,"U251","","",null,null],[6,"P251","","",null,null],[6,"N251","","",null,null],[6,"U252","","",null,null],[6,"P252","","",null,null],[6,"N252","","",null,null],[6,"U253","","",null,null],[6,"P253","","",null,null],[6,"N253","","",null,null],[6,"U254","","",null,null],[6,"P254","","",null,null],[6,"N254","","",null,null],[6,"U255","","",null,null],[6,"P255","","",null,null],[6,"N255","","",null,null],[6,"U256","","",null,null],[6,"P256","","",null,null],[6,"N256","","",null,null],[6,"U257","","",null,null],[6,"P257","","",null,null],[6,"N257","","",null,null],[6,"U258","","",null,null],[6,"P258","","",null,null],[6,"N258","","",null,null],[6,"U259","","",null,null],[6,"P259","","",null,null],[6,"N259","","",null,null],[6,"U260","","",null,null],[6,"P260","","",null,null],[6,"N260","","",null,null],[6,"U261","","",null,null],[6,"P261","","",null,null],[6,"N261","","",null,null],[6,"U262","","",null,null],[6,"P262","","",null,null],[6,"N262","","",null,null],[6,"U263","","",null,null],[6,"P263","","",null,null],[6,"N263","","",null,null],[6,"U264","","",null,null],[6,"P264","","",null,null],[6,"N264","","",null,null],[6,"U265","","",null,null],[6,"P265","","",null,null],[6,"N265","","",null,null],[6,"U266","","",null,null],[6,"P266","","",null,null],[6,"N266","","",null,null],[6,"U267","","",null,null],[6,"P267","","",null,null],[6,"N267","","",null,null],[6,"U268","","",null,null],[6,"P268","","",null,null],[6,"N268","","",null,null],[6,"U269","","",null,null],[6,"P269","","",null,null],[6,"N269","","",null,null],[6,"U270","","",null,null],[6,"P270","","",null,null],[6,"N270","","",null,null],[6,"U271","","",null,null],[6,"P271","","",null,null],[6,"N271","","",null,null],[6,"U272","","",null,null],[6,"P272","","",null,null],[6,"N272","","",null,null],[6,"U273","","",null,null],[6,"P273","","",null,null],[6,"N273","","",null,null],[6,"U274","","",null,null],[6,"P274","","",null,null],[6,"N274","","",null,null],[6,"U275","","",null,null],[6,"P275","","",null,null],[6,"N275","","",null,null],[6,"U276","","",null,null],[6,"P276","","",null,null],[6,"N276","","",null,null],[6,"U277","","",null,null],[6,"P277","","",null,null],[6,"N277","","",null,null],[6,"U278","","",null,null],[6,"P278","","",null,null],[6,"N278","","",null,null],[6,"U279","","",null,null],[6,"P279","","",null,null],[6,"N279","","",null,null],[6,"U280","","",null,null],[6,"P280","","",null,null],[6,"N280","","",null,null],[6,"U281","","",null,null],[6,"P281","","",null,null],[6,"N281","","",null,null],[6,"U282","","",null,null],[6,"P282","","",null,null],[6,"N282","","",null,null],[6,"U283","","",null,null],[6,"P283","","",null,null],[6,"N283","","",null,null],[6,"U284","","",null,null],[6,"P284","","",null,null],[6,"N284","","",null,null],[6,"U285","","",null,null],[6,"P285","","",null,null],[6,"N285","","",null,null],[6,"U286","","",null,null],[6,"P286","","",null,null],[6,"N286","","",null,null],[6,"U287","","",null,null],[6,"P287","","",null,null],[6,"N287","","",null,null],[6,"U288","","",null,null],[6,"P288","","",null,null],[6,"N288","","",null,null],[6,"U289","","",null,null],[6,"P289","","",null,null],[6,"N289","","",null,null],[6,"U290","","",null,null],[6,"P290","","",null,null],[6,"N290","","",null,null],[6,"U291","","",null,null],[6,"P291","","",null,null],[6,"N291","","",null,null],[6,"U292","","",null,null],[6,"P292","","",null,null],[6,"N292","","",null,null],[6,"U293","","",null,null],[6,"P293","","",null,null],[6,"N293","","",null,null],[6,"U294","","",null,null],[6,"P294","","",null,null],[6,"N294","","",null,null],[6,"U295","","",null,null],[6,"P295","","",null,null],[6,"N295","","",null,null],[6,"U296","","",null,null],[6,"P296","","",null,null],[6,"N296","","",null,null],[6,"U297","","",null,null],[6,"P297","","",null,null],[6,"N297","","",null,null],[6,"U298","","",null,null],[6,"P298","","",null,null],[6,"N298","","",null,null],[6,"U299","","",null,null],[6,"P299","","",null,null],[6,"N299","","",null,null],[6,"U300","","",null,null],[6,"P300","","",null,null],[6,"N300","","",null,null],[6,"U301","","",null,null],[6,"P301","","",null,null],[6,"N301","","",null,null],[6,"U302","","",null,null],[6,"P302","","",null,null],[6,"N302","","",null,null],[6,"U303","","",null,null],[6,"P303","","",null,null],[6,"N303","","",null,null],[6,"U304","","",null,null],[6,"P304","","",null,null],[6,"N304","","",null,null],[6,"U305","","",null,null],[6,"P305","","",null,null],[6,"N305","","",null,null],[6,"U306","","",null,null],[6,"P306","","",null,null],[6,"N306","","",null,null],[6,"U307","","",null,null],[6,"P307","","",null,null],[6,"N307","","",null,null],[6,"U308","","",null,null],[6,"P308","","",null,null],[6,"N308","","",null,null],[6,"U309","","",null,null],[6,"P309","","",null,null],[6,"N309","","",null,null],[6,"U310","","",null,null],[6,"P310","","",null,null],[6,"N310","","",null,null],[6,"U311","","",null,null],[6,"P311","","",null,null],[6,"N311","","",null,null],[6,"U312","","",null,null],[6,"P312","","",null,null],[6,"N312","","",null,null],[6,"U313","","",null,null],[6,"P313","","",null,null],[6,"N313","","",null,null],[6,"U314","","",null,null],[6,"P314","","",null,null],[6,"N314","","",null,null],[6,"U315","","",null,null],[6,"P315","","",null,null],[6,"N315","","",null,null],[6,"U316","","",null,null],[6,"P316","","",null,null],[6,"N316","","",null,null],[6,"U317","","",null,null],[6,"P317","","",null,null],[6,"N317","","",null,null],[6,"U318","","",null,null],[6,"P318","","",null,null],[6,"N318","","",null,null],[6,"U319","","",null,null],[6,"P319","","",null,null],[6,"N319","","",null,null],[6,"U320","","",null,null],[6,"P320","","",null,null],[6,"N320","","",null,null],[6,"U321","","",null,null],[6,"P321","","",null,null],[6,"N321","","",null,null],[6,"U322","","",null,null],[6,"P322","","",null,null],[6,"N322","","",null,null],[6,"U323","","",null,null],[6,"P323","","",null,null],[6,"N323","","",null,null],[6,"U324","","",null,null],[6,"P324","","",null,null],[6,"N324","","",null,null],[6,"U325","","",null,null],[6,"P325","","",null,null],[6,"N325","","",null,null],[6,"U326","","",null,null],[6,"P326","","",null,null],[6,"N326","","",null,null],[6,"U327","","",null,null],[6,"P327","","",null,null],[6,"N327","","",null,null],[6,"U328","","",null,null],[6,"P328","","",null,null],[6,"N328","","",null,null],[6,"U329","","",null,null],[6,"P329","","",null,null],[6,"N329","","",null,null],[6,"U330","","",null,null],[6,"P330","","",null,null],[6,"N330","","",null,null],[6,"U331","","",null,null],[6,"P331","","",null,null],[6,"N331","","",null,null],[6,"U332","","",null,null],[6,"P332","","",null,null],[6,"N332","","",null,null],[6,"U333","","",null,null],[6,"P333","","",null,null],[6,"N333","","",null,null],[6,"U334","","",null,null],[6,"P334","","",null,null],[6,"N334","","",null,null],[6,"U335","","",null,null],[6,"P335","","",null,null],[6,"N335","","",null,null],[6,"U336","","",null,null],[6,"P336","","",null,null],[6,"N336","","",null,null],[6,"U337","","",null,null],[6,"P337","","",null,null],[6,"N337","","",null,null],[6,"U338","","",null,null],[6,"P338","","",null,null],[6,"N338","","",null,null],[6,"U339","","",null,null],[6,"P339","","",null,null],[6,"N339","","",null,null],[6,"U340","","",null,null],[6,"P340","","",null,null],[6,"N340","","",null,null],[6,"U341","","",null,null],[6,"P341","","",null,null],[6,"N341","","",null,null],[6,"U342","","",null,null],[6,"P342","","",null,null],[6,"N342","","",null,null],[6,"U343","","",null,null],[6,"P343","","",null,null],[6,"N343","","",null,null],[6,"U344","","",null,null],[6,"P344","","",null,null],[6,"N344","","",null,null],[6,"U345","","",null,null],[6,"P345","","",null,null],[6,"N345","","",null,null],[6,"U346","","",null,null],[6,"P346","","",null,null],[6,"N346","","",null,null],[6,"U347","","",null,null],[6,"P347","","",null,null],[6,"N347","","",null,null],[6,"U348","","",null,null],[6,"P348","","",null,null],[6,"N348","","",null,null],[6,"U349","","",null,null],[6,"P349","","",null,null],[6,"N349","","",null,null],[6,"U350","","",null,null],[6,"P350","","",null,null],[6,"N350","","",null,null],[6,"U351","","",null,null],[6,"P351","","",null,null],[6,"N351","","",null,null],[6,"U352","","",null,null],[6,"P352","","",null,null],[6,"N352","","",null,null],[6,"U353","","",null,null],[6,"P353","","",null,null],[6,"N353","","",null,null],[6,"U354","","",null,null],[6,"P354","","",null,null],[6,"N354","","",null,null],[6,"U355","","",null,null],[6,"P355","","",null,null],[6,"N355","","",null,null],[6,"U356","","",null,null],[6,"P356","","",null,null],[6,"N356","","",null,null],[6,"U357","","",null,null],[6,"P357","","",null,null],[6,"N357","","",null,null],[6,"U358","","",null,null],[6,"P358","","",null,null],[6,"N358","","",null,null],[6,"U359","","",null,null],[6,"P359","","",null,null],[6,"N359","","",null,null],[6,"U360","","",null,null],[6,"P360","","",null,null],[6,"N360","","",null,null],[6,"U361","","",null,null],[6,"P361","","",null,null],[6,"N361","","",null,null],[6,"U362","","",null,null],[6,"P362","","",null,null],[6,"N362","","",null,null],[6,"U363","","",null,null],[6,"P363","","",null,null],[6,"N363","","",null,null],[6,"U364","","",null,null],[6,"P364","","",null,null],[6,"N364","","",null,null],[6,"U365","","",null,null],[6,"P365","","",null,null],[6,"N365","","",null,null],[6,"U366","","",null,null],[6,"P366","","",null,null],[6,"N366","","",null,null],[6,"U367","","",null,null],[6,"P367","","",null,null],[6,"N367","","",null,null],[6,"U368","","",null,null],[6,"P368","","",null,null],[6,"N368","","",null,null],[6,"U369","","",null,null],[6,"P369","","",null,null],[6,"N369","","",null,null],[6,"U370","","",null,null],[6,"P370","","",null,null],[6,"N370","","",null,null],[6,"U371","","",null,null],[6,"P371","","",null,null],[6,"N371","","",null,null],[6,"U372","","",null,null],[6,"P372","","",null,null],[6,"N372","","",null,null],[6,"U373","","",null,null],[6,"P373","","",null,null],[6,"N373","","",null,null],[6,"U374","","",null,null],[6,"P374","","",null,null],[6,"N374","","",null,null],[6,"U375","","",null,null],[6,"P375","","",null,null],[6,"N375","","",null,null],[6,"U376","","",null,null],[6,"P376","","",null,null],[6,"N376","","",null,null],[6,"U377","","",null,null],[6,"P377","","",null,null],[6,"N377","","",null,null],[6,"U378","","",null,null],[6,"P378","","",null,null],[6,"N378","","",null,null],[6,"U379","","",null,null],[6,"P379","","",null,null],[6,"N379","","",null,null],[6,"U380","","",null,null],[6,"P380","","",null,null],[6,"N380","","",null,null],[6,"U381","","",null,null],[6,"P381","","",null,null],[6,"N381","","",null,null],[6,"U382","","",null,null],[6,"P382","","",null,null],[6,"N382","","",null,null],[6,"U383","","",null,null],[6,"P383","","",null,null],[6,"N383","","",null,null],[6,"U384","","",null,null],[6,"P384","","",null,null],[6,"N384","","",null,null],[6,"U385","","",null,null],[6,"P385","","",null,null],[6,"N385","","",null,null],[6,"U386","","",null,null],[6,"P386","","",null,null],[6,"N386","","",null,null],[6,"U387","","",null,null],[6,"P387","","",null,null],[6,"N387","","",null,null],[6,"U388","","",null,null],[6,"P388","","",null,null],[6,"N388","","",null,null],[6,"U389","","",null,null],[6,"P389","","",null,null],[6,"N389","","",null,null],[6,"U390","","",null,null],[6,"P390","","",null,null],[6,"N390","","",null,null],[6,"U391","","",null,null],[6,"P391","","",null,null],[6,"N391","","",null,null],[6,"U392","","",null,null],[6,"P392","","",null,null],[6,"N392","","",null,null],[6,"U393","","",null,null],[6,"P393","","",null,null],[6,"N393","","",null,null],[6,"U394","","",null,null],[6,"P394","","",null,null],[6,"N394","","",null,null],[6,"U395","","",null,null],[6,"P395","","",null,null],[6,"N395","","",null,null],[6,"U396","","",null,null],[6,"P396","","",null,null],[6,"N396","","",null,null],[6,"U397","","",null,null],[6,"P397","","",null,null],[6,"N397","","",null,null],[6,"U398","","",null,null],[6,"P398","","",null,null],[6,"N398","","",null,null],[6,"U399","","",null,null],[6,"P399","","",null,null],[6,"N399","","",null,null],[6,"U400","","",null,null],[6,"P400","","",null,null],[6,"N400","","",null,null],[6,"U401","","",null,null],[6,"P401","","",null,null],[6,"N401","","",null,null],[6,"U402","","",null,null],[6,"P402","","",null,null],[6,"N402","","",null,null],[6,"U403","","",null,null],[6,"P403","","",null,null],[6,"N403","","",null,null],[6,"U404","","",null,null],[6,"P404","","",null,null],[6,"N404","","",null,null],[6,"U405","","",null,null],[6,"P405","","",null,null],[6,"N405","","",null,null],[6,"U406","","",null,null],[6,"P406","","",null,null],[6,"N406","","",null,null],[6,"U407","","",null,null],[6,"P407","","",null,null],[6,"N407","","",null,null],[6,"U408","","",null,null],[6,"P408","","",null,null],[6,"N408","","",null,null],[6,"U409","","",null,null],[6,"P409","","",null,null],[6,"N409","","",null,null],[6,"U410","","",null,null],[6,"P410","","",null,null],[6,"N410","","",null,null],[6,"U411","","",null,null],[6,"P411","","",null,null],[6,"N411","","",null,null],[6,"U412","","",null,null],[6,"P412","","",null,null],[6,"N412","","",null,null],[6,"U413","","",null,null],[6,"P413","","",null,null],[6,"N413","","",null,null],[6,"U414","","",null,null],[6,"P414","","",null,null],[6,"N414","","",null,null],[6,"U415","","",null,null],[6,"P415","","",null,null],[6,"N415","","",null,null],[6,"U416","","",null,null],[6,"P416","","",null,null],[6,"N416","","",null,null],[6,"U417","","",null,null],[6,"P417","","",null,null],[6,"N417","","",null,null],[6,"U418","","",null,null],[6,"P418","","",null,null],[6,"N418","","",null,null],[6,"U419","","",null,null],[6,"P419","","",null,null],[6,"N419","","",null,null],[6,"U420","","",null,null],[6,"P420","","",null,null],[6,"N420","","",null,null],[6,"U421","","",null,null],[6,"P421","","",null,null],[6,"N421","","",null,null],[6,"U422","","",null,null],[6,"P422","","",null,null],[6,"N422","","",null,null],[6,"U423","","",null,null],[6,"P423","","",null,null],[6,"N423","","",null,null],[6,"U424","","",null,null],[6,"P424","","",null,null],[6,"N424","","",null,null],[6,"U425","","",null,null],[6,"P425","","",null,null],[6,"N425","","",null,null],[6,"U426","","",null,null],[6,"P426","","",null,null],[6,"N426","","",null,null],[6,"U427","","",null,null],[6,"P427","","",null,null],[6,"N427","","",null,null],[6,"U428","","",null,null],[6,"P428","","",null,null],[6,"N428","","",null,null],[6,"U429","","",null,null],[6,"P429","","",null,null],[6,"N429","","",null,null],[6,"U430","","",null,null],[6,"P430","","",null,null],[6,"N430","","",null,null],[6,"U431","","",null,null],[6,"P431","","",null,null],[6,"N431","","",null,null],[6,"U432","","",null,null],[6,"P432","","",null,null],[6,"N432","","",null,null],[6,"U433","","",null,null],[6,"P433","","",null,null],[6,"N433","","",null,null],[6,"U434","","",null,null],[6,"P434","","",null,null],[6,"N434","","",null,null],[6,"U435","","",null,null],[6,"P435","","",null,null],[6,"N435","","",null,null],[6,"U436","","",null,null],[6,"P436","","",null,null],[6,"N436","","",null,null],[6,"U437","","",null,null],[6,"P437","","",null,null],[6,"N437","","",null,null],[6,"U438","","",null,null],[6,"P438","","",null,null],[6,"N438","","",null,null],[6,"U439","","",null,null],[6,"P439","","",null,null],[6,"N439","","",null,null],[6,"U440","","",null,null],[6,"P440","","",null,null],[6,"N440","","",null,null],[6,"U441","","",null,null],[6,"P441","","",null,null],[6,"N441","","",null,null],[6,"U442","","",null,null],[6,"P442","","",null,null],[6,"N442","","",null,null],[6,"U443","","",null,null],[6,"P443","","",null,null],[6,"N443","","",null,null],[6,"U444","","",null,null],[6,"P444","","",null,null],[6,"N444","","",null,null],[6,"U445","","",null,null],[6,"P445","","",null,null],[6,"N445","","",null,null],[6,"U446","","",null,null],[6,"P446","","",null,null],[6,"N446","","",null,null],[6,"U447","","",null,null],[6,"P447","","",null,null],[6,"N447","","",null,null],[6,"U448","","",null,null],[6,"P448","","",null,null],[6,"N448","","",null,null],[6,"U449","","",null,null],[6,"P449","","",null,null],[6,"N449","","",null,null],[6,"U450","","",null,null],[6,"P450","","",null,null],[6,"N450","","",null,null],[6,"U451","","",null,null],[6,"P451","","",null,null],[6,"N451","","",null,null],[6,"U452","","",null,null],[6,"P452","","",null,null],[6,"N452","","",null,null],[6,"U453","","",null,null],[6,"P453","","",null,null],[6,"N453","","",null,null],[6,"U454","","",null,null],[6,"P454","","",null,null],[6,"N454","","",null,null],[6,"U455","","",null,null],[6,"P455","","",null,null],[6,"N455","","",null,null],[6,"U456","","",null,null],[6,"P456","","",null,null],[6,"N456","","",null,null],[6,"U457","","",null,null],[6,"P457","","",null,null],[6,"N457","","",null,null],[6,"U458","","",null,null],[6,"P458","","",null,null],[6,"N458","","",null,null],[6,"U459","","",null,null],[6,"P459","","",null,null],[6,"N459","","",null,null],[6,"U460","","",null,null],[6,"P460","","",null,null],[6,"N460","","",null,null],[6,"U461","","",null,null],[6,"P461","","",null,null],[6,"N461","","",null,null],[6,"U462","","",null,null],[6,"P462","","",null,null],[6,"N462","","",null,null],[6,"U463","","",null,null],[6,"P463","","",null,null],[6,"N463","","",null,null],[6,"U464","","",null,null],[6,"P464","","",null,null],[6,"N464","","",null,null],[6,"U465","","",null,null],[6,"P465","","",null,null],[6,"N465","","",null,null],[6,"U466","","",null,null],[6,"P466","","",null,null],[6,"N466","","",null,null],[6,"U467","","",null,null],[6,"P467","","",null,null],[6,"N467","","",null,null],[6,"U468","","",null,null],[6,"P468","","",null,null],[6,"N468","","",null,null],[6,"U469","","",null,null],[6,"P469","","",null,null],[6,"N469","","",null,null],[6,"U470","","",null,null],[6,"P470","","",null,null],[6,"N470","","",null,null],[6,"U471","","",null,null],[6,"P471","","",null,null],[6,"N471","","",null,null],[6,"U472","","",null,null],[6,"P472","","",null,null],[6,"N472","","",null,null],[6,"U473","","",null,null],[6,"P473","","",null,null],[6,"N473","","",null,null],[6,"U474","","",null,null],[6,"P474","","",null,null],[6,"N474","","",null,null],[6,"U475","","",null,null],[6,"P475","","",null,null],[6,"N475","","",null,null],[6,"U476","","",null,null],[6,"P476","","",null,null],[6,"N476","","",null,null],[6,"U477","","",null,null],[6,"P477","","",null,null],[6,"N477","","",null,null],[6,"U478","","",null,null],[6,"P478","","",null,null],[6,"N478","","",null,null],[6,"U479","","",null,null],[6,"P479","","",null,null],[6,"N479","","",null,null],[6,"U480","","",null,null],[6,"P480","","",null,null],[6,"N480","","",null,null],[6,"U481","","",null,null],[6,"P481","","",null,null],[6,"N481","","",null,null],[6,"U482","","",null,null],[6,"P482","","",null,null],[6,"N482","","",null,null],[6,"U483","","",null,null],[6,"P483","","",null,null],[6,"N483","","",null,null],[6,"U484","","",null,null],[6,"P484","","",null,null],[6,"N484","","",null,null],[6,"U485","","",null,null],[6,"P485","","",null,null],[6,"N485","","",null,null],[6,"U486","","",null,null],[6,"P486","","",null,null],[6,"N486","","",null,null],[6,"U487","","",null,null],[6,"P487","","",null,null],[6,"N487","","",null,null],[6,"U488","","",null,null],[6,"P488","","",null,null],[6,"N488","","",null,null],[6,"U489","","",null,null],[6,"P489","","",null,null],[6,"N489","","",null,null],[6,"U490","","",null,null],[6,"P490","","",null,null],[6,"N490","","",null,null],[6,"U491","","",null,null],[6,"P491","","",null,null],[6,"N491","","",null,null],[6,"U492","","",null,null],[6,"P492","","",null,null],[6,"N492","","",null,null],[6,"U493","","",null,null],[6,"P493","","",null,null],[6,"N493","","",null,null],[6,"U494","","",null,null],[6,"P494","","",null,null],[6,"N494","","",null,null],[6,"U495","","",null,null],[6,"P495","","",null,null],[6,"N495","","",null,null],[6,"U496","","",null,null],[6,"P496","","",null,null],[6,"N496","","",null,null],[6,"U497","","",null,null],[6,"P497","","",null,null],[6,"N497","","",null,null],[6,"U498","","",null,null],[6,"P498","","",null,null],[6,"N498","","",null,null],[6,"U499","","",null,null],[6,"P499","","",null,null],[6,"N499","","",null,null],[6,"U500","","",null,null],[6,"P500","","",null,null],[6,"N500","","",null,null],[6,"U501","","",null,null],[6,"P501","","",null,null],[6,"N501","","",null,null],[6,"U502","","",null,null],[6,"P502","","",null,null],[6,"N502","","",null,null],[6,"U503","","",null,null],[6,"P503","","",null,null],[6,"N503","","",null,null],[6,"U504","","",null,null],[6,"P504","","",null,null],[6,"N504","","",null,null],[6,"U505","","",null,null],[6,"P505","","",null,null],[6,"N505","","",null,null],[6,"U506","","",null,null],[6,"P506","","",null,null],[6,"N506","","",null,null],[6,"U507","","",null,null],[6,"P507","","",null,null],[6,"N507","","",null,null],[6,"U508","","",null,null],[6,"P508","","",null,null],[6,"N508","","",null,null],[6,"U509","","",null,null],[6,"P509","","",null,null],[6,"N509","","",null,null],[6,"U510","","",null,null],[6,"P510","","",null,null],[6,"N510","","",null,null],[6,"U511","","",null,null],[6,"P511","","",null,null],[6,"N511","","",null,null],[6,"U512","","",null,null],[6,"P512","","",null,null],[6,"N512","","",null,null],[6,"U513","","",null,null],[6,"P513","","",null,null],[6,"N513","","",null,null],[6,"U514","","",null,null],[6,"P514","","",null,null],[6,"N514","","",null,null],[6,"U515","","",null,null],[6,"P515","","",null,null],[6,"N515","","",null,null],[6,"U516","","",null,null],[6,"P516","","",null,null],[6,"N516","","",null,null],[6,"U517","","",null,null],[6,"P517","","",null,null],[6,"N517","","",null,null],[6,"U518","","",null,null],[6,"P518","","",null,null],[6,"N518","","",null,null],[6,"U519","","",null,null],[6,"P519","","",null,null],[6,"N519","","",null,null],[6,"U520","","",null,null],[6,"P520","","",null,null],[6,"N520","","",null,null],[6,"U521","","",null,null],[6,"P521","","",null,null],[6,"N521","","",null,null],[6,"U522","","",null,null],[6,"P522","","",null,null],[6,"N522","","",null,null],[6,"U523","","",null,null],[6,"P523","","",null,null],[6,"N523","","",null,null],[6,"U524","","",null,null],[6,"P524","","",null,null],[6,"N524","","",null,null],[6,"U525","","",null,null],[6,"P525","","",null,null],[6,"N525","","",null,null],[6,"U526","","",null,null],[6,"P526","","",null,null],[6,"N526","","",null,null],[6,"U527","","",null,null],[6,"P527","","",null,null],[6,"N527","","",null,null],[6,"U528","","",null,null],[6,"P528","","",null,null],[6,"N528","","",null,null],[6,"U529","","",null,null],[6,"P529","","",null,null],[6,"N529","","",null,null],[6,"U530","","",null,null],[6,"P530","","",null,null],[6,"N530","","",null,null],[6,"U531","","",null,null],[6,"P531","","",null,null],[6,"N531","","",null,null],[6,"U532","","",null,null],[6,"P532","","",null,null],[6,"N532","","",null,null],[6,"U533","","",null,null],[6,"P533","","",null,null],[6,"N533","","",null,null],[6,"U534","","",null,null],[6,"P534","","",null,null],[6,"N534","","",null,null],[6,"U535","","",null,null],[6,"P535","","",null,null],[6,"N535","","",null,null],[6,"U536","","",null,null],[6,"P536","","",null,null],[6,"N536","","",null,null],[6,"U537","","",null,null],[6,"P537","","",null,null],[6,"N537","","",null,null],[6,"U538","","",null,null],[6,"P538","","",null,null],[6,"N538","","",null,null],[6,"U539","","",null,null],[6,"P539","","",null,null],[6,"N539","","",null,null],[6,"U540","","",null,null],[6,"P540","","",null,null],[6,"N540","","",null,null],[6,"U541","","",null,null],[6,"P541","","",null,null],[6,"N541","","",null,null],[6,"U542","","",null,null],[6,"P542","","",null,null],[6,"N542","","",null,null],[6,"U543","","",null,null],[6,"P543","","",null,null],[6,"N543","","",null,null],[6,"U544","","",null,null],[6,"P544","","",null,null],[6,"N544","","",null,null],[6,"U545","","",null,null],[6,"P545","","",null,null],[6,"N545","","",null,null],[6,"U546","","",null,null],[6,"P546","","",null,null],[6,"N546","","",null,null],[6,"U547","","",null,null],[6,"P547","","",null,null],[6,"N547","","",null,null],[6,"U548","","",null,null],[6,"P548","","",null,null],[6,"N548","","",null,null],[6,"U549","","",null,null],[6,"P549","","",null,null],[6,"N549","","",null,null],[6,"U550","","",null,null],[6,"P550","","",null,null],[6,"N550","","",null,null],[6,"U551","","",null,null],[6,"P551","","",null,null],[6,"N551","","",null,null],[6,"U552","","",null,null],[6,"P552","","",null,null],[6,"N552","","",null,null],[6,"U553","","",null,null],[6,"P553","","",null,null],[6,"N553","","",null,null],[6,"U554","","",null,null],[6,"P554","","",null,null],[6,"N554","","",null,null],[6,"U555","","",null,null],[6,"P555","","",null,null],[6,"N555","","",null,null],[6,"U556","","",null,null],[6,"P556","","",null,null],[6,"N556","","",null,null],[6,"U557","","",null,null],[6,"P557","","",null,null],[6,"N557","","",null,null],[6,"U558","","",null,null],[6,"P558","","",null,null],[6,"N558","","",null,null],[6,"U559","","",null,null],[6,"P559","","",null,null],[6,"N559","","",null,null],[6,"U560","","",null,null],[6,"P560","","",null,null],[6,"N560","","",null,null],[6,"U561","","",null,null],[6,"P561","","",null,null],[6,"N561","","",null,null],[6,"U562","","",null,null],[6,"P562","","",null,null],[6,"N562","","",null,null],[6,"U563","","",null,null],[6,"P563","","",null,null],[6,"N563","","",null,null],[6,"U564","","",null,null],[6,"P564","","",null,null],[6,"N564","","",null,null],[6,"U565","","",null,null],[6,"P565","","",null,null],[6,"N565","","",null,null],[6,"U566","","",null,null],[6,"P566","","",null,null],[6,"N566","","",null,null],[6,"U567","","",null,null],[6,"P567","","",null,null],[6,"N567","","",null,null],[6,"U568","","",null,null],[6,"P568","","",null,null],[6,"N568","","",null,null],[6,"U569","","",null,null],[6,"P569","","",null,null],[6,"N569","","",null,null],[6,"U570","","",null,null],[6,"P570","","",null,null],[6,"N570","","",null,null],[6,"U571","","",null,null],[6,"P571","","",null,null],[6,"N571","","",null,null],[6,"U572","","",null,null],[6,"P572","","",null,null],[6,"N572","","",null,null],[6,"U573","","",null,null],[6,"P573","","",null,null],[6,"N573","","",null,null],[6,"U574","","",null,null],[6,"P574","","",null,null],[6,"N574","","",null,null],[6,"U575","","",null,null],[6,"P575","","",null,null],[6,"N575","","",null,null],[6,"U576","","",null,null],[6,"P576","","",null,null],[6,"N576","","",null,null],[6,"U577","","",null,null],[6,"P577","","",null,null],[6,"N577","","",null,null],[6,"U578","","",null,null],[6,"P578","","",null,null],[6,"N578","","",null,null],[6,"U579","","",null,null],[6,"P579","","",null,null],[6,"N579","","",null,null],[6,"U580","","",null,null],[6,"P580","","",null,null],[6,"N580","","",null,null],[6,"U581","","",null,null],[6,"P581","","",null,null],[6,"N581","","",null,null],[6,"U582","","",null,null],[6,"P582","","",null,null],[6,"N582","","",null,null],[6,"U583","","",null,null],[6,"P583","","",null,null],[6,"N583","","",null,null],[6,"U584","","",null,null],[6,"P584","","",null,null],[6,"N584","","",null,null],[6,"U585","","",null,null],[6,"P585","","",null,null],[6,"N585","","",null,null],[6,"U586","","",null,null],[6,"P586","","",null,null],[6,"N586","","",null,null],[6,"U587","","",null,null],[6,"P587","","",null,null],[6,"N587","","",null,null],[6,"U588","","",null,null],[6,"P588","","",null,null],[6,"N588","","",null,null],[6,"U589","","",null,null],[6,"P589","","",null,null],[6,"N589","","",null,null],[6,"U590","","",null,null],[6,"P590","","",null,null],[6,"N590","","",null,null],[6,"U591","","",null,null],[6,"P591","","",null,null],[6,"N591","","",null,null],[6,"U592","","",null,null],[6,"P592","","",null,null],[6,"N592","","",null,null],[6,"U593","","",null,null],[6,"P593","","",null,null],[6,"N593","","",null,null],[6,"U594","","",null,null],[6,"P594","","",null,null],[6,"N594","","",null,null],[6,"U595","","",null,null],[6,"P595","","",null,null],[6,"N595","","",null,null],[6,"U596","","",null,null],[6,"P596","","",null,null],[6,"N596","","",null,null],[6,"U597","","",null,null],[6,"P597","","",null,null],[6,"N597","","",null,null],[6,"U598","","",null,null],[6,"P598","","",null,null],[6,"N598","","",null,null],[6,"U599","","",null,null],[6,"P599","","",null,null],[6,"N599","","",null,null],[6,"U600","","",null,null],[6,"P600","","",null,null],[6,"N600","","",null,null],[6,"U601","","",null,null],[6,"P601","","",null,null],[6,"N601","","",null,null],[6,"U602","","",null,null],[6,"P602","","",null,null],[6,"N602","","",null,null],[6,"U603","","",null,null],[6,"P603","","",null,null],[6,"N603","","",null,null],[6,"U604","","",null,null],[6,"P604","","",null,null],[6,"N604","","",null,null],[6,"U605","","",null,null],[6,"P605","","",null,null],[6,"N605","","",null,null],[6,"U606","","",null,null],[6,"P606","","",null,null],[6,"N606","","",null,null],[6,"U607","","",null,null],[6,"P607","","",null,null],[6,"N607","","",null,null],[6,"U608","","",null,null],[6,"P608","","",null,null],[6,"N608","","",null,null],[6,"U609","","",null,null],[6,"P609","","",null,null],[6,"N609","","",null,null],[6,"U610","","",null,null],[6,"P610","","",null,null],[6,"N610","","",null,null],[6,"U611","","",null,null],[6,"P611","","",null,null],[6,"N611","","",null,null],[6,"U612","","",null,null],[6,"P612","","",null,null],[6,"N612","","",null,null],[6,"U613","","",null,null],[6,"P613","","",null,null],[6,"N613","","",null,null],[6,"U614","","",null,null],[6,"P614","","",null,null],[6,"N614","","",null,null],[6,"U615","","",null,null],[6,"P615","","",null,null],[6,"N615","","",null,null],[6,"U616","","",null,null],[6,"P616","","",null,null],[6,"N616","","",null,null],[6,"U617","","",null,null],[6,"P617","","",null,null],[6,"N617","","",null,null],[6,"U618","","",null,null],[6,"P618","","",null,null],[6,"N618","","",null,null],[6,"U619","","",null,null],[6,"P619","","",null,null],[6,"N619","","",null,null],[6,"U620","","",null,null],[6,"P620","","",null,null],[6,"N620","","",null,null],[6,"U621","","",null,null],[6,"P621","","",null,null],[6,"N621","","",null,null],[6,"U622","","",null,null],[6,"P622","","",null,null],[6,"N622","","",null,null],[6,"U623","","",null,null],[6,"P623","","",null,null],[6,"N623","","",null,null],[6,"U624","","",null,null],[6,"P624","","",null,null],[6,"N624","","",null,null],[6,"U625","","",null,null],[6,"P625","","",null,null],[6,"N625","","",null,null],[6,"U626","","",null,null],[6,"P626","","",null,null],[6,"N626","","",null,null],[6,"U627","","",null,null],[6,"P627","","",null,null],[6,"N627","","",null,null],[6,"U628","","",null,null],[6,"P628","","",null,null],[6,"N628","","",null,null],[6,"U629","","",null,null],[6,"P629","","",null,null],[6,"N629","","",null,null],[6,"U630","","",null,null],[6,"P630","","",null,null],[6,"N630","","",null,null],[6,"U631","","",null,null],[6,"P631","","",null,null],[6,"N631","","",null,null],[6,"U632","","",null,null],[6,"P632","","",null,null],[6,"N632","","",null,null],[6,"U633","","",null,null],[6,"P633","","",null,null],[6,"N633","","",null,null],[6,"U634","","",null,null],[6,"P634","","",null,null],[6,"N634","","",null,null],[6,"U635","","",null,null],[6,"P635","","",null,null],[6,"N635","","",null,null],[6,"U636","","",null,null],[6,"P636","","",null,null],[6,"N636","","",null,null],[6,"U637","","",null,null],[6,"P637","","",null,null],[6,"N637","","",null,null],[6,"U638","","",null,null],[6,"P638","","",null,null],[6,"N638","","",null,null],[6,"U639","","",null,null],[6,"P639","","",null,null],[6,"N639","","",null,null],[6,"U640","","",null,null],[6,"P640","","",null,null],[6,"N640","","",null,null],[6,"U641","","",null,null],[6,"P641","","",null,null],[6,"N641","","",null,null],[6,"U642","","",null,null],[6,"P642","","",null,null],[6,"N642","","",null,null],[6,"U643","","",null,null],[6,"P643","","",null,null],[6,"N643","","",null,null],[6,"U644","","",null,null],[6,"P644","","",null,null],[6,"N644","","",null,null],[6,"U645","","",null,null],[6,"P645","","",null,null],[6,"N645","","",null,null],[6,"U646","","",null,null],[6,"P646","","",null,null],[6,"N646","","",null,null],[6,"U647","","",null,null],[6,"P647","","",null,null],[6,"N647","","",null,null],[6,"U648","","",null,null],[6,"P648","","",null,null],[6,"N648","","",null,null],[6,"U649","","",null,null],[6,"P649","","",null,null],[6,"N649","","",null,null],[6,"U650","","",null,null],[6,"P650","","",null,null],[6,"N650","","",null,null],[6,"U651","","",null,null],[6,"P651","","",null,null],[6,"N651","","",null,null],[6,"U652","","",null,null],[6,"P652","","",null,null],[6,"N652","","",null,null],[6,"U653","","",null,null],[6,"P653","","",null,null],[6,"N653","","",null,null],[6,"U654","","",null,null],[6,"P654","","",null,null],[6,"N654","","",null,null],[6,"U655","","",null,null],[6,"P655","","",null,null],[6,"N655","","",null,null],[6,"U656","","",null,null],[6,"P656","","",null,null],[6,"N656","","",null,null],[6,"U657","","",null,null],[6,"P657","","",null,null],[6,"N657","","",null,null],[6,"U658","","",null,null],[6,"P658","","",null,null],[6,"N658","","",null,null],[6,"U659","","",null,null],[6,"P659","","",null,null],[6,"N659","","",null,null],[6,"U660","","",null,null],[6,"P660","","",null,null],[6,"N660","","",null,null],[6,"U661","","",null,null],[6,"P661","","",null,null],[6,"N661","","",null,null],[6,"U662","","",null,null],[6,"P662","","",null,null],[6,"N662","","",null,null],[6,"U663","","",null,null],[6,"P663","","",null,null],[6,"N663","","",null,null],[6,"U664","","",null,null],[6,"P664","","",null,null],[6,"N664","","",null,null],[6,"U665","","",null,null],[6,"P665","","",null,null],[6,"N665","","",null,null],[6,"U666","","",null,null],[6,"P666","","",null,null],[6,"N666","","",null,null],[6,"U667","","",null,null],[6,"P667","","",null,null],[6,"N667","","",null,null],[6,"U668","","",null,null],[6,"P668","","",null,null],[6,"N668","","",null,null],[6,"U669","","",null,null],[6,"P669","","",null,null],[6,"N669","","",null,null],[6,"U670","","",null,null],[6,"P670","","",null,null],[6,"N670","","",null,null],[6,"U671","","",null,null],[6,"P671","","",null,null],[6,"N671","","",null,null],[6,"U672","","",null,null],[6,"P672","","",null,null],[6,"N672","","",null,null],[6,"U673","","",null,null],[6,"P673","","",null,null],[6,"N673","","",null,null],[6,"U674","","",null,null],[6,"P674","","",null,null],[6,"N674","","",null,null],[6,"U675","","",null,null],[6,"P675","","",null,null],[6,"N675","","",null,null],[6,"U676","","",null,null],[6,"P676","","",null,null],[6,"N676","","",null,null],[6,"U677","","",null,null],[6,"P677","","",null,null],[6,"N677","","",null,null],[6,"U678","","",null,null],[6,"P678","","",null,null],[6,"N678","","",null,null],[6,"U679","","",null,null],[6,"P679","","",null,null],[6,"N679","","",null,null],[6,"U680","","",null,null],[6,"P680","","",null,null],[6,"N680","","",null,null],[6,"U681","","",null,null],[6,"P681","","",null,null],[6,"N681","","",null,null],[6,"U682","","",null,null],[6,"P682","","",null,null],[6,"N682","","",null,null],[6,"U683","","",null,null],[6,"P683","","",null,null],[6,"N683","","",null,null],[6,"U684","","",null,null],[6,"P684","","",null,null],[6,"N684","","",null,null],[6,"U685","","",null,null],[6,"P685","","",null,null],[6,"N685","","",null,null],[6,"U686","","",null,null],[6,"P686","","",null,null],[6,"N686","","",null,null],[6,"U687","","",null,null],[6,"P687","","",null,null],[6,"N687","","",null,null],[6,"U688","","",null,null],[6,"P688","","",null,null],[6,"N688","","",null,null],[6,"U689","","",null,null],[6,"P689","","",null,null],[6,"N689","","",null,null],[6,"U690","","",null,null],[6,"P690","","",null,null],[6,"N690","","",null,null],[6,"U691","","",null,null],[6,"P691","","",null,null],[6,"N691","","",null,null],[6,"U692","","",null,null],[6,"P692","","",null,null],[6,"N692","","",null,null],[6,"U693","","",null,null],[6,"P693","","",null,null],[6,"N693","","",null,null],[6,"U694","","",null,null],[6,"P694","","",null,null],[6,"N694","","",null,null],[6,"U695","","",null,null],[6,"P695","","",null,null],[6,"N695","","",null,null],[6,"U696","","",null,null],[6,"P696","","",null,null],[6,"N696","","",null,null],[6,"U697","","",null,null],[6,"P697","","",null,null],[6,"N697","","",null,null],[6,"U698","","",null,null],[6,"P698","","",null,null],[6,"N698","","",null,null],[6,"U699","","",null,null],[6,"P699","","",null,null],[6,"N699","","",null,null],[6,"U700","","",null,null],[6,"P700","","",null,null],[6,"N700","","",null,null],[6,"U701","","",null,null],[6,"P701","","",null,null],[6,"N701","","",null,null],[6,"U702","","",null,null],[6,"P702","","",null,null],[6,"N702","","",null,null],[6,"U703","","",null,null],[6,"P703","","",null,null],[6,"N703","","",null,null],[6,"U704","","",null,null],[6,"P704","","",null,null],[6,"N704","","",null,null],[6,"U705","","",null,null],[6,"P705","","",null,null],[6,"N705","","",null,null],[6,"U706","","",null,null],[6,"P706","","",null,null],[6,"N706","","",null,null],[6,"U707","","",null,null],[6,"P707","","",null,null],[6,"N707","","",null,null],[6,"U708","","",null,null],[6,"P708","","",null,null],[6,"N708","","",null,null],[6,"U709","","",null,null],[6,"P709","","",null,null],[6,"N709","","",null,null],[6,"U710","","",null,null],[6,"P710","","",null,null],[6,"N710","","",null,null],[6,"U711","","",null,null],[6,"P711","","",null,null],[6,"N711","","",null,null],[6,"U712","","",null,null],[6,"P712","","",null,null],[6,"N712","","",null,null],[6,"U713","","",null,null],[6,"P713","","",null,null],[6,"N713","","",null,null],[6,"U714","","",null,null],[6,"P714","","",null,null],[6,"N714","","",null,null],[6,"U715","","",null,null],[6,"P715","","",null,null],[6,"N715","","",null,null],[6,"U716","","",null,null],[6,"P716","","",null,null],[6,"N716","","",null,null],[6,"U717","","",null,null],[6,"P717","","",null,null],[6,"N717","","",null,null],[6,"U718","","",null,null],[6,"P718","","",null,null],[6,"N718","","",null,null],[6,"U719","","",null,null],[6,"P719","","",null,null],[6,"N719","","",null,null],[6,"U720","","",null,null],[6,"P720","","",null,null],[6,"N720","","",null,null],[6,"U721","","",null,null],[6,"P721","","",null,null],[6,"N721","","",null,null],[6,"U722","","",null,null],[6,"P722","","",null,null],[6,"N722","","",null,null],[6,"U723","","",null,null],[6,"P723","","",null,null],[6,"N723","","",null,null],[6,"U724","","",null,null],[6,"P724","","",null,null],[6,"N724","","",null,null],[6,"U725","","",null,null],[6,"P725","","",null,null],[6,"N725","","",null,null],[6,"U726","","",null,null],[6,"P726","","",null,null],[6,"N726","","",null,null],[6,"U727","","",null,null],[6,"P727","","",null,null],[6,"N727","","",null,null],[6,"U728","","",null,null],[6,"P728","","",null,null],[6,"N728","","",null,null],[6,"U729","","",null,null],[6,"P729","","",null,null],[6,"N729","","",null,null],[6,"U730","","",null,null],[6,"P730","","",null,null],[6,"N730","","",null,null],[6,"U731","","",null,null],[6,"P731","","",null,null],[6,"N731","","",null,null],[6,"U732","","",null,null],[6,"P732","","",null,null],[6,"N732","","",null,null],[6,"U733","","",null,null],[6,"P733","","",null,null],[6,"N733","","",null,null],[6,"U734","","",null,null],[6,"P734","","",null,null],[6,"N734","","",null,null],[6,"U735","","",null,null],[6,"P735","","",null,null],[6,"N735","","",null,null],[6,"U736","","",null,null],[6,"P736","","",null,null],[6,"N736","","",null,null],[6,"U737","","",null,null],[6,"P737","","",null,null],[6,"N737","","",null,null],[6,"U738","","",null,null],[6,"P738","","",null,null],[6,"N738","","",null,null],[6,"U739","","",null,null],[6,"P739","","",null,null],[6,"N739","","",null,null],[6,"U740","","",null,null],[6,"P740","","",null,null],[6,"N740","","",null,null],[6,"U741","","",null,null],[6,"P741","","",null,null],[6,"N741","","",null,null],[6,"U742","","",null,null],[6,"P742","","",null,null],[6,"N742","","",null,null],[6,"U743","","",null,null],[6,"P743","","",null,null],[6,"N743","","",null,null],[6,"U744","","",null,null],[6,"P744","","",null,null],[6,"N744","","",null,null],[6,"U745","","",null,null],[6,"P745","","",null,null],[6,"N745","","",null,null],[6,"U746","","",null,null],[6,"P746","","",null,null],[6,"N746","","",null,null],[6,"U747","","",null,null],[6,"P747","","",null,null],[6,"N747","","",null,null],[6,"U748","","",null,null],[6,"P748","","",null,null],[6,"N748","","",null,null],[6,"U749","","",null,null],[6,"P749","","",null,null],[6,"N749","","",null,null],[6,"U750","","",null,null],[6,"P750","","",null,null],[6,"N750","","",null,null],[6,"U751","","",null,null],[6,"P751","","",null,null],[6,"N751","","",null,null],[6,"U752","","",null,null],[6,"P752","","",null,null],[6,"N752","","",null,null],[6,"U753","","",null,null],[6,"P753","","",null,null],[6,"N753","","",null,null],[6,"U754","","",null,null],[6,"P754","","",null,null],[6,"N754","","",null,null],[6,"U755","","",null,null],[6,"P755","","",null,null],[6,"N755","","",null,null],[6,"U756","","",null,null],[6,"P756","","",null,null],[6,"N756","","",null,null],[6,"U757","","",null,null],[6,"P757","","",null,null],[6,"N757","","",null,null],[6,"U758","","",null,null],[6,"P758","","",null,null],[6,"N758","","",null,null],[6,"U759","","",null,null],[6,"P759","","",null,null],[6,"N759","","",null,null],[6,"U760","","",null,null],[6,"P760","","",null,null],[6,"N760","","",null,null],[6,"U761","","",null,null],[6,"P761","","",null,null],[6,"N761","","",null,null],[6,"U762","","",null,null],[6,"P762","","",null,null],[6,"N762","","",null,null],[6,"U763","","",null,null],[6,"P763","","",null,null],[6,"N763","","",null,null],[6,"U764","","",null,null],[6,"P764","","",null,null],[6,"N764","","",null,null],[6,"U765","","",null,null],[6,"P765","","",null,null],[6,"N765","","",null,null],[6,"U766","","",null,null],[6,"P766","","",null,null],[6,"N766","","",null,null],[6,"U767","","",null,null],[6,"P767","","",null,null],[6,"N767","","",null,null],[6,"U768","","",null,null],[6,"P768","","",null,null],[6,"N768","","",null,null],[6,"U769","","",null,null],[6,"P769","","",null,null],[6,"N769","","",null,null],[6,"U770","","",null,null],[6,"P770","","",null,null],[6,"N770","","",null,null],[6,"U771","","",null,null],[6,"P771","","",null,null],[6,"N771","","",null,null],[6,"U772","","",null,null],[6,"P772","","",null,null],[6,"N772","","",null,null],[6,"U773","","",null,null],[6,"P773","","",null,null],[6,"N773","","",null,null],[6,"U774","","",null,null],[6,"P774","","",null,null],[6,"N774","","",null,null],[6,"U775","","",null,null],[6,"P775","","",null,null],[6,"N775","","",null,null],[6,"U776","","",null,null],[6,"P776","","",null,null],[6,"N776","","",null,null],[6,"U777","","",null,null],[6,"P777","","",null,null],[6,"N777","","",null,null],[6,"U778","","",null,null],[6,"P778","","",null,null],[6,"N778","","",null,null],[6,"U779","","",null,null],[6,"P779","","",null,null],[6,"N779","","",null,null],[6,"U780","","",null,null],[6,"P780","","",null,null],[6,"N780","","",null,null],[6,"U781","","",null,null],[6,"P781","","",null,null],[6,"N781","","",null,null],[6,"U782","","",null,null],[6,"P782","","",null,null],[6,"N782","","",null,null],[6,"U783","","",null,null],[6,"P783","","",null,null],[6,"N783","","",null,null],[6,"U784","","",null,null],[6,"P784","","",null,null],[6,"N784","","",null,null],[6,"U785","","",null,null],[6,"P785","","",null,null],[6,"N785","","",null,null],[6,"U786","","",null,null],[6,"P786","","",null,null],[6,"N786","","",null,null],[6,"U787","","",null,null],[6,"P787","","",null,null],[6,"N787","","",null,null],[6,"U788","","",null,null],[6,"P788","","",null,null],[6,"N788","","",null,null],[6,"U789","","",null,null],[6,"P789","","",null,null],[6,"N789","","",null,null],[6,"U790","","",null,null],[6,"P790","","",null,null],[6,"N790","","",null,null],[6,"U791","","",null,null],[6,"P791","","",null,null],[6,"N791","","",null,null],[6,"U792","","",null,null],[6,"P792","","",null,null],[6,"N792","","",null,null],[6,"U793","","",null,null],[6,"P793","","",null,null],[6,"N793","","",null,null],[6,"U794","","",null,null],[6,"P794","","",null,null],[6,"N794","","",null,null],[6,"U795","","",null,null],[6,"P795","","",null,null],[6,"N795","","",null,null],[6,"U796","","",null,null],[6,"P796","","",null,null],[6,"N796","","",null,null],[6,"U797","","",null,null],[6,"P797","","",null,null],[6,"N797","","",null,null],[6,"U798","","",null,null],[6,"P798","","",null,null],[6,"N798","","",null,null],[6,"U799","","",null,null],[6,"P799","","",null,null],[6,"N799","","",null,null],[6,"U800","","",null,null],[6,"P800","","",null,null],[6,"N800","","",null,null],[6,"U801","","",null,null],[6,"P801","","",null,null],[6,"N801","","",null,null],[6,"U802","","",null,null],[6,"P802","","",null,null],[6,"N802","","",null,null],[6,"U803","","",null,null],[6,"P803","","",null,null],[6,"N803","","",null,null],[6,"U804","","",null,null],[6,"P804","","",null,null],[6,"N804","","",null,null],[6,"U805","","",null,null],[6,"P805","","",null,null],[6,"N805","","",null,null],[6,"U806","","",null,null],[6,"P806","","",null,null],[6,"N806","","",null,null],[6,"U807","","",null,null],[6,"P807","","",null,null],[6,"N807","","",null,null],[6,"U808","","",null,null],[6,"P808","","",null,null],[6,"N808","","",null,null],[6,"U809","","",null,null],[6,"P809","","",null,null],[6,"N809","","",null,null],[6,"U810","","",null,null],[6,"P810","","",null,null],[6,"N810","","",null,null],[6,"U811","","",null,null],[6,"P811","","",null,null],[6,"N811","","",null,null],[6,"U812","","",null,null],[6,"P812","","",null,null],[6,"N812","","",null,null],[6,"U813","","",null,null],[6,"P813","","",null,null],[6,"N813","","",null,null],[6,"U814","","",null,null],[6,"P814","","",null,null],[6,"N814","","",null,null],[6,"U815","","",null,null],[6,"P815","","",null,null],[6,"N815","","",null,null],[6,"U816","","",null,null],[6,"P816","","",null,null],[6,"N816","","",null,null],[6,"U817","","",null,null],[6,"P817","","",null,null],[6,"N817","","",null,null],[6,"U818","","",null,null],[6,"P818","","",null,null],[6,"N818","","",null,null],[6,"U819","","",null,null],[6,"P819","","",null,null],[6,"N819","","",null,null],[6,"U820","","",null,null],[6,"P820","","",null,null],[6,"N820","","",null,null],[6,"U821","","",null,null],[6,"P821","","",null,null],[6,"N821","","",null,null],[6,"U822","","",null,null],[6,"P822","","",null,null],[6,"N822","","",null,null],[6,"U823","","",null,null],[6,"P823","","",null,null],[6,"N823","","",null,null],[6,"U824","","",null,null],[6,"P824","","",null,null],[6,"N824","","",null,null],[6,"U825","","",null,null],[6,"P825","","",null,null],[6,"N825","","",null,null],[6,"U826","","",null,null],[6,"P826","","",null,null],[6,"N826","","",null,null],[6,"U827","","",null,null],[6,"P827","","",null,null],[6,"N827","","",null,null],[6,"U828","","",null,null],[6,"P828","","",null,null],[6,"N828","","",null,null],[6,"U829","","",null,null],[6,"P829","","",null,null],[6,"N829","","",null,null],[6,"U830","","",null,null],[6,"P830","","",null,null],[6,"N830","","",null,null],[6,"U831","","",null,null],[6,"P831","","",null,null],[6,"N831","","",null,null],[6,"U832","","",null,null],[6,"P832","","",null,null],[6,"N832","","",null,null],[6,"U833","","",null,null],[6,"P833","","",null,null],[6,"N833","","",null,null],[6,"U834","","",null,null],[6,"P834","","",null,null],[6,"N834","","",null,null],[6,"U835","","",null,null],[6,"P835","","",null,null],[6,"N835","","",null,null],[6,"U836","","",null,null],[6,"P836","","",null,null],[6,"N836","","",null,null],[6,"U837","","",null,null],[6,"P837","","",null,null],[6,"N837","","",null,null],[6,"U838","","",null,null],[6,"P838","","",null,null],[6,"N838","","",null,null],[6,"U839","","",null,null],[6,"P839","","",null,null],[6,"N839","","",null,null],[6,"U840","","",null,null],[6,"P840","","",null,null],[6,"N840","","",null,null],[6,"U841","","",null,null],[6,"P841","","",null,null],[6,"N841","","",null,null],[6,"U842","","",null,null],[6,"P842","","",null,null],[6,"N842","","",null,null],[6,"U843","","",null,null],[6,"P843","","",null,null],[6,"N843","","",null,null],[6,"U844","","",null,null],[6,"P844","","",null,null],[6,"N844","","",null,null],[6,"U845","","",null,null],[6,"P845","","",null,null],[6,"N845","","",null,null],[6,"U846","","",null,null],[6,"P846","","",null,null],[6,"N846","","",null,null],[6,"U847","","",null,null],[6,"P847","","",null,null],[6,"N847","","",null,null],[6,"U848","","",null,null],[6,"P848","","",null,null],[6,"N848","","",null,null],[6,"U849","","",null,null],[6,"P849","","",null,null],[6,"N849","","",null,null],[6,"U850","","",null,null],[6,"P850","","",null,null],[6,"N850","","",null,null],[6,"U851","","",null,null],[6,"P851","","",null,null],[6,"N851","","",null,null],[6,"U852","","",null,null],[6,"P852","","",null,null],[6,"N852","","",null,null],[6,"U853","","",null,null],[6,"P853","","",null,null],[6,"N853","","",null,null],[6,"U854","","",null,null],[6,"P854","","",null,null],[6,"N854","","",null,null],[6,"U855","","",null,null],[6,"P855","","",null,null],[6,"N855","","",null,null],[6,"U856","","",null,null],[6,"P856","","",null,null],[6,"N856","","",null,null],[6,"U857","","",null,null],[6,"P857","","",null,null],[6,"N857","","",null,null],[6,"U858","","",null,null],[6,"P858","","",null,null],[6,"N858","","",null,null],[6,"U859","","",null,null],[6,"P859","","",null,null],[6,"N859","","",null,null],[6,"U860","","",null,null],[6,"P860","","",null,null],[6,"N860","","",null,null],[6,"U861","","",null,null],[6,"P861","","",null,null],[6,"N861","","",null,null],[6,"U862","","",null,null],[6,"P862","","",null,null],[6,"N862","","",null,null],[6,"U863","","",null,null],[6,"P863","","",null,null],[6,"N863","","",null,null],[6,"U864","","",null,null],[6,"P864","","",null,null],[6,"N864","","",null,null],[6,"U865","","",null,null],[6,"P865","","",null,null],[6,"N865","","",null,null],[6,"U866","","",null,null],[6,"P866","","",null,null],[6,"N866","","",null,null],[6,"U867","","",null,null],[6,"P867","","",null,null],[6,"N867","","",null,null],[6,"U868","","",null,null],[6,"P868","","",null,null],[6,"N868","","",null,null],[6,"U869","","",null,null],[6,"P869","","",null,null],[6,"N869","","",null,null],[6,"U870","","",null,null],[6,"P870","","",null,null],[6,"N870","","",null,null],[6,"U871","","",null,null],[6,"P871","","",null,null],[6,"N871","","",null,null],[6,"U872","","",null,null],[6,"P872","","",null,null],[6,"N872","","",null,null],[6,"U873","","",null,null],[6,"P873","","",null,null],[6,"N873","","",null,null],[6,"U874","","",null,null],[6,"P874","","",null,null],[6,"N874","","",null,null],[6,"U875","","",null,null],[6,"P875","","",null,null],[6,"N875","","",null,null],[6,"U876","","",null,null],[6,"P876","","",null,null],[6,"N876","","",null,null],[6,"U877","","",null,null],[6,"P877","","",null,null],[6,"N877","","",null,null],[6,"U878","","",null,null],[6,"P878","","",null,null],[6,"N878","","",null,null],[6,"U879","","",null,null],[6,"P879","","",null,null],[6,"N879","","",null,null],[6,"U880","","",null,null],[6,"P880","","",null,null],[6,"N880","","",null,null],[6,"U881","","",null,null],[6,"P881","","",null,null],[6,"N881","","",null,null],[6,"U882","","",null,null],[6,"P882","","",null,null],[6,"N882","","",null,null],[6,"U883","","",null,null],[6,"P883","","",null,null],[6,"N883","","",null,null],[6,"U884","","",null,null],[6,"P884","","",null,null],[6,"N884","","",null,null],[6,"U885","","",null,null],[6,"P885","","",null,null],[6,"N885","","",null,null],[6,"U886","","",null,null],[6,"P886","","",null,null],[6,"N886","","",null,null],[6,"U887","","",null,null],[6,"P887","","",null,null],[6,"N887","","",null,null],[6,"U888","","",null,null],[6,"P888","","",null,null],[6,"N888","","",null,null],[6,"U889","","",null,null],[6,"P889","","",null,null],[6,"N889","","",null,null],[6,"U890","","",null,null],[6,"P890","","",null,null],[6,"N890","","",null,null],[6,"U891","","",null,null],[6,"P891","","",null,null],[6,"N891","","",null,null],[6,"U892","","",null,null],[6,"P892","","",null,null],[6,"N892","","",null,null],[6,"U893","","",null,null],[6,"P893","","",null,null],[6,"N893","","",null,null],[6,"U894","","",null,null],[6,"P894","","",null,null],[6,"N894","","",null,null],[6,"U895","","",null,null],[6,"P895","","",null,null],[6,"N895","","",null,null],[6,"U896","","",null,null],[6,"P896","","",null,null],[6,"N896","","",null,null],[6,"U897","","",null,null],[6,"P897","","",null,null],[6,"N897","","",null,null],[6,"U898","","",null,null],[6,"P898","","",null,null],[6,"N898","","",null,null],[6,"U899","","",null,null],[6,"P899","","",null,null],[6,"N899","","",null,null],[6,"U900","","",null,null],[6,"P900","","",null,null],[6,"N900","","",null,null],[6,"U901","","",null,null],[6,"P901","","",null,null],[6,"N901","","",null,null],[6,"U902","","",null,null],[6,"P902","","",null,null],[6,"N902","","",null,null],[6,"U903","","",null,null],[6,"P903","","",null,null],[6,"N903","","",null,null],[6,"U904","","",null,null],[6,"P904","","",null,null],[6,"N904","","",null,null],[6,"U905","","",null,null],[6,"P905","","",null,null],[6,"N905","","",null,null],[6,"U906","","",null,null],[6,"P906","","",null,null],[6,"N906","","",null,null],[6,"U907","","",null,null],[6,"P907","","",null,null],[6,"N907","","",null,null],[6,"U908","","",null,null],[6,"P908","","",null,null],[6,"N908","","",null,null],[6,"U909","","",null,null],[6,"P909","","",null,null],[6,"N909","","",null,null],[6,"U910","","",null,null],[6,"P910","","",null,null],[6,"N910","","",null,null],[6,"U911","","",null,null],[6,"P911","","",null,null],[6,"N911","","",null,null],[6,"U912","","",null,null],[6,"P912","","",null,null],[6,"N912","","",null,null],[6,"U913","","",null,null],[6,"P913","","",null,null],[6,"N913","","",null,null],[6,"U914","","",null,null],[6,"P914","","",null,null],[6,"N914","","",null,null],[6,"U915","","",null,null],[6,"P915","","",null,null],[6,"N915","","",null,null],[6,"U916","","",null,null],[6,"P916","","",null,null],[6,"N916","","",null,null],[6,"U917","","",null,null],[6,"P917","","",null,null],[6,"N917","","",null,null],[6,"U918","","",null,null],[6,"P918","","",null,null],[6,"N918","","",null,null],[6,"U919","","",null,null],[6,"P919","","",null,null],[6,"N919","","",null,null],[6,"U920","","",null,null],[6,"P920","","",null,null],[6,"N920","","",null,null],[6,"U921","","",null,null],[6,"P921","","",null,null],[6,"N921","","",null,null],[6,"U922","","",null,null],[6,"P922","","",null,null],[6,"N922","","",null,null],[6,"U923","","",null,null],[6,"P923","","",null,null],[6,"N923","","",null,null],[6,"U924","","",null,null],[6,"P924","","",null,null],[6,"N924","","",null,null],[6,"U925","","",null,null],[6,"P925","","",null,null],[6,"N925","","",null,null],[6,"U926","","",null,null],[6,"P926","","",null,null],[6,"N926","","",null,null],[6,"U927","","",null,null],[6,"P927","","",null,null],[6,"N927","","",null,null],[6,"U928","","",null,null],[6,"P928","","",null,null],[6,"N928","","",null,null],[6,"U929","","",null,null],[6,"P929","","",null,null],[6,"N929","","",null,null],[6,"U930","","",null,null],[6,"P930","","",null,null],[6,"N930","","",null,null],[6,"U931","","",null,null],[6,"P931","","",null,null],[6,"N931","","",null,null],[6,"U932","","",null,null],[6,"P932","","",null,null],[6,"N932","","",null,null],[6,"U933","","",null,null],[6,"P933","","",null,null],[6,"N933","","",null,null],[6,"U934","","",null,null],[6,"P934","","",null,null],[6,"N934","","",null,null],[6,"U935","","",null,null],[6,"P935","","",null,null],[6,"N935","","",null,null],[6,"U936","","",null,null],[6,"P936","","",null,null],[6,"N936","","",null,null],[6,"U937","","",null,null],[6,"P937","","",null,null],[6,"N937","","",null,null],[6,"U938","","",null,null],[6,"P938","","",null,null],[6,"N938","","",null,null],[6,"U939","","",null,null],[6,"P939","","",null,null],[6,"N939","","",null,null],[6,"U940","","",null,null],[6,"P940","","",null,null],[6,"N940","","",null,null],[6,"U941","","",null,null],[6,"P941","","",null,null],[6,"N941","","",null,null],[6,"U942","","",null,null],[6,"P942","","",null,null],[6,"N942","","",null,null],[6,"U943","","",null,null],[6,"P943","","",null,null],[6,"N943","","",null,null],[6,"U944","","",null,null],[6,"P944","","",null,null],[6,"N944","","",null,null],[6,"U945","","",null,null],[6,"P945","","",null,null],[6,"N945","","",null,null],[6,"U946","","",null,null],[6,"P946","","",null,null],[6,"N946","","",null,null],[6,"U947","","",null,null],[6,"P947","","",null,null],[6,"N947","","",null,null],[6,"U948","","",null,null],[6,"P948","","",null,null],[6,"N948","","",null,null],[6,"U949","","",null,null],[6,"P949","","",null,null],[6,"N949","","",null,null],[6,"U950","","",null,null],[6,"P950","","",null,null],[6,"N950","","",null,null],[6,"U951","","",null,null],[6,"P951","","",null,null],[6,"N951","","",null,null],[6,"U952","","",null,null],[6,"P952","","",null,null],[6,"N952","","",null,null],[6,"U953","","",null,null],[6,"P953","","",null,null],[6,"N953","","",null,null],[6,"U954","","",null,null],[6,"P954","","",null,null],[6,"N954","","",null,null],[6,"U955","","",null,null],[6,"P955","","",null,null],[6,"N955","","",null,null],[6,"U956","","",null,null],[6,"P956","","",null,null],[6,"N956","","",null,null],[6,"U957","","",null,null],[6,"P957","","",null,null],[6,"N957","","",null,null],[6,"U958","","",null,null],[6,"P958","","",null,null],[6,"N958","","",null,null],[6,"U959","","",null,null],[6,"P959","","",null,null],[6,"N959","","",null,null],[6,"U960","","",null,null],[6,"P960","","",null,null],[6,"N960","","",null,null],[6,"U961","","",null,null],[6,"P961","","",null,null],[6,"N961","","",null,null],[6,"U962","","",null,null],[6,"P962","","",null,null],[6,"N962","","",null,null],[6,"U963","","",null,null],[6,"P963","","",null,null],[6,"N963","","",null,null],[6,"U964","","",null,null],[6,"P964","","",null,null],[6,"N964","","",null,null],[6,"U965","","",null,null],[6,"P965","","",null,null],[6,"N965","","",null,null],[6,"U966","","",null,null],[6,"P966","","",null,null],[6,"N966","","",null,null],[6,"U967","","",null,null],[6,"P967","","",null,null],[6,"N967","","",null,null],[6,"U968","","",null,null],[6,"P968","","",null,null],[6,"N968","","",null,null],[6,"U969","","",null,null],[6,"P969","","",null,null],[6,"N969","","",null,null],[6,"U970","","",null,null],[6,"P970","","",null,null],[6,"N970","","",null,null],[6,"U971","","",null,null],[6,"P971","","",null,null],[6,"N971","","",null,null],[6,"U972","","",null,null],[6,"P972","","",null,null],[6,"N972","","",null,null],[6,"U973","","",null,null],[6,"P973","","",null,null],[6,"N973","","",null,null],[6,"U974","","",null,null],[6,"P974","","",null,null],[6,"N974","","",null,null],[6,"U975","","",null,null],[6,"P975","","",null,null],[6,"N975","","",null,null],[6,"U976","","",null,null],[6,"P976","","",null,null],[6,"N976","","",null,null],[6,"U977","","",null,null],[6,"P977","","",null,null],[6,"N977","","",null,null],[6,"U978","","",null,null],[6,"P978","","",null,null],[6,"N978","","",null,null],[6,"U979","","",null,null],[6,"P979","","",null,null],[6,"N979","","",null,null],[6,"U980","","",null,null],[6,"P980","","",null,null],[6,"N980","","",null,null],[6,"U981","","",null,null],[6,"P981","","",null,null],[6,"N981","","",null,null],[6,"U982","","",null,null],[6,"P982","","",null,null],[6,"N982","","",null,null],[6,"U983","","",null,null],[6,"P983","","",null,null],[6,"N983","","",null,null],[6,"U984","","",null,null],[6,"P984","","",null,null],[6,"N984","","",null,null],[6,"U985","","",null,null],[6,"P985","","",null,null],[6,"N985","","",null,null],[6,"U986","","",null,null],[6,"P986","","",null,null],[6,"N986","","",null,null],[6,"U987","","",null,null],[6,"P987","","",null,null],[6,"N987","","",null,null],[6,"U988","","",null,null],[6,"P988","","",null,null],[6,"N988","","",null,null],[6,"U989","","",null,null],[6,"P989","","",null,null],[6,"N989","","",null,null],[6,"U990","","",null,null],[6,"P990","","",null,null],[6,"N990","","",null,null],[6,"U991","","",null,null],[6,"P991","","",null,null],[6,"N991","","",null,null],[6,"U992","","",null,null],[6,"P992","","",null,null],[6,"N992","","",null,null],[6,"U993","","",null,null],[6,"P993","","",null,null],[6,"N993","","",null,null],[6,"U994","","",null,null],[6,"P994","","",null,null],[6,"N994","","",null,null],[6,"U995","","",null,null],[6,"P995","","",null,null],[6,"N995","","",null,null],[6,"U996","","",null,null],[6,"P996","","",null,null],[6,"N996","","",null,null],[6,"U997","","",null,null],[6,"P997","","",null,null],[6,"N997","","",null,null],[6,"U998","","",null,null],[6,"P998","","",null,null],[6,"N998","","",null,null],[6,"U999","","",null,null],[6,"P999","","",null,null],[6,"N999","","",null,null],[6,"U1000","","",null,null],[6,"P1000","","",null,null],[6,"N1000","","",null,null],[6,"U1001","","",null,null],[6,"P1001","","",null,null],[6,"N1001","","",null,null],[6,"U1002","","",null,null],[6,"P1002","","",null,null],[6,"N1002","","",null,null],[6,"U1003","","",null,null],[6,"P1003","","",null,null],[6,"N1003","","",null,null],[6,"U1004","","",null,null],[6,"P1004","","",null,null],[6,"N1004","","",null,null],[6,"U1005","","",null,null],[6,"P1005","","",null,null],[6,"N1005","","",null,null],[6,"U1006","","",null,null],[6,"P1006","","",null,null],[6,"N1006","","",null,null],[6,"U1007","","",null,null],[6,"P1007","","",null,null],[6,"N1007","","",null,null],[6,"U1008","","",null,null],[6,"P1008","","",null,null],[6,"N1008","","",null,null],[6,"U1009","","",null,null],[6,"P1009","","",null,null],[6,"N1009","","",null,null],[6,"U1010","","",null,null],[6,"P1010","","",null,null],[6,"N1010","","",null,null],[6,"U1011","","",null,null],[6,"P1011","","",null,null],[6,"N1011","","",null,null],[6,"U1012","","",null,null],[6,"P1012","","",null,null],[6,"N1012","","",null,null],[6,"U1013","","",null,null],[6,"P1013","","",null,null],[6,"N1013","","",null,null],[6,"U1014","","",null,null],[6,"P1014","","",null,null],[6,"N1014","","",null,null],[6,"U1015","","",null,null],[6,"P1015","","",null,null],[6,"N1015","","",null,null],[6,"U1016","","",null,null],[6,"P1016","","",null,null],[6,"N1016","","",null,null],[6,"U1017","","",null,null],[6,"P1017","","",null,null],[6,"N1017","","",null,null],[6,"U1018","","",null,null],[6,"P1018","","",null,null],[6,"N1018","","",null,null],[6,"U1019","","",null,null],[6,"P1019","","",null,null],[6,"N1019","","",null,null],[6,"U1020","","",null,null],[6,"P1020","","",null,null],[6,"N1020","","",null,null],[6,"U1021","","",null,null],[6,"P1021","","",null,null],[6,"N1021","","",null,null],[6,"U1022","","",null,null],[6,"P1022","","",null,null],[6,"N1022","","",null,null],[6,"U1023","","",null,null],[6,"P1023","","",null,null],[6,"N1023","","",null,null],[6,"U1024","","",null,null],[6,"P1024","","",null,null],[6,"N1024","","",null,null],[6,"U2048","","",null,null],[6,"P2048","","",null,null],[6,"N2048","","",null,null],[6,"U4096","","",null,null],[6,"P4096","","",null,null],[6,"N4096","","",null,null],[6,"U8192","","",null,null],[6,"P8192","","",null,null],[6,"N8192","","",null,null],[6,"U16384","","",null,null],[6,"P16384","","",null,null],[6,"N16384","","",null,null],[6,"U32768","","",null,null],[6,"P32768","","",null,null],[6,"N32768","","",null,null],[6,"U65536","","",null,null],[6,"P65536","","",null,null],[6,"N65536","","",null,null],[6,"U131072","","",null,null],[6,"P131072","","",null,null],[6,"N131072","","",null,null],[6,"U262144","","",null,null],[6,"P262144","","",null,null],[6,"N262144","","",null,null],[6,"U524288","","",null,null],[6,"P524288","","",null,null],[6,"N524288","","",null,null],[6,"U1048576","","",null,null],[6,"P1048576","","",null,null],[6,"N1048576","","",null,null],[6,"U2097152","","",null,null],[6,"P2097152","","",null,null],[6,"N2097152","","",null,null],[6,"U4194304","","",null,null],[6,"P4194304","","",null,null],[6,"N4194304","","",null,null],[6,"U8388608","","",null,null],[6,"P8388608","","",null,null],[6,"N8388608","","",null,null],[6,"U16777216","","",null,null],[6,"P16777216","","",null,null],[6,"N16777216","","",null,null],[6,"U33554432","","",null,null],[6,"P33554432","","",null,null],[6,"N33554432","","",null,null],[6,"U67108864","","",null,null],[6,"P67108864","","",null,null],[6,"N67108864","","",null,null],[6,"U134217728","","",null,null],[6,"P134217728","","",null,null],[6,"N134217728","","",null,null],[6,"U268435456","","",null,null],[6,"P268435456","","",null,null],[6,"N268435456","","",null,null],[6,"U536870912","","",null,null],[6,"P536870912","","",null,null],[6,"N536870912","","",null,null],[6,"U1073741824","","",null,null],[6,"P1073741824","","",null,null],[6,"N1073741824","","",null,null],[6,"U2147483648","","",null,null],[6,"P2147483648","","",null,null],[6,"N2147483648","","",null,null],[6,"U4294967296","","",null,null],[6,"P4294967296","","",null,null],[6,"N4294967296","","",null,null],[6,"U8589934592","","",null,null],[6,"P8589934592","","",null,null],[6,"N8589934592","","",null,null],[6,"U17179869184","","",null,null],[6,"P17179869184","","",null,null],[6,"N17179869184","","",null,null],[6,"U34359738368","","",null,null],[6,"P34359738368","","",null,null],[6,"N34359738368","","",null,null],[6,"U68719476736","","",null,null],[6,"P68719476736","","",null,null],[6,"N68719476736","","",null,null],[6,"U137438953472","","",null,null],[6,"P137438953472","","",null,null],[6,"N137438953472","","",null,null],[6,"U274877906944","","",null,null],[6,"P274877906944","","",null,null],[6,"N274877906944","","",null,null],[6,"U549755813888","","",null,null],[6,"P549755813888","","",null,null],[6,"N549755813888","","",null,null],[6,"U1099511627776","","",null,null],[6,"P1099511627776","","",null,null],[6,"N1099511627776","","",null,null],[6,"U2199023255552","","",null,null],[6,"P2199023255552","","",null,null],[6,"N2199023255552","","",null,null],[6,"U4398046511104","","",null,null],[6,"P4398046511104","","",null,null],[6,"N4398046511104","","",null,null],[6,"U8796093022208","","",null,null],[6,"P8796093022208","","",null,null],[6,"N8796093022208","","",null,null],[6,"U17592186044416","","",null,null],[6,"P17592186044416","","",null,null],[6,"N17592186044416","","",null,null],[6,"U35184372088832","","",null,null],[6,"P35184372088832","","",null,null],[6,"N35184372088832","","",null,null],[6,"U70368744177664","","",null,null],[6,"P70368744177664","","",null,null],[6,"N70368744177664","","",null,null],[6,"U140737488355328","","",null,null],[6,"P140737488355328","","",null,null],[6,"N140737488355328","","",null,null],[6,"U281474976710656","","",null,null],[6,"P281474976710656","","",null,null],[6,"N281474976710656","","",null,null],[6,"U562949953421312","","",null,null],[6,"P562949953421312","","",null,null],[6,"N562949953421312","","",null,null],[6,"U1125899906842624","","",null,null],[6,"P1125899906842624","","",null,null],[6,"N1125899906842624","","",null,null],[6,"U2251799813685248","","",null,null],[6,"P2251799813685248","","",null,null],[6,"N2251799813685248","","",null,null],[6,"U4503599627370496","","",null,null],[6,"P4503599627370496","","",null,null],[6,"N4503599627370496","","",null,null],[6,"U9007199254740992","","",null,null],[6,"P9007199254740992","","",null,null],[6,"N9007199254740992","","",null,null],[6,"U18014398509481984","","",null,null],[6,"P18014398509481984","","",null,null],[6,"N18014398509481984","","",null,null],[6,"U36028797018963968","","",null,null],[6,"P36028797018963968","","",null,null],[6,"N36028797018963968","","",null,null],[6,"U72057594037927936","","",null,null],[6,"P72057594037927936","","",null,null],[6,"N72057594037927936","","",null,null],[6,"U144115188075855872","","",null,null],[6,"P144115188075855872","","",null,null],[6,"N144115188075855872","","",null,null],[6,"U288230376151711744","","",null,null],[6,"P288230376151711744","","",null,null],[6,"N288230376151711744","","",null,null],[6,"U576460752303423488","","",null,null],[6,"P576460752303423488","","",null,null],[6,"N576460752303423488","","",null,null],[6,"U1152921504606846976","","",null,null],[6,"P1152921504606846976","","",null,null],[6,"N1152921504606846976","","",null,null],[6,"U2305843009213693952","","",null,null],[6,"P2305843009213693952","","",null,null],[6,"N2305843009213693952","","",null,null],[6,"U4611686018427387904","","",null,null],[6,"P4611686018427387904","","",null,null],[6,"N4611686018427387904","","",null,null],[6,"U9223372036854775808","","",null,null],[6,"U10000","","",null,null],[6,"P10000","","",null,null],[6,"N10000","","",null,null],[6,"U100000","","",null,null],[6,"P100000","","",null,null],[6,"N100000","","",null,null],[6,"U1000000","","",null,null],[6,"P1000000","","",null,null],[6,"N1000000","","",null,null],[6,"U10000000","","",null,null],[6,"P10000000","","",null,null],[6,"N10000000","","",null,null],[6,"U100000000","","",null,null],[6,"P100000000","","",null,null],[6,"N100000000","","",null,null],[6,"U1000000000","","",null,null],[6,"P1000000000","","",null,null],[6,"N1000000000","","",null,null],[6,"U10000000000","","",null,null],[6,"P10000000000","","",null,null],[6,"N10000000000","","",null,null],[6,"U100000000000","","",null,null],[6,"P100000000000","","",null,null],[6,"N100000000000","","",null,null],[6,"U1000000000000","","",null,null],[6,"P1000000000000","","",null,null],[6,"N1000000000000","","",null,null],[6,"U10000000000000","","",null,null],[6,"P10000000000000","","",null,null],[6,"N10000000000000","","",null,null],[6,"U100000000000000","","",null,null],[6,"P100000000000000","","",null,null],[6,"N100000000000000","","",null,null],[6,"U1000000000000000","","",null,null],[6,"P1000000000000000","","",null,null],[6,"N1000000000000000","","",null,null],[6,"U10000000000000000","","",null,null],[6,"P10000000000000000","","",null,null],[6,"N10000000000000000","","",null,null],[6,"U100000000000000000","","",null,null],[6,"P100000000000000000","","",null,null],[6,"N100000000000000000","","",null,null],[6,"U1000000000000000000","","",null,null],[6,"P1000000000000000000","","",null,null],[6,"N1000000000000000000","","",null,null],[6,"U10000000000000000000","","",null,null],[0,"bit","typenum","Type-level bits.",null,null],[3,"B0","typenum::bit","The type-level bit 0.",null,null],[3,"B1","","The type-level bit 1.",null,null],[11,"new","","Instantiates a singleton representing this bit.",0,[[],["b0"]]],[11,"new","","Instantiates a singleton representing this bit.",1,[[],["b1"]]],[0,"int","typenum","Type-level signed integers.",null,null],[3,"PInt","typenum::int","Type-level signed integers with positive sign.",null,null],[3,"NInt","","Type-level signed integers with negative sign.",null,null],[3,"Z0","","The type-level signed integer 0.",null,null],[11,"new","","Instantiates a singleton representing this strictly…",2,[[],["pint"]]],[11,"new","","Instantiates a singleton representing this strictly…",3,[[],["nint"]]],[11,"new","","Instantiates a singleton representing the integer 0.",4,[[],["z0"]]],[0,"marker_traits","typenum","All of the marker traits used in typenum.",null,null],[8,"NonZero","typenum::marker_traits","A marker trait to designate that a type is not zero. All…",null,null],[8,"Ord","","A Marker trait for the types `Greater`, `Equal`, and `Less`.",null,null],[10,"to_ordering","","",5,[[],["ordering"]]],[8,"Bit","","The marker trait for compile time bits.",null,null],[18,"U8","","",6,null],[18,"BOOL","","",6,null],[10,"to_u8","","",6,[[],["u8"]]],[10,"to_bool","","",6,[[],["bool"]]],[8,"Unsigned","","The marker trait for compile time unsigned integers.",null,null],[18,"U8","","",7,null],[18,"U16","","",7,null],[18,"U32","","",7,null],[18,"U64","","",7,null],[18,"USIZE","","",7,null],[18,"I8","","",7,null],[18,"I16","","",7,null],[18,"I32","","",7,null],[18,"I64","","",7,null],[18,"ISIZE","","",7,null],[10,"to_u8","","",7,[[],["u8"]]],[10,"to_u16","","",7,[[],["u16"]]],[10,"to_u32","","",7,[[],["u32"]]],[10,"to_u64","","",7,[[],["u64"]]],[10,"to_usize","","",7,[[],["usize"]]],[10,"to_i8","","",7,[[],["i8"]]],[10,"to_i16","","",7,[[],["i16"]]],[10,"to_i32","","",7,[[],["i32"]]],[10,"to_i64","","",7,[[],["i64"]]],[10,"to_isize","","",7,[[],["isize"]]],[8,"Integer","","The marker trait for compile time signed integers.",null,null],[18,"I8","","",8,null],[18,"I16","","",8,null],[18,"I32","","",8,null],[18,"I64","","",8,null],[18,"ISIZE","","",8,null],[10,"to_i8","","",8,[[],["i8"]]],[10,"to_i16","","",8,[[],["i16"]]],[10,"to_i32","","",8,[[],["i32"]]],[10,"to_i64","","",8,[[],["i64"]]],[10,"to_isize","","",8,[[],["isize"]]],[8,"TypeArray","","The marker trait for type-level arrays of type-level…",null,null],[8,"PowerOfTwo","","The marker trait for type-level numbers which are a power…",null,null],[0,"operator_aliases","typenum","Aliases for the type operators used in this crate. Their…",null,null],[6,"And","typenum::operator_aliases","Alias for the associated type of `BitAnd`: `And<A, B> = <A…",null,null],[6,"Or","","Alias for the associated type of `BitOr`: `Or<A, B> = <A…",null,null],[6,"Xor","","Alias for the associated type of `BitXor`: `Xor<A, B> = <A…",null,null],[6,"Shleft","","Alias for the associated type of `Shl`: `Shleft<A, B> = <A…",null,null],[6,"Shright","","Alias for the associated type of `Shr`: `Shright<A, B> =…",null,null],[6,"Sum","","Alias for the associated type of `Add`: `Sum<A, B> = <A as…",null,null],[6,"Diff","","Alias for the associated type of `Sub`: `Diff<A, B> = <A…",null,null],[6,"Prod","","Alias for the associated type of `Mul`: `Prod<A, B> = <A…",null,null],[6,"Quot","","Alias for the associated type of `Div`: `Quot<A, B> = <A…",null,null],[6,"Mod","","Alias for the associated type of `Rem`: `Mod<A, B> = <A as…",null,null],[6,"PartialQuot","","Alias for the associated type of `PartialDiv`:…",null,null],[6,"Negate","","Alias for the associated type of `Neg`: `Negate<A> = <A as…",null,null],[6,"AbsVal","","Alias for the associated type of `Abs`: `AbsVal<A> = <A as…",null,null],[6,"Exp","","Alias for the associated type of `Pow`: `Exp<A, B> = <A as…",null,null],[6,"Add1","","Alias to make it easy to add 1: `Add1<A> = <A as…",null,null],[6,"Sub1","","Alias to make it easy to subtract 1: `Sub1<A> = <A as…",null,null],[6,"Double","","Alias to make it easy to multiply by 2. `Double<A> =…",null,null],[6,"Square","","Alias to make it easy to square. `Square<A> = <A as…",null,null],[6,"Cube","","Alias to make it easy to cube. `Cube<A> = <Square<A> as…",null,null],[6,"Sqrt","","Alias for the associated type of `SquareRoot`: `Sqrt<A> =…",null,null],[6,"Compare","","Alias for the associated type of `Cmp`: `Compare<A, B> =…",null,null],[6,"Length","","Alias for the associated type of `Len`: `Length<A> = <A as…",null,null],[6,"Minimum","","Alias for the associated type of `Min`: `Minimum<A, B> =…",null,null],[6,"Maximum","","Alias for the associated type of `Max`: `Maximum<A, B> =…",null,null],[6,"Le","","Alias for the associated type of `IsLess`: `Le<A, B> = <A…",null,null],[6,"Eq","","Alias for the associated type of `IsEqual`: `Eq<A, B> = <A…",null,null],[6,"Gr","","Alias for the associated type of `IsGreater`: `Gr<A, B> =…",null,null],[6,"GrEq","","Alias for the associated type of `IsGreaterOrEqual`:…",null,null],[6,"LeEq","","Alias for the associated type of `IsLessOrEqual`: `LeEq<A,…",null,null],[6,"NotEq","","Alias for the associated type of `IsNotEqual`: `NotEq<A,…",null,null],[6,"Log2","","Alias for the associated type of `Logarithm2`: `Log2<A> =…",null,null],[0,"type_operators","typenum","Useful type operators that are not defined in `core::ops`.",null,null],[8,"Same","typenum::type_operators","A type operator that ensures that `Rhs` is the same as…",null,null],[16,"Output","","Should always be `Self`",9,null],[8,"Abs","","A type operator that returns the absolute value.",null,null],[16,"Output","","The absolute value.",10,null],[8,"Pow","","A type operator that provides exponentiation by repeated…",null,null],[16,"Output","","The result of the exponentiation.",11,null],[10,"powi","","This function isn't used in this crate, but may be useful…",11,[[["exp"]]]],[8,"Cmp","","A type operator for comparing `Self` and `Rhs`. It…",null,null],[16,"Output","","The result of the comparison. It should only ever be one…",12,null],[8,"Len","","A type operator that gives the length of an `Array` or the…",null,null],[16,"Output","","The length as a type-level unsigned integer.",13,null],[10,"len","","This function isn't used in this crate, but may be useful…",13,[[["self"]]]],[8,"PartialDiv","","Division as a partial function. This type operator…",null,null],[16,"Output","","The type of the result of the division",14,null],[10,"partial_div","","Method for performing the division",14,[[["rhs"]]]],[8,"Min","","A type operator that returns the minimum of `Self` and…",null,null],[16,"Output","","The type of the minimum of `Self` and `Rhs`",15,null],[10,"min","","Method returning the minimum",15,[[["rhs"]]]],[8,"Max","","A type operator that returns the maximum of `Self` and…",null,null],[16,"Output","","The type of the maximum of `Self` and `Rhs`",16,null],[10,"max","","Method returning the maximum",16,[[["rhs"]]]],[8,"IsLess","","A type operator that returns `True` if `Self < Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",17,null],[10,"is_less","","Method returning `True` or `False`.",17,[[["rhs"]]]],[8,"IsEqual","","A type operator that returns `True` if `Self == Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",18,null],[10,"is_equal","","Method returning `True` or `False`.",18,[[["rhs"]]]],[8,"IsGreater","","A type operator that returns `True` if `Self > Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",19,null],[10,"is_greater","","Method returning `True` or `False`.",19,[[["rhs"]]]],[8,"IsLessOrEqual","","A type operator that returns `True` if `Self <= Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",20,null],[10,"is_less_or_equal","","Method returning `True` or `False`.",20,[[["rhs"]]]],[8,"IsNotEqual","","A type operator that returns `True` if `Self != Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",21,null],[10,"is_not_equal","","Method returning `True` or `False`.",21,[[["rhs"]]]],[8,"IsGreaterOrEqual","","A type operator that returns `True` if `Self >= Rhs`,…",null,null],[16,"Output","","The type representing either `True` or `False`",22,null],[10,"is_greater_or_equal","","Method returning `True` or `False`.",22,[[["rhs"]]]],[8,"SquareRoot","","A type operator for taking the integer square root of…",null,null],[16,"Output","","The result of the integer square root.",23,null],[8,"Logarithm2","","A type operator for taking the integer binary logarithm of…",null,null],[16,"Output","","The result of the integer binary logarithm.",24,null],[0,"uint","typenum","Type-level unsigned integers.",null,null],[3,"UTerm","typenum::uint","The terminating type for `UInt`; it always comes after the…",null,null],[3,"UInt","","`UInt` is defined recursively, where `B` is the least…",null,null],[6,"GetBitOut","","",null,null],[6,"SetBitOut","","Alias for the result of calling `SetBit`: `SetBitOut<N, I,…",null,null],[8,"GetBit","","",null,null],[16,"Output","","",25,null],[8,"SetBit","","A type operator that, when implemented for unsigned…",null,null],[16,"Output","","",26,null],[11,"new","","Instantiates a singleton representing this unsigned integer.",27,[[],["uterm"]]],[11,"new","","Instantiates a singleton representing this unsigned integer.",28,[[],["uint"]]],[0,"array","typenum","A type-level array of type-level numbers.",null,null],[3,"ATerm","typenum::array","The terminating type for type arrays.",null,null],[3,"TArr","","`TArr` is a type that acts as an array of types. It is…",null,null],[14,"op","typenum","Convenient type operations.",null,null],[14,"cmp","","A convenience macro for comparing type numbers. Use `op!`…",null,null],[14,"tarr","","Create a new type-level arrray. Only usable on Rust 1.13.0…",null,null],[14,"assert_type_eq","","Asserts that two types are the same.",null,null],[14,"assert_type","","Asserts that a type is `True`, aka `B1`.",null,null],[11,"from","","",29,[[["t"]],["t"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"into","","",29,[[],["u"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"into","","",30,[[],["u"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"into","","",31,[[],["u"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"is_less","typenum::bit","",0,[[["b"]]]],[11,"is_equal","","",0,[[["b"]]]],[11,"is_greater","","",0,[[["b"]]]],[11,"is_less_or_equal","","",0,[[["b"]]]],[11,"is_not_equal","","",0,[[["b"]]]],[11,"is_greater_or_equal","","",0,[[["b"]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"is_less","","",1,[[["b"]]]],[11,"is_equal","","",1,[[["b"]]]],[11,"is_greater","","",1,[[["b"]]]],[11,"is_less_or_equal","","",1,[[["b"]]]],[11,"is_not_equal","","",1,[[["b"]]]],[11,"is_greater_or_equal","","",1,[[["b"]]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"powi","typenum::int","",2,[[["n"]]]],[11,"partial_div","","",2,[[["n"]]]],[11,"is_less","","",2,[[["b"]]]],[11,"is_equal","","",2,[[["b"]]]],[11,"is_greater","","",2,[[["b"]]]],[11,"is_less_or_equal","","",2,[[["b"]]]],[11,"is_not_equal","","",2,[[["b"]]]],[11,"is_greater_or_equal","","",2,[[["b"]]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"powi","","",3,[[["n"]]]],[11,"partial_div","","",3,[[["n"]]]],[11,"is_less","","",3,[[["b"]]]],[11,"is_equal","","",3,[[["b"]]]],[11,"is_greater","","",3,[[["b"]]]],[11,"is_less_or_equal","","",3,[[["b"]]]],[11,"is_not_equal","","",3,[[["b"]]]],[11,"is_greater_or_equal","","",3,[[["b"]]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"powi","","",4,[[["n"]]]],[11,"partial_div","","",4,[[["n"]]]],[11,"is_less","","",4,[[["b"]]]],[11,"is_equal","","",4,[[["b"]]]],[11,"is_greater","","",4,[[["b"]]]],[11,"is_less_or_equal","","",4,[[["b"]]]],[11,"is_not_equal","","",4,[[["b"]]]],[11,"is_greater_or_equal","","",4,[[["b"]]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"powi","typenum::uint","",27,[[["n"]]]],[11,"partial_div","","",27,[[["n"]]]],[11,"is_less","","",27,[[["b"]]]],[11,"is_equal","","",27,[[["b"]]]],[11,"is_greater","","",27,[[["b"]]]],[11,"is_less_or_equal","","",27,[[["b"]]]],[11,"is_not_equal","","",27,[[["b"]]]],[11,"is_greater_or_equal","","",27,[[["b"]]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"into","","",27,[[],["u"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"powi","","",28,[[["n"]]]],[11,"partial_div","","",28,[[["n"]]]],[11,"is_less","","",28,[[["b"]]]],[11,"is_equal","","",28,[[["b"]]]],[11,"is_greater","","",28,[[["b"]]]],[11,"is_less_or_equal","","",28,[[["b"]]]],[11,"is_not_equal","","",28,[[["b"]]]],[11,"is_greater_or_equal","","",28,[[["b"]]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"into","","",28,[[],["u"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"partial_div","typenum::array","",32,[[["n"]]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"into","","",32,[[],["u"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"partial_div","","",33,[[["n"]]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"into","","",33,[[],["u"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"to_ordering","typenum","",29,[[],["ordering"]]],[11,"to_ordering","","",30,[[],["ordering"]]],[11,"to_ordering","","",31,[[],["ordering"]]],[11,"to_u8","typenum::bit","",0,[[],["u8"]]],[11,"to_bool","","",0,[[],["bool"]]],[11,"to_u8","","",1,[[],["u8"]]],[11,"to_bool","","",1,[[],["bool"]]],[11,"to_u8","typenum::uint","",27,[[],["u8"]]],[11,"to_u16","","",27,[[],["u16"]]],[11,"to_u32","","",27,[[],["u32"]]],[11,"to_u64","","",27,[[],["u64"]]],[11,"to_usize","","",27,[[],["usize"]]],[11,"to_i8","","",27,[[],["i8"]]],[11,"to_i16","","",27,[[],["i16"]]],[11,"to_i32","","",27,[[],["i32"]]],[11,"to_i64","","",27,[[],["i64"]]],[11,"to_isize","","",27,[[],["isize"]]],[11,"to_u8","","",28,[[],["u8"]]],[11,"to_u16","","",28,[[],["u16"]]],[11,"to_u32","","",28,[[],["u32"]]],[11,"to_u64","","",28,[[],["u64"]]],[11,"to_usize","","",28,[[],["usize"]]],[11,"to_i8","","",28,[[],["i8"]]],[11,"to_i16","","",28,[[],["i16"]]],[11,"to_i32","","",28,[[],["i32"]]],[11,"to_i64","","",28,[[],["i64"]]],[11,"to_isize","","",28,[[],["isize"]]],[11,"to_i8","typenum::int","",4,[[],["i8"]]],[11,"to_i16","","",4,[[],["i16"]]],[11,"to_i32","","",4,[[],["i32"]]],[11,"to_i64","","",4,[[],["i64"]]],[11,"to_isize","","",4,[[],["isize"]]],[11,"to_i8","","",2,[[],["i8"]]],[11,"to_i16","","",2,[[],["i16"]]],[11,"to_i32","","",2,[[],["i32"]]],[11,"to_i64","","",2,[[],["i64"]]],[11,"to_isize","","",2,[[],["isize"]]],[11,"to_i8","","",3,[[],["i8"]]],[11,"to_i16","","",3,[[],["i16"]]],[11,"to_i32","","",3,[[],["i32"]]],[11,"to_i64","","",3,[[],["i64"]]],[11,"to_isize","","",3,[[],["isize"]]],[11,"powi","","",4,[[["z0"]]]],[11,"powi","","",4,[[["pint"]]]],[11,"powi","","",4,[[["nint"]]]],[11,"powi","typenum","",34,[[["nint"]]]],[11,"powi","","",35,[[["nint",["uint"]],["uint",["b0"]]]]],[11,"powi","","",35,[[["nint",["uint"]],["uint",["b1"]]]]],[11,"powi","typenum::int","",2,[[["z0"]]]],[11,"powi","","",3,[[["z0"]]]],[11,"powi","","",2,[[["pint"]]]],[11,"powi","","",3,[[["uint",["b0"]],["pint",["uint"]]]]],[11,"powi","","",3,[[["pint",["uint"]],["uint",["b1"]]]]],[11,"len","typenum::uint","",27,[[["self"]]]],[11,"len","","",28,[[["self"]]]],[11,"len","typenum::array","",32,[[["self"]]]],[11,"len","","",33,[[["self"]]]],[11,"partial_div","typenum::uint","",27,[[["uint"]]]],[11,"partial_div","","",28,[[["uint"]]]],[11,"partial_div","typenum::array","",32,[[["rhs"]]]],[11,"partial_div","","",33,[[["rhs"]]]],[11,"min","typenum::bit","",0,[[["b0"]],["b0"]]],[11,"min","","",0,[[["b1"]],["b0"]]],[11,"min","","",1,[[["b0"]],["b0"]]],[11,"min","","",1,[[["b1"]],["b1"]]],[11,"min","typenum::int","",4,[[["z0"]]]],[11,"min","","",4,[[["pint"]]]],[11,"min","","",4,[[["nint"]]]],[11,"min","","",2,[[["z0"]]]],[11,"min","","",3,[[["z0"]]]],[11,"min","","",2,[[["pint"]]]],[11,"min","","",3,[[["pint"]]]],[11,"min","","",2,[[["nint"]]]],[11,"min","","",3,[[["nint"]]]],[11,"min","typenum::uint","",27,[[["u"]]]],[11,"min","","",28,[[["ur"]]]],[11,"max","typenum::bit","",0,[[["b0"]],["b0"]]],[11,"max","","",0,[[["b1"]],["b1"]]],[11,"max","","",1,[[["b0"]],["b1"]]],[11,"max","","",1,[[["b1"]],["b1"]]],[11,"max","typenum::int","",4,[[["z0"]]]],[11,"max","","",4,[[["pint"]]]],[11,"max","","",4,[[["nint"]]]],[11,"max","","",2,[[["z0"]]]],[11,"max","","",3,[[["z0"]]]],[11,"max","","",2,[[["pint"]]]],[11,"max","","",3,[[["pint"]]]],[11,"max","","",2,[[["nint"]]]],[11,"max","","",3,[[["nint"]]]],[11,"max","typenum::uint","",27,[[["u"]]]],[11,"max","","",28,[[["ur"]]]],[11,"fmt","typenum::bit","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","typenum::int","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","typenum::uint","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","typenum::array","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","typenum","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"div","typenum::int","",4,[[["i"]]]],[11,"div","","",2,[[["pint"]]]],[11,"div","","",2,[[["nint"]]]],[11,"div","","",3,[[["pint"]]]],[11,"div","","",3,[[["nint"]]]],[11,"div","typenum::uint","",27,[[["uint"]]]],[11,"div","","",28,[[["uint"]]]],[11,"div","typenum::array","",32,[[["rhs"]]]],[11,"div","","",33,[[["rhs"]]]],[11,"rem","typenum::int","",4,[[["i"]]]],[11,"rem","","",2,[[["pint"]]]],[11,"rem","","",2,[[["nint"]]]],[11,"rem","","",3,[[["pint"]]]],[11,"rem","","",3,[[["nint"]]]],[11,"rem","typenum::uint","",27,[[["uint"]]]],[11,"rem","","",28,[[["uint"]]]],[11,"rem","typenum::array","",32,[[["rhs"]]]],[11,"rem","","",33,[[["rhs"]]]],[11,"sub","typenum::int","",4,[[["z0"]]]],[11,"sub","","",4,[[["pint"]]]],[11,"sub","","",4,[[["nint"]]]],[11,"sub","","",2,[[["z0"]]]],[11,"sub","","",3,[[["z0"]]]],[11,"sub","","",2,[[["nint"]]]],[11,"sub","","",3,[[["pint"]]]],[11,"sub","","",2,[[["pint"]]]],[11,"sub","","",3,[[["nint"]]]],[11,"sub","typenum::uint","",27,[[["b0"]]]],[11,"sub","","",28,[[["b0"]]]],[11,"sub","","",28,[[["b1"]]]],[11,"sub","","",28,[[["b1"]]]],[11,"sub","","",28,[[["b1"]]]],[11,"sub","","",27,[[["uterm"]]]],[11,"sub","","",28,[[["ur"]]]],[11,"sub","typenum::array","",32,[[["aterm"]]]],[11,"sub","","",33,[[["tarr"]]]],[11,"eq","typenum::bit","",0,[[["self"],["b0"]],["bool"]]],[11,"eq","","",1,[[["b1"],["self"]],["bool"]]],[11,"eq","typenum::int","",2,[[["pint"],["self"]],["bool"]]],[11,"ne","","",2,[[["pint"],["self"]],["bool"]]],[11,"eq","","",3,[[["self"],["nint"]],["bool"]]],[11,"ne","","",3,[[["self"],["nint"]],["bool"]]],[11,"eq","","",4,[[["z0"],["self"]],["bool"]]],[11,"eq","typenum::uint","",27,[[["uterm"],["self"]],["bool"]]],[11,"eq","","",28,[[["uint"],["self"]],["bool"]]],[11,"ne","","",28,[[["uint"],["self"]],["bool"]]],[11,"eq","typenum::array","",32,[[["self"],["aterm"]],["bool"]]],[11,"eq","","",33,[[["self"],["tarr"]],["bool"]]],[11,"ne","","",33,[[["self"],["tarr"]],["bool"]]],[11,"eq","typenum","",29,[[["self"],["greater"]],["bool"]]],[11,"eq","","",30,[[["self"],["less"]],["bool"]]],[11,"eq","","",31,[[["self"],["equal"]],["bool"]]],[11,"cmp","typenum::bit","",0,[[["self"],["b0"]],["ordering"]]],[11,"cmp","","",1,[[["b1"],["self"]],["ordering"]]],[11,"cmp","typenum::int","",2,[[["pint"],["self"]],["ordering"]]],[11,"cmp","","",3,[[["self"],["nint"]],["ordering"]]],[11,"cmp","","",4,[[["z0"],["self"]],["ordering"]]],[11,"cmp","typenum::uint","",27,[[["uterm"],["self"]],["ordering"]]],[11,"cmp","","",28,[[["uint"],["self"]],["ordering"]]],[11,"cmp","typenum::array","",32,[[["self"],["aterm"]],["ordering"]]],[11,"cmp","","",33,[[["self"],["tarr"]],["ordering"]]],[11,"cmp","typenum","",29,[[["self"],["greater"]],["ordering"]]],[11,"cmp","","",30,[[["self"],["less"]],["ordering"]]],[11,"cmp","","",31,[[["self"],["equal"]],["ordering"]]],[11,"partial_cmp","typenum::bit","",0,[[["self"],["b0"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",1,[[["b1"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","typenum::int","",2,[[["pint"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",2,[[["pint"],["self"]],["bool"]]],[11,"le","","",2,[[["pint"],["self"]],["bool"]]],[11,"gt","","",2,[[["pint"],["self"]],["bool"]]],[11,"ge","","",2,[[["pint"],["self"]],["bool"]]],[11,"partial_cmp","","",3,[[["self"],["nint"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",3,[[["self"],["nint"]],["bool"]]],[11,"le","","",3,[[["self"],["nint"]],["bool"]]],[11,"gt","","",3,[[["self"],["nint"]],["bool"]]],[11,"ge","","",3,[[["self"],["nint"]],["bool"]]],[11,"partial_cmp","","",4,[[["z0"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","typenum::uint","",27,[[["uterm"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",28,[[["uint"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",28,[[["uint"],["self"]],["bool"]]],[11,"le","","",28,[[["uint"],["self"]],["bool"]]],[11,"gt","","",28,[[["uint"],["self"]],["bool"]]],[11,"ge","","",28,[[["uint"],["self"]],["bool"]]],[11,"partial_cmp","typenum::array","",32,[[["self"],["aterm"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",33,[[["self"],["tarr"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",33,[[["self"],["tarr"]],["bool"]]],[11,"le","","",33,[[["self"],["tarr"]],["bool"]]],[11,"gt","","",33,[[["self"],["tarr"]],["bool"]]],[11,"ge","","",33,[[["self"],["tarr"]],["bool"]]],[11,"partial_cmp","typenum","",29,[[["self"],["greater"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",30,[[["self"],["less"]],[["option",["ordering"]],["ordering"]]]],[11,"partial_cmp","","",31,[[["self"],["equal"]],[["option",["ordering"]],["ordering"]]]],[11,"add","typenum::int","",4,[[["i"]]]],[11,"add","","",2,[[["z0"]]]],[11,"add","","",3,[[["z0"]]]],[11,"add","","",2,[[["pint"]]]],[11,"add","","",3,[[["nint"]]]],[11,"add","","",2,[[["nint"]]]],[11,"add","","",3,[[["pint"]]]],[11,"add","typenum::uint","",27,[[["b0"]]]],[11,"add","","",28,[[["b0"]]]],[11,"add","","",27,[[["b1"]]]],[11,"add","","",28,[[["b1"]]]],[11,"add","","",28,[[["b1"]]]],[11,"add","","",27,[[["u"]]]],[11,"add","","",28,[[["uterm"]]]],[11,"add","","",28,[[["uint",["b0"]],["b0"]]]],[11,"add","","",28,[[["uint",["b1"]],["b1"]]]],[11,"add","","",28,[[["uint",["b0"]],["b0"]]]],[11,"add","","",28,[[["uint",["b1"]],["b1"]]]],[11,"add","typenum::array","",32,[[["aterm"]]]],[11,"add","","",33,[[["tarr"]]]],[11,"mul","typenum::int","",4,[[["i"]]]],[11,"mul","","",2,[[["z0"]]]],[11,"mul","","",3,[[["z0"]]]],[11,"mul","","",2,[[["pint"]]]],[11,"mul","","",3,[[["nint"]]]],[11,"mul","","",2,[[["nint"]]]],[11,"mul","","",3,[[["pint"]]]],[11,"mul","typenum::uint","",28,[[["b0"]]]],[11,"mul","","",27,[[["b0"]]]],[11,"mul","","",27,[[["b1"]]]],[11,"mul","","",28,[[["b1"]]]],[11,"mul","","",28,[[["uterm"]]]],[11,"mul","","",27,[[["u"]]]],[11,"mul","","",28,[[["uint"]]]],[11,"mul","","",28,[[["uint"]]]],[11,"mul","typenum::array","",32,[[["rhs"]]]],[11,"mul","","",33,[[["rhs"]]]],[11,"mul","typenum::int","",4,[[["aterm"]]]],[11,"mul","","",2,[[["aterm"]]]],[11,"mul","","",3,[[["aterm"]]]],[11,"mul","","",4,[[["tarr"]]]],[11,"mul","","",2,[[["tarr"]]]],[11,"mul","","",3,[[["tarr"]]]],[11,"neg","","",4,[[]]],[11,"neg","","",2,[[]]],[11,"neg","","",3,[[]]],[11,"neg","typenum::array","",32,[[]]],[11,"neg","","",33,[[]]],[11,"not","typenum::bit","",0,[[]]],[11,"not","","",1,[[]]],[11,"bitand","","",0,[[["rhs"]]]],[11,"bitand","","",1,[[["b0"]]]],[11,"bitand","","",1,[[["b1"]]]],[11,"bitand","typenum::uint","",27,[[["ur"]]]],[11,"bitand","","",28,[[["ur"]]]],[11,"bitor","typenum::bit","",0,[[["b0"]]]],[11,"bitor","","",0,[[["b1"]]]],[11,"bitor","","",1,[[["rhs"]]]],[11,"bitor","typenum::uint","",27,[[["u"]]]],[11,"bitor","","",28,[[["uterm"]]]],[11,"bitor","","",28,[[["uint",["b0"]],["b0"]]]],[11,"bitor","","",28,[[["uint",["b1"]],["b1"]]]],[11,"bitor","","",28,[[["uint",["b0"]],["b0"]]]],[11,"bitor","","",28,[[["uint",["b1"]],["b1"]]]],[11,"bitxor","typenum::bit","",0,[[["b0"]]]],[11,"bitxor","","",1,[[["b0"]]]],[11,"bitxor","","",0,[[["b1"]]]],[11,"bitxor","","",1,[[["b1"]]]],[11,"bitxor","typenum::uint","",27,[[["ur"]]]],[11,"bitxor","","",28,[[["ur"]]]],[11,"shl","","",27,[[["b0"]]]],[11,"shl","","",27,[[["b1"]]]],[11,"shl","","",28,[[["b0"]]]],[11,"shl","","",28,[[["b1"]]]],[11,"shl","","",28,[[["uterm"]]]],[11,"shl","","",27,[[["u"]]]],[11,"shl","","",28,[[["uint"]]]],[11,"shr","","",27,[[["u"]]]],[11,"shr","","",28,[[["uterm"]]]],[11,"shr","","",27,[[["b0"]]]],[11,"shr","","",27,[[["b1"]]]],[11,"shr","","",28,[[["b0"]]]],[11,"shr","","",28,[[["b1"]]]],[11,"shr","","",28,[[["uint"]]]],[11,"hash","typenum::bit","",0,[[["self"],["__h"]]]],[11,"hash","","",1,[[["self"],["__h"]]]],[11,"hash","typenum::int","",2,[[["self"],["__h"]]]],[11,"hash","","",3,[[["self"],["__h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"hash","typenum::uint","",27,[[["self"],["__h"]]]],[11,"hash","","",28,[[["self"],["__h"]]]],[11,"hash","typenum::array","",32,[[["self"],["__h"]]]],[11,"hash","","",33,[[["self"],["__h"]]]],[11,"hash","typenum","",29,[[["self"],["__h"]]]],[11,"hash","","",30,[[["self"],["__h"]]]],[11,"hash","","",31,[[["self"],["__h"]]]],[11,"clone","typenum::bit","",0,[[["self"]],["b0"]]],[11,"clone","","",1,[[["self"]],["b1"]]],[11,"clone","typenum::int","",2,[[["self"]],["pint"]]],[11,"clone","","",3,[[["self"]],["nint"]]],[11,"clone","","",4,[[["self"]],["z0"]]],[11,"clone","typenum::uint","",27,[[["self"]],["uterm"]]],[11,"clone","","",28,[[["self"]],["uint"]]],[11,"clone","typenum::array","",32,[[["self"]],["aterm"]]],[11,"clone","","",33,[[["self"]],["tarr"]]],[11,"clone","typenum","",29,[[["self"]],["greater"]]],[11,"clone","","",30,[[["self"]],["less"]]],[11,"clone","","",31,[[["self"]],["equal"]]],[11,"default","typenum::bit","",0,[[],["b0"]]],[11,"default","","",1,[[],["b1"]]],[11,"default","typenum::int","",2,[[],["pint"]]],[11,"default","","",3,[[],["nint"]]],[11,"default","","",4,[[],["z0"]]],[11,"default","typenum::uint","",27,[[],["uterm"]]],[11,"default","","",28,[[],["uint"]]],[11,"default","typenum","",29,[[],["greater"]]],[11,"default","","",30,[[],["less"]]],[11,"default","","",31,[[],["equal"]]]],"p":[[3,"B0"],[3,"B1"],[3,"PInt"],[3,"NInt"],[3,"Z0"],[8,"Ord"],[8,"Bit"],[8,"Unsigned"],[8,"Integer"],[8,"Same"],[8,"Abs"],[8,"Pow"],[8,"Cmp"],[8,"Len"],[8,"PartialDiv"],[8,"Min"],[8,"Max"],[8,"IsLess"],[8,"IsEqual"],[8,"IsGreater"],[8,"IsLessOrEqual"],[8,"IsNotEqual"],[8,"IsGreaterOrEqual"],[8,"SquareRoot"],[8,"Logarithm2"],[8,"GetBit"],[8,"SetBit"],[3,"UTerm"],[3,"UInt"],[3,"Greater"],[3,"Less"],[3,"Equal"],[3,"ATerm"],[3,"TArr"],[6,"P1"],[6,"N1"]]};
searchIndex["unicode_xid"] = {"doc":"Determine if a `char` is a valid identifier for a parser…","i":[[17,"UNICODE_VERSION","unicode_xid","The version of Unicode that this version of unicode-xid is…",null,null],[8,"UnicodeXID","","Methods for determining if a character is a valid…",null,null],[10,"is_xid_start","","Returns whether the specified character satisfies the…",0,[[],["bool"]]],[10,"is_xid_continue","","Returns whether the specified `char` satisfies the…",0,[[],["bool"]]]],"p":[[8,"UnicodeXID"]]};
searchIndex["void"] = {"doc":"Void","i":[[4,"Void","void","The empty type for cases which can't occur.",null,null],[5,"unreachable","","A safe version of `intrinsincs::unreachable`.",null,[[["void"]]]],[8,"ResultVoidExt","","Extensions to `Result<T, Void>`",null,null],[10,"void_unwrap","","Get the value out of a wrapper.",0,[[],["t"]]],[8,"ResultVoidErrExt","","Extensions to `Result<Void, E>`",null,null],[10,"void_unwrap_err","","Get the error out of a wrapper.",1,[[],["e"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"to_string","","",2,[[["self"]],["string"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"clone","","",2,[[["self"]],["void"]]],[11,"eq","","",2,[[["t"],["self"]],["bool"]]],[11,"partial_cmp","","",2,[[["t"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"description","","",2,[[["self"]],["str"]]],[11,"cause","","",2,[[["self"]],[["option",["error"]],["error"]]]]],"p":[[8,"ResultVoidExt"],[8,"ResultVoidErrExt"],[4,"Void"]]};
searchIndex["wasmer_clif_backend"] = {"doc":"The Wasmer Cranelift Backend crate is used to compile wasm…","i":[[6,"CraneliftCompiler","wasmer_clif_backend","Streaming compiler implementation for the Cranelift…",null,null],[17,"VERSION","","The current version of this crate",null,null]],"p":[]};
searchIndex["wasmer_clif_fork_frontend"] = {"doc":"Cranelift IR builder library.","i":[[3,"FunctionBuilder","wasmer_clif_fork_frontend","Temporary object used to build a single Cranelift IR…",null,null],[12,"func","","The function currently being built. This field is public…",0,null],[3,"FunctionBuilderContext","","Structure used for translating a series of functions into…",null,null],[3,"Position","","Position",null,null],[3,"Block","","A opaque reference to a basic block.",null,null],[3,"Switch","","Unlike with `br_table`, `Switch` cases may be sparse or…",null,null],[3,"Variable","","An opaque reference to a variable.",null,null],[11,"new","","Creates a FunctionBuilderContext structure. The structure…",1,[[],["self"]]],[11,"new","","Creates a new FunctionBuilder structure that will operate…",0,[[["functionbuildercontext"],["position"],["function"]],["self"]]],[11,"set_srcloc","","Set the source location that should be assigned to all new…",0,[[["self"],["sourceloc"]]]],[11,"create_ebb","","Creates a new `Ebb` and returns its reference.",0,[[["self"]],["ebb"]]],[11,"switch_to_block","","After the call to this function, new instructions will be…",0,[[["ebb"],["self"]]]],[11,"seal_block","","Declares that all the predecessors of this block are known.",0,[[["ebb"],["self"]]]],[11,"seal_all_blocks","","Effectively calls seal_block on all blocks in the function.",0,[[["self"]]]],[11,"declare_var","","In order to use a variable in a `use_var`, you need to…",0,[[["self"],["variable"],["type"]]]],[11,"use_var","","Returns the Cranelift IR value corresponding to the…",0,[[["self"],["variable"]],["value"]]],[11,"def_var","","Register a new definition of a user variable. The type of…",0,[[["value"],["self"],["variable"]]]],[11,"set_val_label","","Set label for Value",0,[[["value"],["self"],["valuelabel"]]]],[11,"create_jump_table","","Creates a jump table in the function, to be used by…",0,[[["self"],["jumptabledata"]],["jumptable"]]],[11,"create_stack_slot","","Creates a stack slot in the function, to be used by…",0,[[["self"],["stackslotdata"]],["stackslot"]]],[11,"import_signature","","Adds a signature which can later be used to declare an…",0,[[["self"],["signature"]],["sigref"]]],[11,"import_function","","Declare an external function import.",0,[[["extfuncdata"],["self"]],["funcref"]]],[11,"create_global_value","","Declares a global value accessible to the function.",0,[[["self"],["globalvaluedata"]],["globalvalue"]]],[11,"create_heap","","Declares a heap accessible to the function.",0,[[["self"],["heapdata"]],["heap"]]],[11,"ins","","Returns an object with the `InstBuilder` trait that allows…",0,[[["self"]],["funcinstbuilder"]]],[11,"ensure_inserted_ebb","","Make sure that the current EBB is inserted in the layout.",0,[[["self"]]]],[11,"cursor","","Returns a `FuncCursor` pointed at the current position…",0,[[["self"]],["funccursor"]]],[11,"append_ebb_params_for_function_params","","Append parameters to the given `Ebb` corresponding to the…",0,[[["ebb"],["self"]]]],[11,"append_ebb_params_for_function_returns","","Append parameters to the given `Ebb` corresponding to the…",0,[[["ebb"],["self"]]]],[11,"finalize","","Declare that translation of the current function is…",0,[[["self"]]]],[11,"ebb_params","","Retrieves all the parameters for an `Ebb` currently…",0,[[["ebb"],["self"]]]],[11,"signature","","Retrieves the signature with reference `sigref` previously…",0,[[["self"],["sigref"]],[["signature"],["option",["signature"]]]]],[11,"append_ebb_param","","Creates a parameter for a specific `Ebb` by appending it…",0,[[["ebb"],["self"],["type"]],["value"]]],[11,"inst_results","","Returns the result values of an instruction.",0,[[["self"],["inst"]]]],[11,"change_jump_destination","","Changes the destination of a jump instruction after…",0,[[["ebb"],["self"],["inst"]]]],[11,"is_unreachable","","Returns `true` if and only if the current `Ebb` is sealed…",0,[[["self"]],["bool"]]],[11,"is_pristine","","Returns `true` if and only if no instructions have been…",0,[[["self"]],["bool"]]],[11,"is_filled","","Returns `true` if and only if a terminator instruction has…",0,[[["self"]],["bool"]]],[11,"display","","Returns a displayable object for the function as it is.",0,[[["self"],["into",["option"]],["option",["targetisa"]]],["displayfunction"]]],[11,"call_memcpy","","Calls libc.memcpy",0,[[["value"],["self"],["targetfrontendconfig"]]]],[11,"emit_small_memcpy","","Optimised memcpy for small copies.",0,[[["value"],["u8"],["self"],["targetfrontendconfig"],["u64"]]]],[11,"call_memset","","Calls libc.memset",0,[[["value"],["self"],["targetfrontendconfig"]]]],[11,"emit_small_memset","","Calls libc.memset",0,[[["value"],["u64"],["self"],["targetfrontendconfig"],["u8"]]]],[11,"call_memmove","","Calls libc.memmove",0,[[["value"],["self"],["targetfrontendconfig"]]]],[11,"emit_small_memmove","","Optimised memmove for small moves.",0,[[["value"],["u8"],["self"],["targetfrontendconfig"],["u64"]]]],[11,"new","","Create a new empty switch",2,[[],["self"]]],[11,"set_entry","","Set a switch entry",2,[[["ebb"],["self"],["u64"]]]],[11,"emit","","Build the switch",2,[[["functionbuilder"],["value"],["ebb"]]]],[11,"with_u32","","Create a new Variable with the given index.",3,[[["u32"]],["self"]]],[17,"VERSION","","Version number of this crate.",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"key","","",5,[[["self"]],["t"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"key","","",3,[[["self"]],["t"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"eq","","",5,[[["self"],["block"]],["bool"]]],[11,"ne","","",5,[[["self"],["block"]],["bool"]]],[11,"eq","","",3,[[["self"],["variable"]],["bool"]]],[11,"ne","","",3,[[["self"],["variable"]],["bool"]]],[11,"clone","","",5,[[["self"]],["block"]]],[11,"clone","","",3,[[["self"]],["variable"]]],[11,"default","","",4,[[],["position"]]],[11,"default","","",2,[[],["switch"]]],[11,"new","","",5,[[["usize"]],["self"]]],[11,"index","","",5,[[],["usize"]]],[11,"new","","",3,[[["usize"]],["self"]]],[11,"index","","",3,[[],["usize"]]],[11,"reserved_value","","",5,[[],["self"]]]],"p":[[3,"FunctionBuilder"],[3,"FunctionBuilderContext"],[3,"Switch"],[3,"Variable"],[3,"Position"],[3,"Block"]]};
searchIndex["wasmer_clif_fork_wasm"] = {"doc":"Performs translation from a wasm module in binary format…","i":[[3,"DummyEnvironment","wasmer_clif_fork_wasm","This `ModuleEnvironment` implementation is a \"naïve\" one,…",null,null],[12,"info","","Module information.",0,null],[12,"func_bytecode_sizes","","Vector of wasm bytecode size for each function.",0,null],[3,"FuncTranslator","","WebAssembly to Cranelift IR function translator.",null,null],[12,"func_ctx","","Func ctx",1,null],[12,"state","","Translation state",1,null],[3,"FuncTranslationState","","Contains information passed along during a function's…",null,null],[12,"stack","","A stack of values corresponding to the active values in…",2,null],[12,"control_stack","","A stack of active control flow operations at this point in…",2,null],[12,"reachable","","Is the current translation state still reachable? This is…",2,null],[3,"ModuleTranslationState","","Contains information decoded from the Wasm module that…",null,null],[12,"wasm_types","","A map containing a Wasm module's original, raw signatures.",3,null],[3,"DefinedFuncIndex","","Index type of a defined function inside the WebAssembly…",null,null],[3,"DefinedGlobalIndex","","Index type of a defined global inside the WebAssembly…",null,null],[3,"DefinedMemoryIndex","","Index type of a defined memory inside the WebAssembly…",null,null],[3,"DefinedTableIndex","","Index type of a defined table inside the WebAssembly module.",null,null],[3,"FuncIndex","","Index type of a function (imported or defined) inside the…",null,null],[3,"Global","","WebAssembly global.",null,null],[12,"ty","","The type of the value stored in the global.",4,null],[12,"mutability","","A flag indicating whether the value may change at runtime.",4,null],[12,"initializer","","The source of the initial value.",4,null],[3,"GlobalIndex","","Index type of a global variable (imported or defined)…",null,null],[3,"Memory","","WebAssembly linear memory.",null,null],[12,"minimum","","The minimum number of pages in the memory.",5,null],[12,"maximum","","The maximum number of pages in the memory.",5,null],[12,"shared","","Whether the memory may be shared between multiple threads.",5,null],[3,"MemoryIndex","","Index type of a linear memory (imported or defined) inside…",null,null],[3,"SignatureIndex","","Index type of a signature (imported or defined) inside the…",null,null],[3,"Table","","WebAssembly table.",null,null],[12,"ty","","The type of data stored in elements of the table.",6,null],[12,"minimum","","The minimum number of elements in the table.",6,null],[12,"maximum","","The maximum number of elements in the table.",6,null],[3,"TableIndex","","Index type of a table (imported or defined) inside the…",null,null],[4,"GlobalVariable","","The value of a WebAssembly global variable.",null,null],[13,"Const","","This is a constant global with a value known at compile…",7,null],[13,"Memory","","This is a variable in memory that should be referenced…",7,null],[12,"gv","wasmer_clif_fork_wasm::GlobalVariable","The address of the global variable storage.",7,null],[12,"offset","","An offset to add to the address.",7,null],[12,"ty","","The global variable's type.",7,null],[4,"ReturnMode","wasmer_clif_fork_wasm","How to return from functions.",null,null],[13,"NormalReturns","","Use normal return instructions as needed.",8,null],[13,"FallthroughReturn","","Use a single fallthrough return at the end of the function.",8,null],[4,"WasmError","","A WebAssembly translation error.",null,null],[13,"InvalidWebAssembly","","The input WebAssembly code is invalid.",9,null],[12,"message","wasmer_clif_fork_wasm::WasmError","A string describing the validation error.",9,null],[12,"offset","","The bytecode offset where the error occurred.",9,null],[13,"Unsupported","wasmer_clif_fork_wasm","A feature used by the WebAssembly code is not supported by…",9,null],[13,"ImplLimitExceeded","","An implementation limit was exceeded.",9,null],[13,"User","","Any user-defined error.",9,null],[4,"GlobalInit","","Globals are initialized via the `const` operators or by…",null,null],[13,"I32Const","","An `i32.const`.",10,null],[13,"I64Const","","An `i64.const`.",10,null],[13,"F32Const","","An `f32.const`.",10,null],[13,"F64Const","","An `f64.const`.",10,null],[13,"V128Const","","A `vconst`.",10,null],[13,"GetGlobal","","A `get_global` of another global.",10,null],[13,"RefNullConst","","A `ref.null`.",10,null],[13,"Import","","< The global is imported from, and thus initialized by, a…",10,null],[4,"TableElementType","","WebAssembly table element. Can be a function or a scalar…",null,null],[13,"Val","","A scalar type.",11,null],[13,"Func","","A function.",11,null],[5,"translate_operator","","Translates wasm operators into Cranelift IR instructions.…",null,[[["operator"],["functionbuilder"],["functranslationstate"],["fe"],["moduletranslationstate"]],["wasmresult"]]],[5,"declare_locals","","Declare `count` local variables of the same type, starting…",null,[[["u32"],["functionbuilder"],["usize"],["fe"],["type"]],["wasmresult"]]],[5,"translate_module","","Translate a sequence of bytes forming a valid Wasm binary…",null,[[["moduleenvironment"]],[["moduletranslationstate"],["wasmresult",["moduletranslationstate"]]]]],[5,"get_vmctx_value_label","","Special VMContext value label. It is tracked as…",null,[[],["valuelabel"]]],[11,"new","","Creates a new `DummyEnvironment` instance.",0,[[["returnmode"],["targetfrontendconfig"],["bool"]],["self"]]],[11,"func_env","","Return a `DummyFuncEnvironment` for translating functions…",0,[[["self"]],["dummyfuncenvironment"]]],[11,"get_num_func_imports","","Return the number of imported functions within this…",0,[[["self"]],["usize"]]],[11,"get_func_name","","Return the name of the function, if a name for the…",0,[[["funcindex"],["self"]],[["str"],["option",["str"]]]]],[11,"new","","Create a new translator.",1,[[],["self"]]],[11,"translate","","Translate a binary WebAssembly function.",1,[[["fe"],["usize"],["self"],["moduletranslationstate"],["function"]],["wasmresult"]]],[11,"translate_from_reader","","Translate a binary WebAssembly function from a…",1,[[["binaryreader"],["fe"],["self"],["moduletranslationstate"],["function"]],["wasmresult"]]],[11,"reachable","","True if the current translation state expresses reachable…",2,[[["self"]],["bool"]]],[11,"initialize","","Initialize the state for compiling a function with the…",2,[[["ebb"],["self"],["signature"]]]],[11,"new","","Creates a new empty ModuleTranslationState.",3,[[],["self"]]],[11,"from_u32","","Return the underlying index value as a `u32`.",12,[[["u32"]],["self"]]],[11,"as_u32","","Return the underlying index value as a `u32`.",12,[[],["u32"]]],[11,"from_u32","","Return the underlying index value as a `u32`.",13,[[["u32"]],["self"]]],[11,"as_u32","","Return the underlying index value as a `u32`.",13,[[],["u32"]]],[11,"from_u32","","Return the underlying index value as a `u32`.",14,[[["u32"]],["self"]]],[11,"as_u32","","Return the underlying index value as a `u32`.",14,[[],["u32"]]],[11,"from_u32","","Return the underlying index value as a `u32`.",15,[[["u32"]],["self"]]],[11,"as_u32","","Return the underlying index value as a `u32`.",15,[[],["u32"]]],[11,"from_u32","","Return the underlying index value as a `u32`.",16,[[["u32"]],["self"]]],[11,"as_u32","","Return the underlying index value as a `u32`.",16,[[],["u32"]]],[11,"from_u32","","Return the underlying index value as a `u32`.",17,[[["u32"]],["self"]]],[11,"as_u32","","Return the underlying index value as a `u32`.",17,[[],["u32"]]],[11,"from_u32","","Return the underlying index value as a `u32`.",18,[[["u32"]],["self"]]],[11,"as_u32","","Return the underlying index value as a `u32`.",18,[[],["u32"]]],[11,"from_u32","","Return the underlying index value as a `u32`.",19,[[["u32"]],["self"]]],[11,"as_u32","","Return the underlying index value as a `u32`.",19,[[],["u32"]]],[11,"from_u32","","Return the underlying index value as a `u32`.",20,[[["u32"]],["self"]]],[11,"as_u32","","Return the underlying index value as a `u32`.",20,[[],["u32"]]],[6,"WasmResult","","A convenient alias for a `Result` that uses `WasmError` as…",null,null],[17,"VERSION","","Version number of this crate.",null,null],[8,"FuncEnvironment","","Environment affecting the translation of a single…",null,null],[11,"return_mode","","Should the code be structured to use a single…",21,[[["self"]],["returnmode"]]],[10,"make_global","","Set up the necessary preamble definitions in `func` to…",21,[[["globalindex"],["self"],["function"]],[["wasmresult",["globalvariable"]],["globalvariable"]]]],[10,"make_heap","","Set up the necessary preamble definitions in `func` to…",21,[[["self"],["function"],["memoryindex"]],[["wasmresult",["heap"]],["heap"]]]],[10,"make_table","","Set up the necessary preamble definitions in `func` to…",21,[[["tableindex"],["self"],["function"]],[["wasmresult",["table"]],["table"]]]],[10,"make_indirect_sig","","Set up a signature definition in the preamble of `func`…",21,[[["signatureindex"],["self"],["function"]],[["sigref"],["wasmresult",["sigref"]]]]],[10,"make_direct_func","","Set up an external function definition in the preamble of…",21,[[["funcindex"],["self"],["function"]],[["wasmresult",["funcref"]],["funcref"]]]],[10,"translate_call_indirect","","Translate a `call_indirect` WebAssembly instruction at…",21,[[["sigref"],["tableindex"],["value"],["signatureindex"],["self"],["funccursor"],["table"]],[["wasmresult",["inst"]],["inst"]]]],[11,"translate_call","","Translate a `call` WebAssembly instruction at `pos`.",21,[[["funcindex"],["self"],["funccursor"],["funcref"]],[["wasmresult",["inst"]],["inst"]]]],[10,"translate_memory_grow","","Translate a `memory.grow` WebAssembly instruction.",21,[[["heap"],["memoryindex"],["self"],["funccursor"],["value"]],[["value"],["wasmresult",["value"]]]]],[10,"translate_memory_size","","Translates a `memory.size` WebAssembly instruction.",21,[[["heap"],["memoryindex"],["self"],["funccursor"]],[["value"],["wasmresult",["value"]]]]],[10,"translate_memory_copy","","Translate a `memory.copy` WebAssembly instruction.",21,[[["heap"],["memoryindex"],["self"],["funccursor"],["value"]],["wasmresult"]]],[10,"translate_memory_fill","","Translate a `memory.fill` WebAssembly instruction.",21,[[["heap"],["memoryindex"],["self"],["funccursor"],["value"]],["wasmresult"]]],[10,"translate_memory_init","","Translate a `memory.init` WebAssembly instruction.",21,[[["u32"],["heap"],["memoryindex"],["self"],["funccursor"],["value"]],["wasmresult"]]],[10,"translate_data_drop","","Translate a `data.drop` WebAssembly instruction.",21,[[["self"],["funccursor"],["u32"]],["wasmresult"]]],[10,"translate_table_size","","Translate a `table.size` WebAssembly instruction.",21,[[["tableindex"],["self"],["funccursor"],["table"]],[["value"],["wasmresult",["value"]]]]],[10,"translate_table_copy","","Translate a `table.copy` WebAssembly instruction.",21,[[["value"],["tableindex"],["self"],["funccursor"],["table"]],["wasmresult"]]],[10,"translate_table_init","","Translate a `table.init` WebAssembly instruction.",21,[[["value"],["u32"],["tableindex"],["self"],["funccursor"],["table"]],["wasmresult"]]],[10,"translate_elem_drop","","Translate a `elem.drop` WebAssembly instruction.",21,[[["self"],["funccursor"],["u32"]],["wasmresult"]]],[11,"translate_loop_header","","Emit code at the beginning of every wasm loop.",21,[[["self"],["funccursor"]],["wasmresult"]]],[11,"before_translate_operator","","Optional callback for the `FunctionEnvironment` performing…",21,[[["operator"],["functionbuilder"],["functranslationstate"],["self"]],["wasmresult"]]],[11,"after_translate_operator","","Optional callback for the `FunctionEnvironment` performing…",21,[[["operator"],["functionbuilder"],["functranslationstate"],["self"]],["wasmresult"]]],[8,"ModuleEnvironment","","An object satisfying the `ModuleEnvironment` trait can be…",null,null],[11,"reserve_signatures","","Provides the number of signatures up front. By default…",22,[[["self"],["u32"]],["wasmresult"]]],[10,"declare_signature","","Declares a function signature to the environment.",22,[[["signature"],["self"]],["wasmresult"]]],[11,"reserve_imports","","Provides the number of imports up front. By default this…",22,[[["self"],["u32"]],["wasmresult"]]],[10,"declare_func_import","","Declares a function import to the environment.",22,[[["signatureindex"],["str"],["self"]],["wasmresult"]]],[10,"declare_table_import","","Declares a table import to the environment.",22,[[["str"],["table"],["self"]],["wasmresult"]]],[10,"declare_memory_import","","Declares a memory import to the environment.",22,[[["str"],["self"],["memory"]],["wasmresult"]]],[10,"declare_global_import","","Declares a global import to the environment.",22,[[["str"],["global"],["self"]],["wasmresult"]]],[11,"finish_imports","","Notifies the implementation that all imports have been…",22,[[["self"]],["wasmresult"]]],[11,"reserve_func_types","","Provides the number of defined functions up front. By…",22,[[["self"],["u32"]],["wasmresult"]]],[10,"declare_func_type","","Declares the type (signature) of a local function in the…",22,[[["signatureindex"],["self"]],["wasmresult"]]],[11,"reserve_tables","","Provides the number of defined tables up front. By default…",22,[[["self"],["u32"]],["wasmresult"]]],[10,"declare_table","","Declares a table to the environment.",22,[[["self"],["table"]],["wasmresult"]]],[11,"reserve_memories","","Provides the number of defined memories up front. By…",22,[[["self"],["u32"]],["wasmresult"]]],[10,"declare_memory","","Declares a memory to the environment",22,[[["self"],["memory"]],["wasmresult"]]],[11,"reserve_globals","","Provides the number of defined globals up front. By…",22,[[["self"],["u32"]],["wasmresult"]]],[10,"declare_global","","Declares a global to the environment.",22,[[["self"],["global"]],["wasmresult"]]],[11,"reserve_exports","","Provides the number of exports up front. By default this…",22,[[["self"],["u32"]],["wasmresult"]]],[10,"declare_func_export","","Declares a function export to the environment.",22,[[["funcindex"],["self"],["str"]],["wasmresult"]]],[10,"declare_table_export","","Declares a table export to the environment.",22,[[["tableindex"],["self"],["str"]],["wasmresult"]]],[10,"declare_memory_export","","Declares a memory export to the environment.",22,[[["str"],["self"],["memoryindex"]],["wasmresult"]]],[10,"declare_global_export","","Declares a global export to the environment.",22,[[["globalindex"],["self"],["str"]],["wasmresult"]]],[11,"finish_exports","","Notifies the implementation that all exports have been…",22,[[["self"]],["wasmresult"]]],[10,"declare_start_func","","Declares the optional start function.",22,[[["funcindex"],["self"]],["wasmresult"]]],[11,"reserve_table_elements","","Provides the number of element initializers up front. By…",22,[[["self"],["u32"]],["wasmresult"]]],[10,"declare_table_elements","","Fills a declared table with references to functions in the…",22,[[["usize"],["box"],["tableindex"],["self"],["globalindex"],["option",["globalindex"]]],["wasmresult"]]],[10,"define_function_body","","Provides the contents of a function body.",22,[[["usize"],["self"],["moduletranslationstate"]],["wasmresult"]]],[11,"reserve_data_initializers","","Provides the number of data initializers up front. By…",22,[[["self"],["u32"]],["wasmresult"]]],[10,"declare_data_initialization","","Fills a declared memory with bytes at module instantiation.",22,[[["usize"],["memoryindex"],["globalindex"],["self"],["option",["globalindex"]]],["wasmresult"]]],[11,"declare_func_name","","Declares the name of a function to the environment.",22,[[["funcindex"],["self"],["str"]],["wasmresult"]]],[11,"custom_section","","Indicates that a custom section has been found in the wasm…",22,[[["str"],["self"]],["wasmresult"]]],[8,"TargetEnvironment","","Environment affecting the translation of a WebAssembly.",null,null],[10,"target_config","","Get the information needed to produce Cranelift IR for the…",23,[[["self"]],["targetfrontendconfig"]]],[11,"pointer_type","","Get the Cranelift integer type to use for native pointers.",23,[[["self"]],["type"]]],[11,"pointer_bytes","","Get the size of a native pointer, in bytes.",23,[[["self"]],["u8"]]],[11,"reference_type","","Get the Cranelift reference type to use for native…",23,[[["self"]],["type"]]],[14,"wasm_unsupported","","Return an `Err(WasmError::Unsupported(msg))` where `msg`…",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"into","","",0,[[],["u"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"into","","",1,[[],["u"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"into","","",2,[[],["u"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"into","","",3,[[],["u"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"into","","",13,[[],["u"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"key","","",13,[[["self"]],["t"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"into","","",16,[[],["u"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"key","","",16,[[["self"]],["t"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"into","","",15,[[],["u"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"key","","",15,[[["self"]],["t"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"into","","",14,[[],["u"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"key","","",14,[[["self"]],["t"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"into","","",12,[[],["u"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"key","","",12,[[["self"]],["t"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"into","","",4,[[],["u"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"into","","",18,[[],["u"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"key","","",18,[[["self"]],["t"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"into","","",5,[[],["u"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"into","","",19,[[],["u"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"key","","",19,[[["self"]],["t"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"into","","",20,[[],["u"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"key","","",20,[[["self"]],["t"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"into","","",6,[[],["u"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"into","","",17,[[],["u"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"key","","",17,[[["self"]],["t"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"into","","",7,[[],["u"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"into","","",8,[[],["u"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"into","","",9,[[],["u"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"to_string","","",9,[[["self"]],["string"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"into","","",10,[[],["u"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"into","","",11,[[],["u"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"target_config","","",0,[[["self"]],["targetfrontendconfig"]]],[11,"declare_signature","","",0,[[["signature"],["self"]],["wasmresult"]]],[11,"declare_func_import","","",0,[[["signatureindex"],["str"],["self"]],["wasmresult"]]],[11,"declare_func_type","","",0,[[["signatureindex"],["self"]],["wasmresult"]]],[11,"declare_global","","",0,[[["self"],["global"]],["wasmresult"]]],[11,"declare_global_import","","",0,[[["str"],["global"],["self"]],["wasmresult"]]],[11,"declare_table","","",0,[[["self"],["table"]],["wasmresult"]]],[11,"declare_table_import","","",0,[[["str"],["table"],["self"]],["wasmresult"]]],[11,"declare_table_elements","","",0,[[["usize"],["box"],["tableindex"],["self"],["globalindex"],["option",["globalindex"]]],["wasmresult"]]],[11,"declare_memory","","",0,[[["self"],["memory"]],["wasmresult"]]],[11,"declare_memory_import","","",0,[[["str"],["self"],["memory"]],["wasmresult"]]],[11,"declare_data_initialization","","",0,[[["usize"],["memoryindex"],["globalindex"],["self"],["option",["globalindex"]]],["wasmresult"]]],[11,"declare_func_export","","",0,[[["funcindex"],["self"],["str"]],["wasmresult"]]],[11,"declare_table_export","","",0,[[["tableindex"],["self"],["str"]],["wasmresult"]]],[11,"declare_memory_export","","",0,[[["str"],["self"],["memoryindex"]],["wasmresult"]]],[11,"declare_global_export","","",0,[[["globalindex"],["self"],["str"]],["wasmresult"]]],[11,"declare_start_func","","",0,[[["funcindex"],["self"]],["wasmresult"]]],[11,"define_function_body","","",0,[[["usize"],["self"],["moduletranslationstate"]],["wasmresult"]]],[11,"declare_func_name","","",0,[[["funcindex"],["self"],["str"]],["wasmresult"]]],[11,"from","","Convert from a `BinaryReaderError` to a `WasmError`.",9,[[["binaryreadererror"]],["self"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"eq","","",8,[[["self"],["returnmode"]],["bool"]]],[11,"eq","","",12,[[["funcindex"],["self"]],["bool"]]],[11,"ne","","",12,[[["funcindex"],["self"]],["bool"]]],[11,"eq","","",13,[[["definedfuncindex"],["self"]],["bool"]]],[11,"ne","","",13,[[["definedfuncindex"],["self"]],["bool"]]],[11,"eq","","",14,[[["definedtableindex"],["self"]],["bool"]]],[11,"ne","","",14,[[["definedtableindex"],["self"]],["bool"]]],[11,"eq","","",15,[[["definedmemoryindex"],["self"]],["bool"]]],[11,"ne","","",15,[[["definedmemoryindex"],["self"]],["bool"]]],[11,"eq","","",16,[[["definedglobalindex"],["self"]],["bool"]]],[11,"ne","","",16,[[["definedglobalindex"],["self"]],["bool"]]],[11,"eq","","",17,[[["self"],["tableindex"]],["bool"]]],[11,"ne","","",17,[[["self"],["tableindex"]],["bool"]]],[11,"eq","","",18,[[["globalindex"],["self"]],["bool"]]],[11,"ne","","",18,[[["globalindex"],["self"]],["bool"]]],[11,"eq","","",19,[[["memoryindex"],["self"]],["bool"]]],[11,"ne","","",19,[[["memoryindex"],["self"]],["bool"]]],[11,"eq","","",20,[[["signatureindex"],["self"]],["bool"]]],[11,"ne","","",20,[[["signatureindex"],["self"]],["bool"]]],[11,"cmp","","",12,[[["funcindex"],["self"]],["ordering"]]],[11,"cmp","","",13,[[["definedfuncindex"],["self"]],["ordering"]]],[11,"cmp","","",14,[[["definedtableindex"],["self"]],["ordering"]]],[11,"cmp","","",15,[[["definedmemoryindex"],["self"]],["ordering"]]],[11,"cmp","","",16,[[["definedglobalindex"],["self"]],["ordering"]]],[11,"cmp","","",17,[[["self"],["tableindex"]],["ordering"]]],[11,"cmp","","",18,[[["globalindex"],["self"]],["ordering"]]],[11,"cmp","","",19,[[["memoryindex"],["self"]],["ordering"]]],[11,"cmp","","",20,[[["signatureindex"],["self"]],["ordering"]]],[11,"partial_cmp","","",12,[[["funcindex"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",12,[[["funcindex"],["self"]],["bool"]]],[11,"le","","",12,[[["funcindex"],["self"]],["bool"]]],[11,"gt","","",12,[[["funcindex"],["self"]],["bool"]]],[11,"ge","","",12,[[["funcindex"],["self"]],["bool"]]],[11,"partial_cmp","","",13,[[["definedfuncindex"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",13,[[["definedfuncindex"],["self"]],["bool"]]],[11,"le","","",13,[[["definedfuncindex"],["self"]],["bool"]]],[11,"gt","","",13,[[["definedfuncindex"],["self"]],["bool"]]],[11,"ge","","",13,[[["definedfuncindex"],["self"]],["bool"]]],[11,"partial_cmp","","",14,[[["definedtableindex"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",14,[[["definedtableindex"],["self"]],["bool"]]],[11,"le","","",14,[[["definedtableindex"],["self"]],["bool"]]],[11,"gt","","",14,[[["definedtableindex"],["self"]],["bool"]]],[11,"ge","","",14,[[["definedtableindex"],["self"]],["bool"]]],[11,"partial_cmp","","",15,[[["definedmemoryindex"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",15,[[["definedmemoryindex"],["self"]],["bool"]]],[11,"le","","",15,[[["definedmemoryindex"],["self"]],["bool"]]],[11,"gt","","",15,[[["definedmemoryindex"],["self"]],["bool"]]],[11,"ge","","",15,[[["definedmemoryindex"],["self"]],["bool"]]],[11,"partial_cmp","","",16,[[["definedglobalindex"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",16,[[["definedglobalindex"],["self"]],["bool"]]],[11,"le","","",16,[[["definedglobalindex"],["self"]],["bool"]]],[11,"gt","","",16,[[["definedglobalindex"],["self"]],["bool"]]],[11,"ge","","",16,[[["definedglobalindex"],["self"]],["bool"]]],[11,"partial_cmp","","",17,[[["self"],["tableindex"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",17,[[["self"],["tableindex"]],["bool"]]],[11,"le","","",17,[[["self"],["tableindex"]],["bool"]]],[11,"gt","","",17,[[["self"],["tableindex"]],["bool"]]],[11,"ge","","",17,[[["self"],["tableindex"]],["bool"]]],[11,"partial_cmp","","",18,[[["globalindex"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",18,[[["globalindex"],["self"]],["bool"]]],[11,"le","","",18,[[["globalindex"],["self"]],["bool"]]],[11,"gt","","",18,[[["globalindex"],["self"]],["bool"]]],[11,"ge","","",18,[[["globalindex"],["self"]],["bool"]]],[11,"partial_cmp","","",19,[[["memoryindex"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",19,[[["memoryindex"],["self"]],["bool"]]],[11,"le","","",19,[[["memoryindex"],["self"]],["bool"]]],[11,"gt","","",19,[[["memoryindex"],["self"]],["bool"]]],[11,"ge","","",19,[[["memoryindex"],["self"]],["bool"]]],[11,"partial_cmp","","",20,[[["signatureindex"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",20,[[["signatureindex"],["self"]],["bool"]]],[11,"le","","",20,[[["signatureindex"],["self"]],["bool"]]],[11,"gt","","",20,[[["signatureindex"],["self"]],["bool"]]],[11,"ge","","",20,[[["signatureindex"],["self"]],["bool"]]],[11,"hash","","",12,[[["self"],["__h"]]]],[11,"hash","","",13,[[["self"],["__h"]]]],[11,"hash","","",14,[[["self"],["__h"]]]],[11,"hash","","",15,[[["self"],["__h"]]]],[11,"hash","","",16,[[["self"],["__h"]]]],[11,"hash","","",17,[[["self"],["__h"]]]],[11,"hash","","",18,[[["self"],["__h"]]]],[11,"hash","","",19,[[["self"],["__h"]]]],[11,"hash","","",20,[[["self"],["__h"]]]],[11,"hash","","",4,[[["self"],["__h"]]]],[11,"hash","","",10,[[["self"],["__h"]]]],[11,"hash","","",6,[[["self"],["__h"]]]],[11,"hash","","",11,[[["self"],["__h"]]]],[11,"hash","","",5,[[["self"],["__h"]]]],[11,"clone","","",7,[[["self"]],["globalvariable"]]],[11,"clone","","",8,[[["self"]],["returnmode"]]],[11,"clone","","",12,[[["self"]],["funcindex"]]],[11,"clone","","",13,[[["self"]],["definedfuncindex"]]],[11,"clone","","",14,[[["self"]],["definedtableindex"]]],[11,"clone","","",15,[[["self"]],["definedmemoryindex"]]],[11,"clone","","",16,[[["self"]],["definedglobalindex"]]],[11,"clone","","",17,[[["self"]],["tableindex"]]],[11,"clone","","",18,[[["self"]],["globalindex"]]],[11,"clone","","",19,[[["self"]],["memoryindex"]]],[11,"clone","","",20,[[["self"]],["signatureindex"]]],[11,"clone","","",4,[[["self"]],["global"]]],[11,"clone","","",10,[[["self"]],["globalinit"]]],[11,"clone","","",6,[[["self"]],["table"]]],[11,"clone","","",11,[[["self"]],["tableelementtype"]]],[11,"clone","","",5,[[["self"]],["memory"]]],[11,"new","","",12,[[["usize"]],["self"]]],[11,"index","","",12,[[],["usize"]]],[11,"new","","",13,[[["usize"]],["self"]]],[11,"index","","",13,[[],["usize"]]],[11,"new","","",14,[[["usize"]],["self"]]],[11,"index","","",14,[[],["usize"]]],[11,"new","","",15,[[["usize"]],["self"]]],[11,"index","","",15,[[],["usize"]]],[11,"new","","",16,[[["usize"]],["self"]]],[11,"index","","",16,[[],["usize"]]],[11,"new","","",17,[[["usize"]],["self"]]],[11,"index","","",17,[[],["usize"]]],[11,"new","","",18,[[["usize"]],["self"]]],[11,"index","","",18,[[],["usize"]]],[11,"new","","",19,[[["usize"]],["self"]]],[11,"index","","",19,[[],["usize"]]],[11,"new","","",20,[[["usize"]],["self"]]],[11,"index","","",20,[[],["usize"]]],[11,"reserved_value","","",12,[[],["funcindex"]]],[11,"reserved_value","","",13,[[],["definedfuncindex"]]],[11,"reserved_value","","",14,[[],["definedtableindex"]]],[11,"reserved_value","","",15,[[],["definedmemoryindex"]]],[11,"reserved_value","","",16,[[],["definedglobalindex"]]],[11,"reserved_value","","",17,[[],["tableindex"]]],[11,"reserved_value","","",18,[[],["globalindex"]]],[11,"reserved_value","","",19,[[],["memoryindex"]]],[11,"reserved_value","","",20,[[],["signatureindex"]]],[11,"pointer_type","","Get the Cranelift integer type to use for native pointers.",23,[[["self"]],["type"]]],[11,"pointer_bytes","","Get the size of a native pointer, in bytes.",23,[[["self"]],["u8"]]],[11,"reference_type","","Get the Cranelift reference type to use for native…",23,[[["self"]],["type"]]],[11,"return_mode","","Should the code be structured to use a single…",21,[[["self"]],["returnmode"]]],[11,"translate_call","","Translate a `call` WebAssembly instruction at `pos`.",21,[[["funcindex"],["self"],["funccursor"],["funcref"]],[["wasmresult",["inst"]],["inst"]]]],[11,"translate_loop_header","","Emit code at the beginning of every wasm loop.",21,[[["self"],["funccursor"]],["wasmresult"]]],[11,"before_translate_operator","","Optional callback for the `FunctionEnvironment` performing…",21,[[["operator"],["functionbuilder"],["functranslationstate"],["self"]],["wasmresult"]]],[11,"after_translate_operator","","Optional callback for the `FunctionEnvironment` performing…",21,[[["operator"],["functionbuilder"],["functranslationstate"],["self"]],["wasmresult"]]],[11,"reserve_signatures","","Provides the number of signatures up front. By default…",22,[[["self"],["u32"]],["wasmresult"]]],[11,"reserve_imports","","Provides the number of imports up front. By default this…",22,[[["self"],["u32"]],["wasmresult"]]],[11,"finish_imports","","Notifies the implementation that all imports have been…",22,[[["self"]],["wasmresult"]]],[11,"reserve_func_types","","Provides the number of defined functions up front. By…",22,[[["self"],["u32"]],["wasmresult"]]],[11,"reserve_tables","","Provides the number of defined tables up front. By default…",22,[[["self"],["u32"]],["wasmresult"]]],[11,"reserve_memories","","Provides the number of defined memories up front. By…",22,[[["self"],["u32"]],["wasmresult"]]],[11,"reserve_globals","","Provides the number of defined globals up front. By…",22,[[["self"],["u32"]],["wasmresult"]]],[11,"reserve_exports","","Provides the number of exports up front. By default this…",22,[[["self"],["u32"]],["wasmresult"]]],[11,"finish_exports","","Notifies the implementation that all exports have been…",22,[[["self"]],["wasmresult"]]],[11,"reserve_table_elements","","Provides the number of element initializers up front. By…",22,[[["self"],["u32"]],["wasmresult"]]],[11,"reserve_data_initializers","","Provides the number of data initializers up front. By…",22,[[["self"],["u32"]],["wasmresult"]]],[11,"declare_func_name","","Declares the name of a function to the environment.",22,[[["funcindex"],["self"],["str"]],["wasmresult"]]],[11,"custom_section","","Indicates that a custom section has been found in the wasm…",22,[[["str"],["self"]],["wasmresult"]]]],"p":[[3,"DummyEnvironment"],[3,"FuncTranslator"],[3,"FuncTranslationState"],[3,"ModuleTranslationState"],[3,"Global"],[3,"Memory"],[3,"Table"],[4,"GlobalVariable"],[4,"ReturnMode"],[4,"WasmError"],[4,"GlobalInit"],[4,"TableElementType"],[3,"FuncIndex"],[3,"DefinedFuncIndex"],[3,"DefinedTableIndex"],[3,"DefinedMemoryIndex"],[3,"DefinedGlobalIndex"],[3,"TableIndex"],[3,"GlobalIndex"],[3,"MemoryIndex"],[3,"SignatureIndex"],[8,"FuncEnvironment"],[8,"ModuleEnvironment"],[8,"TargetEnvironment"]]};
searchIndex["wasmer_runtime"] = {"doc":"Wasmer-runtime is a library that makes embedding…","i":[[3,"Features","wasmer_runtime","Controls which experimental features will be enabled.",null,null],[12,"simd","","",0,null],[12,"threads","","",0,null],[3,"MiddlewareChain","","A container for a chain of middlewares.",null,null],[3,"StreamingCompiler","","A streaming compiler which is designed to generated code…",null,null],[4,"Export","","Kind of WebAssembly export.",null,null],[13,"Function","","Function export.",1,null],[12,"func","wasmer_runtime::Export","A pointer to a function.",1,null],[12,"ctx","","A kind of context.",1,null],[12,"signature","","The signature of the function.",1,null],[13,"Memory","wasmer_runtime","Memory export.",1,null],[13,"Table","","Table export.",1,null],[13,"Global","","Global export.",1,null],[3,"Global","","Container with a descriptor and a reference to a global…",null,null],[3,"ImportObject","","All of the import data used when instantiating.",null,null],[12,"allow_missing_functions","","Allow missing functions to be generated and instantiation…",2,null],[8,"LikeNamespace","","This trait represents objects that act as a namespace for…",null,null],[10,"get_export","","Gets an export by name.",3,[[["str"],["self"]],[["export"],["option",["export"]]]]],[10,"get_exports","","Gets all exports in the namespace.",3,[[["self"]],["vec"]]],[10,"maybe_insert","","Maybe insert an `Export` by name into the namespace.",3,[[["str"],["self"],["export"]],["option"]]],[3,"DynFunc","","A representation of an exported WebAssembly function.",null,null],[3,"Instance","","An instantiated WebAssembly module.",null,null],[12,"module","","Reference to the module used to instantiate this instance.",4,null],[3,"Array","","Array.",null,null],[3,"Item","","Item.",null,null],[3,"WasmPtr","","A pointer to a Wasm item.",null,null],[3,"Memory","","A shared or unshared wasm linear memory.",null,null],[3,"Module","","A compiled WebAssembly module.",null,null],[3,"Table","","Container with a descriptor and a reference to a table…",null,null],[4,"Value","","Represents a WebAssembly value.",null,null],[13,"I32","","The `i32` type.",5,null],[13,"I64","","The `i64` type.",5,null],[13,"F32","","The `f32` type.",5,null],[13,"F64","","The `f64` type.",5,null],[13,"V128","","The `v128` type.",5,null],[3,"Ctx","","The context of the currently running WebAssembly instance.",null,null],[12,"internal","","InternalCtx data field",6,null],[12,"local_backing","","These are pointers to things that are known to be owned by…",6,null],[12,"import_backing","","Mutable pointer to import data",6,null],[12,"module","","Const pointer to module inner data",6,null],[12,"data","","This is intended to be user-supplied, per-instance…",6,null],[12,"data_finalizer","","If there's a function set in this field, it gets called…",6,null],[3,"Func","","Represents a function that can be used by WebAssembly.",null,null],[5,"compile_with","","Compile a [`Module`] using the provided compiler from…",null,[[["compiler"]],[["result",["module","compileerror"]],["module"],["compileerror"]]]],[5,"validate","","Perform validation as defined by the WebAssembly…",null,[[],["bool"]]],[14,"func","","Helper macro to create a new `Func` object using the…",null,null],[14,"imports","","Generate an [`ImportObject`] safely.",null,null],[8,"Compiler","","",null,null],[10,"compile","","Compiles a `Module` from WebAssembly binary format. The…",7,[[["compilerconfig"],["token"],["self"]],[["compileerror"],["result",["moduleinner","compileerror"]],["moduleinner"]]]],[10,"from_cache","","",7,[[["token"],["self"],["artifact"]],[["error"],["result",["moduleinner","error"]],["moduleinner"]]]],[3,"CompilerConfig","","Configuration data for the compiler",null,null],[12,"symbol_map","","Symbol information generated from emscripten; used for…",8,null],[12,"memory_bound_check_mode","","",8,null],[12,"enforce_stack_check","","",8,null],[12,"track_state","","",8,null],[12,"features","","",8,null],[12,"triple","","",8,null],[12,"cpu_name","","",8,null],[12,"cpu_features","","",8,null],[12,"backend_specific_config","","",8,null],[4,"Backend","","Enum used to select which compiler should be used to…",null,null],[13,"Cranelift","","Cranelift backend",9,null],[13,"Auto","","Auto backend",9,null],[5,"compile","","Compile WebAssembly binary code into a [`Module`]. This…",null,[[],[["module"],["compileresult",["module"]]]]],[5,"compile_with_config","","The same as `compile` but takes a `CompilerConfig` for the…",null,[[["compilerconfig"]],[["module"],["compileresult",["module"]]]]],[5,"compile_with_config_with","","The same as `compile_with_config` but takes a `Compiler`…",null,[[["compilerconfig"],["compiler"]],[["module"],["compileresult",["module"]]]]],[5,"instantiate","","Compile and instantiate WebAssembly code without creating…",null,[[["importobject"]],[["instance"],["result",["instance"]]]]],[5,"default_compiler","","Get a single instance of the default compiler to use.",null,[[]]],[5,"compiler_for_backend","","Get the `Compiler` as a trait object for the given…",null,[[["backend"]],[["box",["compiler"]],["option",["box"]]]]],[0,"memory","","The memory module contains the implementation data…",null,null],[3,"Atomically","wasmer_runtime::memory","Atomically.",null,null],[3,"Memory","","A shared or unshared wasm linear memory.",null,null],[3,"MemoryView","","A view into a memory.",null,null],[0,"wasm","wasmer_runtime","Various types exposed by the Wasmer Runtime.",null,null],[3,"Global","wasmer_runtime::wasm","Container with a descriptor and a reference to a global…",null,null],[3,"Table","","Container with a descriptor and a reference to a table…",null,null],[3,"FuncSig","","The signature of a function that is either implemented in…",null,null],[3,"GlobalDescriptor","","Describes the mutability and type of a Global",null,null],[12,"mutable","","Mutable flag.",10,null],[12,"ty","","Wasm type.",10,null],[3,"MemoryDescriptor","","A wasm memory descriptor.",null,null],[12,"minimum","","The minimum number of allowed pages.",11,null],[12,"maximum","","The maximum number of allowed pages.",11,null],[12,"shared","","This memory can be shared between wasm threads.",11,null],[12,"memory_type","","The type of the memory",11,null],[3,"TableDescriptor","","Describes the properties of a table including the element…",null,null],[12,"element","","Type of data stored in this table.",12,null],[12,"minimum","","The minimum number of elements that must be stored in this…",12,null],[12,"maximum","","The maximum number of elements in this table.",12,null],[4,"Type","","Represents a WebAssembly type.",null,null],[13,"I32","","The `i32` type.",13,null],[13,"I64","","The `i64` type.",13,null],[13,"F32","","The `f32` type.",13,null],[13,"F64","","The `f64` type.",13,null],[13,"V128","","The `v128` type.",13,null],[4,"Value","","Represents a WebAssembly value.",null,null],[13,"I32","","The `i32` type.",5,null],[13,"I64","","The `i64` type.",5,null],[13,"F32","","The `f32` type.",5,null],[13,"F64","","The `f64` type.",5,null],[13,"V128","","The `v128` type.",5,null],[0,"error","wasmer_runtime","The error module contains the data structures and helper…",null,null],[4,"CacheError","wasmer_runtime::error","Kinds of caching errors",null,null],[13,"IoError","","An IO error while reading/writing a cache binary.",14,null],[13,"DeserializeError","","An error deserializing bytes into a cache data structure.",14,null],[13,"SerializeError","","An error serializing bytes from a cache data structure.",14,null],[13,"Unknown","","An undefined caching error with a message.",14,null],[13,"InvalidFile","","An invalid cache binary given.",14,null],[13,"InvalidatedCache","","The cached binary has been invalidated.",14,null],[13,"UnsupportedBackend","","The current backend does not support caching.",14,null],[6,"Result","","Aliases the standard `Result` type as `Result` within this…",null,null],[6,"CompileResult","","Result of an attempt to compile the provided WebAssembly…",null,null],[6,"LinkResult","","Result of an attempt to link the provided WebAssembly…",null,null],[6,"RuntimeResult","","Result of an attempt to run the provided WebAssembly…",null,null],[6,"CallResult","","Result of an attempt to call the provided WebAssembly…",null,null],[6,"ResolveResult","","Result of an attempt to resolve a WebAssembly function by…",null,null],[6,"ParseResult","","Result of an attempt to parse bytes into a WebAssembly…",null,null],[4,"CompileError","","This is returned when the chosen compiler is unable to…",null,null],[13,"ValidationError","","A validation error containing an error message.",15,null],[12,"msg","wasmer_runtime::error::CompileError","An error message.",15,null],[13,"InternalError","wasmer_runtime::error","A internal error containing an error message.",15,null],[12,"msg","wasmer_runtime::error::CompileError","An error message.",15,null],[4,"LinkError","wasmer_runtime::error","This is returned when the runtime is unable to correctly…",null,null],[13,"IncorrectImportType","","The type of the provided import does not match the…",16,null],[12,"namespace","wasmer_runtime::error::LinkError","Namespace.",16,null],[12,"name","","Name.",16,null],[12,"expected","","Expected.",16,null],[12,"found","","Found.",16,null],[13,"IncorrectImportSignature","wasmer_runtime::error","The signature of the provided import does not match the…",16,null],[12,"namespace","wasmer_runtime::error::LinkError","Namespace.",16,null],[12,"name","","Name.",16,null],[12,"expected","","Expected.",16,null],[12,"found","","Found.",16,null],[13,"ImportNotFound","wasmer_runtime::error","An expected import was not provided.",16,null],[12,"namespace","wasmer_runtime::error::LinkError","Namespace.",16,null],[12,"name","","Name.",16,null],[13,"IncorrectMemoryDescriptor","wasmer_runtime::error","The memory descriptor provided does not match the expected…",16,null],[12,"namespace","wasmer_runtime::error::LinkError","Namespace.",16,null],[12,"name","","Name.",16,null],[12,"expected","","Expected.",16,null],[12,"found","","Found.",16,null],[13,"IncorrectTableDescriptor","wasmer_runtime::error","The table descriptor provided does not match the expected…",16,null],[12,"namespace","wasmer_runtime::error::LinkError","Namespace.",16,null],[12,"name","","Name.",16,null],[12,"expected","","Expected.",16,null],[12,"found","","Found.",16,null],[13,"IncorrectGlobalDescriptor","wasmer_runtime::error","The global descriptor provided does not match the expected…",16,null],[12,"namespace","wasmer_runtime::error::LinkError","Namespace.",16,null],[12,"name","","Name.",16,null],[12,"expected","","Expected.",16,null],[12,"found","","Found.",16,null],[13,"Generic","wasmer_runtime::error","A generic error with a message.",16,null],[12,"message","wasmer_runtime::error::LinkError","Error message.",16,null],[4,"RuntimeError","wasmer_runtime::error","This is the error type returned when calling a WebAssembly…",null,null],[13,"Trap","","Trap.",17,null],[12,"msg","wasmer_runtime::error::RuntimeError","Trap message.",17,null],[13,"Error","wasmer_runtime::error","Error.",17,null],[12,"data","wasmer_runtime::error::RuntimeError","Error data.",17,null],[4,"ResolveError","wasmer_runtime::error","This error type is produced by resolving a wasm function…",null,null],[13,"Signature","","Found signature did not match expected signature.",18,null],[12,"expected","wasmer_runtime::error::ResolveError","Expected `FuncSig`.",18,null],[12,"found","","Found type.",18,null],[13,"ExportNotFound","wasmer_runtime::error","Export not found.",18,null],[12,"name","wasmer_runtime::error::ResolveError","Name.",18,null],[13,"ExportWrongType","wasmer_runtime::error","Export found with the wrong type.",18,null],[12,"name","wasmer_runtime::error::ResolveError","Name.",18,null],[4,"CallError","wasmer_runtime::error","This error type is produced by calling a wasm function…",null,null],[13,"Resolve","","An error occured resolving the functions name or types.",19,null],[13,"Runtime","","A runtime error occurred during the function call.",19,null],[4,"CreationError","","This error type is produced when creating something, like…",null,null],[13,"UnableToCreateMemory","","Unable to create memory error.",20,null],[13,"UnableToCreateTable","","Unable to create table error.",20,null],[13,"InvalidDescriptor","","Invalid descriptor error with message.",20,null],[4,"Error","","The amalgamation of all errors that can occur during the…",null,null],[13,"CompileError","","Compile error.",21,null],[13,"LinkError","","Link errors.",21,null],[13,"RuntimeError","","Runtime error.",21,null],[13,"ResolveError","","Resolve error.",21,null],[13,"CallError","","Call error.",21,null],[13,"CreationError","","Creation error.",21,null],[4,"GrowError","","An error occurred while growing a memory or table.",null,null],[13,"MemoryGrowError","","Error growing memory.",22,null],[13,"TableGrowError","","Error growing table.",22,null],[13,"ExceededMaxPages","","Max pages were exceeded.",22,null],[13,"ExceededMaxPagesForMemory","","Max pages for memory were exceeded.",22,null],[13,"CouldNotProtectMemory","","Error protecting memory.",22,null],[13,"CouldNotCreateMemory","","Error creating memory.",22,null],[4,"PageError","","A kind of page error.",null,null],[13,"ExceededMaxPages","","Max pages were exceeded error.",23,null],[4,"MemoryCreationError","","Error occured while creating memory.",null,null],[13,"VirtualMemoryAllocationFailed","","Allocation of virtual memory failed error.",24,null],[13,"CouldNotCreateMemoryFromFile","","Error creating memory from file.",24,null],[4,"MemoryProtectionError","","Error protecting memory.",null,null],[13,"ProtectionFailed","","Protection failed error.",25,null],[4,"ParseError","","Parse Error.",null,null],[13,"BinaryReadError","","Error reading binary.",26,null],[0,"units","wasmer_runtime","Various unit types.",null,null],[3,"Bytes","wasmer_runtime::units","Units of WebAssembly memory in terms of 8-bit bytes.",null,null],[12,"0","","",27,null],[3,"Pages","","Units of WebAssembly pages (as specified to be 65,536…",null,null],[12,"0","","",28,null],[0,"types","wasmer_runtime","Various types.",null,null],[4,"Type","wasmer_runtime::types","Represents a WebAssembly type.",null,null],[13,"I32","","The `i32` type.",13,null],[13,"I64","","The `i64` type.",13,null],[13,"F32","","The `f32` type.",13,null],[13,"F64","","The `f64` type.",13,null],[13,"V128","","The `v128` type.",13,null],[4,"Value","","Represents a WebAssembly value.",null,null],[13,"I32","","The `i32` type.",5,null],[13,"I64","","The `i64` type.",5,null],[13,"F32","","The `f32` type.",5,null],[13,"F64","","The `f64` type.",5,null],[13,"V128","","The `v128` type.",5,null],[8,"NativeWasmType","","Represents a native wasm type.",null,null],[18,"TYPE","","Type for this `NativeWasmType`.",29,null],[10,"from_binary","","Convert from u64 bites to self.",29,[[["u64"]],["self"]]],[10,"to_binary","","Convert self to u64 binary representation.",29,[[],["u64"]]],[8,"WasmExternType","","A trait to represent a wasm extern type.",null,null],[16,"Native","","Native wasm type for this `WasmExternType`.",30,null],[10,"from_native","","Convert from given `Native` type to self.",30,[[],["self"]]],[10,"to_native","","Convert self to `Native` type.",30,[[]]],[8,"ValueType","","Trait for a Value type.",null,null],[4,"ElementType","","Kinds of element types.",null,null],[13,"Anyfunc","","Any wasm function.",31,null],[3,"TableDescriptor","","Describes the properties of a table including the element…",null,null],[12,"element","","Type of data stored in this table.",12,null],[12,"minimum","","The minimum number of elements that must be stored in this…",12,null],[12,"maximum","","The maximum number of elements in this table.",12,null],[4,"Initializer","","A const value initializer. Over time, this will be able to…",null,null],[13,"Const","","Corresponds to a `const.*` instruction.",32,null],[13,"GetGlobal","","Corresponds to a `get_global` instruction.",32,null],[3,"GlobalDescriptor","","Describes the mutability and type of a Global",null,null],[12,"mutable","","Mutable flag.",10,null],[12,"ty","","Wasm type.",10,null],[3,"GlobalInit","","A wasm global.",null,null],[12,"desc","","Global descriptor.",33,null],[12,"init","","Global initializer.",33,null],[3,"MemoryDescriptor","","A wasm memory descriptor.",null,null],[12,"minimum","","The minimum number of allowed pages.",11,null],[12,"maximum","","The maximum number of allowed pages.",11,null],[12,"shared","","This memory can be shared between wasm threads.",11,null],[12,"memory_type","","The type of the memory",11,null],[3,"FuncSig","","The signature of a function that is either implemented in…",null,null],[8,"LocalImport","","Trait that represents Local or Import.",null,null],[16,"Local","","Local type.",34,null],[16,"Import","","Import type.",34,null],[3,"FuncIndex","","Typed Index",null,null],[3,"LocalFuncIndex","","Typed Index",null,null],[3,"ImportedFuncIndex","","Typed Index",null,null],[3,"MemoryIndex","","Typed Index",null,null],[3,"LocalMemoryIndex","","Typed Index",null,null],[3,"ImportedMemoryIndex","","Typed Index",null,null],[3,"TableIndex","","Typed Index",null,null],[3,"LocalTableIndex","","Typed Index",null,null],[3,"ImportedTableIndex","","Typed Index",null,null],[3,"GlobalIndex","","Typed Index",null,null],[3,"LocalGlobalIndex","","Typed Index",null,null],[3,"ImportedGlobalIndex","","Typed Index",null,null],[3,"SigIndex","","Index for signature.",null,null],[4,"LocalOrImport","","Kind of local or import type.",null,null],[13,"Local","","Local.",35,null],[13,"Import","","Import.",35,null],[0,"cache","wasmer_runtime","The cache module provides the common data structures used…",null,null],[3,"Artifact","wasmer_runtime::cache","Artifact are produced by caching, are…",null,null],[3,"WasmHash","","The hash of a wasm module.",null,null],[3,"FileSystemCache","","Representation of a directory that contains compiled wasm…",null,null],[8,"Cache","","A generic cache for storing and loading compiled wasm…",null,null],[16,"LoadError","","Error type to return when load error occurs",36,null],[16,"StoreError","","Error type to return when store error occurs",36,null],[10,"load","","loads a module using the default `Backend`",36,[[["wasmhash"],["self"]],[["module"],["result",["module"]]]]],[10,"load_with_backend","","loads a cached module using a specific `Backend`",36,[[["wasmhash"],["self"],["backend"]],[["module"],["result",["module"]]]]],[10,"store","","Store a module into the cache with the given key",36,[[["module"],["self"],["wasmhash"]],["result"]]],[11,"new","","Construct a new `FileSystemCache` around the specified…",37,[[["pathbuf"],["into",["pathbuf"]]],["result"]]],[17,"VERSION","wasmer_runtime","The current version of this crate.",null,null],[11,"variants","","Get a list of the currently enabled (via feature flag)…",9,[[]]],[11,"to_string","","Stable string representation of the backend. It can be…",9,[[["self"]],["str"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","wasmer_runtime::wasm","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"to_owned","","",40,[[["self"]],["t"]]],[11,"clone_into","","",40,[[["self"],["t"]]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","wasmer_runtime","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"into_iter","","",2,[[],["i"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from_ret_array","","",44,[[],["a"]]],[11,"empty_ret_array","","",44,[[]]],[11,"from_c_struct","","",44,[[],["a"]]],[11,"into_c_struct","","",44,[[]]],[11,"types","","",44,[[]]],[11,"call","","",44,[[["nonnull",["func"]],["wasm"],["func"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"report","","",44,[[],[["result",["infallible"]],["infallible"]]]],[11,"equivalent","","",44,[[["k"],["self"]],["bool"]]],[11,"from","wasmer_runtime::memory","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","wasmer_runtime","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","wasmer_runtime::wasm","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","wasmer_runtime::types","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","wasmer_runtime","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"equivalent","","",9,[[["k"],["self"]],["bool"]]],[11,"from","wasmer_runtime::memory","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","wasmer_runtime::types","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"to_string","","",51,[[["self"]],["string"]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"equivalent","","",51,[[["k"],["self"]],["bool"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"equivalent","","",10,[[["k"],["self"]],["bool"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"equivalent","","",11,[[["k"],["self"]],["bool"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"equivalent","","",13,[[["k"],["self"]],["bool"]]],[11,"from","wasmer_runtime::error","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"to_string","","",15,[[["self"]],["string"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"to_string","","",16,[[["self"]],["string"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_string","","",17,[[["self"]],["string"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"to_string","","",18,[[["self"]],["string"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_string","","",19,[[["self"]],["string"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"to_string","","",20,[[["self"]],["string"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_string","","",21,[[["self"]],["string"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_string","","",22,[[["self"]],["string"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_string","","",23,[[["self"]],["string"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_string","","",24,[[["self"]],["string"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_string","","",25,[[["self"]],["string"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","wasmer_runtime::units","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"equivalent","","",27,[[["k"],["self"]],["bool"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"equivalent","","",28,[[["k"],["self"]],["bool"]]],[11,"from","wasmer_runtime::types","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"equivalent","","",31,[[["k"],["self"]],["bool"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"to_owned","","",52,[[["self"]],["t"]]],[11,"clone_into","","",52,[[["self"],["t"]]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"equivalent","","",52,[[["k"],["self"]],["bool"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"equivalent","","",53,[[["k"],["self"]],["bool"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"equivalent","","",54,[[["k"],["self"]],["bool"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"equivalent","","",55,[[["k"],["self"]],["bool"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_owned","","",56,[[["self"]],["t"]]],[11,"clone_into","","",56,[[["self"],["t"]]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"equivalent","","",56,[[["k"],["self"]],["bool"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"equivalent","","",57,[[["k"],["self"]],["bool"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"to_owned","","",58,[[["self"]],["t"]]],[11,"clone_into","","",58,[[["self"],["t"]]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"equivalent","","",58,[[["k"],["self"]],["bool"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"to_owned","","",59,[[["self"]],["t"]]],[11,"clone_into","","",59,[[["self"],["t"]]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"equivalent","","",59,[[["k"],["self"]],["bool"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"equivalent","","",60,[[["k"],["self"]],["bool"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"to_owned","","",61,[[["self"]],["t"]]],[11,"clone_into","","",61,[[["self"],["t"]]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"equivalent","","",61,[[["k"],["self"]],["bool"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"equivalent","","",62,[[["k"],["self"]],["bool"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_owned","","",63,[[["self"]],["t"]]],[11,"clone_into","","",63,[[["self"],["t"]]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"equivalent","","",63,[[["k"],["self"]],["bool"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_owned","","",64,[[["self"]],["t"]]],[11,"clone_into","","",64,[[["self"],["t"]]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"equivalent","","",64,[[["k"],["self"]],["bool"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","wasmer_runtime::cache","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"equivalent","","",66,[[["k"],["self"]],["bool"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"deserialize","wasmer_runtime::types","",56,[[["__d"]],[["result",["localmemoryindex"]],["localmemoryindex"]]]],[11,"deserialize","","",57,[[["__d"]],[["result",["importedmemoryindex"]],["importedmemoryindex"]]]],[11,"deserialize","wasmer_runtime::units","",28,[[["__d"]],[["pages"],["result",["pages"]]]]],[11,"deserialize","wasmer_runtime::types","",64,[[["__d"]],[["sigindex"],["result",["sigindex"]]]]],[11,"deserialize","wasmer_runtime::cache","",66,[[["__d"]],[["result",["wasmhash"]],["wasmhash"]]]],[11,"deserialize","wasmer_runtime::types","",63,[[["__d"]],[["result",["importedglobalindex"]],["importedglobalindex"]]]],[11,"deserialize","","",61,[[["__d"]],[["globalindex"],["result",["globalindex"]]]]],[11,"deserialize","wasmer_runtime::units","",27,[[["__d"]],[["bytes"],["result",["bytes"]]]]],[11,"deserialize","wasmer_runtime::types","",33,[[["__d"]],[["result",["globalinit"]],["globalinit"]]]],[11,"deserialize","","",52,[[["__d"]],[["result",["funcindex"]],["funcindex"]]]],[11,"deserialize","","",51,[[["__d"]],[["result",["funcsig"]],["funcsig"]]]],[11,"deserialize","","",55,[[["__d"]],[["result",["memoryindex"]],["memoryindex"]]]],[11,"deserialize","","",58,[[["__d"]],[["tableindex"],["result",["tableindex"]]]]],[11,"deserialize","","",10,[[["__d"]],[["result",["globaldescriptor"]],["globaldescriptor"]]]],[11,"deserialize","","",32,[[["__d"]],[["result",["initializer"]],["initializer"]]]],[11,"deserialize","","",60,[[["__d"]],[["importedtableindex"],["result",["importedtableindex"]]]]],[11,"deserialize","","",62,[[["__d"]],[["result",["localglobalindex"]],["localglobalindex"]]]],[11,"deserialize","","",54,[[["__d"]],[["importedfuncindex"],["result",["importedfuncindex"]]]]],[11,"deserialize","","",53,[[["__d"]],[["localfuncindex"],["result",["localfuncindex"]]]]],[11,"deserialize","","",5,[[["__d"]],[["value"],["result",["value"]]]]],[11,"deserialize","","",11,[[["__d"]],[["result",["memorydescriptor"]],["memorydescriptor"]]]],[11,"deserialize","","",59,[[["__d"]],[["localtableindex"],["result",["localtableindex"]]]]],[11,"deserialize","","",31,[[["__d"]],[["result",["elementtype"]],["elementtype"]]]],[11,"deserialize","","",13,[[["__d"]],[["result",["type"]],["type"]]]],[11,"deserialize","","",12,[[["__d"]],[["result",["tabledescriptor"]],["tabledescriptor"]]]],[11,"hash","","",13,[[["self"],["__h"]]]],[11,"hash","","",53,[[["self"],["__h"]]]],[11,"hash","","",56,[[["self"],["__h"]]]],[11,"hash","","",61,[[["self"],["__h"]]]],[11,"hash","","",55,[[["self"],["__h"]]]],[11,"hash","","",60,[[["self"],["__h"]]]],[11,"hash","","",64,[[["self"],["__h"]]]],[11,"hash","","",54,[[["self"],["__h"]]]],[11,"hash","","",52,[[["self"],["__h"]]]],[11,"hash","","",57,[[["self"],["__h"]]]],[11,"hash","","",58,[[["self"],["__h"]]]],[11,"hash","","",59,[[["self"],["__h"]]]],[11,"hash","","",63,[[["self"],["__h"]]]],[11,"hash","","",62,[[["self"],["__h"]]]],[11,"hash","","",51,[[["self"],["__h"]]]],[11,"hash","wasmer_runtime::cache","",66,[[["self"],["__h"]]]],[11,"cmp","wasmer_runtime::types","",58,[[["self"],["tableindex"]],["ordering"]]],[11,"cmp","","",62,[[["self"],["localglobalindex"]],["ordering"]]],[11,"cmp","","",52,[[["self"],["funcindex"]],["ordering"]]],[11,"cmp","","",53,[[["localfuncindex"],["self"]],["ordering"]]],[11,"cmp","","",60,[[["self"],["importedtableindex"]],["ordering"]]],[11,"cmp","","",59,[[["localtableindex"],["self"]],["ordering"]]],[11,"cmp","wasmer_runtime::units","",27,[[["bytes"],["self"]],["ordering"]]],[11,"cmp","wasmer_runtime::types","",61,[[["globalindex"],["self"]],["ordering"]]],[11,"cmp","","",54,[[["self"],["importedfuncindex"]],["ordering"]]],[11,"cmp","","",56,[[["self"],["localmemoryindex"]],["ordering"]]],[11,"cmp","","",63,[[["importedglobalindex"],["self"]],["ordering"]]],[11,"cmp","","",57,[[["self"],["importedmemoryindex"]],["ordering"]]],[11,"cmp","","",55,[[["self"],["memoryindex"]],["ordering"]]],[11,"cmp","wasmer_runtime::units","",28,[[["pages"],["self"]],["ordering"]]],[11,"fmt","wasmer_runtime::error","",20,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",18,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmer_runtime::units","",28,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmer_runtime","",1,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmer_runtime::types","",12,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",56,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",54,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmer_runtime::error","",24,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmer_runtime::types","",62,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmer_runtime::error","",16,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",21,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmer_runtime::types","",33,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmer_runtime","",8,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmer_runtime::cache","",66,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmer_runtime::types","",58,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",31,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",52,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmer_runtime::memory","",45,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmer_runtime::error","",25,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmer_runtime","",0,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmer_runtime::types","",5,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmer_runtime::error","",17,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",22,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmer_runtime::wasm","",47,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmer_runtime::types","",60,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",32,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",53,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmer_runtime::error","",15,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmer_runtime::types","",63,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",11,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",55,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmer_runtime::error","",26,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmer_runtime::wasm","",40,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmer_runtime::types","",64,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",13,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",57,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",51,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",59,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmer_runtime::units","",27,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmer_runtime","",6,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmer_runtime::error","",14,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmer_runtime","",44,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmer_runtime::error","",23,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmer_runtime::types","",61,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmer_runtime::error","",19,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmer_runtime::types","",10,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"compile","wasmer_runtime","",39,[[["compilerconfig"],["token"],["self"]],[["compileerror"],["result",["moduleinner","compileerror"]],["moduleinner"]]]],[11,"from_cache","","",39,[[["token"],["self"],["artifact"]],[["error"],["result",["moduleinner","error"]],["moduleinner"]]]],[11,"add","wasmer_runtime::units","",28,[[["t"]],["pages"]]],[11,"add","","",27,[[["t"]],["bytes"]]],[11,"to_native","wasmer_runtime","",44,[[]]],[11,"from_native","","",44,[[],["wasmptr"]]],[11,"fmt","wasmer_runtime::error","",23,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",16,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",21,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",18,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",15,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmer_runtime::types","",51,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmer_runtime::error","",25,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",19,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",22,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",20,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",17,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmer_runtime::types","",13,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","wasmer_runtime::error","",24,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"default","wasmer_runtime","",0,[[],["features"]]],[11,"default","","",8,[[],["compilerconfig"]]],[11,"into_iter","","",2,[[]]],[11,"extend","","",2,[[["self"],["t"]]]],[11,"get_export","","",4,[[["str"],["self"]],[["export"],["option",["export"]]]]],[11,"get_exports","","",4,[[["self"]],["vec"]]],[11,"maybe_insert","","",4,[[["str"],["self"],["export"]],["option"]]],[11,"eq","wasmer_runtime::error","",21,[[["self"],["error"]],["bool"]]],[11,"eq","","",15,[[["compileerror"],["self"]],["bool"]]],[11,"eq","","",19,[[["callerror"],["self"]],["bool"]]],[11,"eq","wasmer_runtime::types","",64,[[["sigindex"],["self"]],["bool"]]],[11,"ne","","",64,[[["sigindex"],["self"]],["bool"]]],[11,"eq","","",59,[[["localtableindex"],["self"]],["bool"]]],[11,"ne","","",59,[[["localtableindex"],["self"]],["bool"]]],[11,"eq","","",5,[[["self"],["value"]],["bool"]]],[11,"ne","","",5,[[["self"],["value"]],["bool"]]],[11,"eq","","",61,[[["globalindex"],["self"]],["bool"]]],[11,"ne","","",61,[[["globalindex"],["self"]],["bool"]]],[11,"eq","","",58,[[["self"],["tableindex"]],["bool"]]],[11,"ne","","",58,[[["self"],["tableindex"]],["bool"]]],[11,"eq","wasmer_runtime::error","",17,[[["self"],["runtimeerror"]],["bool"]]],[11,"eq","","",18,[[["self"],["resolveerror"]],["bool"]]],[11,"eq","wasmer_runtime::types","",51,[[["self"],["funcsig"]],["bool"]]],[11,"ne","","",51,[[["self"],["funcsig"]],["bool"]]],[11,"eq","","",55,[[["self"],["memoryindex"]],["bool"]]],[11,"ne","","",55,[[["self"],["memoryindex"]],["bool"]]],[11,"eq","wasmer_runtime::cache","",66,[[["wasmhash"],["self"]],["bool"]]],[11,"ne","","",66,[[["wasmhash"],["self"]],["bool"]]],[11,"eq","wasmer_runtime::types","",11,[[["self"],["memorydescriptor"]],["bool"]]],[11,"ne","","",11,[[["self"],["memorydescriptor"]],["bool"]]],[11,"eq","","",63,[[["importedglobalindex"],["self"]],["bool"]]],[11,"ne","","",63,[[["importedglobalindex"],["self"]],["bool"]]],[11,"eq","wasmer_runtime::units","",27,[[["bytes"],["self"]],["bool"]]],[11,"ne","","",27,[[["bytes"],["self"]],["bool"]]],[11,"eq","wasmer_runtime::types","",13,[[["type"],["self"]],["bool"]]],[11,"eq","","",56,[[["self"],["localmemoryindex"]],["bool"]]],[11,"ne","","",56,[[["self"],["localmemoryindex"]],["bool"]]],[11,"eq","","",31,[[["self"],["elementtype"]],["bool"]]],[11,"eq","","",32,[[["self"],["initializer"]],["bool"]]],[11,"ne","","",32,[[["self"],["initializer"]],["bool"]]],[11,"eq","","",52,[[["self"],["funcindex"]],["bool"]]],[11,"ne","","",52,[[["self"],["funcindex"]],["bool"]]],[11,"eq","","",60,[[["self"],["importedtableindex"]],["bool"]]],[11,"ne","","",60,[[["self"],["importedtableindex"]],["bool"]]],[11,"eq","wasmer_runtime::error","",20,[[["self"],["creationerror"]],["bool"]]],[11,"eq","wasmer_runtime::types","",62,[[["self"],["localglobalindex"]],["bool"]]],[11,"ne","","",62,[[["self"],["localglobalindex"]],["bool"]]],[11,"eq","wasmer_runtime::error","",16,[[["linkerror"],["self"]],["bool"]]],[11,"eq","wasmer_runtime::types","",54,[[["self"],["importedfuncindex"]],["bool"]]],[11,"ne","","",54,[[["self"],["importedfuncindex"]],["bool"]]],[11,"eq","","",53,[[["localfuncindex"],["self"]],["bool"]]],[11,"ne","","",53,[[["localfuncindex"],["self"]],["bool"]]],[11,"eq","","",10,[[["self"],["globaldescriptor"]],["bool"]]],[11,"ne","","",10,[[["self"],["globaldescriptor"]],["bool"]]],[11,"eq","wasmer_runtime::units","",28,[[["pages"],["self"]],["bool"]]],[11,"ne","","",28,[[["pages"],["self"]],["bool"]]],[11,"eq","wasmer_runtime::types","",57,[[["self"],["importedmemoryindex"]],["bool"]]],[11,"ne","","",57,[[["self"],["importedmemoryindex"]],["bool"]]],[11,"eq","wasmer_runtime","",44,[[["self"],["wasmptr"]],["bool"]]],[11,"clone","","",46,[[["self"]],["module"]]],[11,"clone","wasmer_runtime::types","",64,[[["self"]],["sigindex"]]],[11,"clone","wasmer_runtime::wasm","",40,[[["self"]],["global"]]],[11,"clone","wasmer_runtime::types","",54,[[["self"]],["importedfuncindex"]]],[11,"clone","wasmer_runtime::error","",16,[[["self"]],["linkerror"]]],[11,"clone","wasmer_runtime::types","",61,[[["self"]],["globalindex"]]],[11,"clone","","",12,[[["self"]],["tabledescriptor"]]],[11,"clone","","",63,[[["self"]],["importedglobalindex"]]],[11,"clone","wasmer_runtime::units","",27,[[["self"]],["bytes"]]],[11,"clone","wasmer_runtime::types","",58,[[["self"]],["tableindex"]]],[11,"clone","","",32,[[["self"]],["initializer"]]],[11,"clone","","",52,[[["self"]],["funcindex"]]],[11,"clone","","",31,[[["self"]],["elementtype"]]],[11,"clone","","",55,[[["self"]],["memoryindex"]]],[11,"clone","","",10,[[["self"]],["globaldescriptor"]]],[11,"clone","","",53,[[["self"]],["localfuncindex"]]],[11,"clone","","",59,[[["self"]],["localtableindex"]]],[11,"clone","wasmer_runtime::error","",18,[[["self"]],["resolveerror"]]],[11,"clone","wasmer_runtime::cache","",66,[[["self"]],["wasmhash"]]],[11,"clone","wasmer_runtime::types","",62,[[["self"]],["localglobalindex"]]],[11,"clone","wasmer_runtime","",1,[[["self"]],["export"]]],[11,"clone","wasmer_runtime::types","",57,[[["self"]],["importedmemoryindex"]]],[11,"clone","","",56,[[["self"]],["localmemoryindex"]]],[11,"clone","","",5,[[["self"]],["value"]]],[11,"clone","","",11,[[["self"]],["memorydescriptor"]]],[11,"clone","","",13,[[["self"]],["type"]]],[11,"clone","wasmer_runtime::wasm","",47,[[["self"]],["table"]]],[11,"clone","wasmer_runtime::units","",28,[[["self"]],["pages"]]],[11,"clone","wasmer_runtime::error","",15,[[["self"]],["compileerror"]]],[11,"clone","wasmer_runtime::memory","",45,[[["self"]],["memory"]]],[11,"clone","wasmer_runtime::types","",33,[[["self"]],["globalinit"]]],[11,"clone","wasmer_runtime","",44,[[["self"]],["wasmptr"]]],[11,"clone","wasmer_runtime::types","",60,[[["self"]],["importedtableindex"]]],[11,"clone","","",51,[[["self"]],["funcsig"]]],[11,"clone","wasmer_runtime::error","",20,[[["self"]],["creationerror"]]],[11,"deref","wasmer_runtime::memory","",50,[[["self"]]]],[11,"deref","","",50,[[["self"]]]],[11,"to_export","","",45,[[["self"]],["export"]]],[11,"to_export","wasmer_runtime::wasm","",47,[[["self"]],["export"]]],[11,"to_export","wasmer_runtime","",48,[[["self"]],["export"]]],[11,"to_export","wasmer_runtime::wasm","",40,[[["self"]],["export"]]],[11,"to_export","wasmer_runtime","",1,[[["self"]],["export"]]],[11,"drop","","",6,[[["self"]]]],[11,"into","wasmer_runtime::error","",25,[[],["growerror"]]],[11,"into","","",23,[[],["growerror"]]],[11,"into","","",24,[[],["growerror"]]],[11,"sub","wasmer_runtime::units","",28,[[["t"]],["pages"]]],[11,"sub","","",27,[[["t"]],["bytes"]]],[11,"partial_cmp","wasmer_runtime::types","",57,[[["self"],["importedmemoryindex"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",57,[[["self"],["importedmemoryindex"]],["bool"]]],[11,"le","","",57,[[["self"],["importedmemoryindex"]],["bool"]]],[11,"gt","","",57,[[["self"],["importedmemoryindex"]],["bool"]]],[11,"ge","","",57,[[["self"],["importedmemoryindex"]],["bool"]]],[11,"partial_cmp","","",59,[[["localtableindex"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",59,[[["localtableindex"],["self"]],["bool"]]],[11,"le","","",59,[[["localtableindex"],["self"]],["bool"]]],[11,"gt","","",59,[[["localtableindex"],["self"]],["bool"]]],[11,"ge","","",59,[[["localtableindex"],["self"]],["bool"]]],[11,"partial_cmp","wasmer_runtime::units","",28,[[["pages"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",28,[[["pages"],["self"]],["bool"]]],[11,"le","","",28,[[["pages"],["self"]],["bool"]]],[11,"gt","","",28,[[["pages"],["self"]],["bool"]]],[11,"ge","","",28,[[["pages"],["self"]],["bool"]]],[11,"partial_cmp","wasmer_runtime::types","",55,[[["self"],["memoryindex"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",55,[[["self"],["memoryindex"]],["bool"]]],[11,"le","","",55,[[["self"],["memoryindex"]],["bool"]]],[11,"gt","","",55,[[["self"],["memoryindex"]],["bool"]]],[11,"ge","","",55,[[["self"],["memoryindex"]],["bool"]]],[11,"partial_cmp","wasmer_runtime::units","",27,[[["bytes"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",27,[[["bytes"],["self"]],["bool"]]],[11,"le","","",27,[[["bytes"],["self"]],["bool"]]],[11,"gt","","",27,[[["bytes"],["self"]],["bool"]]],[11,"ge","","",27,[[["bytes"],["self"]],["bool"]]],[11,"partial_cmp","wasmer_runtime::types","",58,[[["self"],["tableindex"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",58,[[["self"],["tableindex"]],["bool"]]],[11,"le","","",58,[[["self"],["tableindex"]],["bool"]]],[11,"gt","","",58,[[["self"],["tableindex"]],["bool"]]],[11,"ge","","",58,[[["self"],["tableindex"]],["bool"]]],[11,"partial_cmp","","",56,[[["self"],["localmemoryindex"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",56,[[["self"],["localmemoryindex"]],["bool"]]],[11,"le","","",56,[[["self"],["localmemoryindex"]],["bool"]]],[11,"gt","","",56,[[["self"],["localmemoryindex"]],["bool"]]],[11,"ge","","",56,[[["self"],["localmemoryindex"]],["bool"]]],[11,"partial_cmp","","",54,[[["self"],["importedfuncindex"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",54,[[["self"],["importedfuncindex"]],["bool"]]],[11,"le","","",54,[[["self"],["importedfuncindex"]],["bool"]]],[11,"gt","","",54,[[["self"],["importedfuncindex"]],["bool"]]],[11,"ge","","",54,[[["self"],["importedfuncindex"]],["bool"]]],[11,"partial_cmp","","",53,[[["localfuncindex"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",53,[[["localfuncindex"],["self"]],["bool"]]],[11,"le","","",53,[[["localfuncindex"],["self"]],["bool"]]],[11,"gt","","",53,[[["localfuncindex"],["self"]],["bool"]]],[11,"ge","","",53,[[["localfuncindex"],["self"]],["bool"]]],[11,"partial_cmp","","",62,[[["self"],["localglobalindex"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",62,[[["self"],["localglobalindex"]],["bool"]]],[11,"le","","",62,[[["self"],["localglobalindex"]],["bool"]]],[11,"gt","","",62,[[["self"],["localglobalindex"]],["bool"]]],[11,"ge","","",62,[[["self"],["localglobalindex"]],["bool"]]],[11,"partial_cmp","","",61,[[["globalindex"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",61,[[["globalindex"],["self"]],["bool"]]],[11,"le","","",61,[[["globalindex"],["self"]],["bool"]]],[11,"gt","","",61,[[["globalindex"],["self"]],["bool"]]],[11,"ge","","",61,[[["globalindex"],["self"]],["bool"]]],[11,"partial_cmp","","",60,[[["self"],["importedtableindex"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",60,[[["self"],["importedtableindex"]],["bool"]]],[11,"le","","",60,[[["self"],["importedtableindex"]],["bool"]]],[11,"gt","","",60,[[["self"],["importedtableindex"]],["bool"]]],[11,"ge","","",60,[[["self"],["importedtableindex"]],["bool"]]],[11,"partial_cmp","","",63,[[["importedglobalindex"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",63,[[["importedglobalindex"],["self"]],["bool"]]],[11,"le","","",63,[[["importedglobalindex"],["self"]],["bool"]]],[11,"gt","","",63,[[["importedglobalindex"],["self"]],["bool"]]],[11,"ge","","",63,[[["importedglobalindex"],["self"]],["bool"]]],[11,"partial_cmp","","",52,[[["self"],["funcindex"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",52,[[["self"],["funcindex"]],["bool"]]],[11,"le","","",52,[[["self"],["funcindex"]],["bool"]]],[11,"gt","","",52,[[["self"],["funcindex"]],["bool"]]],[11,"ge","","",52,[[["self"],["funcindex"]],["bool"]]],[11,"from","wasmer_runtime::error","",15,[[["loaderror"]],["compileerror"]]],[11,"from","","",21,[[["vec",["linkerror"]],["linkerror"]],["error"]]],[11,"from","","",19,[[["runtimeerror"]],["callerror"]]],[11,"from","wasmer_runtime::types","",5,[[["u128"]],["value"]]],[11,"from","wasmer_runtime::units","",27,[[["pages"]],["bytes"]]],[11,"from","wasmer_runtime::error","",24,[[["error"]],["memorycreationerror"]]],[11,"from","","",21,[[["resolveerror"]],["error"]]],[11,"from","wasmer_runtime::types","",5,[[["f32"]],["value"]]],[11,"from","","",5,[[["i64"]],["value"]]],[11,"from","wasmer_runtime::units","",28,[[["bytes"]],["pages"]]],[11,"from","wasmer_runtime::error","",21,[[["compileerror"]],["error"]]],[11,"from","","",21,[[["callerror"]],["error"]]],[11,"from","wasmer_runtime::types","",5,[[["i32"]],["value"]]],[11,"from","wasmer_runtime::error","",21,[[["runtimeerror"]],["error"]]],[11,"from","","",19,[[["resolveerror"]],["callerror"]]],[11,"from","","",14,[[["error"]],["error"]]],[11,"from","wasmer_runtime::types","",5,[[["f64"]],["value"]]],[11,"from","wasmer_runtime::error","",21,[[["creationerror"]],["error"]]],[11,"from","","",26,[[["binaryreadererror"]],["parseerror"]]],[11,"serialize","wasmer_runtime::types","",56,[[["self"],["__s"]],["result"]]],[11,"serialize","","",12,[[["self"],["__s"]],["result"]]],[11,"serialize","","",10,[[["self"],["__s"]],["result"]]],[11,"serialize","","",62,[[["self"],["__s"]],["result"]]],[11,"serialize","","",51,[[["self"],["__s"]],["result"]]],[11,"serialize","","",60,[[["self"],["__s"]],["result"]]],[11,"serialize","","",31,[[["self"],["__s"]],["result"]]],[11,"serialize","","",55,[[["self"],["__s"]],["result"]]],[11,"serialize","","",33,[[["self"],["__s"]],["result"]]],[11,"serialize","","",11,[[["self"],["__s"]],["result"]]],[11,"serialize","","",52,[[["self"],["__s"]],["result"]]],[11,"serialize","","",59,[[["self"],["__s"]],["result"]]],[11,"serialize","","",61,[[["self"],["__s"]],["result"]]],[11,"serialize","wasmer_runtime::units","",28,[[["self"],["__s"]],["result"]]],[11,"serialize","wasmer_runtime::types","",5,[[["self"],["__s"]],["result"]]],[11,"serialize","wasmer_runtime::units","",27,[[["self"],["__s"]],["result"]]],[11,"serialize","wasmer_runtime::types","",58,[[["self"],["__s"]],["result"]]],[11,"serialize","","",64,[[["self"],["__s"]],["result"]]],[11,"serialize","","",57,[[["self"],["__s"]],["result"]]],[11,"serialize","","",53,[[["self"],["__s"]],["result"]]],[11,"serialize","","",32,[[["self"],["__s"]],["result"]]],[11,"serialize","","",63,[[["self"],["__s"]],["result"]]],[11,"serialize","","",54,[[["self"],["__s"]],["result"]]],[11,"serialize","","",13,[[["self"],["__s"]],["result"]]],[11,"serialize","wasmer_runtime::cache","",66,[[["self"],["__s"]],["result"]]],[11,"from","wasmer_runtime::types","",55,[[["converter",["memoryindex"]],["memoryindex"]],["memoryindex"]]],[11,"from","","",52,[[["funcindex"],["converter",["funcindex"]]],["funcindex"]]],[11,"from","","",61,[[["converter",["globalindex"]],["globalindex"]],["globalindex"]]],[11,"from","","",58,[[["converter",["tableindex"]],["tableindex"]],["tableindex"]]],[11,"from","","",51,[[["converter",["signature"]],["signature"]],["funcsig"]]],[11,"from","","",64,[[["signatureindex"],["converter",["signatureindex"]]],["sigindex"]]],[11,"from","","",13,[[["type"],["converter",["type"]]],["type"]]],[11,"load","wasmer_runtime::cache","",37,[[["wasmhash"],["self"]],[["module"],["cacheerror"],["result",["module","cacheerror"]]]]],[11,"load_with_backend","","",37,[[["wasmhash"],["self"],["backend"]],[["module"],["cacheerror"],["result",["module","cacheerror"]]]]],[11,"store","","",37,[[["module"],["self"],["wasmhash"]],[["result",["cacheerror"]],["cacheerror"]]]],[11,"clone","wasmer_runtime","",9,[[["self"]],["backend"]]],[11,"default","","",9,[[],["self"]]],[11,"eq","","",9,[[["self"],["backend"]],["bool"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"from_str","","",9,[[["str"]],[["result",["backend","string"]],["string"],["backend"]]]],[11,"serialize","","",9,[[["self"],["__s"]],["result"]]],[11,"deserialize","","",9,[[["__d"]],["result"]]],[11,"new","","Create a new empty `MiddlewareChain`.",38,[[],["middlewarechain"]]],[11,"push","","Push a new `FunctionMiddleware` to this `MiddlewareChain`.",38,[[["self"],["m"]]]],[11,"new","","Create a new `StreamingCompiler` with the given…",39,[[["cgen"]],["streamingcompiler"]]],[11,"new","wasmer_runtime::wasm","Create a new `Global` value.",40,[[["value"]],["global"]]],[11,"new_mutable","","Create a new, mutable `Global` value.",40,[[["value"]],["global"]]],[11,"descriptor","","Get the [`GlobalDescriptor`] generated for this global.",40,[[["self"]],["globaldescriptor"]]],[11,"set","","Set the value help by this global.",40,[[["self"],["value"]]]],[11,"get","","Get the value held by this global.",40,[[["self"]],["value"]]],[11,"new","wasmer_runtime","Create a new `ImportObject`.",2,[[],["importobject"]]],[11,"new_with_data","","Create a new `ImportObject` which generates data from the…",2,[[["f"]],["importobject"]]],[11,"register","","Register anything that implements `LikeNamespace` as a…",2,[[["self"],["s"],["n"]],[["box",["likenamespace"]],["option",["box"]]]]],[11,"with_namespace","","Apply a function on the namespace if it exists If your…",2,[[["str"],["func"],["self"]],["option"]]],[11,"maybe_with_namespace","","The same as `with_namespace` but takes a function that may…",2,[[["str"],["func"],["self"]],["option"]]],[11,"clone_ref","","Create a clone ref of this namespace.",2,[[["self"]],["importobject"]]],[11,"call","","Call an exported WebAssembly function safely.",41,[[["self"]],[["callerror"],["result",["vec","callerror"]],["vec",["value"]]]]],[11,"signature","","Gets the signature of this `Dynfunc`.",41,[[["self"]],["funcsig"]]],[11,"raw","","Gets a const pointer to the function represent by this…",41,[[["self"]]]],[11,"load","","Load an `Instance` using the given loader.",4,[[["self"],["t"]],["result"]]],[11,"func","","Through generic magic and the awe-inspiring power of…",4,[[["str"],["self"]],[["func",["wasm"]],["result",["func","resolveerror"]],["resolveerror"]]]],[11,"resolve_func","","Resolve a function by name.",4,[[["str"],["self"]],[["resolveerror"],["usize"],["result",["usize","resolveerror"]]]]],[11,"dyn_func","","This returns the representation of a function that can be…",4,[[["str"],["self"]],[["resolveerror"],["dynfunc"],["result",["dynfunc","resolveerror"]]]]],[11,"call","","Call an exported WebAssembly function given the export…",4,[[["str"],["self"]],[["callerror"],["result",["vec","callerror"]],["vec",["value"]]]]],[11,"context","","Returns an immutable reference to the [`Ctx`] used by this…",4,[[["self"]],["ctx"]]],[11,"context_mut","","Returns a mutable reference to the [`Ctx`] used by this…",4,[[["self"]],["ctx"]]],[11,"exports","","Returns an iterator over all of the items exported from…",4,[[["self"]],["exportiter"]]],[11,"module","","The module used to instantiate this Instance.",4,[[["self"]],["module"]]],[11,"get_internal","","Get the value of an internal field",4,[[["internalfield"],["self"]],["u64"]]],[11,"set_internal","","Set the value of an internal field.",4,[[["self"],["internalfield"],["u64"]]]],[11,"new","","Create a new `WasmPtr` at the given offset.",44,[[["u32"]],["wasmptr"]]],[11,"offset","","Get the offset for this `WasmPtr`.",44,[[],["u32"]]],[11,"deref","","Dereference this `WasmPtr`.",44,[[["memory"]],[["option",["cell"]],["cell"]]]],[11,"deref_mut","","Mutable dereference this `WasmPtr`.",44,[[["memory"]],[["cell"],["option",["cell"]]]]],[11,"deref","","Dereference this `WasmPtr`.",44,[[["memory"],["u32"]],["option"]]],[11,"deref_mut","","Mutable dereference this `WasmPtr`.",44,[[["memory"],["u32"]],["option"]]],[11,"get_utf8_string","","Get a UTF-8 string representation of this `WasmPtr` with…",44,[[["memory"],["u32"]],[["option",["str"]],["str"]]]],[11,"get_utf8_string_with_nul","","Get a UTF-8 string representation of this `WasmPtr`, where…",44,[[["memory"]],[["option",["str"]],["str"]]]],[11,"new","wasmer_runtime::memory","Create a new `Memory` from a [`MemoryDescriptor`]",45,[[["memorydescriptor"]],[["result",["memory","creationerror"]],["memory"],["creationerror"]]]],[11,"descriptor","","Return the [`MemoryDescriptor`] that this memory was…",45,[[["self"]],["memorydescriptor"]]],[11,"grow","","Grow this memory by the specified number of pages.",45,[[["pages"],["self"]],[["pages"],["growerror"],["result",["pages","growerror"]]]]],[11,"size","","The size, in wasm pages, of this memory.",45,[[["self"]],["pages"]]],[11,"view","","Return a \"view\" of the currently accessible memory. By…",45,[[["self"]],[["nonatomically"],["memoryview",["nonatomically"]]]]],[11,"instantiate","wasmer_runtime","Instantiate a WebAssembly module with the provided…",46,[[["importobject"],["self"]],[["error"],["result",["instance","error"]],["instance"]]]],[11,"cache","","Create a cache artifact from this module.",46,[[["self"]],[["error"],["result",["artifact","error"]],["artifact"]]]],[11,"info","","Get the module data for this module.",46,[[["self"]],["moduleinfo"]]],[11,"new","wasmer_runtime::wasm","Create a new `Table` from a [`TableDescriptor`]",47,[[["tabledescriptor"]],[["result",["table","creationerror"]],["table"],["creationerror"]]]],[11,"descriptor","","Get the `TableDescriptor` used to create this `Table`.",47,[[["self"]],["tabledescriptor"]]],[11,"set","","Set the element at index.",47,[[["u32"],["self"],["element"]],["result"]]],[11,"size","","The current size of this table.",47,[[["self"]],["u32"]]],[11,"grow","","Grow this table by `delta`.",47,[[["u32"],["self"]],[["u32"],["growerror"],["result",["u32","growerror"]]]]],[11,"vm_local_table","","Get a mutable pointer to underlying table storage.",47,[[["self"]]]],[11,"ty","wasmer_runtime::types","The `Type` of this `Value`.",5,[[["self"]],["type"]]],[11,"to_u128","","Convert this `Value` to a u128 binary representation.",5,[[["self"]],["u128"]]],[11,"memory","wasmer_runtime","This exposes the specified memory of the WebAssembly…",6,[[["u32"],["self"]],["memory"]]],[11,"memory_and_data_mut","","Get access to [`Memory`] and mutable access to the user…",6,[[["self"],["u32"]]]],[11,"borrow_symbol_map","","Gives access to the emscripten symbol map, used for…",6,[[["self"]],["option"]]],[11,"dynamic_sigindice_count","","Returns the number of dynamic sigindices.",6,[[["self"]],["usize"]]],[11,"get_internal","","Returns the value of the specified internal field.",6,[[["internalfield"],["self"]],["u64"]]],[11,"set_internal","","Writes the value to the specified internal field.",6,[[["self"],["internalfield"],["u64"]]]],[11,"call_with_table_index","","Calls a host or Wasm function at the given table index",6,[[["tableindex"],["self"]],[["callerror"],["result",["vec","callerror"]],["vec",["value"]]]]],[11,"new","","Creates a new `Func`.",48,[[["f"]],[["func",["host"]],["host"]]]],[11,"params","","Returns the types of the function inputs.",48,[[["self"]]]],[11,"returns","","Returns the types of the function outputs.",48,[[["self"]]]],[11,"get_vm_func","","Get the underlying func pointer.",48,[[["self"]],[["func"],["nonnull",["func"]]]]],[11,"call","","Call the typed func and return results.",48,[[["self"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",48,[[["a"],["self"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",48,[[["a"],["self"],["b"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",48,[[["a"],["c"],["self"],["b"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",48,[[["a"],["c"],["d"],["self"],["b"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",48,[[["a"],["e"],["c"],["d"],["self"],["b"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",48,[[["a"],["f"],["e"],["c"],["d"],["self"],["b"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",48,[[["g"],["f"],["a"],["e"],["c"],["d"],["self"],["b"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",48,[[["g"],["h"],["f"],["a"],["e"],["c"],["d"],["self"],["b"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",48,[[["g"],["h"],["i"],["f"],["a"],["e"],["c"],["d"],["self"],["b"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",48,[[["g"],["h"],["i"],["f"],["a"],["j"],["e"],["c"],["d"],["self"],["b"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",48,[[["g"],["h"],["i"],["f"],["k"],["a"],["j"],["e"],["c"],["d"],["self"],["b"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",48,[[["g"],["h"],["i"],["f"],["k"],["a"],["j"],["l"],["e"],["c"],["d"],["self"],["b"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",48,[[["g"],["h"],["i"],["m"],["f"],["k"],["a"],["j"],["l"],["e"],["c"],["d"],["self"],["b"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",48,[[["m"],["k"],["a"],["e"],["c"],["i"],["self"],["g"],["f"],["l"],["j"],["n"],["d"],["b"],["h"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",48,[[["m"],["k"],["a"],["o"],["e"],["c"],["i"],["self"],["g"],["f"],["l"],["j"],["n"],["d"],["b"],["h"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",48,[[["m"],["k"],["a"],["o"],["e"],["c"],["i"],["self"],["g"],["f"],["l"],["j"],["n"],["p"],["d"],["b"],["h"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",48,[[["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["self"],["g"],["f"],["l"],["j"],["n"],["p"],["d"],["b"],["h"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",48,[[["r"],["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["self"],["g"],["f"],["l"],["j"],["n"],["p"],["d"],["b"],["h"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",48,[[["r"],["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["self"],["g"],["s"],["f"],["l"],["j"],["n"],["p"],["d"],["b"],["h"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",48,[[["r"],["t"],["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["self"],["g"],["s"],["f"],["l"],["j"],["n"],["p"],["d"],["b"],["h"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",48,[[["r"],["t"],["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["self"],["g"],["s"],["u"],["f"],["l"],["j"],["n"],["p"],["d"],["b"],["h"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",48,[[["r"],["t"],["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["self"],["g"],["s"],["u"],["f"],["l"],["j"],["v"],["n"],["p"],["d"],["b"],["h"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",48,[[["r"],["t"],["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["self"],["g"],["s"],["u"],["w"],["f"],["l"],["j"],["v"],["n"],["p"],["d"],["b"],["h"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",48,[[["r"],["t"],["x"],["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["self"],["g"],["s"],["u"],["w"],["f"],["l"],["j"],["v"],["n"],["p"],["d"],["b"],["h"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",48,[[["r"],["t"],["x"],["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["self"],["g"],["s"],["u"],["w"],["y"],["f"],["l"],["j"],["v"],["n"],["p"],["d"],["b"],["h"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",48,[[["r"],["t"],["x"],["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["self"],["g"],["s"],["u"],["w"],["y"],["f"],["l"],["j"],["v"],["z"],["n"],["p"],["d"],["b"],["h"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"atomically","wasmer_runtime::memory","Get atomic access to a memory view.",50,[[["self"]],[["atomically"],["memoryview",["atomically"]]]]],[11,"new","wasmer_runtime::types","Creates a new function signatures with the given parameter…",51,[[["params"],["returns"]],["funcsig"]]],[11,"params","","Parameter types.",51,[[["self"]]]],[11,"returns","","Return types.",51,[[["self"]]]],[11,"check_param_value_types","","Returns true if parameter types match the function…",51,[[["self"]],["bool"]]],[11,"new","","Create a new memory descriptor with the given min/max…",11,[[["pages"],["option",["pages"]],["bool"]],[["string"],["result",["memorydescriptor","string"]],["memorydescriptor"]]]],[11,"memory_type","","Returns the `MemoryType` for this descriptor.",11,[[["self"]],["memorytype"]]],[11,"checked_add","wasmer_runtime::units","Checked add of Pages to Pages.",28,[[["pages"]],[["pages"],["result",["pages","pageerror"]],["pageerror"]]]],[11,"bytes","","Calculate number of bytes from pages.",28,[[],["bytes"]]],[11,"local_or_import","wasmer_runtime::types","Converts self into `LocalOrImport`.",52,[[["moduleinfo"]],[["localorimport",["funcindex"]],["funcindex"]]]],[11,"convert_up","","Convert up.",53,[[["moduleinfo"]],["funcindex"]]],[11,"convert_up","","Convert up.",54,[[["moduleinfo"]],["funcindex"]]],[11,"local_or_import","","Converts self into `LocalOrImport`.",55,[[["moduleinfo"]],[["localorimport",["memoryindex"]],["memoryindex"]]]],[11,"convert_up","","Convert up.",56,[[["moduleinfo"]],["memoryindex"]]],[11,"convert_up","","Convert up.",57,[[["moduleinfo"]],["memoryindex"]]],[11,"local_or_import","","Converts self into `LocalOrImport`.",58,[[["moduleinfo"]],[["tableindex"],["localorimport",["tableindex"]]]]],[11,"convert_up","","Convert up.",59,[[["moduleinfo"]],["tableindex"]]],[11,"convert_up","","Convert up.",60,[[["moduleinfo"]],["tableindex"]]],[11,"local_or_import","","Converts self into `LocalOrImport`.",61,[[["moduleinfo"]],[["globalindex"],["localorimport",["globalindex"]]]]],[11,"convert_up","","Convert up.",62,[[["moduleinfo"]],["globalindex"]]],[11,"convert_up","","Convert up.",63,[[["moduleinfo"]],["globalindex"]]],[11,"local","","Returns `Some` if self is local, `None` if self is an…",35,[[],["option"]]],[11,"import","","Returns `Some` if self is an import, `None` if self is…",35,[[],["option"]]],[11,"deserialize","wasmer_runtime::cache","Deserializes an `Artifact` from the given byte slice.",65,[[],[["error"],["result",["artifact","error"]],["artifact"]]]],[11,"info","","A reference to the `Artifact`'s stored `ModuleInfo`",65,[[["self"]],["moduleinfo"]]],[11,"serialize","","Serializes the `Artifact` into a vector of bytes",65,[[["self"]],[["vec",["u8"]],["result",["vec","error"]],["error"]]]],[11,"generate","","Hash a wasm module.",66,[[],["wasmhash"]]],[11,"encode","","Create the hexadecimal representation of the stored hash.",66,[[],["string"]]],[11,"decode","","Create hash from hexadecimal representation",66,[[["str"]],[["result",["wasmhash","error"]],["error"],["wasmhash"]]]]],"p":[[3,"Features"],[4,"Export"],[3,"ImportObject"],[8,"LikeNamespace"],[3,"Instance"],[4,"Value"],[3,"Ctx"],[8,"Compiler"],[3,"CompilerConfig"],[4,"Backend"],[3,"GlobalDescriptor"],[3,"MemoryDescriptor"],[3,"TableDescriptor"],[4,"Type"],[4,"CacheError"],[4,"CompileError"],[4,"LinkError"],[4,"RuntimeError"],[4,"ResolveError"],[4,"CallError"],[4,"CreationError"],[4,"Error"],[4,"GrowError"],[4,"PageError"],[4,"MemoryCreationError"],[4,"MemoryProtectionError"],[4,"ParseError"],[3,"Bytes"],[3,"Pages"],[8,"NativeWasmType"],[8,"WasmExternType"],[4,"ElementType"],[4,"Initializer"],[3,"GlobalInit"],[8,"LocalImport"],[4,"LocalOrImport"],[8,"Cache"],[3,"FileSystemCache"],[3,"MiddlewareChain"],[3,"StreamingCompiler"],[3,"Global"],[3,"DynFunc"],[3,"Array"],[3,"Item"],[3,"WasmPtr"],[3,"Memory"],[3,"Module"],[3,"Table"],[3,"Func"],[3,"Atomically"],[3,"MemoryView"],[3,"FuncSig"],[3,"FuncIndex"],[3,"LocalFuncIndex"],[3,"ImportedFuncIndex"],[3,"MemoryIndex"],[3,"LocalMemoryIndex"],[3,"ImportedMemoryIndex"],[3,"TableIndex"],[3,"LocalTableIndex"],[3,"ImportedTableIndex"],[3,"GlobalIndex"],[3,"LocalGlobalIndex"],[3,"ImportedGlobalIndex"],[3,"SigIndex"],[3,"Artifact"],[3,"WasmHash"]]};
searchIndex["wasmer_runtime_core"] = {"doc":"Wasmer Runtime Core Library","i":[[3,"DynFunc","wasmer_runtime_core","A representation of an exported WebAssembly function.",null,null],[3,"Instance","","An instantiated WebAssembly module.",null,null],[12,"module","","Reference to the module used to instantiate this instance.",0,null],[3,"Module","","A compiled WebAssembly module.",null,null],[3,"Func","","Represents a function that can be used by WebAssembly.",null,null],[5,"compile_with","","Compile a [`Module`] using the provided compiler from…",null,[[["compiler"]],[["compileresult",["module"]],["module"]]]],[5,"compile_with_config","","The same as `compile_with` but changes the compiler…",null,[[["compiler"],["compilerconfig"]],[["compileresult",["module"]],["module"]]]],[5,"validate","","Perform validation as defined by the WebAssembly…",null,[[],["bool"]]],[5,"validate_and_report_errors","","The same as `validate` but with an Error message on failure",null,[[],[["result",["string"]],["string"]]]],[5,"validate_and_report_errors_with_features","","The same as `validate_and_report_errors` but with a…",null,[[["features"]],[["result",["string"]],["string"]]]],[5,"load_cache_with","","Creates a new module from the given cache `Artifact` for…",null,[[["artifact"],["compiler"]],[["cacheerror"],["result",["module","cacheerror"]],["module"]]]],[0,"cache","","The cache module provides the common data structures used…",null,null],[3,"WasmHash","wasmer_runtime_core::cache","The hash of a wasm module.",null,null],[3,"Artifact","","Artifact are produced by caching, are…",null,null],[4,"InvalidFileType","","Indicates the invalid type of invalid cache file",null,null],[13,"InvalidSize","","Given cache header slice does not match the expected size…",1,null],[13,"InvalidMagic","","Given cache header slice does not contain the expected…",1,null],[4,"Error","","Kinds of caching errors",null,null],[13,"IoError","","An IO error while reading/writing a cache binary.",2,null],[13,"DeserializeError","","An error deserializing bytes into a cache data structure.",2,null],[13,"SerializeError","","An error serializing bytes from a cache data structure.",2,null],[13,"Unknown","","An undefined caching error with a message.",2,null],[13,"InvalidFile","","An invalid cache binary given.",2,null],[13,"InvalidatedCache","","The cached binary has been invalidated.",2,null],[13,"UnsupportedBackend","","The current backend does not support caching.",2,null],[17,"WASMER_VERSION_HASH","","A unique ID generated from the version of Wasmer for use…",null,null],[11,"generate","","Hash a wasm module.",3,[[],["self"]]],[11,"encode","","Create the hexadecimal representation of the stored hash.",3,[[],["string"]]],[11,"decode","","Create hash from hexadecimal representation",3,[[["str"]],[["result",["error"]],["error"]]]],[11,"deserialize","","Deserializes an `Artifact` from the given byte slice.",4,[[],[["result",["error"]],["error"]]]],[11,"info","","A reference to the `Artifact`'s stored `ModuleInfo`",4,[[["self"]],["moduleinfo"]]],[11,"serialize","","Serializes the `Artifact` into a vector of bytes",4,[[["self"]],[["error"],["result",["vec","error"]],["vec",["u8"]]]]],[0,"codegen","wasmer_runtime_core","The codegen module provides common functions and data…",null,null],[3,"BreakpointInfo","wasmer_runtime_core::codegen","Information for a breakpoint",null,null],[12,"fault","","Fault.",5,null],[3,"StreamingCompiler","","A streaming compiler which is designed to generated code…",null,null],[3,"SimpleStreamingCompilerGen","","A simple generator for a `StreamingCompiler`.",null,null],[3,"EventSink","","A sink for parse events.",null,null],[3,"MiddlewareChain","","A container for a chain of middlewares.",null,null],[4,"Event","","An event generated during parsing of a wasm binary",null,null],[13,"Internal","","An internal event created by the parser used to provide…",6,null],[13,"Wasm","","An event generated by parsing a wasm operator",6,null],[13,"WasmOwned","","An event generated by parsing a wasm operator that…",6,null],[4,"InternalEvent","","Kinds of `InternalEvent`s created during parsing.",null,null],[13,"FunctionBegin","","A function parse is about to begin.",7,null],[13,"FunctionEnd","","A function parsing has just completed.",7,null],[13,"Breakpoint","","A breakpoint emitted during parsing.",7,null],[13,"SetInternal","","Indicates setting an internal field.",7,null],[13,"GetInternal","","Indicates getting an internal field.",7,null],[5,"validating_parser_config","","Create a new `ValidatingParserConfig` with the given…",null,[[["features"]],["validatingparserconfig"]]],[6,"BreakpointHandler","","A type that defines a function pointer, which is called…",null,null],[6,"BreakpointMap","","Maps instruction pointers to their breakpoint handlers.",null,null],[8,"ModuleCodeGenerator","","A trait that represents the functions needed to be…",null,null],[10,"new","","Creates a new module code generator.",8,[[],["self"]]],[10,"new_with_target","","Creates a new module code generator for specified target.",8,[[["string"],["option",["string"]]],["self"]]],[10,"backend_id","","Returns the backend id associated with this MCG.",8,[[],["str"]]],[11,"requires_pre_validation","","It sets if the current compiler requires validation before…",8,[[],["bool"]]],[11,"feed_compiler_config","","Feeds the compiler config.",8,[[["self"],["compilerconfig"]],["result"]]],[10,"feed_import_function","","Adds an import function.",8,[[["self"]],["result"]]],[10,"feed_signatures","","Sets the signatures.",8,[[["map",["sigindex","funcsig"]],["self"],["sigindex"],["funcsig"]],["result"]]],[10,"feed_function_signatures","","Sets function signatures.",8,[[["funcindex"],["map",["funcindex","sigindex"]],["self"],["sigindex"]],["result"]]],[10,"check_precondition","","Checks the precondition for a module.",8,[[["self"],["moduleinfo"]],["result"]]],[10,"next_function","","Creates a new function and returns the function-scope code…",8,[[["rwlock",["moduleinfo"]],["self"],["arc",["rwlock"]]],[["fcg"],["result"]]]],[10,"finalize","","Finalizes this module.",8,[[["moduleinfo"]],["result"]]],[10,"from_cache","","Creates a module from cache.",8,[[["artifact"],["token"]],[["moduleinner"],["result",["moduleinner","cacheerror"]],["cacheerror"]]]],[8,"FunctionMiddleware","","A trait that represents the signature required to…",null,null],[16,"Error","","The error type for this middleware's functions.",9,null],[10,"feed_event","","Processes the given event, module info and sink.",9,[[["moduleinfo"],["eventsink"],["self"],["event"]],["result"]]],[8,"FunctionCodeGenerator","","The function-scope code generator trait.",null,null],[10,"feed_return","","Sets the return type.",10,[[["self"],["wptype"]],["result"]]],[10,"feed_param","","Adds a parameter to the function.",10,[[["self"],["wptype"]],["result"]]],[10,"feed_local","","Adds `n` locals to the function.",10,[[["self"],["wptype"],["usize"]],["result"]]],[10,"begin_body","","Called before the first call to `feed_opcode`.",10,[[["self"],["moduleinfo"]],["result"]]],[10,"feed_event","","Called for each operator.",10,[[["self"],["moduleinfo"],["event"]],["result"]]],[10,"finalize","","Finalizes the function.",10,[[["self"]],["result"]]],[11,"new","","Create a new `StreamingCompiler`.",11,[[],["streamingcompiler"]]],[11,"new","","Create a new `StreamingCompiler` with the given…",12,[[["cgen"]],["self"]]],[11,"push","","Push a new `Event` to this sink.",13,[[["self"],["event"]]]],[11,"new","","Create a new empty `MiddlewareChain`.",14,[[],["middlewarechain"]]],[11,"push","","Push a new `FunctionMiddleware` to this `MiddlewareChain`.",14,[[["self"],["functionmiddleware"]]]],[0,"error","wasmer_runtime_core","The error module contains the data structures and helper…",null,null],[4,"CompileError","wasmer_runtime_core::error","This is returned when the chosen compiler is unable to…",null,null],[13,"ValidationError","","A validation error containing an error message.",15,null],[12,"msg","wasmer_runtime_core::error::CompileError","An error message.",15,null],[13,"InternalError","wasmer_runtime_core::error","A internal error containing an error message.",15,null],[12,"msg","wasmer_runtime_core::error::CompileError","An error message.",15,null],[4,"LinkError","wasmer_runtime_core::error","This is returned when the runtime is unable to correctly…",null,null],[13,"IncorrectImportType","","The type of the provided import does not match the…",16,null],[12,"namespace","wasmer_runtime_core::error::LinkError","Namespace.",16,null],[12,"name","","Name.",16,null],[12,"expected","","Expected.",16,null],[12,"found","","Found.",16,null],[13,"IncorrectImportSignature","wasmer_runtime_core::error","The signature of the provided import does not match the…",16,null],[12,"namespace","wasmer_runtime_core::error::LinkError","Namespace.",16,null],[12,"name","","Name.",16,null],[12,"expected","","Expected.",16,null],[12,"found","","Found.",16,null],[13,"ImportNotFound","wasmer_runtime_core::error","An expected import was not provided.",16,null],[12,"namespace","wasmer_runtime_core::error::LinkError","Namespace.",16,null],[12,"name","","Name.",16,null],[13,"IncorrectMemoryDescriptor","wasmer_runtime_core::error","The memory descriptor provided does not match the expected…",16,null],[12,"namespace","wasmer_runtime_core::error::LinkError","Namespace.",16,null],[12,"name","","Name.",16,null],[12,"expected","","Expected.",16,null],[12,"found","","Found.",16,null],[13,"IncorrectTableDescriptor","wasmer_runtime_core::error","The table descriptor provided does not match the expected…",16,null],[12,"namespace","wasmer_runtime_core::error::LinkError","Namespace.",16,null],[12,"name","","Name.",16,null],[12,"expected","","Expected.",16,null],[12,"found","","Found.",16,null],[13,"IncorrectGlobalDescriptor","wasmer_runtime_core::error","The global descriptor provided does not match the expected…",16,null],[12,"namespace","wasmer_runtime_core::error::LinkError","Namespace.",16,null],[12,"name","","Name.",16,null],[12,"expected","","Expected.",16,null],[12,"found","","Found.",16,null],[13,"Generic","wasmer_runtime_core::error","A generic error with a message.",16,null],[12,"message","wasmer_runtime_core::error::LinkError","Error message.",16,null],[4,"RuntimeError","wasmer_runtime_core::error","This is the error type returned when calling a WebAssembly…",null,null],[13,"Trap","","Trap.",17,null],[12,"msg","wasmer_runtime_core::error::RuntimeError","Trap message.",17,null],[13,"Error","wasmer_runtime_core::error","Error.",17,null],[12,"data","wasmer_runtime_core::error::RuntimeError","Error data.",17,null],[4,"ResolveError","wasmer_runtime_core::error","This error type is produced by resolving a wasm function…",null,null],[13,"Signature","","Found signature did not match expected signature.",18,null],[12,"expected","wasmer_runtime_core::error::ResolveError","Expected `FuncSig`.",18,null],[12,"found","","Found type.",18,null],[13,"ExportNotFound","wasmer_runtime_core::error","Export not found.",18,null],[12,"name","wasmer_runtime_core::error::ResolveError","Name.",18,null],[13,"ExportWrongType","wasmer_runtime_core::error","Export found with the wrong type.",18,null],[12,"name","wasmer_runtime_core::error::ResolveError","Name.",18,null],[4,"CallError","wasmer_runtime_core::error","This error type is produced by calling a wasm function…",null,null],[13,"Resolve","","An error occured resolving the functions name or types.",19,null],[13,"Runtime","","A runtime error occurred during the function call.",19,null],[4,"CreationError","","This error type is produced when creating something, like…",null,null],[13,"UnableToCreateMemory","","Unable to create memory error.",20,null],[13,"UnableToCreateTable","","Unable to create table error.",20,null],[13,"InvalidDescriptor","","Invalid descriptor error with message.",20,null],[4,"Error","","The amalgamation of all errors that can occur during the…",null,null],[13,"CompileError","","Compile error.",21,null],[13,"LinkError","","Link errors.",21,null],[13,"RuntimeError","","Runtime error.",21,null],[13,"ResolveError","","Resolve error.",21,null],[13,"CallError","","Call error.",21,null],[13,"CreationError","","Creation error.",21,null],[4,"GrowError","","An error occurred while growing a memory or table.",null,null],[13,"MemoryGrowError","","Error growing memory.",22,null],[13,"TableGrowError","","Error growing table.",22,null],[13,"ExceededMaxPages","","Max pages were exceeded.",22,null],[13,"ExceededMaxPagesForMemory","","Max pages for memory were exceeded.",22,null],[13,"CouldNotProtectMemory","","Error protecting memory.",22,null],[13,"CouldNotCreateMemory","","Error creating memory.",22,null],[4,"PageError","","A kind of page error.",null,null],[13,"ExceededMaxPages","","Max pages were exceeded error.",23,null],[4,"MemoryCreationError","","Error occured while creating memory.",null,null],[13,"VirtualMemoryAllocationFailed","","Allocation of virtual memory failed error.",24,null],[13,"CouldNotCreateMemoryFromFile","","Error creating memory from file.",24,null],[4,"MemoryProtectionError","","Error protecting memory.",null,null],[13,"ProtectionFailed","","Protection failed error.",25,null],[4,"ParseError","","Parse Error.",null,null],[13,"BinaryReadError","","Error reading binary.",26,null],[6,"Result","","Aliases the standard `Result` type as `Result` within this…",null,null],[6,"CompileResult","","Result of an attempt to compile the provided WebAssembly…",null,null],[6,"LinkResult","","Result of an attempt to link the provided WebAssembly…",null,null],[6,"RuntimeResult","","Result of an attempt to run the provided WebAssembly…",null,null],[6,"CallResult","","Result of an attempt to call the provided WebAssembly…",null,null],[6,"ResolveResult","","Result of an attempt to resolve a WebAssembly function by…",null,null],[6,"ParseResult","","Result of an attempt to parse bytes into a WebAssembly…",null,null],[0,"export","wasmer_runtime_core","The export module contains the implementation data…",null,null],[3,"FuncPointer","wasmer_runtime_core::export","Const pointer to a `Func`.",null,null],[3,"ExportIter","","An iterator to an instance's exports.",null,null],[4,"Context","","A kind of Context.",null,null],[13,"External","","External context include a mutable pointer to `Ctx`.",27,null],[13,"ExternalWithEnv","","External context with an environment include a mutable…",27,null],[13,"Internal","","Internal context.",27,null],[4,"Export","","Kind of WebAssembly export.",null,null],[13,"Function","","Function export.",28,null],[12,"func","wasmer_runtime_core::export::Export","A pointer to a function.",28,null],[12,"ctx","","A kind of context.",28,null],[12,"signature","","The signature of the function.",28,null],[13,"Memory","wasmer_runtime_core::export","Memory export.",28,null],[13,"Table","","Table export.",28,null],[13,"Global","","Global export.",28,null],[11,"new","","This needs to be unsafe because there is no way to check…",29,[[],["self"]]],[0,"global","wasmer_runtime_core","The global module contains the implementation data…",null,null],[3,"Global","wasmer_runtime_core::global","Container with a descriptor and a reference to a global…",null,null],[11,"new","","Create a new `Global` value.",30,[[["value"]],["self"]]],[11,"new_mutable","","Create a new, mutable `Global` value.",30,[[["value"]],["self"]]],[11,"descriptor","","Get the [`GlobalDescriptor`] generated for this global.",30,[[["self"]],["globaldescriptor"]]],[11,"set","","Set the value help by this global.",30,[[["value"],["self"]]]],[11,"get","","Get the value held by this global.",30,[[["self"]],["value"]]],[0,"import","wasmer_runtime_core","The import module contains the implementation data…",null,null],[3,"ImportObject","wasmer_runtime_core::import","All of the import data used when instantiating.",null,null],[12,"allow_missing_functions","","Allow missing functions to be generated and instantiation…",31,null],[3,"ImportObjectIterator","","Iterator for an `ImportObject`'s exports.",null,null],[3,"Namespace","","The top-level container for the two-level wasm imports",null,null],[8,"LikeNamespace","","This trait represents objects that act as a namespace for…",null,null],[10,"get_export","","Gets an export by name.",32,[[["str"],["self"]],[["option",["export"]],["export"]]]],[10,"get_exports","","Gets all exports in the namespace.",32,[[["self"]],["vec"]]],[10,"maybe_insert","","Maybe insert an `Export` by name into the namespace.",32,[[["str"],["self"],["export"]],["option"]]],[8,"IsExport","","A trait that represents `Export` values.",null,null],[10,"to_export","","Gets self as `Export`.",33,[[["self"]],["export"]]],[11,"new","","Create a new `ImportObject`.",31,[[],["self"]]],[11,"new_with_data","","Create a new `ImportObject` which generates data from the…",31,[[["f"]],["self"]]],[11,"register","","Register anything that implements `LikeNamespace` as a…",31,[[["self"],["s"],["n"]],[["option",["box"]],["box",["likenamespace"]]]]],[11,"with_namespace","","Apply a function on the namespace if it exists If your…",31,[[["str"],["func"],["self"]],["option"]]],[11,"maybe_with_namespace","","The same as `with_namespace` but takes a function that may…",31,[[["str"],["func"],["self"]],["option"]]],[11,"clone_ref","","Create a clone ref of this namespace.",31,[[["self"]],["self"]]],[11,"new","","Create a new empty `Namespace`.",34,[[],["self"]]],[11,"insert","","Insert a new `Export` into the namespace with the given…",34,[[["self"],["s"],["e"]],[["option",["box"]],["box",["isexport"]]]]],[11,"contains_key","","Returns true if the `Namespace` contains the given name.",34,[[["self"],["s"]],["bool"]]],[0,"instance","wasmer_runtime_core","The instance module contains the implementation data…",null,null],[3,"Instance","wasmer_runtime_core::instance","An instantiated WebAssembly module.",null,null],[12,"module","","Reference to the module used to instantiate this instance.",0,null],[3,"DynFunc","","A representation of an exported WebAssembly function.",null,null],[11,"load","","Load an `Instance` using the given loader.",0,[[["self"],["loader"]],["result"]]],[11,"func","","Through generic magic and the awe-inspiring power of…",0,[[["str"],["self"]],[["func",["wasm"]],["resolveresult",["func"]]]]],[11,"resolve_func","","Resolve a function by name.",0,[[["str"],["self"]],[["resolveresult",["usize"]],["usize"]]]],[11,"dyn_func","","This returns the representation of a function that can be…",0,[[["str"],["self"]],[["resolveresult",["dynfunc"]],["dynfunc"]]]],[11,"call","","Call an exported WebAssembly function given the export…",0,[[["str"],["self"]],[["callresult",["vec"]],["vec",["value"]]]]],[11,"context","","Returns an immutable reference to the [`Ctx`] used by this…",0,[[["self"]],["ctx"]]],[11,"context_mut","","Returns a mutable reference to the [`Ctx`] used by this…",0,[[["self"]],["ctx"]]],[11,"exports","","Returns an iterator over all of the items exported from…",0,[[["self"]],["exportiter"]]],[11,"module","","The module used to instantiate this Instance.",0,[[["self"]],["module"]]],[11,"get_internal","","Get the value of an internal field",0,[[["self"],["internalfield"]],["u64"]]],[11,"set_internal","","Set the value of an internal field.",0,[[["self"],["u64"],["internalfield"]]]],[11,"call","","Call an exported WebAssembly function safely.",35,[[["self"]],[["callresult",["vec"]],["vec",["value"]]]]],[11,"signature","","Gets the signature of this `Dynfunc`.",35,[[["self"]],["funcsig"]]],[11,"raw","","Gets a const pointer to the function represent by this…",35,[[["self"]]]],[0,"loader","wasmer_runtime_core","The loader module functions are used to load an instance.",null,null],[3,"LocalLoader","wasmer_runtime_core::loader","A local implementation for `Loader`.",null,null],[3,"LocalInstance","","A local instance.",null,null],[3,"CodeMemory","","A pointer to code in memory.",null,null],[8,"Loader","","The loader trait represents the functions used to load an…",null,null],[16,"Instance","","The type of `Instance` for the loader.",36,null],[16,"Error","","The error type returned by the loader.",36,null],[10,"load","","Loads the given module and context into an instance.",36,[[["runnablemodule"],["moduleinfo"],["ctx"],["self"]],["result"]]],[8,"Instance","","This trait represents an instance used by the loader.",null,null],[16,"Error","","The error type returned by this instance.",37,null],[10,"call","","Call a function by id with the given args.",37,[[["self"],["usize"]],[["result",["u128"]],["u128"]]]],[11,"read_memory","","Read memory at the given offset and length.",37,[[["self"],["u32"]],[["vec",["u8"]],["result",["vec"]]]]],[11,"write_memory","","Write memory at the given offset and length.",37,[[["self"],["u32"]],["result"]]],[11,"new","","Creates a new code memory with the given size.",38,[[["usize"]],["codememory"]]],[11,"make_executable","","Makes this code memory executable.",38,[[["self"]]]],[11,"make_writable","","Makes this code memory writable.",38,[[["self"]]]],[0,"memory","wasmer_runtime_core","The memory module contains the implementation data…",null,null],[3,"DynamicMemory","wasmer_runtime_core::memory","This is an internal-only api.",null,null],[3,"StaticMemory","","This is an internal-only api.",null,null],[3,"Atomically","","Atomically.",null,null],[3,"MemoryView","","A view into a memory.",null,null],[3,"Memory","","A shared or unshared wasm linear memory.",null,null],[3,"UnsharedMemory","","A reference to an unshared memory.",null,null],[3,"SharedMemory","","A reference to a shared memory.",null,null],[3,"SharedMemoryInternal","","Data structure for a shared internal memory.",null,null],[4,"MemoryType","","A kind a memory.",null,null],[13,"Dynamic","","A dynamic memory.",39,null],[13,"Static","","A static memory.",39,null],[13,"SharedStatic","","A shared static memory.",39,null],[11,"size","","The size of this memory in `Pages`.",40,[[["self"]],["pages"]]],[11,"grow","","Try to grow self by the given number of delta pages.",40,[[["self"],["pages"],["localmemory"]],[["growerror"],["result",["pages","growerror"]],["pages"]]]],[11,"as_slice","","Get this memory represented as a slice of bytes.",40,[[["self"]]]],[11,"as_slice_mut","","Get this memory represented as a mutable slice of bytes",40,[[["self"]]]],[0,"ptr","","A reusable pointer abstraction for getting memory from the…",null,null],[3,"Array","wasmer_runtime_core::memory::ptr","Array.",null,null],[3,"Item","","Item.",null,null],[3,"WasmPtr","","A pointer to a Wasm item.",null,null],[11,"new","","Create a new `WasmPtr` at the given offset.",41,[[["u32"]],["self"]]],[11,"offset","","Get the offset for this `WasmPtr`.",41,[[],["u32"]]],[11,"deref","","Dereference this `WasmPtr`.",41,[[["memory"]],[["cell"],["option",["cell"]]]]],[11,"deref_mut","","Mutable dereference this `WasmPtr`.",41,[[["memory"]],[["option",["cell"]],["cell"]]]],[11,"deref","","Dereference this `WasmPtr`.",41,[[["memory"],["u32"]],["option"]]],[11,"deref_mut","","Mutable dereference this `WasmPtr`.",41,[[["memory"],["u32"]],["option"]]],[11,"get_utf8_string","","Get a UTF-8 string representation of this `WasmPtr` with…",41,[[["memory"],["u32"]],[["option",["str"]],["str"]]]],[11,"get_utf8_string_with_nul","","Get a UTF-8 string representation of this `WasmPtr`, where…",41,[[["memory"]],[["option",["str"]],["str"]]]],[11,"size","wasmer_runtime_core::memory","The size of this memory in `Pages`.",42,[[["self"]],["pages"]]],[11,"grow","","Try to grow this memory by the given number of delta pages.",42,[[["self"],["pages"],["localmemory"]],[["growerror"],["result",["pages","growerror"]],["pages"]]]],[11,"as_slice","","Get this memory represented as a slice of bytes.",42,[[["self"]]]],[11,"as_slice_mut","","Get this memory represented as a mutable slice of bytes.",42,[[["self"]]]],[11,"atomically","","Get atomic access to a memory view.",43,[[["self"]],[["memoryview",["atomically"]],["atomically"]]]],[11,"new","","Create a new `Memory` from a [`MemoryDescriptor`]",44,[[["memorydescriptor"]],[["creationerror"],["result",["creationerror"]]]]],[11,"descriptor","","Return the [`MemoryDescriptor`] that this memory was…",44,[[["self"]],["memorydescriptor"]]],[11,"grow","","Grow this memory by the specified number of pages.",44,[[["self"],["pages"]],[["growerror"],["result",["pages","growerror"]],["pages"]]]],[11,"size","","The size, in wasm pages, of this memory.",44,[[["self"]],["pages"]]],[11,"view","","Return a \"view\" of the currently accessible memory. By…",44,[[["self"]],[["memoryview"],["valuetype"]]]],[11,"new","","Create a new `UnsharedMemory` from the given memory…",45,[[["memorydescriptor"]],[["creationerror"],["result",["creationerror"]]]]],[11,"grow","","Try to grow this memory by the given number of delta pages.",45,[[["self"],["pages"]],[["growerror"],["result",["pages","growerror"]],["pages"]]]],[11,"size","","Size of this memory in pages.",45,[[["self"]],["pages"]]],[11,"grow","","Try to grow this memory by the given number of delta pages.",46,[[["self"],["pages"]],[["growerror"],["result",["pages","growerror"]],["pages"]]]],[11,"size","","Size of this memory in pages.",46,[[["self"]],["pages"]]],[0,"module","wasmer_runtime_core","The module module contains the implementation data…",null,null],[3,"ModuleInfo","wasmer_runtime_core::module","Container for module data including memories, globals,…",null,null],[12,"memories","","Map of memory index to memory descriptors.",47,null],[12,"globals","","Map of global index to global descriptors.",47,null],[12,"tables","","Map of table index to table descriptors.",47,null],[12,"imported_functions","","Map of imported function index to import name.",47,null],[12,"imported_memories","","Map of imported memory index to import name and memory…",47,null],[12,"imported_tables","","Map of imported table index to import name and table…",47,null],[12,"imported_globals","","Map of imported global index to import name and global…",47,null],[12,"exports","","Map of string to export index.",47,null],[12,"data_initializers","","Vector of data initializers.",47,null],[12,"elem_initializers","","Vector of table initializers.",47,null],[12,"start_func","","Index of optional start function.",47,null],[12,"func_assoc","","Map function index to signature index.",47,null],[12,"signatures","","Map signature index to function signature.",47,null],[12,"backend","","Backend.",47,null],[12,"namespace_table","","Table of namespace indexes.",47,null],[12,"name_table","","Table of name indexes.",47,null],[12,"em_symbol_map","","Symbol information from emscripten.",47,null],[12,"custom_sections","","Custom sections.",47,null],[3,"Module","","A compiled WebAssembly module.",null,null],[3,"DataInitializer","","A data initializer for linear memory.",null,null],[12,"memory_index","","The index of the memory to initialize.",48,null],[12,"base","","Either a constant offset or a `get_global`",48,null],[12,"data","","The initialization data.",48,null],[3,"TableInitializer","","A WebAssembly table initializer.",null,null],[12,"table_index","","The index of a table to initialize.",49,null],[12,"base","","Either a constant offset or a `get_global`",49,null],[12,"elements","","The values to write into the table elements.",49,null],[3,"StringTableBuilder","","String table builder.",null,null],[3,"StringTable","","A map of index to string.",null,null],[3,"NamespaceIndex","","A type-safe handle referring to a module namespace.",null,null],[3,"NameIndex","","A type-safe handle referring to a name in a module…",null,null],[4,"ExportIndex","","A wrapper around the [`TypedIndex`]es for Wasm functions,…",null,null],[13,"Func","","Function export index. [`FuncIndex`] is a type-safe handle…",50,null],[13,"Memory","","Memory export index. [`MemoryIndex`] is a type-safe handle…",50,null],[13,"Global","","Global export index. [`GlobalIndex`] is a type-safe handle…",50,null],[13,"Table","","Table export index. [`TableIndex`] is a type-safe handle…",50,null],[11,"import_custom_sections","","Creates custom section info from the given wasm file.",47,[[["self"]],["parseresult"]]],[11,"instantiate","","Instantiate a WebAssembly module with the provided…",51,[[["self"],["importobject"]],[["instance"],["result",["instance"]]]]],[11,"cache","","Create a cache artifact from this module.",51,[[["self"]],[["result",["artifact","cacheerror"]],["artifact"],["cacheerror"]]]],[11,"info","","Get the module data for this module.",51,[[["self"]],["moduleinfo"]]],[11,"new","","Creates a new [`StringTableBuilder`].",52,[[],["self"]]],[11,"register","","Register a new string into table.",52,[[["self"],["s"]],["k"]]],[11,"finish","","Finish building the [`StringTable`].",52,[[],["stringtable"]]],[11,"new","","Creates a `StringTable`.",53,[[],["self"]]],[11,"get","","Gets a reference to a string at the given index.",53,[[["self"],["k"]],["str"]]],[0,"parse","wasmer_runtime_core","The parse module contains common data structures and…",null,null],[4,"LoadError","wasmer_runtime_core::parse","Kind of load error.",null,null],[13,"Parse","","Parse error.",54,null],[13,"Codegen","","Code generation error.",54,null],[5,"read_module","","Read wasm binary into module data using the given backend,…",null,[[["middlewarechain"],["mcg"],["compilerconfig"]],[["result",["arc","loaderror"]],["loaderror"],["arc",["rwlock"]]]]],[5,"wp_type_to_type","","Convert given `WpType` to `Type`.",null,[[["wptype"]],[["result",["type","binaryreadererror"]],["binaryreadererror"],["type"]]]],[5,"type_to_wp_type","","Convert given `Type` to `WpType`.",null,[[["type"]],["wptype"]]],[0,"structures","wasmer_runtime_core","The structures module contains commonly used data…",null,null],[3,"BoxedMap","wasmer_runtime_core::structures","Boxed map.",null,null],[3,"Iter","","Iterator for a `Map`.",null,null],[3,"IterMut","","Mutable iterator for a `Map`.",null,null],[3,"Map","","Dense item map",null,null],[3,"SliceMap","","This is a dynamically-sized slice that can only be indexed…",null,null],[11,"new","","Creates a new `Map`.",55,[[],["self"]]],[11,"with_capacity","","Creates a new empty `Map` with the given capacity.",55,[[["usize"]],["self"]]],[11,"clear","","Clears the map. Keeps the allocated memory for future use.",55,[[["self"]]]],[11,"len","","Returns the size of this map.",55,[[["self"]],["usize"]]],[11,"is_empty","","Returns true if this map is empty.",55,[[["self"]],["bool"]]],[11,"push","","Adds a new value to this map.",55,[[["self"],["v"]],["k"]]],[11,"next_index","","Returns the next index into the map.",55,[[["self"]],["k"]]],[11,"reserve_exact","","Reserves the given size.",55,[[["self"],["usize"]]]],[11,"into_boxed_map","","Convert this into a `BoxedMap`.",55,[[],["boxedmap"]]],[11,"into_vec","","Convert this into a `Vec`.",55,[[],["vec"]]],[11,"resize","","Resize this map to the given new length and value.",55,[[["self"],["usize"],["v"]]]],[11,"get","","Gets a reference to the value at the given index.",56,[[["self"],["k"]],[["option"],["v"]]]],[11,"get_mut","","Gets a mutable reference to the value at the given index.",56,[[["self"],["k"]],[["option"],["v"]]]],[11,"len","","Gets the length of this slice map.",56,[[["self"]],["usize"]]],[11,"iter","","Returns an iterator for this slice map.",56,[[["self"]],["iter"]]],[11,"iter_mut","","Returns a mutable iterator for this slice map.",56,[[["self"]],["itermut"]]],[11,"as_ptr","","Gets a pointer to the `SliceMap`.",56,[[["self"]]]],[11,"as_mut_ptr","","Gets a mutable pointer to the `SliceMap`.",56,[[["self"]]]],[8,"TypedIndex","","A trait for dealing with type-safe indices into…",null,null],[0,"table","wasmer_runtime_core","The runtime table module contains data structures and…",null,null],[3,"Anyfunc","wasmer_runtime_core::table","Anyfunc data type.",null,null],[3,"Table","","Container with a descriptor and a reference to a table…",null,null],[4,"Element","","Kind of table element.",null,null],[13,"Anyfunc","","Anyfunc.",57,null],[4,"TableStorage","","Kind of table storage.",null,null],[13,"Anyfunc","","This is intended to be a caller-checked Anyfunc.",58,null],[11,"new","","Create a new `Anyfunc`.",59,[[["sig"]],["self"]]],[11,"new","","Create a new `Table` from a [`TableDescriptor`]",60,[[["tabledescriptor"]],[["creationerror"],["result",["creationerror"]]]]],[11,"descriptor","","Get the `TableDescriptor` used to create this `Table`.",60,[[["self"]],["tabledescriptor"]]],[11,"set","","Set the element at index.",60,[[["u32"],["self"],["element"]],["result"]]],[11,"size","","The current size of this table.",60,[[["self"]],["u32"]]],[11,"grow","","Grow this table by `delta`.",60,[[["u32"],["self"]],[["growerror"],["result",["u32","growerror"]],["u32"]]]],[11,"vm_local_table","","Get a mutable pointer to underlying table storage.",60,[[["self"]]]],[0,"trampoline_x64","wasmer_runtime_core","Trampoline generator for carrying context with function…",null,null],[3,"TrampolineBufferBuilder","wasmer_runtime_core::trampoline_x64","Trampoline Buffer Builder.",null,null],[3,"TrampolineBuffer","","Trampoline Buffer.",null,null],[4,"CallTarget","","An opaque type for pointers to a callable memory location.",null,null],[4,"CallContext","","An opaque type for context pointers.",null,null],[4,"Trampoline","","An opaque type for generated trampolines' call entries.",null,null],[5,"get_context","","Calls `GET_CONTEXT` and returns the current context.",null,[[]]],[11,"new","","Creates a new empty `TrampolineBufferBuilder`.",61,[[],["trampolinebufferbuilder"]]],[11,"add_context_trampoline","","Adds a context trampoline.",61,[[["self"]],["usize"]]],[11,"add_context_rsp_state_preserving_trampoline","","Adds context RSP state preserving trampoline to the buffer.",61,[[["self"]],["usize"]]],[11,"add_callinfo_trampoline","","Adds a callinfo trampoline.",61,[[["u32"],["self"]],["usize"]]],[11,"build","","Consumes the builder and builds the trampoline buffer.",61,[[],["trampolinebuffer"]]],[11,"get_trampoline","","Returns the trampoline pointer at index `idx`.",62,[[["self"],["usize"]]]],[0,"typed_func","wasmer_runtime_core","The typed func module implements a way of representing a…",null,null],[3,"Wasm","wasmer_runtime_core::typed_func","TODO(lachlan): Naming TBD. This contains the trampoline…",null,null],[3,"Host","","This type, as part of the `Func` type signature,…",null,null],[3,"ExplicitVmCtx","","This empty structure indicates that an external function…",null,null],[3,"ImplicitVmCtx","","This empty structure indicates that an external function…",null,null],[3,"Func","","Represents a function that can be used by WebAssembly.",null,null],[3,"S0","","Struct for typed funcs.",null,null],[3,"S1","","Struct for typed funcs.",null,null],[3,"S2","","Struct for typed funcs.",null,null],[3,"S3","","Struct for typed funcs.",null,null],[3,"S4","","Struct for typed funcs.",null,null],[3,"S5","","Struct for typed funcs.",null,null],[3,"S6","","Struct for typed funcs.",null,null],[3,"S7","","Struct for typed funcs.",null,null],[3,"S8","","Struct for typed funcs.",null,null],[3,"S9","","Struct for typed funcs.",null,null],[3,"S10","","Struct for typed funcs.",null,null],[3,"S11","","Struct for typed funcs.",null,null],[3,"S12","","Struct for typed funcs.",null,null],[3,"S13","","Struct for typed funcs.",null,null],[3,"S14","","Struct for typed funcs.",null,null],[3,"S15","","Struct for typed funcs.",null,null],[3,"S16","","Struct for typed funcs.",null,null],[3,"S17","","Struct for typed funcs.",null,null],[3,"S18","","Struct for typed funcs.",null,null],[3,"S19","","Struct for typed funcs.",null,null],[3,"S20","","Struct for typed funcs.",null,null],[3,"S21","","Struct for typed funcs.",null,null],[3,"S22","","Struct for typed funcs.",null,null],[3,"S23","","Struct for typed funcs.",null,null],[3,"S24","","Struct for typed funcs.",null,null],[3,"S25","","Struct for typed funcs.",null,null],[3,"S26","","Struct for typed funcs.",null,null],[4,"WasmTrapInfo","","Wasm trap info.",null,null],[13,"Unreachable","","Unreachable trap.",63,null],[13,"IncorrectCallIndirectSignature","","Call indirect incorrect signature trap.",63,null],[13,"MemoryOutOfBounds","","Memory out of bounds trap.",63,null],[13,"CallIndirectOOB","","Call indirect out of bounds trap.",63,null],[13,"IllegalArithmetic","","Illegal arithmetic trap.",63,null],[13,"MisalignedAtomicAccess","","Misaligned atomic access trap.",63,null],[13,"Unknown","","Unknown trap.",63,null],[6,"Trampoline","","Aliases to an extern \"C\" type used as a trampoline to a…",null,null],[6,"Invoke","","Aliases to an extern \"C\" type used to invoke a function.",null,null],[8,"Kind","","This is just an empty trait to constrict that types that…",null,null],[8,"WasmTypeList","","Represents a list of WebAssembly values.",null,null],[16,"CStruct","","CStruct type.",64,null],[16,"RetArray","","Array of return values.",64,null],[10,"from_ret_array","","Construct `Self` based on an array of returned values.",64,[[],["self"]]],[10,"empty_ret_array","","Generates an empty array that will hold the returned…",64,[[]]],[10,"from_c_struct","","Transforms C values into Rust values.",64,[[],["self"]]],[10,"into_c_struct","","Transforms Rust values into C values.",64,[[]]],[10,"types","","Get types of the current values.",64,[[]]],[10,"call","","This method is used to distribute the values onto a…",64,[[["func"],["wasm"],["nonnull",["func"]]],[["result",["runtimeerror"]],["runtimeerror"]]]],[8,"ExternalFunctionKind","","Empty trait to specify the kind of `ExternalFunction`:…",null,null],[8,"ExternalFunction","","Represents a function that can be converted to a…",null,null],[10,"to_raw","","Conver to function pointer.",65,[[]]],[8,"TrapEarly","","Represents a TrapEarly type.",null,null],[16,"Error","","The error type for this trait.",66,null],[10,"report","","Get returns or error result.",66,[[],["result"]]],[11,"from_raw_parts","","Create new `Wasm` from given parts.",67,[[["trampoline"],["nonnull",["c_void"]],["option",["nonnull"]],["invoke"]],["self"]]],[11,"new","","Creates a new `Func`.",68,[[["f"]],[["host"],["func",["host"]]]]],[11,"params","","Returns the types of the function inputs.",68,[[["self"]]]],[11,"returns","","Returns the types of the function outputs.",68,[[["self"]]]],[11,"get_vm_func","","Get the underlying func pointer.",68,[[["self"]],[["func"],["nonnull",["func"]]]]],[11,"call","","Call the typed func and return results.",68,[[["self"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",68,[[["a"],["self"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",68,[[["a"],["self"],["b"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",68,[[["a"],["c"],["self"],["b"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",68,[[["a"],["c"],["d"],["self"],["b"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",68,[[["a"],["e"],["c"],["d"],["self"],["b"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",68,[[["a"],["f"],["e"],["c"],["d"],["self"],["b"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",68,[[["g"],["f"],["a"],["e"],["c"],["d"],["self"],["b"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",68,[[["g"],["h"],["f"],["a"],["e"],["c"],["d"],["self"],["b"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",68,[[["g"],["h"],["i"],["f"],["a"],["e"],["c"],["d"],["self"],["b"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",68,[[["g"],["h"],["i"],["f"],["a"],["j"],["e"],["c"],["d"],["self"],["b"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",68,[[["g"],["h"],["i"],["f"],["k"],["a"],["j"],["e"],["c"],["d"],["self"],["b"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",68,[[["g"],["h"],["i"],["f"],["k"],["a"],["j"],["l"],["e"],["c"],["d"],["self"],["b"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",68,[[["g"],["h"],["i"],["m"],["f"],["k"],["a"],["j"],["l"],["e"],["c"],["d"],["self"],["b"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",68,[[["m"],["k"],["a"],["e"],["c"],["i"],["self"],["g"],["f"],["l"],["j"],["n"],["d"],["b"],["h"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",68,[[["m"],["k"],["a"],["o"],["e"],["c"],["i"],["self"],["g"],["f"],["l"],["j"],["n"],["d"],["b"],["h"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",68,[[["m"],["k"],["a"],["o"],["e"],["c"],["i"],["self"],["g"],["f"],["l"],["j"],["n"],["p"],["d"],["b"],["h"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",68,[[["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["self"],["g"],["f"],["l"],["j"],["n"],["p"],["d"],["b"],["h"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",68,[[["r"],["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["self"],["g"],["f"],["l"],["j"],["n"],["p"],["d"],["b"],["h"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",68,[[["r"],["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["self"],["g"],["s"],["f"],["l"],["j"],["n"],["p"],["d"],["b"],["h"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",68,[[["r"],["t"],["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["self"],["g"],["s"],["f"],["l"],["j"],["n"],["p"],["d"],["b"],["h"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",68,[[["r"],["t"],["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["self"],["g"],["s"],["u"],["f"],["l"],["j"],["n"],["p"],["d"],["b"],["h"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",68,[[["r"],["t"],["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["self"],["g"],["s"],["u"],["f"],["l"],["j"],["v"],["n"],["p"],["d"],["b"],["h"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",68,[[["r"],["t"],["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["self"],["g"],["s"],["u"],["w"],["f"],["l"],["j"],["v"],["n"],["p"],["d"],["b"],["h"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",68,[[["r"],["t"],["x"],["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["self"],["g"],["s"],["u"],["w"],["f"],["l"],["j"],["v"],["n"],["p"],["d"],["b"],["h"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",68,[[["r"],["t"],["x"],["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["self"],["g"],["s"],["u"],["w"],["y"],["f"],["l"],["j"],["v"],["n"],["p"],["d"],["b"],["h"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"call","","Call the typed func and return results.",68,[[["r"],["t"],["x"],["m"],["k"],["a"],["o"],["q"],["e"],["c"],["i"],["self"],["g"],["s"],["u"],["w"],["y"],["f"],["l"],["j"],["v"],["z"],["n"],["p"],["d"],["b"],["h"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[0,"types","wasmer_runtime_core","The runtime types modules represent type used within the…",null,null],[3,"TableDescriptor","wasmer_runtime_core::types","Describes the properties of a table including the element…",null,null],[12,"element","","Type of data stored in this table.",69,null],[12,"minimum","","The minimum number of elements that must be stored in this…",69,null],[12,"maximum","","The maximum number of elements in this table.",69,null],[3,"GlobalDescriptor","","Describes the mutability and type of a Global",null,null],[12,"mutable","","Mutable flag.",70,null],[12,"ty","","Wasm type.",70,null],[3,"GlobalInit","","A wasm global.",null,null],[12,"desc","","Global descriptor.",71,null],[12,"init","","Global initializer.",71,null],[3,"MemoryDescriptor","","A wasm memory descriptor.",null,null],[12,"minimum","","The minimum number of allowed pages.",72,null],[12,"maximum","","The maximum number of allowed pages.",72,null],[12,"shared","","This memory can be shared between wasm threads.",72,null],[12,"memory_type","","The type of the memory",72,null],[3,"FuncSig","","The signature of a function that is either implemented in…",null,null],[3,"FuncIndex","","Typed Index",null,null],[3,"LocalFuncIndex","","Typed Index",null,null],[3,"ImportedFuncIndex","","Typed Index",null,null],[3,"MemoryIndex","","Typed Index",null,null],[3,"LocalMemoryIndex","","Typed Index",null,null],[3,"ImportedMemoryIndex","","Typed Index",null,null],[3,"TableIndex","","Typed Index",null,null],[3,"LocalTableIndex","","Typed Index",null,null],[3,"ImportedTableIndex","","Typed Index",null,null],[3,"GlobalIndex","","Typed Index",null,null],[3,"LocalGlobalIndex","","Typed Index",null,null],[3,"ImportedGlobalIndex","","Typed Index",null,null],[3,"SigIndex","","Index for signature.",null,null],[4,"Type","","Represents a WebAssembly type.",null,null],[13,"I32","","The `i32` type.",73,null],[13,"I64","","The `i64` type.",73,null],[13,"F32","","The `f32` type.",73,null],[13,"F64","","The `f64` type.",73,null],[13,"V128","","The `v128` type.",73,null],[4,"Value","","Represents a WebAssembly value.",null,null],[13,"I32","","The `i32` type.",74,null],[13,"I64","","The `i64` type.",74,null],[13,"F32","","The `f32` type.",74,null],[13,"F64","","The `f64` type.",74,null],[13,"V128","","The `v128` type.",74,null],[4,"ElementType","","Kinds of element types.",null,null],[13,"Anyfunc","","Any wasm function.",75,null],[4,"Initializer","","A const value initializer. Over time, this will be able to…",null,null],[13,"Const","","Corresponds to a `const.*` instruction.",76,null],[13,"GetGlobal","","Corresponds to a `get_global` instruction.",76,null],[4,"LocalOrImport","","Kind of local or import type.",null,null],[13,"Local","","Local.",77,null],[13,"Import","","Import.",77,null],[8,"NativeWasmType","","Represents a native wasm type.",null,null],[18,"TYPE","","Type for this `NativeWasmType`.",78,null],[10,"from_binary","","Convert from u64 bites to self.",78,[[["u64"]],["self"]]],[10,"to_binary","","Convert self to u64 binary representation.",78,[[],["u64"]]],[8,"WasmExternType","","A trait to represent a wasm extern type.",null,null],[16,"Native","","Native wasm type for this `WasmExternType`.",79,null],[10,"from_native","","Convert from given `Native` type to self.",79,[[],["self"]]],[10,"to_native","","Convert self to `Native` type.",79,[[]]],[8,"ValueType","","Trait for a Value type.",null,null],[8,"LocalImport","","Trait that represents Local or Import.",null,null],[16,"Local","","Local type.",80,null],[16,"Import","","Import type.",80,null],[11,"ty","","The `Type` of this `Value`.",74,[[["self"]],["type"]]],[11,"to_u128","","Convert this `Value` to a u128 binary representation.",74,[[["self"]],["u128"]]],[11,"new","","Create a new memory descriptor with the given min/max…",72,[[["bool"],["pages"],["option",["pages"]]],[["string"],["result",["string"]]]]],[11,"memory_type","","Returns the `MemoryType` for this descriptor.",72,[[["self"]],["memorytype"]]],[11,"new","","Creates a new function signatures with the given parameter…",81,[[["params"],["returns"]],["self"]]],[11,"params","","Parameter types.",81,[[["self"]]]],[11,"returns","","Return types.",81,[[["self"]]]],[11,"check_param_value_types","","Returns true if parameter types match the function…",81,[[["self"]],["bool"]]],[11,"local_or_import","","Converts self into `LocalOrImport`.",82,[[["moduleinfo"]],[["localorimport",["funcindex"]],["funcindex"]]]],[11,"convert_up","","Convert up.",83,[[["moduleinfo"]],["funcindex"]]],[11,"convert_up","","Convert up.",84,[[["moduleinfo"]],["funcindex"]]],[11,"local_or_import","","Converts self into `LocalOrImport`.",85,[[["moduleinfo"]],[["localorimport",["memoryindex"]],["memoryindex"]]]],[11,"convert_up","","Convert up.",86,[[["moduleinfo"]],["memoryindex"]]],[11,"convert_up","","Convert up.",87,[[["moduleinfo"]],["memoryindex"]]],[11,"local_or_import","","Converts self into `LocalOrImport`.",88,[[["moduleinfo"]],[["tableindex"],["localorimport",["tableindex"]]]]],[11,"convert_up","","Convert up.",89,[[["moduleinfo"]],["tableindex"]]],[11,"convert_up","","Convert up.",90,[[["moduleinfo"]],["tableindex"]]],[11,"local_or_import","","Converts self into `LocalOrImport`.",91,[[["moduleinfo"]],[["localorimport",["globalindex"]],["globalindex"]]]],[11,"convert_up","","Convert up.",92,[[["moduleinfo"]],["globalindex"]]],[11,"convert_up","","Convert up.",93,[[["moduleinfo"]],["globalindex"]]],[11,"local","","Returns `Some` if self is local, `None` if self is an…",77,[[],["option"]]],[11,"import","","Returns `Some` if self is an import, `None` if self is…",77,[[],["option"]]],[0,"units","wasmer_runtime_core","The units module provides common WebAssembly units like…",null,null],[3,"Pages","wasmer_runtime_core::units","Units of WebAssembly pages (as specified to be 65,536…",null,null],[12,"0","","",94,null],[3,"Bytes","","Units of WebAssembly memory in terms of 8-bit bytes.",null,null],[12,"0","","",95,null],[17,"WASM_PAGE_SIZE","","The page size in bytes of a wasm page.",null,null],[17,"WASM_MAX_PAGES","","Tbe max number of wasm pages allowed.",null,null],[17,"WASM_MIN_PAGES","","The minimum number of wasm pages allowed.",null,null],[11,"checked_add","","Checked add of Pages to Pages.",94,[[["pages"]],[["result",["pages","pageerror"]],["pages"],["pageerror"]]]],[11,"bytes","","Calculate number of bytes from pages.",94,[[],["bytes"]]],[0,"vm","wasmer_runtime_core","The runtime vm module contains data structures and helper…",null,null],[3,"ImportBacking","wasmer_runtime_core::vm","The `ImportBacking` stores references to the imported…",null,null],[3,"LocalBacking","","The `LocalBacking` \"owns\" the memory used by all the local…",null,null],[3,"Ctx","","The context of the currently running WebAssembly instance.",null,null],[12,"internal","","InternalCtx data field",96,null],[12,"local_backing","","These are pointers to things that are known to be owned by…",96,null],[12,"import_backing","","Mutable pointer to import data",96,null],[12,"module","","Const pointer to module inner data",96,null],[12,"data","","This is intended to be user-supplied, per-instance…",96,null],[12,"data_finalizer","","If there's a function set in this field, it gets called…",96,null],[3,"InternalField","","An internal field.",null,null],[3,"Intrinsics","","A container for VM instrinsic functions",null,null],[12,"memory_grow","","Const pointer to memory grow `Func`.",97,null],[12,"memory_size","","Const pointer to memory size `Func`.",97,null],[3,"Func","","Represents a function pointer. It is mostly used in the…",null,null],[3,"FuncEnv","","Represents a function environment pointer, like a captured…",null,null],[3,"FuncCtx","","Represents a function context. It is used by imported…",null,null],[3,"ImportedFunc","","An imported function is a function pointer associated to a…",null,null],[3,"LocalTable","","Definition of a table used by the VM. (obviously)",null,null],[12,"base","","pointer to the elements in the table.",98,null],[12,"count","","Number of elements in the table (NOT necessarily the size…",98,null],[12,"table","","The table that this represents. At the moment, this can…",98,null],[3,"LocalMemory","","Definition of a memory used by the VM.",null,null],[12,"base","","Pointer to the bottom of this linear memory.",99,null],[12,"bound","","Current size of this linear memory in bytes.",99,null],[12,"memory","","The actual memory that this represents. This is either…",99,null],[3,"LocalGlobal","","Definition of a global used by the VM.",null,null],[12,"data","","Data.",100,null],[3,"SigId","","Identifier for a function signature.",null,null],[12,"0","","",101,null],[3,"Anyfunc","","Caller-checked anyfunc",null,null],[12,"func","","Const pointer to `Func`.",102,null],[12,"ctx","","Mutable pointer to `Ctx`.",102,null],[12,"sig_id","","Sig id of this function",102,null],[7,"INTRINSICS_LOCAL_STATIC_MEMORY","","Local static memory intrinsics",null,null],[7,"INTRINSICS_LOCAL_DYNAMIC_MEMORY","","Local dynamic memory intrinsics",null,null],[7,"INTRINSICS_IMPORTED_STATIC_MEMORY","","Imported static memory intrinsics",null,null],[7,"INTRINSICS_IMPORTED_DYNAMIC_MEMORY","","Imported dynamic memory intrinsics",null,null],[17,"INTERNALS_SIZE","","Size of the array for internal instance usage",null,null],[11,"allocate","","Allocate and return an `InternalField`.",103,[[],["internalfield"]]],[11,"index","","Get the index of this `InternalField`.",103,[[["self"]],["usize"]]],[11,"offset_memory_grow","","Offset of the `memory_grow` field.",97,[[],["u8"]]],[11,"offset_memory_size","","Offset of the `memory_size` field.",97,[[],["u8"]]],[11,"memory","","This exposes the specified memory of the WebAssembly…",96,[[["u32"],["self"]],["memory"]]],[11,"memory_and_data_mut","","Get access to [`Memory`] and mutable access to the user…",96,[[["self"],["u32"]]]],[11,"borrow_symbol_map","","Gives access to the emscripten symbol map, used for…",96,[[["self"]],["option"]]],[11,"dynamic_sigindice_count","","Returns the number of dynamic sigindices.",96,[[["self"]],["usize"]]],[11,"get_internal","","Returns the value of the specified internal field.",96,[[["self"],["internalfield"]],["u64"]]],[11,"set_internal","","Writes the value to the specified internal field.",96,[[["self"],["u64"],["internalfield"]]]],[11,"call_with_table_index","","Calls a host or Wasm function at the given table index",96,[[["self"],["tableindex"]],[["callresult",["vec"]],["vec",["value"]]]]],[11,"offset_vmctx","","Offset to the `vmctx` field.",104,[[],["u8"]]],[11,"offset_func_env","","Offset to the `func_env` field.",104,[[],["u8"]]],[11,"size","","Size of a `FuncCtx`.",104,[[],["u8"]]],[11,"offset_func","","Offset to the `func` field.",105,[[],["u8"]]],[11,"offset_func_ctx","","Offset to the `func_ctx` field.",105,[[],["u8"]]],[11,"size","","Size of an `ImportedFunc`.",105,[[],["u8"]]],[11,"offset_base","","Offset to the `base` field.",98,[[],["u8"]]],[11,"offset_count","","Offset to the `count` field.",98,[[],["u8"]]],[11,"size","","Size of a `LocalTable`.",98,[[],["u8"]]],[11,"offset_base","","Offset to the `base` field.",99,[[],["u8"]]],[11,"offset_bound","","Offset to the `bound` field.",99,[[],["u8"]]],[11,"size","","Size of a `LocalMemory`.",99,[[],["u8"]]],[11,"offset_data","","Offset to the `data` field.",100,[[],["u8"]]],[11,"null","","A null `LocalGlobal`.",100,[[],["self"]]],[11,"size","","Size of a `LocalGlobal`.",100,[[],["u8"]]],[11,"null","","A null `Anyfunc` value.",102,[[],["self"]]],[11,"offset_func","","Offset to the `func` field.",102,[[],["u8"]]],[11,"offset_vmctx","","Offset to the `vmctx` field..",102,[[],["u8"]]],[11,"offset_sig_id","","Offset to the `sig_id` field.",102,[[],["u8"]]],[11,"size","","The size of `Anyfunc`.",102,[[],["u8"]]],[0,"fault","wasmer_runtime_core","The fault module contains the implementation for handling…",null,null],[3,"BoundaryRegisterPreservation","wasmer_runtime_core::fault","A store for boundary register preservation.",null,null],[12,"r15","","R15.",106,null],[12,"r14","","R14.",106,null],[12,"r13","","R13.",106,null],[12,"r12","","R12.",106,null],[12,"rbx","","RBX.",106,null],[3,"FaultInfo","","Info about the fault",null,null],[12,"faulting_addr","","Faulting address.",107,null],[12,"ip","","Instruction pointer.",107,null],[12,"known_registers","","Values of known registers.",107,null],[5,"get_boundary_register_preservation","","Gets a mutable pointer to the…",null,[[]]],[5,"was_sigint_triggered_fault","","Returns a boolean indicating if SIGINT triggered the fault.",null,[[],["bool"]]],[5,"with_ctx","","Runs a callback function with the given `Ctx`.",null,[[["fnonce"]],["r"]]],[5,"push_code_version","","Pushes a new `CodeVersion` to the current code versions.",null,[[["codeversion"]]]],[5,"pop_code_version","","Pops a `CodeVersion` from the current code versions.",null,[[],[["option",["codeversion"]],["codeversion"]]]],[5,"get_wasm_interrupt_signal_mem","","Gets the wasm interrupt signal mem.",null,[[]]],[5,"set_wasm_interrupt_on_ctx","","Sets the wasm interrupt on the given `Ctx`.",null,[[]]],[5,"set_wasm_interrupt","","Sets a wasm interrupt.",null,[[]]],[5,"clear_wasm_interrupt","","Clears the wasm interrupt.",null,[[]]],[5,"catch_unsafe_unwind","","Catches an unsafe unwind with the given functions and…",null,[[["breakpointmap"],["fnonce"],["option",["breakpointmap"]]],[["result",["box"]],["box",["any"]]]]],[5,"begin_unsafe_unwind","","Begins an unsafe unwind.",null,[[["box",["any"]],["any"]]]],[5,"allocate_and_run","","Allocates and runs with the given stack size and closure.",null,[[["usize"],["fnonce"]],["r"]]],[5,"ensure_sighandler","","Ensure the signal handler is installed.",null,[[]]],[5,"get_fault_info","","Get fault info from siginfo and ucontext.",null,[[],["faultinfo"]]],[0,"raw","","The raw module contains required externed function…",null,null],[5,"run_on_alternative_stack","wasmer_runtime_core::fault::raw","Load registers and return on the stack…",null,null],[5,"register_preservation_trampoline","","Internal routine for switching into a backend without…",null,null],[5,"setjmp","","libc setjmp",null,null],[5,"longjmp","","libc longjmp",null,null],[11,"read_stack","wasmer_runtime_core::fault","Parses the stack and builds an execution state image.",107,[[["option",["usize"]],["self"],["usize"]],[["executionstateimage"],["option",["executionstateimage"]]]]],[0,"state","wasmer_runtime_core","The state module is used to track state of a running web…",null,null],[3,"RegisterIndex","wasmer_runtime_core::state","An index to a register",null,null],[12,"0","","",108,null],[3,"MachineState","","A container for the state of a running wasm instance.",null,null],[12,"stack_values","","Stack values.",109,null],[12,"register_values","","Register values.",109,null],[12,"prev_frame","","Previous frame.",109,null],[12,"wasm_stack","","Wasm stack.",109,null],[12,"wasm_stack_private_depth","","Private depth of the wasm stack.",109,null],[12,"wasm_inst_offset","","Wasm instruction offset.",109,null],[3,"MachineStateDiff","","A diff of two `MachineState`s.",null,null],[12,"last","","Last.",110,null],[12,"stack_push","","Stack push.",110,null],[12,"stack_pop","","Stack pop.",110,null],[12,"reg_diff","","Register diff.",110,null],[12,"prev_frame_diff","","Previous frame diff.",110,null],[12,"wasm_stack_push","","Wasm stack push.",110,null],[12,"wasm_stack_pop","","Wasm stack pop.",110,null],[12,"wasm_stack_private_depth","","Private depth of the wasm stack.",110,null],[12,"wasm_inst_offset","","Wasm instruction offset.",110,null],[3,"FunctionStateMap","","A map of function states.",null,null],[12,"initial","","Initial.",111,null],[12,"local_function_id","","Local Function Id.",111,null],[12,"locals","","Locals.",111,null],[12,"shadow_size","","Shadow size.",111,null],[12,"diffs","","Diffs.",111,null],[12,"wasm_function_header_target_offset","","Wasm Function Header target offset.",111,null],[12,"wasm_offset_to_target_offset","","Wasm offset to target offset",111,null],[12,"loop_offsets","","Loop offsets.",111,null],[12,"call_offsets","","Call offsets.",111,null],[12,"trappable_offsets","","Trappable offsets.",111,null],[3,"OffsetInfo","","Info for an offset.",null,null],[12,"end_offset","","End offset.",112,null],[12,"diff_id","","Diff Id.",112,null],[12,"activate_offset","","Activate offset.",112,null],[3,"ModuleStateMap","","A map of module state.",null,null],[12,"local_functions","","Local functions.",113,null],[12,"total_size","","Total size.",113,null],[3,"WasmFunctionStateDump","","State dump of a wasm function.",null,null],[12,"local_function_id","","Local function id.",114,null],[12,"wasm_inst_offset","","Wasm instruction offset.",114,null],[12,"stack","","Stack.",114,null],[12,"locals","","Locals.",114,null],[3,"ExecutionStateImage","","An image of the execution state.",null,null],[12,"frames","","Frames.",115,null],[3,"InstanceImage","","Represents an image of an `Instance` including its memory,…",null,null],[12,"memory","","Memory for this `InstanceImage`",116,null],[12,"globals","","Stored globals for this `InstanceImage`",116,null],[12,"execution_state","","`ExecutionStateImage` for this `InstanceImage`",116,null],[3,"CodeVersion","","A `CodeVersion` is a container for a unit of generated…",null,null],[12,"baseline","","Indicates if this code version is the baseline version.",117,null],[12,"msm","","`ModuleStateMap` for this code version.",117,null],[12,"base","","A pointer to the machine code for this module.",117,null],[12,"backend","","The backend used to compile this module.",117,null],[12,"runnable_module","","`RunnableModule` for this code version.",117,null],[4,"WasmAbstractValue","","A kind of wasm or constant value",null,null],[13,"Runtime","","A wasm runtime value",118,null],[13,"Const","","A wasm constant value",118,null],[4,"MachineValue","","A kind of machine value.",null,null],[13,"Undefined","","Undefined.",119,null],[13,"Vmctx","","Vmctx.",119,null],[13,"VmctxDeref","","Vmctx Deref.",119,null],[13,"PreserveRegister","","Preserve Register.",119,null],[13,"CopyStackBPRelative","","Copy Stack BP Relative.",119,null],[13,"ExplicitShadow","","Explicit Shadow.",119,null],[13,"WasmStack","","Wasm Stack.",119,null],[13,"WasmLocal","","Wasm Local.",119,null],[13,"TwoHalves","","Two Halves.",119,null],[4,"SuspendOffset","","A kind of suspend offset.",null,null],[13,"Loop","","A loop.",120,null],[13,"Call","","A call.",120,null],[13,"Trappable","","A trappable.",120,null],[0,"x64_decl","","Declarations for x86-64 registers.",null,null],[4,"GPR","wasmer_runtime_core::state::x64_decl","General-purpose registers.",null,null],[13,"RAX","","RAX register",121,null],[13,"RCX","","RCX register",121,null],[13,"RDX","","RDX register",121,null],[13,"RBX","","RBX register",121,null],[13,"RSP","","RSP register",121,null],[13,"RBP","","RBP register",121,null],[13,"RSI","","RSI register",121,null],[13,"RDI","","RDI register",121,null],[13,"R8","","R8 register",121,null],[13,"R9","","R9 register",121,null],[13,"R10","","R10 register",121,null],[13,"R11","","R11 register",121,null],[13,"R12","","R12 register",121,null],[13,"R13","","R13 register",121,null],[13,"R14","","R14 register",121,null],[13,"R15","","R15 register",121,null],[4,"XMM","","XMM registers.",null,null],[13,"XMM0","","XMM register 0",122,null],[13,"XMM1","","XMM register 1",122,null],[13,"XMM2","","XMM register 2",122,null],[13,"XMM3","","XMM register 3",122,null],[13,"XMM4","","XMM register 4",122,null],[13,"XMM5","","XMM register 5",122,null],[13,"XMM6","","XMM register 6",122,null],[13,"XMM7","","XMM register 7",122,null],[13,"XMM8","","XMM register 8",122,null],[13,"XMM9","","XMM register 9",122,null],[13,"XMM10","","XMM register 10",122,null],[13,"XMM11","","XMM register 11",122,null],[13,"XMM12","","XMM register 12",122,null],[13,"XMM13","","XMM register 13",122,null],[13,"XMM14","","XMM register 14",122,null],[13,"XMM15","","XMM register 15",122,null],[4,"X64Register","","A machine register under the x86-64 architecture.",null,null],[13,"GPR","","General-purpose registers.",123,null],[13,"XMM","","XMM (floating point/SIMD) registers.",123,null],[11,"to_index","","Returns the index of the register.",123,[[["self"]],["registerindex"]]],[11,"from_dwarf_regnum","","Converts a DWARD regnum to X64Register.",123,[[["u16"]],[["option",["x64register"]],["x64register"]]]],[0,"x64","wasmer_runtime_core::state","The x64 state module contains functions to generate state…",null,null],[5,"new_machine_state","wasmer_runtime_core::state::x64","Create a new `MachineState` with default values.",null,[[],["machinestate"]]],[5,"invoke_call_return_on_stack","","Invokes a call return on the stack for the given module…",null,[[["breakpointmap"],["instanceimage"],["usize"],["option",["breakpointmap"]],["ctx"],["modulestatemap"]],[["result",["u64","box"]],["u64"],["box",["any"]]]]],[5,"build_instance_image","","Builds an `InstanceImage` for the given `Ctx` and…",null,[[["executionstateimage"],["ctx"]],["instanceimage"]]],[5,"read_stack","","Returns a `ExecutionStateImage` for the given versions,…",null,[[["option",["u64"]],["u64"],["option",["usize"]],["usize"],["fn"]],["executionstateimage"]]],[11,"lookup_ip","wasmer_runtime_core::state","Looks up an ip from self using the given ip, base, and…",113,[[["fnonce"],["self"],["usize"]],["option"]]],[11,"lookup_call_ip","","Looks up a call ip from self using the given ip and base…",113,[[["self"],["usize"]],["option"]]],[11,"lookup_trappable_ip","","Looks up a trappable ip from self using the given ip and…",113,[[["self"],["usize"]],["option"]]],[11,"lookup_loop_ip","","Looks up a loop ip from self using the given ip and base…",113,[[["self"],["usize"]],["option"]]],[11,"new","","Creates a new `FunctionStateMap` with the given parameters.",111,[[["machinestate"],["usize"],["vec",["wasmabstractvalue"]],["wasmabstractvalue"]],["functionstatemap"]]],[11,"diff","","Creates a `MachineStateDiff` from self and the given…",109,[[["self"],["machinestate"]],["machinestatediff"]]],[11,"build_state","","Creates a `MachineState` from the given `&FunctionStateMap`.",110,[[["self"],["functionstatemap"]],["machinestate"]]],[11,"print_backtrace_if_needed","","Prints a backtrace if the `WASMER_BACKTRACE` environment…",115,[[["self"]]]],[11,"output","","Converts self into a `String`, used for display purposes.",115,[[["self"]],["string"]]],[11,"from_bytes","","Converts a slice of bytes into an `Option<InstanceImage>`",116,[[],[["instanceimage"],["option",["instanceimage"]]]]],[11,"to_bytes","","Converts self into a vector of bytes.",116,[[["self"]],[["vec",["u8"]],["u8"]]]],[0,"prelude","wasmer_runtime_core","The prelude module is a helper module used to bring…",null,null],[6,"Result","","Aliases the standard `Result` type as `Result` within this…",null,null],[17,"VERSION","","The current version of this crate",null,null],[8,"IsExport","","A trait that represents `Export` values.",null,null],[10,"to_export","","Gets self as `Export`.",33,[[["self"]],["export"]]],[14,"func","","Helper macro to create a new `Func` object using the…",null,null],[14,"imports","","Generate an [`ImportObject`] safely.",null,null],[11,"from","wasmer_runtime_core::instance","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","wasmer_runtime_core::module","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","wasmer_runtime_core::typed_func","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"from","wasmer_runtime_core::vm","",124,[[["t"]],["t"]]],[11,"into","","",124,[[],["u"]]],[11,"try_from","","",124,[[["u"]],["result"]]],[11,"try_into","","",124,[[],["result"]]],[11,"borrow","","",124,[[["self"]],["t"]]],[11,"borrow_mut","","",124,[[["self"]],["t"]]],[11,"type_id","","",124,[[["self"]],["typeid"]]],[11,"from","","",125,[[["t"]],["t"]]],[11,"into","","",125,[[],["u"]]],[11,"try_from","","",125,[[["u"]],["result"]]],[11,"try_into","","",125,[[],["result"]]],[11,"borrow","","",125,[[["self"]],["t"]]],[11,"borrow_mut","","",125,[[["self"]],["t"]]],[11,"type_id","","",125,[[["self"]],["typeid"]]],[11,"from","wasmer_runtime_core::cache","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"equivalent","","",3,[[["k"],["self"]],["bool"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","wasmer_runtime_core::codegen","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","wasmer_runtime_core::error","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"to_string","","",15,[[["self"]],["string"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"to_string","","",16,[[["self"]],["string"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_string","","",17,[[["self"]],["string"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"to_string","","",18,[[["self"]],["string"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_string","","",19,[[["self"]],["string"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"to_string","","",20,[[["self"]],["string"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_string","","",21,[[["self"]],["string"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_string","","",22,[[["self"]],["string"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_string","","",23,[[["self"]],["string"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_string","","",24,[[["self"]],["string"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_string","","",25,[[["self"]],["string"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","wasmer_runtime_core::export","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",126,[[["t"]],["t"]]],[11,"into","","",126,[[],["u"]]],[11,"into_iter","","",126,[[],["i"]]],[11,"try_from","","",126,[[["u"]],["result"]]],[11,"try_into","","",126,[[],["result"]]],[11,"borrow","","",126,[[["self"]],["t"]]],[11,"borrow_mut","","",126,[[["self"]],["t"]]],[11,"type_id","","",126,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","wasmer_runtime_core::global","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","wasmer_runtime_core::import","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"into_iter","","",31,[[],["i"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",127,[[["t"]],["t"]]],[11,"into","","",127,[[],["u"]]],[11,"into_iter","","",127,[[],["i"]]],[11,"try_from","","",127,[[["u"]],["result"]]],[11,"try_into","","",127,[[],["result"]]],[11,"borrow","","",127,[[["self"]],["t"]]],[11,"borrow_mut","","",127,[[["self"]],["t"]]],[11,"type_id","","",127,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","wasmer_runtime_core::loader","",128,[[["t"]],["t"]]],[11,"into","","",128,[[],["u"]]],[11,"try_from","","",128,[[["u"]],["result"]]],[11,"try_into","","",128,[[],["result"]]],[11,"borrow","","",128,[[["self"]],["t"]]],[11,"borrow_mut","","",128,[[["self"]],["t"]]],[11,"type_id","","",128,[[["self"]],["typeid"]]],[11,"from","","",129,[[["t"]],["t"]]],[11,"into","","",129,[[],["u"]]],[11,"try_from","","",129,[[["u"]],["result"]]],[11,"try_into","","",129,[[],["result"]]],[11,"borrow","","",129,[[["self"]],["t"]]],[11,"borrow_mut","","",129,[[["self"]],["t"]]],[11,"type_id","","",129,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","wasmer_runtime_core::memory","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",130,[[["t"]],["t"]]],[11,"into","","",130,[[],["u"]]],[11,"try_from","","",130,[[["u"]],["result"]]],[11,"try_into","","",130,[[],["result"]]],[11,"borrow","","",130,[[["self"]],["t"]]],[11,"borrow_mut","","",130,[[["self"]],["t"]]],[11,"type_id","","",130,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",131,[[["t"]],["t"]]],[11,"into","","",131,[[],["u"]]],[11,"try_from","","",131,[[["u"]],["result"]]],[11,"try_into","","",131,[[],["result"]]],[11,"borrow","","",131,[[["self"]],["t"]]],[11,"borrow_mut","","",131,[[["self"]],["t"]]],[11,"type_id","","",131,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"equivalent","","",39,[[["k"],["self"]],["bool"]]],[11,"from","wasmer_runtime_core::memory::ptr","",132,[[["t"]],["t"]]],[11,"into","","",132,[[],["u"]]],[11,"try_from","","",132,[[["u"]],["result"]]],[11,"try_into","","",132,[[],["result"]]],[11,"borrow","","",132,[[["self"]],["t"]]],[11,"borrow_mut","","",132,[[["self"]],["t"]]],[11,"type_id","","",132,[[["self"]],["typeid"]]],[11,"from","","",133,[[["t"]],["t"]]],[11,"into","","",133,[[],["u"]]],[11,"try_from","","",133,[[["u"]],["result"]]],[11,"try_into","","",133,[[],["result"]]],[11,"borrow","","",133,[[["self"]],["t"]]],[11,"borrow_mut","","",133,[[["self"]],["t"]]],[11,"type_id","","",133,[[["self"]],["typeid"]]],[11,"from_ret_array","","",41,[[],["a"]]],[11,"empty_ret_array","","",41,[[]]],[11,"from_c_struct","","",41,[[],["a"]]],[11,"into_c_struct","","",41,[[]]],[11,"types","","",41,[[]]],[11,"call","","",41,[[["wasm"],["nonnull",["func"]],["func"]],[["result",["runtimeerror"]],["runtimeerror"]]]],[11,"report","","",41,[[],[["result",["infallible"]],["infallible"]]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"equivalent","","",41,[[["k"],["self"]],["bool"]]],[11,"from","wasmer_runtime_core::module","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"to_owned","","",48,[[["self"]],["t"]]],[11,"clone_into","","",48,[[["self"],["t"]]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"to_owned","","",49,[[["self"]],["t"]]],[11,"clone_into","","",49,[[["self"],["t"]]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",134,[[["t"]],["t"]]],[11,"into","","",134,[[],["u"]]],[11,"to_owned","","",134,[[["self"]],["t"]]],[11,"clone_into","","",134,[[["self"],["t"]]]],[11,"try_from","","",134,[[["u"]],["result"]]],[11,"try_into","","",134,[[],["result"]]],[11,"borrow","","",134,[[["self"]],["t"]]],[11,"borrow_mut","","",134,[[["self"]],["t"]]],[11,"type_id","","",134,[[["self"]],["typeid"]]],[11,"equivalent","","",134,[[["k"],["self"]],["bool"]]],[11,"from","","",135,[[["t"]],["t"]]],[11,"into","","",135,[[],["u"]]],[11,"to_owned","","",135,[[["self"]],["t"]]],[11,"clone_into","","",135,[[["self"],["t"]]]],[11,"try_from","","",135,[[["u"]],["result"]]],[11,"try_into","","",135,[[],["result"]]],[11,"borrow","","",135,[[["self"]],["t"]]],[11,"borrow_mut","","",135,[[["self"]],["t"]]],[11,"type_id","","",135,[[["self"]],["typeid"]]],[11,"equivalent","","",135,[[["k"],["self"]],["bool"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"to_owned","","",50,[[["self"]],["t"]]],[11,"clone_into","","",50,[[["self"],["t"]]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"equivalent","","",50,[[["k"],["self"]],["bool"]]],[11,"from","wasmer_runtime_core::parse","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","wasmer_runtime_core::structures","",136,[[["t"]],["t"]]],[11,"into","","",136,[[],["u"]]],[11,"to_owned","","",136,[[["self"]],["t"]]],[11,"clone_into","","",136,[[["self"],["t"]]]],[11,"try_from","","",136,[[["u"]],["result"]]],[11,"try_into","","",136,[[],["result"]]],[11,"borrow","","",136,[[["self"]],["t"]]],[11,"borrow_mut","","",136,[[["self"]],["t"]]],[11,"type_id","","",136,[[["self"]],["typeid"]]],[11,"from","","",137,[[["t"]],["t"]]],[11,"into","","",137,[[],["u"]]],[11,"into_iter","","",137,[[],["i"]]],[11,"try_from","","",137,[[["u"]],["result"]]],[11,"try_into","","",137,[[],["result"]]],[11,"borrow","","",137,[[["self"]],["t"]]],[11,"borrow_mut","","",137,[[["self"]],["t"]]],[11,"type_id","","",137,[[["self"]],["typeid"]]],[11,"from","","",138,[[["t"]],["t"]]],[11,"into","","",138,[[],["u"]]],[11,"into_iter","","",138,[[],["i"]]],[11,"try_from","","",138,[[["u"]],["result"]]],[11,"try_into","","",138,[[],["result"]]],[11,"borrow","","",138,[[["self"]],["t"]]],[11,"borrow_mut","","",138,[[["self"]],["t"]]],[11,"type_id","","",138,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"into_iter","","",55,[[],["i"]]],[11,"to_owned","","",55,[[["self"]],["t"]]],[11,"clone_into","","",55,[[["self"],["t"]]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","wasmer_runtime_core::table","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","wasmer_runtime_core::trampoline_x64","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",139,[[["t"]],["t"]]],[11,"into","","",139,[[],["u"]]],[11,"try_from","","",139,[[["u"]],["result"]]],[11,"try_into","","",139,[[],["result"]]],[11,"borrow","","",139,[[["self"]],["t"]]],[11,"borrow_mut","","",139,[[["self"]],["t"]]],[11,"type_id","","",139,[[["self"]],["typeid"]]],[11,"from","","",140,[[["t"]],["t"]]],[11,"into","","",140,[[],["u"]]],[11,"try_from","","",140,[[["u"]],["result"]]],[11,"try_into","","",140,[[],["result"]]],[11,"borrow","","",140,[[["self"]],["t"]]],[11,"borrow_mut","","",140,[[["self"]],["t"]]],[11,"type_id","","",140,[[["self"]],["typeid"]]],[11,"from","","",141,[[["t"]],["t"]]],[11,"into","","",141,[[],["u"]]],[11,"try_from","","",141,[[["u"]],["result"]]],[11,"try_into","","",141,[[],["result"]]],[11,"borrow","","",141,[[["self"]],["t"]]],[11,"borrow_mut","","",141,[[["self"]],["t"]]],[11,"type_id","","",141,[[["self"]],["typeid"]]],[11,"from","wasmer_runtime_core::typed_func","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"to_owned","","",67,[[["self"]],["t"]]],[11,"clone_into","","",67,[[["self"],["t"]]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",142,[[["t"]],["t"]]],[11,"into","","",142,[[],["u"]]],[11,"try_from","","",142,[[["u"]],["result"]]],[11,"try_into","","",142,[[],["result"]]],[11,"borrow","","",142,[[["self"]],["t"]]],[11,"borrow_mut","","",142,[[["self"]],["t"]]],[11,"type_id","","",142,[[["self"]],["typeid"]]],[11,"from","","",143,[[["t"]],["t"]]],[11,"into","","",143,[[],["u"]]],[11,"try_from","","",143,[[["u"]],["result"]]],[11,"try_into","","",143,[[],["result"]]],[11,"borrow","","",143,[[["self"]],["t"]]],[11,"borrow_mut","","",143,[[["self"]],["t"]]],[11,"type_id","","",143,[[["self"]],["typeid"]]],[11,"from","","",144,[[["t"]],["t"]]],[11,"into","","",144,[[],["u"]]],[11,"try_from","","",144,[[["u"]],["result"]]],[11,"try_into","","",144,[[],["result"]]],[11,"borrow","","",144,[[["self"]],["t"]]],[11,"borrow_mut","","",144,[[["self"]],["t"]]],[11,"type_id","","",144,[[["self"]],["typeid"]]],[11,"from","","",145,[[["t"]],["t"]]],[11,"into","","",145,[[],["u"]]],[11,"try_from","","",145,[[["u"]],["result"]]],[11,"try_into","","",145,[[],["result"]]],[11,"borrow","","",145,[[["self"]],["t"]]],[11,"borrow_mut","","",145,[[["self"]],["t"]]],[11,"type_id","","",145,[[["self"]],["typeid"]]],[11,"from","","",146,[[["t"]],["t"]]],[11,"into","","",146,[[],["u"]]],[11,"try_from","","",146,[[["u"]],["result"]]],[11,"try_into","","",146,[[],["result"]]],[11,"borrow","","",146,[[["self"]],["t"]]],[11,"borrow_mut","","",146,[[["self"]],["t"]]],[11,"type_id","","",146,[[["self"]],["typeid"]]],[11,"from","","",147,[[["t"]],["t"]]],[11,"into","","",147,[[],["u"]]],[11,"try_from","","",147,[[["u"]],["result"]]],[11,"try_into","","",147,[[],["result"]]],[11,"borrow","","",147,[[["self"]],["t"]]],[11,"borrow_mut","","",147,[[["self"]],["t"]]],[11,"type_id","","",147,[[["self"]],["typeid"]]],[11,"from","","",148,[[["t"]],["t"]]],[11,"into","","",148,[[],["u"]]],[11,"try_from","","",148,[[["u"]],["result"]]],[11,"try_into","","",148,[[],["result"]]],[11,"borrow","","",148,[[["self"]],["t"]]],[11,"borrow_mut","","",148,[[["self"]],["t"]]],[11,"type_id","","",148,[[["self"]],["typeid"]]],[11,"from","","",149,[[["t"]],["t"]]],[11,"into","","",149,[[],["u"]]],[11,"try_from","","",149,[[["u"]],["result"]]],[11,"try_into","","",149,[[],["result"]]],[11,"borrow","","",149,[[["self"]],["t"]]],[11,"borrow_mut","","",149,[[["self"]],["t"]]],[11,"type_id","","",149,[[["self"]],["typeid"]]],[11,"from","","",150,[[["t"]],["t"]]],[11,"into","","",150,[[],["u"]]],[11,"try_from","","",150,[[["u"]],["result"]]],[11,"try_into","","",150,[[],["result"]]],[11,"borrow","","",150,[[["self"]],["t"]]],[11,"borrow_mut","","",150,[[["self"]],["t"]]],[11,"type_id","","",150,[[["self"]],["typeid"]]],[11,"from","","",151,[[["t"]],["t"]]],[11,"into","","",151,[[],["u"]]],[11,"try_from","","",151,[[["u"]],["result"]]],[11,"try_into","","",151,[[],["result"]]],[11,"borrow","","",151,[[["self"]],["t"]]],[11,"borrow_mut","","",151,[[["self"]],["t"]]],[11,"type_id","","",151,[[["self"]],["typeid"]]],[11,"from","","",152,[[["t"]],["t"]]],[11,"into","","",152,[[],["u"]]],[11,"try_from","","",152,[[["u"]],["result"]]],[11,"try_into","","",152,[[],["result"]]],[11,"borrow","","",152,[[["self"]],["t"]]],[11,"borrow_mut","","",152,[[["self"]],["t"]]],[11,"type_id","","",152,[[["self"]],["typeid"]]],[11,"from","","",153,[[["t"]],["t"]]],[11,"into","","",153,[[],["u"]]],[11,"try_from","","",153,[[["u"]],["result"]]],[11,"try_into","","",153,[[],["result"]]],[11,"borrow","","",153,[[["self"]],["t"]]],[11,"borrow_mut","","",153,[[["self"]],["t"]]],[11,"type_id","","",153,[[["self"]],["typeid"]]],[11,"from","","",154,[[["t"]],["t"]]],[11,"into","","",154,[[],["u"]]],[11,"try_from","","",154,[[["u"]],["result"]]],[11,"try_into","","",154,[[],["result"]]],[11,"borrow","","",154,[[["self"]],["t"]]],[11,"borrow_mut","","",154,[[["self"]],["t"]]],[11,"type_id","","",154,[[["self"]],["typeid"]]],[11,"from","","",155,[[["t"]],["t"]]],[11,"into","","",155,[[],["u"]]],[11,"try_from","","",155,[[["u"]],["result"]]],[11,"try_into","","",155,[[],["result"]]],[11,"borrow","","",155,[[["self"]],["t"]]],[11,"borrow_mut","","",155,[[["self"]],["t"]]],[11,"type_id","","",155,[[["self"]],["typeid"]]],[11,"from","","",156,[[["t"]],["t"]]],[11,"into","","",156,[[],["u"]]],[11,"try_from","","",156,[[["u"]],["result"]]],[11,"try_into","","",156,[[],["result"]]],[11,"borrow","","",156,[[["self"]],["t"]]],[11,"borrow_mut","","",156,[[["self"]],["t"]]],[11,"type_id","","",156,[[["self"]],["typeid"]]],[11,"from","","",157,[[["t"]],["t"]]],[11,"into","","",157,[[],["u"]]],[11,"try_from","","",157,[[["u"]],["result"]]],[11,"try_into","","",157,[[],["result"]]],[11,"borrow","","",157,[[["self"]],["t"]]],[11,"borrow_mut","","",157,[[["self"]],["t"]]],[11,"type_id","","",157,[[["self"]],["typeid"]]],[11,"from","","",158,[[["t"]],["t"]]],[11,"into","","",158,[[],["u"]]],[11,"try_from","","",158,[[["u"]],["result"]]],[11,"try_into","","",158,[[],["result"]]],[11,"borrow","","",158,[[["self"]],["t"]]],[11,"borrow_mut","","",158,[[["self"]],["t"]]],[11,"type_id","","",158,[[["self"]],["typeid"]]],[11,"from","","",159,[[["t"]],["t"]]],[11,"into","","",159,[[],["u"]]],[11,"try_from","","",159,[[["u"]],["result"]]],[11,"try_into","","",159,[[],["result"]]],[11,"borrow","","",159,[[["self"]],["t"]]],[11,"borrow_mut","","",159,[[["self"]],["t"]]],[11,"type_id","","",159,[[["self"]],["typeid"]]],[11,"from","","",160,[[["t"]],["t"]]],[11,"into","","",160,[[],["u"]]],[11,"try_from","","",160,[[["u"]],["result"]]],[11,"try_into","","",160,[[],["result"]]],[11,"borrow","","",160,[[["self"]],["t"]]],[11,"borrow_mut","","",160,[[["self"]],["t"]]],[11,"type_id","","",160,[[["self"]],["typeid"]]],[11,"from","","",161,[[["t"]],["t"]]],[11,"into","","",161,[[],["u"]]],[11,"try_from","","",161,[[["u"]],["result"]]],[11,"try_into","","",161,[[],["result"]]],[11,"borrow","","",161,[[["self"]],["t"]]],[11,"borrow_mut","","",161,[[["self"]],["t"]]],[11,"type_id","","",161,[[["self"]],["typeid"]]],[11,"from","","",162,[[["t"]],["t"]]],[11,"into","","",162,[[],["u"]]],[11,"try_from","","",162,[[["u"]],["result"]]],[11,"try_into","","",162,[[],["result"]]],[11,"borrow","","",162,[[["self"]],["t"]]],[11,"borrow_mut","","",162,[[["self"]],["t"]]],[11,"type_id","","",162,[[["self"]],["typeid"]]],[11,"from","","",163,[[["t"]],["t"]]],[11,"into","","",163,[[],["u"]]],[11,"try_from","","",163,[[["u"]],["result"]]],[11,"try_into","","",163,[[],["result"]]],[11,"borrow","","",163,[[["self"]],["t"]]],[11,"borrow_mut","","",163,[[["self"]],["t"]]],[11,"type_id","","",163,[[["self"]],["typeid"]]],[11,"from","","",164,[[["t"]],["t"]]],[11,"into","","",164,[[],["u"]]],[11,"try_from","","",164,[[["u"]],["result"]]],[11,"try_into","","",164,[[],["result"]]],[11,"borrow","","",164,[[["self"]],["t"]]],[11,"borrow_mut","","",164,[[["self"]],["t"]]],[11,"type_id","","",164,[[["self"]],["typeid"]]],[11,"from","","",165,[[["t"]],["t"]]],[11,"into","","",165,[[],["u"]]],[11,"try_from","","",165,[[["u"]],["result"]]],[11,"try_into","","",165,[[],["result"]]],[11,"borrow","","",165,[[["self"]],["t"]]],[11,"borrow_mut","","",165,[[["self"]],["t"]]],[11,"type_id","","",165,[[["self"]],["typeid"]]],[11,"from","","",166,[[["t"]],["t"]]],[11,"into","","",166,[[],["u"]]],[11,"try_from","","",166,[[["u"]],["result"]]],[11,"try_into","","",166,[[],["result"]]],[11,"borrow","","",166,[[["self"]],["t"]]],[11,"borrow_mut","","",166,[[["self"]],["t"]]],[11,"type_id","","",166,[[["self"]],["typeid"]]],[11,"from","","",167,[[["t"]],["t"]]],[11,"into","","",167,[[],["u"]]],[11,"try_from","","",167,[[["u"]],["result"]]],[11,"try_into","","",167,[[],["result"]]],[11,"borrow","","",167,[[["self"]],["t"]]],[11,"borrow_mut","","",167,[[["self"]],["t"]]],[11,"type_id","","",167,[[["self"]],["typeid"]]],[11,"from","","",168,[[["t"]],["t"]]],[11,"into","","",168,[[],["u"]]],[11,"try_from","","",168,[[["u"]],["result"]]],[11,"try_into","","",168,[[],["result"]]],[11,"borrow","","",168,[[["self"]],["t"]]],[11,"borrow_mut","","",168,[[["self"]],["t"]]],[11,"type_id","","",168,[[["self"]],["typeid"]]],[11,"from","","",169,[[["t"]],["t"]]],[11,"into","","",169,[[],["u"]]],[11,"try_from","","",169,[[["u"]],["result"]]],[11,"try_into","","",169,[[],["result"]]],[11,"borrow","","",169,[[["self"]],["t"]]],[11,"borrow_mut","","",169,[[["self"]],["t"]]],[11,"type_id","","",169,[[["self"]],["typeid"]]],[11,"from","","",170,[[["t"]],["t"]]],[11,"into","","",170,[[],["u"]]],[11,"try_from","","",170,[[["u"]],["result"]]],[11,"try_into","","",170,[[],["result"]]],[11,"borrow","","",170,[[["self"]],["t"]]],[11,"borrow_mut","","",170,[[["self"]],["t"]]],[11,"type_id","","",170,[[["self"]],["typeid"]]],[11,"from","","",171,[[["t"]],["t"]]],[11,"into","","",171,[[],["u"]]],[11,"try_from","","",171,[[["u"]],["result"]]],[11,"try_into","","",171,[[],["result"]]],[11,"borrow","","",171,[[["self"]],["t"]]],[11,"borrow_mut","","",171,[[["self"]],["t"]]],[11,"type_id","","",171,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_string","","",63,[[["self"]],["string"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","wasmer_runtime_core::types","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_owned","","",69,[[["self"]],["t"]]],[11,"clone_into","","",69,[[["self"],["t"]]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"to_owned","","",70,[[["self"]],["t"]]],[11,"clone_into","","",70,[[["self"],["t"]]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"equivalent","","",70,[[["k"],["self"]],["bool"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"to_owned","","",71,[[["self"]],["t"]]],[11,"clone_into","","",71,[[["self"],["t"]]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"to_owned","","",72,[[["self"]],["t"]]],[11,"clone_into","","",72,[[["self"],["t"]]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"equivalent","","",72,[[["k"],["self"]],["bool"]]],[11,"from","","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"to_owned","","",81,[[["self"]],["t"]]],[11,"clone_into","","",81,[[["self"],["t"]]]],[11,"to_string","","",81,[[["self"]],["string"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"equivalent","","",81,[[["k"],["self"]],["bool"]]],[11,"from","","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"to_owned","","",82,[[["self"]],["t"]]],[11,"clone_into","","",82,[[["self"],["t"]]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"equivalent","","",82,[[["k"],["self"]],["bool"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"to_owned","","",83,[[["self"]],["t"]]],[11,"clone_into","","",83,[[["self"],["t"]]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"equivalent","","",83,[[["k"],["self"]],["bool"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,[[["self"],["t"]]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"equivalent","","",84,[[["k"],["self"]],["bool"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"to_owned","","",85,[[["self"]],["t"]]],[11,"clone_into","","",85,[[["self"],["t"]]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"equivalent","","",85,[[["k"],["self"]],["bool"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"to_owned","","",86,[[["self"]],["t"]]],[11,"clone_into","","",86,[[["self"],["t"]]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"equivalent","","",86,[[["k"],["self"]],["bool"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"to_owned","","",87,[[["self"]],["t"]]],[11,"clone_into","","",87,[[["self"],["t"]]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"equivalent","","",87,[[["k"],["self"]],["bool"]]],[11,"from","","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"to_owned","","",88,[[["self"]],["t"]]],[11,"clone_into","","",88,[[["self"],["t"]]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"equivalent","","",88,[[["k"],["self"]],["bool"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"to_owned","","",89,[[["self"]],["t"]]],[11,"clone_into","","",89,[[["self"],["t"]]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"equivalent","","",89,[[["k"],["self"]],["bool"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"to_owned","","",90,[[["self"]],["t"]]],[11,"clone_into","","",90,[[["self"],["t"]]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"equivalent","","",90,[[["k"],["self"]],["bool"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"to_owned","","",91,[[["self"]],["t"]]],[11,"clone_into","","",91,[[["self"],["t"]]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"equivalent","","",91,[[["k"],["self"]],["bool"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"to_owned","","",92,[[["self"]],["t"]]],[11,"clone_into","","",92,[[["self"],["t"]]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"equivalent","","",92,[[["k"],["self"]],["bool"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"to_owned","","",93,[[["self"]],["t"]]],[11,"clone_into","","",93,[[["self"],["t"]]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"equivalent","","",93,[[["k"],["self"]],["bool"]]],[11,"from","","",172,[[["t"]],["t"]]],[11,"into","","",172,[[],["u"]]],[11,"to_owned","","",172,[[["self"]],["t"]]],[11,"clone_into","","",172,[[["self"],["t"]]]],[11,"try_from","","",172,[[["u"]],["result"]]],[11,"try_into","","",172,[[],["result"]]],[11,"borrow","","",172,[[["self"]],["t"]]],[11,"borrow_mut","","",172,[[["self"]],["t"]]],[11,"type_id","","",172,[[["self"]],["typeid"]]],[11,"equivalent","","",172,[[["k"],["self"]],["bool"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"to_owned","","",73,[[["self"]],["t"]]],[11,"clone_into","","",73,[[["self"],["t"]]]],[11,"to_string","","",73,[[["self"]],["string"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"equivalent","","",73,[[["k"],["self"]],["bool"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"to_owned","","",74,[[["self"]],["t"]]],[11,"clone_into","","",74,[[["self"],["t"]]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"to_owned","","",75,[[["self"]],["t"]]],[11,"clone_into","","",75,[[["self"],["t"]]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"equivalent","","",75,[[["k"],["self"]],["bool"]]],[11,"from","","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","wasmer_runtime_core::units","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"to_owned","","",94,[[["self"]],["t"]]],[11,"clone_into","","",94,[[["self"],["t"]]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"equivalent","","",94,[[["k"],["self"]],["bool"]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"to_owned","","",95,[[["self"]],["t"]]],[11,"clone_into","","",95,[[["self"],["t"]]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"equivalent","","",95,[[["k"],["self"]],["bool"]]],[11,"from","wasmer_runtime_core::vm","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"from","","",173,[[["t"]],["t"]]],[11,"into","","",173,[[],["u"]]],[11,"try_from","","",173,[[["u"]],["result"]]],[11,"try_into","","",173,[[],["result"]]],[11,"borrow","","",173,[[["self"]],["t"]]],[11,"borrow_mut","","",173,[[["self"]],["t"]]],[11,"type_id","","",173,[[["self"]],["typeid"]]],[11,"from","","",174,[[["t"]],["t"]]],[11,"into","","",174,[[],["u"]]],[11,"try_from","","",174,[[["u"]],["result"]]],[11,"try_into","","",174,[[],["result"]]],[11,"borrow","","",174,[[["self"]],["t"]]],[11,"borrow_mut","","",174,[[["self"]],["t"]]],[11,"type_id","","",174,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"to_owned","","",105,[[["self"]],["t"]]],[11,"clone_into","","",105,[[["self"],["t"]]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"to_owned","","",98,[[["self"]],["t"]]],[11,"clone_into","","",98,[[["self"],["t"]]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"to_owned","","",99,[[["self"]],["t"]]],[11,"clone_into","","",99,[[["self"],["t"]]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"to_owned","","",100,[[["self"]],["t"]]],[11,"clone_into","","",100,[[["self"],["t"]]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"to_owned","","",101,[[["self"]],["t"]]],[11,"clone_into","","",101,[[["self"],["t"]]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[],["u"]]],[11,"to_owned","","",102,[[["self"]],["t"]]],[11,"clone_into","","",102,[[["self"],["t"]]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"from","wasmer_runtime_core::fault","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"to_owned","","",106,[[["self"]],["t"]]],[11,"clone_into","","",106,[[["self"],["t"]]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"from","","",107,[[["t"]],["t"]]],[11,"into","","",107,[[],["u"]]],[11,"to_owned","","",107,[[["self"]],["t"]]],[11,"clone_into","","",107,[[["self"],["t"]]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"from","wasmer_runtime_core::state","",108,[[["t"]],["t"]]],[11,"into","","",108,[[],["u"]]],[11,"to_owned","","",108,[[["self"]],["t"]]],[11,"clone_into","","",108,[[["self"],["t"]]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"equivalent","","",108,[[["k"],["self"]],["bool"]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[],["u"]]],[11,"to_owned","","",109,[[["self"]],["t"]]],[11,"clone_into","","",109,[[["self"],["t"]]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[],["u"]]],[11,"to_owned","","",110,[[["self"]],["t"]]],[11,"clone_into","","",110,[[["self"],["t"]]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[],["u"]]],[11,"to_owned","","",111,[[["self"]],["t"]]],[11,"clone_into","","",111,[[["self"],["t"]]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[],["u"]]],[11,"to_owned","","",112,[[["self"]],["t"]]],[11,"clone_into","","",112,[[["self"],["t"]]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[],["u"]]],[11,"to_owned","","",113,[[["self"]],["t"]]],[11,"clone_into","","",113,[[["self"],["t"]]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[],["u"]]],[11,"to_owned","","",114,[[["self"]],["t"]]],[11,"clone_into","","",114,[[["self"],["t"]]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[],["u"]]],[11,"to_owned","","",115,[[["self"]],["t"]]],[11,"clone_into","","",115,[[["self"],["t"]]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[],["u"]]],[11,"to_owned","","",116,[[["self"]],["t"]]],[11,"clone_into","","",116,[[["self"],["t"]]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[],["u"]]],[11,"to_owned","","",117,[[["self"]],["t"]]],[11,"clone_into","","",117,[[["self"],["t"]]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"from","","",118,[[["t"]],["t"]]],[11,"into","","",118,[[],["u"]]],[11,"to_owned","","",118,[[["self"]],["t"]]],[11,"clone_into","","",118,[[["self"],["t"]]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"equivalent","","",118,[[["k"],["self"]],["bool"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[],["u"]]],[11,"to_owned","","",119,[[["self"]],["t"]]],[11,"clone_into","","",119,[[["self"],["t"]]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"equivalent","","",119,[[["k"],["self"]],["bool"]]],[11,"from","","",120,[[["t"]],["t"]]],[11,"into","","",120,[[],["u"]]],[11,"to_owned","","",120,[[["self"]],["t"]]],[11,"clone_into","","",120,[[["self"],["t"]]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"from","wasmer_runtime_core::state::x64_decl","",121,[[["t"]],["t"]]],[11,"into","","",121,[[],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,[[["self"],["t"]]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"equivalent","","",121,[[["k"],["self"]],["bool"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[],["u"]]],[11,"to_owned","","",122,[[["self"]],["t"]]],[11,"clone_into","","",122,[[["self"],["t"]]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"equivalent","","",122,[[["k"],["self"]],["bool"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,[[["self"],["t"]]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"equivalent","","",123,[[["k"],["self"]],["bool"]]],[11,"get_export","wasmer_runtime_core::import","",34,[[["str"],["self"]],[["option",["export"]],["export"]]]],[11,"get_exports","","",34,[[["self"]],["vec"]]],[11,"maybe_insert","","",34,[[["str"],["self"],["export"]],["option"]]],[11,"get_export","wasmer_runtime_core::instance","",0,[[["str"],["self"]],[["option",["export"]],["export"]]]],[11,"get_exports","","",0,[[["self"]],["vec"]]],[11,"maybe_insert","","",0,[[["str"],["self"],["export"]],["option"]]],[11,"to_export","wasmer_runtime_core::global","",30,[[["self"]],["export"]]],[11,"to_export","wasmer_runtime_core::export","",28,[[["self"]],["export"]]],[11,"to_export","wasmer_runtime_core::memory","",44,[[["self"]],["export"]]],[11,"to_export","wasmer_runtime_core::table","",60,[[["self"]],["export"]]],[11,"to_export","wasmer_runtime_core::typed_func","",68,[[["self"]],["export"]]],[11,"load","wasmer_runtime_core::loader","",128,[[["runnablemodule"],["moduleinfo"],["ctx"],["self"]],["result"]]],[11,"call","","",129,[[["self"],["usize"]],[["result",["u128"]],["u128"]]]],[11,"to_native","wasmer_runtime_core::memory::ptr","",41,[[]]],[11,"from_native","","",41,[[],["self"]]],[11,"drop","wasmer_runtime_core::vm","",125,[[["self"]]]],[11,"drop","wasmer_runtime_core::loader","",38,[[["self"]]]],[11,"drop","wasmer_runtime_core::vm","",96,[[["self"]]]],[11,"from","wasmer_runtime_core::cache","",2,[[["error"]],["self"]]],[11,"from","wasmer_runtime_core::error","",21,[[["compileerror"]],["self"]]],[11,"from","","",21,[[["runtimeerror"]],["self"]]],[11,"from","","",21,[[["resolveerror"]],["self"]]],[11,"from","","",21,[[["callerror"]],["self"]]],[11,"from","","",21,[[["creationerror"]],["self"]]],[11,"from","","",21,[[["vec",["linkerror"]],["linkerror"]],["self"]]],[11,"from","","",19,[[["runtimeerror"]],["self"]]],[11,"from","","",19,[[["resolveerror"]],["self"]]],[11,"from","","",24,[[["error"]],["self"]]],[11,"from","","",26,[[["binaryreadererror"]],["self"]]],[11,"from","","",15,[[["loaderror"]],["compileerror"]]],[11,"from","wasmer_runtime_core::parse","",54,[[["binaryreadererror"]],["loaderror"]]],[11,"from","wasmer_runtime_core::table","",59,[[["dynfunc"]],["self"]]],[11,"from","wasmer_runtime_core::types","",74,[[["i32"]],["self"]]],[11,"from","","",74,[[["i64"]],["self"]]],[11,"from","","",74,[[["f32"]],["self"]]],[11,"from","","",74,[[["f64"]],["self"]]],[11,"from","","",74,[[["u128"]],["self"]]],[11,"from","wasmer_runtime_core::units","",95,[[["pages"]],["bytes"]]],[11,"from","","",94,[[["bytes"]],["pages"]]],[11,"into","wasmer_runtime_core::error","",23,[[],["growerror"]]],[11,"into","","",24,[[],["growerror"]]],[11,"into","","",25,[[],["growerror"]]],[11,"extend","wasmer_runtime_core::import","",31,[[["intoiterator"],["self"]]]],[11,"extend","wasmer_runtime_core::structures","",55,[[["self"],["intoiterator"]]]],[11,"into_iter","wasmer_runtime_core::import","",31,[[]]],[11,"into_iter","wasmer_runtime_core::structures","",55,[[]]],[11,"next","wasmer_runtime_core::export","",126,[[["self"]],["option"]]],[11,"next","wasmer_runtime_core::import","",127,[[["self"]],["option"]]],[11,"next","wasmer_runtime_core::structures","",137,[[["self"]],["option"]]],[11,"next","","",138,[[["self"]],["option"]]],[11,"clone","wasmer_runtime_core::cache","",3,[[["self"]],["wasmhash"]]],[11,"clone","wasmer_runtime_core::error","",15,[[["self"]],["compileerror"]]],[11,"clone","","",16,[[["self"]],["linkerror"]]],[11,"clone","","",18,[[["self"]],["resolveerror"]]],[11,"clone","","",20,[[["self"]],["creationerror"]]],[11,"clone","wasmer_runtime_core::export","",27,[[["self"]],["context"]]],[11,"clone","","",28,[[["self"]],["export"]]],[11,"clone","","",29,[[["self"]],["funcpointer"]]],[11,"clone","wasmer_runtime_core::global","",30,[[["self"]],["self"]]],[11,"clone","wasmer_runtime_core::memory::ptr","",41,[[["self"]],["self"]]],[11,"clone","wasmer_runtime_core::memory","",44,[[["self"]],["memory"]]],[11,"clone","","",39,[[["self"]],["memorytype"]]],[11,"clone","","",45,[[["self"]],["self"]]],[11,"clone","","",46,[[["self"]],["self"]]],[11,"clone","wasmer_runtime_core::module","",47,[[["self"]],["moduleinfo"]]],[11,"clone","","",51,[[["self"]],["self"]]],[11,"clone","","",50,[[["self"]],["exportindex"]]],[11,"clone","","",48,[[["self"]],["datainitializer"]]],[11,"clone","","",49,[[["self"]],["tableinitializer"]]],[11,"clone","","",53,[[["self"]],["stringtable"]]],[11,"clone","","",134,[[["self"]],["namespaceindex"]]],[11,"clone","","",135,[[["self"]],["nameindex"]]],[11,"clone","wasmer_runtime_core::structures","",136,[[["self"]],["boxedmap"]]],[11,"clone","","",55,[[["self"]],["map"]]],[11,"clone","wasmer_runtime_core::table","",60,[[["self"]],["self"]]],[11,"clone","wasmer_runtime_core::typed_func","",67,[[["self"]],["wasm"]]],[11,"clone","wasmer_runtime_core::types","",73,[[["self"]],["type"]]],[11,"clone","","",74,[[["self"]],["value"]]],[11,"clone","","",75,[[["self"]],["elementtype"]]],[11,"clone","","",69,[[["self"]],["tabledescriptor"]]],[11,"clone","","",76,[[["self"]],["initializer"]]],[11,"clone","","",70,[[["self"]],["globaldescriptor"]]],[11,"clone","","",71,[[["self"]],["globalinit"]]],[11,"clone","","",72,[[["self"]],["memorydescriptor"]]],[11,"clone","","",81,[[["self"]],["funcsig"]]],[11,"clone","","",82,[[["self"]],["funcindex"]]],[11,"clone","","",83,[[["self"]],["localfuncindex"]]],[11,"clone","","",84,[[["self"]],["importedfuncindex"]]],[11,"clone","","",85,[[["self"]],["memoryindex"]]],[11,"clone","","",86,[[["self"]],["localmemoryindex"]]],[11,"clone","","",87,[[["self"]],["importedmemoryindex"]]],[11,"clone","","",88,[[["self"]],["tableindex"]]],[11,"clone","","",89,[[["self"]],["localtableindex"]]],[11,"clone","","",90,[[["self"]],["importedtableindex"]]],[11,"clone","","",91,[[["self"]],["globalindex"]]],[11,"clone","","",92,[[["self"]],["localglobalindex"]]],[11,"clone","","",93,[[["self"]],["importedglobalindex"]]],[11,"clone","","",172,[[["self"]],["sigindex"]]],[11,"clone","wasmer_runtime_core::units","",94,[[["self"]],["pages"]]],[11,"clone","","",95,[[["self"]],["bytes"]]],[11,"clone","wasmer_runtime_core::vm","",105,[[["self"]],["importedfunc"]]],[11,"clone","","",98,[[["self"]],["localtable"]]],[11,"clone","","",99,[[["self"]],["localmemory"]]],[11,"clone","","",100,[[["self"]],["localglobal"]]],[11,"clone","","",101,[[["self"]],["sigid"]]],[11,"clone","","",102,[[["self"]],["anyfunc"]]],[11,"clone","wasmer_runtime_core::fault","",106,[[["self"]],["boundaryregisterpreservation"]]],[11,"clone","","",107,[[["self"]],["faultinfo"]]],[11,"clone","wasmer_runtime_core::state","",108,[[["self"]],["registerindex"]]],[11,"clone","","",118,[[["self"]],["wasmabstractvalue"]]],[11,"clone","","",109,[[["self"]],["machinestate"]]],[11,"clone","","",110,[[["self"]],["machinestatediff"]]],[11,"clone","","",119,[[["self"]],["machinevalue"]]],[11,"clone","","",111,[[["self"]],["functionstatemap"]]],[11,"clone","","",120,[[["self"]],["suspendoffset"]]],[11,"clone","","",112,[[["self"]],["offsetinfo"]]],[11,"clone","","",113,[[["self"]],["modulestatemap"]]],[11,"clone","","",114,[[["self"]],["wasmfunctionstatedump"]]],[11,"clone","","",115,[[["self"]],["executionstateimage"]]],[11,"clone","","",116,[[["self"]],["instanceimage"]]],[11,"clone","","",117,[[["self"]],["codeversion"]]],[11,"clone","wasmer_runtime_core::state::x64_decl","",121,[[["self"]],["gpr"]]],[11,"clone","","",122,[[["self"]],["xmm"]]],[11,"clone","","",123,[[["self"]],["x64register"]]],[11,"default","wasmer_runtime_core::fault","",106,[[],["boundaryregisterpreservation"]]],[11,"default","wasmer_runtime_core::state","",110,[[],["machinestatediff"]]],[11,"cmp","wasmer_runtime_core::types","",82,[[["funcindex"],["self"]],["ordering"]]],[11,"cmp","","",83,[[["self"],["localfuncindex"]],["ordering"]]],[11,"cmp","","",84,[[["importedfuncindex"],["self"]],["ordering"]]],[11,"cmp","","",85,[[["memoryindex"],["self"]],["ordering"]]],[11,"cmp","","",86,[[["self"],["localmemoryindex"]],["ordering"]]],[11,"cmp","","",87,[[["self"],["importedmemoryindex"]],["ordering"]]],[11,"cmp","","",88,[[["self"],["tableindex"]],["ordering"]]],[11,"cmp","","",89,[[["self"],["localtableindex"]],["ordering"]]],[11,"cmp","","",90,[[["importedtableindex"],["self"]],["ordering"]]],[11,"cmp","","",91,[[["globalindex"],["self"]],["ordering"]]],[11,"cmp","","",92,[[["localglobalindex"],["self"]],["ordering"]]],[11,"cmp","","",93,[[["self"],["importedglobalindex"]],["ordering"]]],[11,"cmp","wasmer_runtime_core::units","",94,[[["pages"],["self"]],["ordering"]]],[11,"cmp","","",95,[[["self"],["bytes"]],["ordering"]]],[11,"cmp","wasmer_runtime_core::state::x64_decl","",121,[[["gpr"],["self"]],["ordering"]]],[11,"cmp","","",122,[[["xmm"],["self"]],["ordering"]]],[11,"eq","wasmer_runtime_core::cache","",3,[[["wasmhash"],["self"]],["bool"]]],[11,"ne","","",3,[[["wasmhash"],["self"]],["bool"]]],[11,"eq","wasmer_runtime_core::error","",15,[[["compileerror"],["self"]],["bool"]]],[11,"eq","","",16,[[["self"],["linkerror"]],["bool"]]],[11,"eq","","",17,[[["runtimeerror"],["self"]],["bool"]]],[11,"eq","","",18,[[["self"],["resolveerror"]],["bool"]]],[11,"eq","","",19,[[["self"],["callerror"]],["bool"]]],[11,"eq","","",20,[[["self"],["creationerror"]],["bool"]]],[11,"eq","","",21,[[["self"],["error"]],["bool"]]],[11,"eq","wasmer_runtime_core::memory::ptr","",41,[[["self"]],["bool"]]],[11,"eq","wasmer_runtime_core::memory","",39,[[["memorytype"],["self"]],["bool"]]],[11,"eq","wasmer_runtime_core::module","",50,[[["exportindex"],["self"]],["bool"]]],[11,"ne","","",50,[[["exportindex"],["self"]],["bool"]]],[11,"eq","","",134,[[["namespaceindex"],["self"]],["bool"]]],[11,"ne","","",134,[[["namespaceindex"],["self"]],["bool"]]],[11,"eq","","",135,[[["nameindex"],["self"]],["bool"]]],[11,"ne","","",135,[[["nameindex"],["self"]],["bool"]]],[11,"eq","wasmer_runtime_core::types","",73,[[["self"],["type"]],["bool"]]],[11,"eq","","",74,[[["value"],["self"]],["bool"]]],[11,"ne","","",74,[[["value"],["self"]],["bool"]]],[11,"eq","","",75,[[["self"],["elementtype"]],["bool"]]],[11,"eq","","",76,[[["initializer"],["self"]],["bool"]]],[11,"ne","","",76,[[["initializer"],["self"]],["bool"]]],[11,"eq","","",70,[[["self"],["globaldescriptor"]],["bool"]]],[11,"ne","","",70,[[["self"],["globaldescriptor"]],["bool"]]],[11,"eq","","",72,[[["memorydescriptor"],["self"]],["bool"]]],[11,"ne","","",72,[[["memorydescriptor"],["self"]],["bool"]]],[11,"eq","","",81,[[["funcsig"],["self"]],["bool"]]],[11,"ne","","",81,[[["funcsig"],["self"]],["bool"]]],[11,"eq","","",82,[[["funcindex"],["self"]],["bool"]]],[11,"ne","","",82,[[["funcindex"],["self"]],["bool"]]],[11,"eq","","",83,[[["self"],["localfuncindex"]],["bool"]]],[11,"ne","","",83,[[["self"],["localfuncindex"]],["bool"]]],[11,"eq","","",84,[[["importedfuncindex"],["self"]],["bool"]]],[11,"ne","","",84,[[["importedfuncindex"],["self"]],["bool"]]],[11,"eq","","",85,[[["memoryindex"],["self"]],["bool"]]],[11,"ne","","",85,[[["memoryindex"],["self"]],["bool"]]],[11,"eq","","",86,[[["self"],["localmemoryindex"]],["bool"]]],[11,"ne","","",86,[[["self"],["localmemoryindex"]],["bool"]]],[11,"eq","","",87,[[["self"],["importedmemoryindex"]],["bool"]]],[11,"ne","","",87,[[["self"],["importedmemoryindex"]],["bool"]]],[11,"eq","","",88,[[["self"],["tableindex"]],["bool"]]],[11,"ne","","",88,[[["self"],["tableindex"]],["bool"]]],[11,"eq","","",89,[[["self"],["localtableindex"]],["bool"]]],[11,"ne","","",89,[[["self"],["localtableindex"]],["bool"]]],[11,"eq","","",90,[[["importedtableindex"],["self"]],["bool"]]],[11,"ne","","",90,[[["importedtableindex"],["self"]],["bool"]]],[11,"eq","","",91,[[["globalindex"],["self"]],["bool"]]],[11,"ne","","",91,[[["globalindex"],["self"]],["bool"]]],[11,"eq","","",92,[[["localglobalindex"],["self"]],["bool"]]],[11,"ne","","",92,[[["localglobalindex"],["self"]],["bool"]]],[11,"eq","","",93,[[["self"],["importedglobalindex"]],["bool"]]],[11,"ne","","",93,[[["self"],["importedglobalindex"]],["bool"]]],[11,"eq","","",172,[[["sigindex"],["self"]],["bool"]]],[11,"ne","","",172,[[["sigindex"],["self"]],["bool"]]],[11,"eq","wasmer_runtime_core::units","",94,[[["pages"],["self"]],["bool"]]],[11,"ne","","",94,[[["pages"],["self"]],["bool"]]],[11,"eq","","",95,[[["self"],["bytes"]],["bool"]]],[11,"ne","","",95,[[["self"],["bytes"]],["bool"]]],[11,"eq","wasmer_runtime_core::state","",108,[[["registerindex"],["self"]],["bool"]]],[11,"ne","","",108,[[["registerindex"],["self"]],["bool"]]],[11,"eq","","",118,[[["wasmabstractvalue"],["self"]],["bool"]]],[11,"ne","","",118,[[["wasmabstractvalue"],["self"]],["bool"]]],[11,"eq","","",119,[[["self"],["machinevalue"]],["bool"]]],[11,"ne","","",119,[[["self"],["machinevalue"]],["bool"]]],[11,"eq","wasmer_runtime_core::state::x64_decl","",121,[[["gpr"],["self"]],["bool"]]],[11,"eq","","",122,[[["xmm"],["self"]],["bool"]]],[11,"eq","","",123,[[["self"],["x64register"]],["bool"]]],[11,"ne","","",123,[[["self"],["x64register"]],["bool"]]],[11,"partial_cmp","wasmer_runtime_core::types","",82,[[["funcindex"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",82,[[["funcindex"],["self"]],["bool"]]],[11,"le","","",82,[[["funcindex"],["self"]],["bool"]]],[11,"gt","","",82,[[["funcindex"],["self"]],["bool"]]],[11,"ge","","",82,[[["funcindex"],["self"]],["bool"]]],[11,"partial_cmp","","",83,[[["self"],["localfuncindex"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",83,[[["self"],["localfuncindex"]],["bool"]]],[11,"le","","",83,[[["self"],["localfuncindex"]],["bool"]]],[11,"gt","","",83,[[["self"],["localfuncindex"]],["bool"]]],[11,"ge","","",83,[[["self"],["localfuncindex"]],["bool"]]],[11,"partial_cmp","","",84,[[["importedfuncindex"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",84,[[["importedfuncindex"],["self"]],["bool"]]],[11,"le","","",84,[[["importedfuncindex"],["self"]],["bool"]]],[11,"gt","","",84,[[["importedfuncindex"],["self"]],["bool"]]],[11,"ge","","",84,[[["importedfuncindex"],["self"]],["bool"]]],[11,"partial_cmp","","",85,[[["memoryindex"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",85,[[["memoryindex"],["self"]],["bool"]]],[11,"le","","",85,[[["memoryindex"],["self"]],["bool"]]],[11,"gt","","",85,[[["memoryindex"],["self"]],["bool"]]],[11,"ge","","",85,[[["memoryindex"],["self"]],["bool"]]],[11,"partial_cmp","","",86,[[["self"],["localmemoryindex"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",86,[[["self"],["localmemoryindex"]],["bool"]]],[11,"le","","",86,[[["self"],["localmemoryindex"]],["bool"]]],[11,"gt","","",86,[[["self"],["localmemoryindex"]],["bool"]]],[11,"ge","","",86,[[["self"],["localmemoryindex"]],["bool"]]],[11,"partial_cmp","","",87,[[["self"],["importedmemoryindex"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",87,[[["self"],["importedmemoryindex"]],["bool"]]],[11,"le","","",87,[[["self"],["importedmemoryindex"]],["bool"]]],[11,"gt","","",87,[[["self"],["importedmemoryindex"]],["bool"]]],[11,"ge","","",87,[[["self"],["importedmemoryindex"]],["bool"]]],[11,"partial_cmp","","",88,[[["self"],["tableindex"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",88,[[["self"],["tableindex"]],["bool"]]],[11,"le","","",88,[[["self"],["tableindex"]],["bool"]]],[11,"gt","","",88,[[["self"],["tableindex"]],["bool"]]],[11,"ge","","",88,[[["self"],["tableindex"]],["bool"]]],[11,"partial_cmp","","",89,[[["self"],["localtableindex"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",89,[[["self"],["localtableindex"]],["bool"]]],[11,"le","","",89,[[["self"],["localtableindex"]],["bool"]]],[11,"gt","","",89,[[["self"],["localtableindex"]],["bool"]]],[11,"ge","","",89,[[["self"],["localtableindex"]],["bool"]]],[11,"partial_cmp","","",90,[[["importedtableindex"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",90,[[["importedtableindex"],["self"]],["bool"]]],[11,"le","","",90,[[["importedtableindex"],["self"]],["bool"]]],[11,"gt","","",90,[[["importedtableindex"],["self"]],["bool"]]],[11,"ge","","",90,[[["importedtableindex"],["self"]],["bool"]]],[11,"partial_cmp","","",91,[[["globalindex"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",91,[[["globalindex"],["self"]],["bool"]]],[11,"le","","",91,[[["globalindex"],["self"]],["bool"]]],[11,"gt","","",91,[[["globalindex"],["self"]],["bool"]]],[11,"ge","","",91,[[["globalindex"],["self"]],["bool"]]],[11,"partial_cmp","","",92,[[["localglobalindex"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",92,[[["localglobalindex"],["self"]],["bool"]]],[11,"le","","",92,[[["localglobalindex"],["self"]],["bool"]]],[11,"gt","","",92,[[["localglobalindex"],["self"]],["bool"]]],[11,"ge","","",92,[[["localglobalindex"],["self"]],["bool"]]],[11,"partial_cmp","","",93,[[["self"],["importedglobalindex"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",93,[[["self"],["importedglobalindex"]],["bool"]]],[11,"le","","",93,[[["self"],["importedglobalindex"]],["bool"]]],[11,"gt","","",93,[[["self"],["importedglobalindex"]],["bool"]]],[11,"ge","","",93,[[["self"],["importedglobalindex"]],["bool"]]],[11,"partial_cmp","wasmer_runtime_core::units","",94,[[["pages"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",94,[[["pages"],["self"]],["bool"]]],[11,"le","","",94,[[["pages"],["self"]],["bool"]]],[11,"gt","","",94,[[["pages"],["self"]],["bool"]]],[11,"ge","","",94,[[["pages"],["self"]],["bool"]]],[11,"partial_cmp","","",95,[[["self"],["bytes"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",95,[[["self"],["bytes"]],["bool"]]],[11,"le","","",95,[[["self"],["bytes"]],["bool"]]],[11,"gt","","",95,[[["self"],["bytes"]],["bool"]]],[11,"ge","","",95,[[["self"],["bytes"]],["bool"]]],[11,"partial_cmp","wasmer_runtime_core::state::x64_decl","",121,[[["gpr"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",122,[[["xmm"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"deref","wasmer_runtime_core::loader","",38,[[["self"]]]],[11,"deref","wasmer_runtime_core::memory","",43,[[["self"]]]],[11,"deref","","",43,[[["self"]]]],[11,"deref","wasmer_runtime_core::structures","",136,[[["self"]],["slicemap"]]],[11,"deref","","",55,[[["self"]],["slicemap"]]],[11,"deref_mut","wasmer_runtime_core::loader","",38,[[["self"]]]],[11,"deref_mut","wasmer_runtime_core::structures","",136,[[["self"]],["slicemap"]]],[11,"deref_mut","","",55,[[["self"]],["slicemap"]]],[11,"fmt","wasmer_runtime_core::vm","",124,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",125,[[["self"],["formatter"]],["result"]]],[11,"fmt","wasmer_runtime_core::cache","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","wasmer_runtime_core::codegen","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","wasmer_runtime_core::error","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","wasmer_runtime_core::export","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","wasmer_runtime_core::global","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","wasmer_runtime_core::memory::ptr","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","wasmer_runtime_core::memory","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","wasmer_runtime_core::module","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",50,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",48,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",49,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",53,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",134,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",135,[[["self"],["formatter"]],["result"]]],[11,"fmt","wasmer_runtime_core::parse","",54,[[["self"],["formatter"]],["result"]]],[11,"fmt","wasmer_runtime_core::structures","",136,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",55,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",56,[[["self"],["formatter"]],["result"]]],[11,"fmt","wasmer_runtime_core::table","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","wasmer_runtime_core::trampoline_x64","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","wasmer_runtime_core::types","",73,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",74,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",75,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",69,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",76,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",70,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",71,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",72,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",81,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",82,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",83,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",84,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",85,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",86,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",87,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",88,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",89,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",90,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",91,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",92,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",93,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",172,[[["self"],["formatter"]],["result"]]],[11,"fmt","wasmer_runtime_core::units","",94,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",95,[[["formatter"],["self"]],["result"]]],[11,"fmt","wasmer_runtime_core::vm","",96,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",104,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",105,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",98,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",99,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",100,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",101,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",102,[[["self"],["formatter"]],["result"]]],[11,"fmt","wasmer_runtime_core::fault","",107,[[["self"],["formatter"]],["result"]]],[11,"fmt","wasmer_runtime_core::state","",108,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",118,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",109,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",110,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",119,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",111,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",120,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",112,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",113,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",114,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",115,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",116,[[["self"],["formatter"]],["result"]]],[11,"fmt","wasmer_runtime_core::state::x64_decl","",121,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",122,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",123,[[["self"],["formatter"]],["result"]]],[11,"fmt","wasmer_runtime_core::error","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",18,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",19,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","wasmer_runtime_core::typed_func","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","wasmer_runtime_core::types","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",81,[[["formatter"],["self"]],["result"]]],[11,"sub","wasmer_runtime_core::units","",94,[[["t"]],["pages"]]],[11,"sub","","",95,[[["t"]],["bytes"]]],[11,"add","","",94,[[["t"]],["pages"]]],[11,"add","","",95,[[["t"]],["bytes"]]],[11,"index","wasmer_runtime_core::structures","",56,[[["self"],["k"]],["v"]]],[11,"index_mut","","",56,[[["self"],["k"]],["v"]]],[11,"hash","wasmer_runtime_core::cache","",3,[[["self"],["__h"]]]],[11,"hash","wasmer_runtime_core::memory","",39,[[["self"],["__h"]]]],[11,"hash","wasmer_runtime_core::module","",134,[[["self"],["__h"]]]],[11,"hash","","",135,[[["self"],["__h"]]]],[11,"hash","wasmer_runtime_core::types","",73,[[["self"],["__h"]]]],[11,"hash","","",81,[[["self"],["__h"]]]],[11,"hash","","",82,[[["self"],["__h"]]]],[11,"hash","","",83,[[["self"],["__h"]]]],[11,"hash","","",84,[[["self"],["__h"]]]],[11,"hash","","",85,[[["self"],["__h"]]]],[11,"hash","","",86,[[["self"],["__h"]]]],[11,"hash","","",87,[[["self"],["__h"]]]],[11,"hash","","",88,[[["self"],["__h"]]]],[11,"hash","","",89,[[["self"],["__h"]]]],[11,"hash","","",90,[[["self"],["__h"]]]],[11,"hash","","",91,[[["self"],["__h"]]]],[11,"hash","","",92,[[["self"],["__h"]]]],[11,"hash","","",93,[[["self"],["__h"]]]],[11,"hash","","",172,[[["self"],["__h"]]]],[11,"hash","wasmer_runtime_core::state","",108,[[["self"],["__h"]]]],[11,"hash","","",118,[[["self"],["__h"]]]],[11,"hash","","",119,[[["self"],["__h"]]]],[11,"hash","wasmer_runtime_core::state::x64_decl","",121,[[["self"],["__h"]]]],[11,"hash","","",122,[[["self"],["__h"]]]],[11,"from_iter","wasmer_runtime_core::structures","",55,[[["intoiterator"]],["self"]]],[11,"serialize","wasmer_runtime_core::cache","",3,[[["self"],["__s"]],["result"]]],[11,"serialize","wasmer_runtime_core::memory","",39,[[["self"],["__s"]],["result"]]],[11,"serialize","wasmer_runtime_core::module","",47,[[["self"],["__s"]],["result"]]],[11,"serialize","","",50,[[["self"],["__s"]],["result"]]],[11,"serialize","","",48,[[["self"],["__s"]],["result"]]],[11,"serialize","","",49,[[["self"],["__s"]],["result"]]],[11,"serialize","","",53,[[["self"],["__s"]],["result"]]],[11,"serialize","","",134,[[["self"],["__s"]],["result"]]],[11,"serialize","","",135,[[["self"],["__s"]],["result"]]],[11,"serialize","wasmer_runtime_core::structures","",55,[[["self"],["__s"]],["result"]]],[11,"serialize","wasmer_runtime_core::types","",73,[[["self"],["__s"]],["result"]]],[11,"serialize","","",74,[[["self"],["__s"]],["result"]]],[11,"serialize","","",75,[[["self"],["__s"]],["result"]]],[11,"serialize","","",69,[[["self"],["__s"]],["result"]]],[11,"serialize","","",76,[[["self"],["__s"]],["result"]]],[11,"serialize","","",70,[[["self"],["__s"]],["result"]]],[11,"serialize","","",71,[[["self"],["__s"]],["result"]]],[11,"serialize","","",72,[[["self"],["__s"]],["result"]]],[11,"serialize","","",81,[[["self"],["__s"]],["result"]]],[11,"serialize","","",82,[[["self"],["__s"]],["result"]]],[11,"serialize","","",83,[[["self"],["__s"]],["result"]]],[11,"serialize","","",84,[[["self"],["__s"]],["result"]]],[11,"serialize","","",85,[[["self"],["__s"]],["result"]]],[11,"serialize","","",86,[[["self"],["__s"]],["result"]]],[11,"serialize","","",87,[[["self"],["__s"]],["result"]]],[11,"serialize","","",88,[[["self"],["__s"]],["result"]]],[11,"serialize","","",89,[[["self"],["__s"]],["result"]]],[11,"serialize","","",90,[[["self"],["__s"]],["result"]]],[11,"serialize","","",91,[[["self"],["__s"]],["result"]]],[11,"serialize","","",92,[[["self"],["__s"]],["result"]]],[11,"serialize","","",93,[[["self"],["__s"]],["result"]]],[11,"serialize","","",172,[[["self"],["__s"]],["result"]]],[11,"serialize","wasmer_runtime_core::units","",94,[[["self"],["__s"]],["result"]]],[11,"serialize","","",95,[[["self"],["__s"]],["result"]]],[11,"serialize","wasmer_runtime_core::state","",108,[[["self"],["__s"]],["result"]]],[11,"serialize","","",118,[[["self"],["__s"]],["result"]]],[11,"serialize","","",109,[[["self"],["__s"]],["result"]]],[11,"serialize","","",110,[[["self"],["__s"]],["result"]]],[11,"serialize","","",119,[[["self"],["__s"]],["result"]]],[11,"serialize","","",111,[[["self"],["__s"]],["result"]]],[11,"serialize","","",120,[[["self"],["__s"]],["result"]]],[11,"serialize","","",112,[[["self"],["__s"]],["result"]]],[11,"serialize","","",113,[[["self"],["__s"]],["result"]]],[11,"serialize","","",114,[[["self"],["__s"]],["result"]]],[11,"serialize","","",115,[[["self"],["__s"]],["result"]]],[11,"serialize","","",116,[[["self"],["__s"]],["result"]]],[11,"deserialize","wasmer_runtime_core::cache","",3,[[["__d"]],["result"]]],[11,"deserialize","wasmer_runtime_core::memory","",39,[[["__d"]],["result"]]],[11,"deserialize","wasmer_runtime_core::module","",47,[[["__d"]],["result"]]],[11,"deserialize","","",50,[[["__d"]],["result"]]],[11,"deserialize","","",48,[[["__d"]],["result"]]],[11,"deserialize","","",49,[[["__d"]],["result"]]],[11,"deserialize","","",53,[[["__d"]],["result"]]],[11,"deserialize","","",134,[[["__d"]],["result"]]],[11,"deserialize","","",135,[[["__d"]],["result"]]],[11,"deserialize","wasmer_runtime_core::structures","",55,[[["__d"]],["result"]]],[11,"deserialize","wasmer_runtime_core::types","",73,[[["__d"]],["result"]]],[11,"deserialize","","",74,[[["__d"]],["result"]]],[11,"deserialize","","",75,[[["__d"]],["result"]]],[11,"deserialize","","",69,[[["__d"]],["result"]]],[11,"deserialize","","",76,[[["__d"]],["result"]]],[11,"deserialize","","",70,[[["__d"]],["result"]]],[11,"deserialize","","",71,[[["__d"]],["result"]]],[11,"deserialize","","",72,[[["__d"]],["result"]]],[11,"deserialize","","",81,[[["__d"]],["result"]]],[11,"deserialize","","",82,[[["__d"]],["result"]]],[11,"deserialize","","",83,[[["__d"]],["result"]]],[11,"deserialize","","",84,[[["__d"]],["result"]]],[11,"deserialize","","",85,[[["__d"]],["result"]]],[11,"deserialize","","",86,[[["__d"]],["result"]]],[11,"deserialize","","",87,[[["__d"]],["result"]]],[11,"deserialize","","",88,[[["__d"]],["result"]]],[11,"deserialize","","",89,[[["__d"]],["result"]]],[11,"deserialize","","",90,[[["__d"]],["result"]]],[11,"deserialize","","",91,[[["__d"]],["result"]]],[11,"deserialize","","",92,[[["__d"]],["result"]]],[11,"deserialize","","",93,[[["__d"]],["result"]]],[11,"deserialize","","",172,[[["__d"]],["result"]]],[11,"deserialize","wasmer_runtime_core::units","",94,[[["__d"]],["result"]]],[11,"deserialize","","",95,[[["__d"]],["result"]]],[11,"deserialize","wasmer_runtime_core::state","",108,[[["__d"]],["result"]]],[11,"deserialize","","",118,[[["__d"]],["result"]]],[11,"deserialize","","",109,[[["__d"]],["result"]]],[11,"deserialize","","",110,[[["__d"]],["result"]]],[11,"deserialize","","",119,[[["__d"]],["result"]]],[11,"deserialize","","",111,[[["__d"]],["result"]]],[11,"deserialize","","",120,[[["__d"]],["result"]]],[11,"deserialize","","",112,[[["__d"]],["result"]]],[11,"deserialize","","",113,[[["__d"]],["result"]]],[11,"deserialize","","",114,[[["__d"]],["result"]]],[11,"deserialize","","",115,[[["__d"]],["result"]]],[11,"deserialize","","",116,[[["__d"]],["result"]]],[11,"new","wasmer_runtime_core::vm","Creates a new `ImportBacking` from the given…",125,[[["moduleinner"],["importobject"]],["linkresult"]]],[11,"imported_func","","Gets a `ImportedFunc` from the given `ImportedFuncIndex`.",125,[[["importedfuncindex"],["self"]],["importedfunc"]]]],"p":[[3,"Instance"],[4,"InvalidFileType"],[4,"Error"],[3,"WasmHash"],[3,"Artifact"],[3,"BreakpointInfo"],[4,"Event"],[4,"InternalEvent"],[8,"ModuleCodeGenerator"],[8,"FunctionMiddleware"],[8,"FunctionCodeGenerator"],[3,"SimpleStreamingCompilerGen"],[3,"StreamingCompiler"],[3,"EventSink"],[3,"MiddlewareChain"],[4,"CompileError"],[4,"LinkError"],[4,"RuntimeError"],[4,"ResolveError"],[4,"CallError"],[4,"CreationError"],[4,"Error"],[4,"GrowError"],[4,"PageError"],[4,"MemoryCreationError"],[4,"MemoryProtectionError"],[4,"ParseError"],[4,"Context"],[4,"Export"],[3,"FuncPointer"],[3,"Global"],[3,"ImportObject"],[8,"LikeNamespace"],[8,"IsExport"],[3,"Namespace"],[3,"DynFunc"],[8,"Loader"],[8,"Instance"],[3,"CodeMemory"],[4,"MemoryType"],[3,"DynamicMemory"],[3,"WasmPtr"],[3,"StaticMemory"],[3,"MemoryView"],[3,"Memory"],[3,"UnsharedMemory"],[3,"SharedMemory"],[3,"ModuleInfo"],[3,"DataInitializer"],[3,"TableInitializer"],[4,"ExportIndex"],[3,"Module"],[3,"StringTableBuilder"],[3,"StringTable"],[4,"LoadError"],[3,"Map"],[3,"SliceMap"],[4,"Element"],[4,"TableStorage"],[3,"Anyfunc"],[3,"Table"],[3,"TrampolineBufferBuilder"],[3,"TrampolineBuffer"],[4,"WasmTrapInfo"],[8,"WasmTypeList"],[8,"ExternalFunction"],[8,"TrapEarly"],[3,"Wasm"],[3,"Func"],[3,"TableDescriptor"],[3,"GlobalDescriptor"],[3,"GlobalInit"],[3,"MemoryDescriptor"],[4,"Type"],[4,"Value"],[4,"ElementType"],[4,"Initializer"],[4,"LocalOrImport"],[8,"NativeWasmType"],[8,"WasmExternType"],[8,"LocalImport"],[3,"FuncSig"],[3,"FuncIndex"],[3,"LocalFuncIndex"],[3,"ImportedFuncIndex"],[3,"MemoryIndex"],[3,"LocalMemoryIndex"],[3,"ImportedMemoryIndex"],[3,"TableIndex"],[3,"LocalTableIndex"],[3,"ImportedTableIndex"],[3,"GlobalIndex"],[3,"LocalGlobalIndex"],[3,"ImportedGlobalIndex"],[3,"Pages"],[3,"Bytes"],[3,"Ctx"],[3,"Intrinsics"],[3,"LocalTable"],[3,"LocalMemory"],[3,"LocalGlobal"],[3,"SigId"],[3,"Anyfunc"],[3,"InternalField"],[3,"FuncCtx"],[3,"ImportedFunc"],[3,"BoundaryRegisterPreservation"],[3,"FaultInfo"],[3,"RegisterIndex"],[3,"MachineState"],[3,"MachineStateDiff"],[3,"FunctionStateMap"],[3,"OffsetInfo"],[3,"ModuleStateMap"],[3,"WasmFunctionStateDump"],[3,"ExecutionStateImage"],[3,"InstanceImage"],[3,"CodeVersion"],[4,"WasmAbstractValue"],[4,"MachineValue"],[4,"SuspendOffset"],[4,"GPR"],[4,"XMM"],[4,"X64Register"],[3,"LocalBacking"],[3,"ImportBacking"],[3,"ExportIter"],[3,"ImportObjectIterator"],[3,"LocalLoader"],[3,"LocalInstance"],[3,"Atomically"],[3,"SharedMemoryInternal"],[3,"Array"],[3,"Item"],[3,"NamespaceIndex"],[3,"NameIndex"],[3,"BoxedMap"],[3,"Iter"],[3,"IterMut"],[4,"CallTarget"],[4,"CallContext"],[4,"Trampoline"],[3,"Host"],[3,"ExplicitVmCtx"],[3,"ImplicitVmCtx"],[3,"S0"],[3,"S1"],[3,"S2"],[3,"S3"],[3,"S4"],[3,"S5"],[3,"S6"],[3,"S7"],[3,"S8"],[3,"S9"],[3,"S10"],[3,"S11"],[3,"S12"],[3,"S13"],[3,"S14"],[3,"S15"],[3,"S16"],[3,"S17"],[3,"S18"],[3,"S19"],[3,"S20"],[3,"S21"],[3,"S22"],[3,"S23"],[3,"S24"],[3,"S25"],[3,"S26"],[3,"SigIndex"],[3,"Func"],[3,"FuncEnv"]]};
searchIndex["wasmparser"] = {"doc":"A simple event-driven library for parsing WebAssembly…","i":[[3,"BinaryReader","wasmparser","A binary reader of the WebAssembly structures and types.",null,null],[3,"Range","","Bytecode range in the WebAssembly module.",null,null],[12,"start","","The start bound of the range.",0,null],[12,"end","","The end bound of the range.",0,null],[3,"LocalName","","",null,null],[12,"index","","",1,null],[12,"locals","","",1,null],[3,"Parser","","The `Parser` type. A simple event-driven parser of…",null,null],[3,"RelocEntry","","",null,null],[12,"ty","","",2,null],[12,"offset","","",2,null],[12,"index","","",2,null],[12,"addend","","",2,null],[3,"BinaryReaderError","","",null,null],[12,"message","","",3,null],[12,"offset","","",3,null],[3,"BrTable","","A br_table entries representation.",null,null],[3,"FuncType","","",null,null],[12,"form","","",4,null],[12,"params","","",4,null],[12,"returns","","",4,null],[3,"GlobalType","","",null,null],[12,"content_type","","",5,null],[12,"mutable","","",5,null],[3,"Ieee32","","An IEEE binary32 immediate floating point value,…",null,null],[3,"Ieee64","","An IEEE binary64 immediate floating point value,…",null,null],[3,"MemoryImmediate","","",null,null],[12,"flags","","",6,null],[12,"offset","","",6,null],[3,"MemoryType","","",null,null],[12,"limits","","",7,null],[12,"shared","","",7,null],[3,"Naming","","",null,null],[12,"index","","",8,null],[12,"name","","",8,null],[3,"ResizableLimits","","",null,null],[12,"initial","","",9,null],[12,"maximum","","",9,null],[3,"TableType","","",null,null],[12,"element_type","","",10,null],[12,"limits","","",10,null],[3,"V128","","",null,null],[3,"ValidatingOperatorParser","","",null,null],[3,"ValidatingParser","","",null,null],[3,"ValidatingParserConfig","","",null,null],[12,"operator_config","","",11,null],[3,"OperatorValidatorConfig","","",null,null],[12,"enable_threads","","",12,null],[12,"enable_reference_types","","",12,null],[12,"enable_simd","","",12,null],[12,"enable_bulk_memory","","",12,null],[12,"enable_multi_value","","",12,null],[3,"ActiveElementItems","","",null,null],[3,"ActiveElementItemsReader","","",null,null],[3,"CodeSectionReader","","",null,null],[3,"Data","","",null,null],[12,"kind","","",13,null],[12,"data","","",13,null],[3,"DataSectionReader","","",null,null],[3,"Element","","",null,null],[12,"kind","","",14,null],[3,"ElementSectionReader","","",null,null],[3,"Export","","",null,null],[12,"field","","",15,null],[12,"kind","","",15,null],[12,"index","","",15,null],[3,"ExportSectionReader","","",null,null],[3,"FunctionBody","","",null,null],[3,"FunctionSectionReader","","",null,null],[3,"Global","","",null,null],[12,"ty","","",16,null],[12,"init_expr","","",16,null],[3,"GlobalSectionReader","","",null,null],[3,"Import","","",null,null],[12,"module","","",17,null],[12,"field","","",17,null],[12,"ty","","",17,null],[3,"ImportSectionReader","","",null,null],[3,"InitExpr","","",null,null],[3,"LinkingSectionReader","","",null,null],[3,"LocalsReader","","",null,null],[3,"MemorySectionReader","","",null,null],[3,"ModuleReader","","Reads top-level WebAssembly file structure: header and…",null,null],[3,"NameSectionReader","","",null,null],[3,"NamingReader","","",null,null],[3,"OperatorsReader","","",null,null],[3,"PassiveElementItems","","",null,null],[3,"PassiveElementItemsReader","","",null,null],[3,"ProducersField","","",null,null],[12,"name","","",18,null],[3,"ProducersFieldValue","","",null,null],[12,"name","","",19,null],[12,"version","","",19,null],[3,"ProducersSectionReader","","",null,null],[3,"Reloc","","",null,null],[12,"ty","","",20,null],[12,"offset","","",20,null],[12,"index","","",20,null],[12,"addend","","",20,null],[3,"RelocSectionReader","","",null,null],[3,"Section","","",null,null],[12,"code","","",21,null],[3,"SectionIterator","","",null,null],[3,"SectionIteratorLimited","","",null,null],[3,"TableSectionReader","","",null,null],[3,"TypeSectionReader","","",null,null],[4,"NameEntry","","",null,null],[13,"Module","","",22,null],[13,"Function","","",22,null],[13,"Local","","",22,null],[4,"ParserInput","","",null,null],[13,"Default","","",23,null],[13,"SkipSection","","",23,null],[13,"SkipFunctionBody","","",23,null],[13,"ReadCustomSection","","",23,null],[13,"ReadSectionRawData","","",23,null],[4,"ParserState","","",null,null],[13,"Error","","",24,null],[13,"Initial","","",24,null],[13,"BeginWasm","","",24,null],[12,"version","wasmparser::ParserState","",24,null],[13,"EndWasm","wasmparser","",24,null],[13,"BeginSection","","",24,null],[12,"code","wasmparser::ParserState","",24,null],[12,"range","","",24,null],[13,"EndSection","wasmparser","",24,null],[13,"SkippingSection","","",24,null],[13,"ReadingCustomSection","","",24,null],[13,"ReadingSectionRawData","","",24,null],[13,"SectionRawData","","",24,null],[13,"TypeSectionEntry","","",24,null],[13,"ImportSectionEntry","","",24,null],[12,"module","wasmparser::ParserState","",24,null],[12,"field","","",24,null],[12,"ty","","",24,null],[13,"FunctionSectionEntry","wasmparser","",24,null],[13,"TableSectionEntry","","",24,null],[13,"MemorySectionEntry","","",24,null],[13,"ExportSectionEntry","","",24,null],[12,"field","wasmparser::ParserState","",24,null],[12,"kind","","",24,null],[12,"index","","",24,null],[13,"NameSectionEntry","wasmparser","",24,null],[13,"StartSectionEntry","","",24,null],[13,"DataCountSectionEntry","","",24,null],[13,"BeginInitExpressionBody","","",24,null],[13,"InitExpressionOperator","","",24,null],[13,"EndInitExpressionBody","","",24,null],[13,"BeginFunctionBody","","",24,null],[12,"range","wasmparser::ParserState","",24,null],[13,"FunctionBodyLocals","wasmparser","",24,null],[12,"locals","wasmparser::ParserState","",24,null],[13,"CodeOperator","wasmparser","",24,null],[13,"EndFunctionBody","","",24,null],[13,"SkippingFunctionBody","","",24,null],[13,"BeginActiveElementSectionEntry","","",24,null],[13,"ElementSectionEntryBody","","",24,null],[13,"PassiveElementSectionEntry","","",24,null],[12,"ty","wasmparser::ParserState","",24,null],[12,"items","","",24,null],[13,"EndElementSectionEntry","wasmparser","",24,null],[13,"BeginPassiveDataSectionEntry","","",24,null],[13,"BeginActiveDataSectionEntry","","",24,null],[13,"EndDataSectionEntry","","",24,null],[13,"BeginDataSectionEntryBody","","",24,null],[13,"DataSectionEntryBodyChunk","","",24,null],[13,"EndDataSectionEntryBody","","",24,null],[13,"BeginGlobalSectionEntry","","",24,null],[13,"EndGlobalSectionEntry","","",24,null],[13,"RelocSectionHeader","","",24,null],[13,"RelocSectionEntry","","",24,null],[13,"LinkingSectionEntry","","",24,null],[13,"SourceMappingURL","","",24,null],[4,"CustomSectionKind","","",null,null],[13,"Unknown","","",25,null],[13,"Name","","",25,null],[13,"Producers","","",25,null],[13,"SourceMappingURL","","",25,null],[13,"Reloc","","",25,null],[13,"Linking","","",25,null],[4,"ExternalKind","","External types as defined [here].",null,null],[13,"Function","","",26,null],[13,"Table","","",26,null],[13,"Memory","","",26,null],[13,"Global","","",26,null],[4,"ImportSectionEntryType","","",null,null],[13,"Function","","",27,null],[13,"Table","","",27,null],[13,"Memory","","",27,null],[13,"Global","","",27,null],[4,"LinkingType","","",null,null],[13,"StackPointer","","",28,null],[4,"NameType","","",null,null],[13,"Module","","",29,null],[13,"Function","","",29,null],[13,"Local","","",29,null],[4,"Operator","","Instructions as defined [here].",null,null],[13,"Unreachable","","",30,null],[13,"Nop","","",30,null],[13,"Block","","",30,null],[12,"ty","wasmparser::Operator","",30,null],[13,"Loop","wasmparser","",30,null],[12,"ty","wasmparser::Operator","",30,null],[13,"If","wasmparser","",30,null],[12,"ty","wasmparser::Operator","",30,null],[13,"Else","wasmparser","",30,null],[13,"End","","",30,null],[13,"Br","","",30,null],[12,"relative_depth","wasmparser::Operator","",30,null],[13,"BrIf","wasmparser","",30,null],[12,"relative_depth","wasmparser::Operator","",30,null],[13,"BrTable","wasmparser","",30,null],[12,"table","wasmparser::Operator","",30,null],[13,"Return","wasmparser","",30,null],[13,"Call","","",30,null],[12,"function_index","wasmparser::Operator","",30,null],[13,"CallIndirect","wasmparser","",30,null],[12,"index","wasmparser::Operator","",30,null],[12,"table_index","","",30,null],[13,"Drop","wasmparser","",30,null],[13,"Select","","",30,null],[13,"LocalGet","","",30,null],[12,"local_index","wasmparser::Operator","",30,null],[13,"LocalSet","wasmparser","",30,null],[12,"local_index","wasmparser::Operator","",30,null],[13,"LocalTee","wasmparser","",30,null],[12,"local_index","wasmparser::Operator","",30,null],[13,"GlobalGet","wasmparser","",30,null],[12,"global_index","wasmparser::Operator","",30,null],[13,"GlobalSet","wasmparser","",30,null],[12,"global_index","wasmparser::Operator","",30,null],[13,"I32Load","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64Load","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"F32Load","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"F64Load","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I32Load8S","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I32Load8U","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I32Load16S","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I32Load16U","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64Load8S","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64Load8U","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64Load16S","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64Load16U","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64Load32S","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64Load32U","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I32Store","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64Store","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"F32Store","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"F64Store","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I32Store8","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I32Store16","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64Store8","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64Store16","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64Store32","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"MemorySize","wasmparser","",30,null],[12,"reserved","wasmparser::Operator","",30,null],[13,"MemoryGrow","wasmparser","",30,null],[12,"reserved","wasmparser::Operator","",30,null],[13,"I32Const","wasmparser","",30,null],[12,"value","wasmparser::Operator","",30,null],[13,"I64Const","wasmparser","",30,null],[12,"value","wasmparser::Operator","",30,null],[13,"F32Const","wasmparser","",30,null],[12,"value","wasmparser::Operator","",30,null],[13,"F64Const","wasmparser","",30,null],[12,"value","wasmparser::Operator","",30,null],[13,"RefNull","wasmparser","",30,null],[13,"RefIsNull","","",30,null],[13,"RefFunc","","",30,null],[12,"function_index","wasmparser::Operator","",30,null],[13,"I32Eqz","wasmparser","",30,null],[13,"I32Eq","","",30,null],[13,"I32Ne","","",30,null],[13,"I32LtS","","",30,null],[13,"I32LtU","","",30,null],[13,"I32GtS","","",30,null],[13,"I32GtU","","",30,null],[13,"I32LeS","","",30,null],[13,"I32LeU","","",30,null],[13,"I32GeS","","",30,null],[13,"I32GeU","","",30,null],[13,"I64Eqz","","",30,null],[13,"I64Eq","","",30,null],[13,"I64Ne","","",30,null],[13,"I64LtS","","",30,null],[13,"I64LtU","","",30,null],[13,"I64GtS","","",30,null],[13,"I64GtU","","",30,null],[13,"I64LeS","","",30,null],[13,"I64LeU","","",30,null],[13,"I64GeS","","",30,null],[13,"I64GeU","","",30,null],[13,"F32Eq","","",30,null],[13,"F32Ne","","",30,null],[13,"F32Lt","","",30,null],[13,"F32Gt","","",30,null],[13,"F32Le","","",30,null],[13,"F32Ge","","",30,null],[13,"F64Eq","","",30,null],[13,"F64Ne","","",30,null],[13,"F64Lt","","",30,null],[13,"F64Gt","","",30,null],[13,"F64Le","","",30,null],[13,"F64Ge","","",30,null],[13,"I32Clz","","",30,null],[13,"I32Ctz","","",30,null],[13,"I32Popcnt","","",30,null],[13,"I32Add","","",30,null],[13,"I32Sub","","",30,null],[13,"I32Mul","","",30,null],[13,"I32DivS","","",30,null],[13,"I32DivU","","",30,null],[13,"I32RemS","","",30,null],[13,"I32RemU","","",30,null],[13,"I32And","","",30,null],[13,"I32Or","","",30,null],[13,"I32Xor","","",30,null],[13,"I32Shl","","",30,null],[13,"I32ShrS","","",30,null],[13,"I32ShrU","","",30,null],[13,"I32Rotl","","",30,null],[13,"I32Rotr","","",30,null],[13,"I64Clz","","",30,null],[13,"I64Ctz","","",30,null],[13,"I64Popcnt","","",30,null],[13,"I64Add","","",30,null],[13,"I64Sub","","",30,null],[13,"I64Mul","","",30,null],[13,"I64DivS","","",30,null],[13,"I64DivU","","",30,null],[13,"I64RemS","","",30,null],[13,"I64RemU","","",30,null],[13,"I64And","","",30,null],[13,"I64Or","","",30,null],[13,"I64Xor","","",30,null],[13,"I64Shl","","",30,null],[13,"I64ShrS","","",30,null],[13,"I64ShrU","","",30,null],[13,"I64Rotl","","",30,null],[13,"I64Rotr","","",30,null],[13,"F32Abs","","",30,null],[13,"F32Neg","","",30,null],[13,"F32Ceil","","",30,null],[13,"F32Floor","","",30,null],[13,"F32Trunc","","",30,null],[13,"F32Nearest","","",30,null],[13,"F32Sqrt","","",30,null],[13,"F32Add","","",30,null],[13,"F32Sub","","",30,null],[13,"F32Mul","","",30,null],[13,"F32Div","","",30,null],[13,"F32Min","","",30,null],[13,"F32Max","","",30,null],[13,"F32Copysign","","",30,null],[13,"F64Abs","","",30,null],[13,"F64Neg","","",30,null],[13,"F64Ceil","","",30,null],[13,"F64Floor","","",30,null],[13,"F64Trunc","","",30,null],[13,"F64Nearest","","",30,null],[13,"F64Sqrt","","",30,null],[13,"F64Add","","",30,null],[13,"F64Sub","","",30,null],[13,"F64Mul","","",30,null],[13,"F64Div","","",30,null],[13,"F64Min","","",30,null],[13,"F64Max","","",30,null],[13,"F64Copysign","","",30,null],[13,"I32WrapI64","","",30,null],[13,"I32TruncF32S","","",30,null],[13,"I32TruncF32U","","",30,null],[13,"I32TruncF64S","","",30,null],[13,"I32TruncF64U","","",30,null],[13,"I64ExtendI32S","","",30,null],[13,"I64ExtendI32U","","",30,null],[13,"I64TruncF32S","","",30,null],[13,"I64TruncF32U","","",30,null],[13,"I64TruncF64S","","",30,null],[13,"I64TruncF64U","","",30,null],[13,"F32ConvertI32S","","",30,null],[13,"F32ConvertI32U","","",30,null],[13,"F32ConvertI64S","","",30,null],[13,"F32ConvertI64U","","",30,null],[13,"F32DemoteF64","","",30,null],[13,"F64ConvertI32S","","",30,null],[13,"F64ConvertI32U","","",30,null],[13,"F64ConvertI64S","","",30,null],[13,"F64ConvertI64U","","",30,null],[13,"F64PromoteF32","","",30,null],[13,"I32ReinterpretF32","","",30,null],[13,"I64ReinterpretF64","","",30,null],[13,"F32ReinterpretI32","","",30,null],[13,"F64ReinterpretI64","","",30,null],[13,"I32Extend8S","","",30,null],[13,"I32Extend16S","","",30,null],[13,"I64Extend8S","","",30,null],[13,"I64Extend16S","","",30,null],[13,"I64Extend32S","","",30,null],[13,"I32TruncSatF32S","","",30,null],[13,"I32TruncSatF32U","","",30,null],[13,"I32TruncSatF64S","","",30,null],[13,"I32TruncSatF64U","","",30,null],[13,"I64TruncSatF32S","","",30,null],[13,"I64TruncSatF32U","","",30,null],[13,"I64TruncSatF64S","","",30,null],[13,"I64TruncSatF64U","","",30,null],[13,"MemoryInit","","",30,null],[12,"segment","wasmparser::Operator","",30,null],[13,"DataDrop","wasmparser","",30,null],[12,"segment","wasmparser::Operator","",30,null],[13,"MemoryCopy","wasmparser","",30,null],[13,"MemoryFill","","",30,null],[13,"TableInit","","",30,null],[12,"segment","wasmparser::Operator","",30,null],[12,"table","","",30,null],[13,"ElemDrop","wasmparser","",30,null],[12,"segment","wasmparser::Operator","",30,null],[13,"TableCopy","wasmparser","",30,null],[12,"dst_table","wasmparser::Operator","",30,null],[12,"src_table","","",30,null],[13,"TableFill","wasmparser","",30,null],[12,"table","wasmparser::Operator","",30,null],[13,"TableGet","wasmparser","",30,null],[12,"table","wasmparser::Operator","",30,null],[13,"TableSet","wasmparser","",30,null],[12,"table","wasmparser::Operator","",30,null],[13,"TableGrow","wasmparser","",30,null],[12,"table","wasmparser::Operator","",30,null],[13,"TableSize","wasmparser","",30,null],[12,"table","wasmparser::Operator","",30,null],[13,"AtomicNotify","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I32AtomicWait","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64AtomicWait","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"AtomicFence","wasmparser","",30,null],[12,"flags","wasmparser::Operator","",30,null],[13,"I32AtomicLoad","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64AtomicLoad","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I32AtomicLoad8U","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I32AtomicLoad16U","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64AtomicLoad8U","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64AtomicLoad16U","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64AtomicLoad32U","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I32AtomicStore","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64AtomicStore","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I32AtomicStore8","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I32AtomicStore16","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64AtomicStore8","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64AtomicStore16","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64AtomicStore32","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I32AtomicRmwAdd","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64AtomicRmwAdd","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I32AtomicRmw8AddU","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I32AtomicRmw16AddU","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64AtomicRmw8AddU","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64AtomicRmw16AddU","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64AtomicRmw32AddU","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I32AtomicRmwSub","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64AtomicRmwSub","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I32AtomicRmw8SubU","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I32AtomicRmw16SubU","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64AtomicRmw8SubU","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64AtomicRmw16SubU","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64AtomicRmw32SubU","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I32AtomicRmwAnd","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64AtomicRmwAnd","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I32AtomicRmw8AndU","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I32AtomicRmw16AndU","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64AtomicRmw8AndU","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64AtomicRmw16AndU","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64AtomicRmw32AndU","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I32AtomicRmwOr","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64AtomicRmwOr","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I32AtomicRmw8OrU","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I32AtomicRmw16OrU","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64AtomicRmw8OrU","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64AtomicRmw16OrU","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64AtomicRmw32OrU","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I32AtomicRmwXor","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64AtomicRmwXor","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I32AtomicRmw8XorU","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I32AtomicRmw16XorU","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64AtomicRmw8XorU","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64AtomicRmw16XorU","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64AtomicRmw32XorU","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I32AtomicRmwXchg","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64AtomicRmwXchg","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I32AtomicRmw8XchgU","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I32AtomicRmw16XchgU","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64AtomicRmw8XchgU","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64AtomicRmw16XchgU","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64AtomicRmw32XchgU","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I32AtomicRmwCmpxchg","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64AtomicRmwCmpxchg","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I32AtomicRmw8CmpxchgU","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I32AtomicRmw16CmpxchgU","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64AtomicRmw8CmpxchgU","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64AtomicRmw16CmpxchgU","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64AtomicRmw32CmpxchgU","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"V128Load","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"V128Store","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"V128Const","wasmparser","",30,null],[12,"value","wasmparser::Operator","",30,null],[13,"I8x16Splat","wasmparser","",30,null],[13,"I8x16ExtractLaneS","","",30,null],[12,"lane","wasmparser::Operator","",30,null],[13,"I8x16ExtractLaneU","wasmparser","",30,null],[12,"lane","wasmparser::Operator","",30,null],[13,"I8x16ReplaceLane","wasmparser","",30,null],[12,"lane","wasmparser::Operator","",30,null],[13,"I16x8Splat","wasmparser","",30,null],[13,"I16x8ExtractLaneS","","",30,null],[12,"lane","wasmparser::Operator","",30,null],[13,"I16x8ExtractLaneU","wasmparser","",30,null],[12,"lane","wasmparser::Operator","",30,null],[13,"I16x8ReplaceLane","wasmparser","",30,null],[12,"lane","wasmparser::Operator","",30,null],[13,"I32x4Splat","wasmparser","",30,null],[13,"I32x4ExtractLane","","",30,null],[12,"lane","wasmparser::Operator","",30,null],[13,"I32x4ReplaceLane","wasmparser","",30,null],[12,"lane","wasmparser::Operator","",30,null],[13,"I64x2Splat","wasmparser","",30,null],[13,"I64x2ExtractLane","","",30,null],[12,"lane","wasmparser::Operator","",30,null],[13,"I64x2ReplaceLane","wasmparser","",30,null],[12,"lane","wasmparser::Operator","",30,null],[13,"F32x4Splat","wasmparser","",30,null],[13,"F32x4ExtractLane","","",30,null],[12,"lane","wasmparser::Operator","",30,null],[13,"F32x4ReplaceLane","wasmparser","",30,null],[12,"lane","wasmparser::Operator","",30,null],[13,"F64x2Splat","wasmparser","",30,null],[13,"F64x2ExtractLane","","",30,null],[12,"lane","wasmparser::Operator","",30,null],[13,"F64x2ReplaceLane","wasmparser","",30,null],[12,"lane","wasmparser::Operator","",30,null],[13,"I8x16Eq","wasmparser","",30,null],[13,"I8x16Ne","","",30,null],[13,"I8x16LtS","","",30,null],[13,"I8x16LtU","","",30,null],[13,"I8x16GtS","","",30,null],[13,"I8x16GtU","","",30,null],[13,"I8x16LeS","","",30,null],[13,"I8x16LeU","","",30,null],[13,"I8x16GeS","","",30,null],[13,"I8x16GeU","","",30,null],[13,"I16x8Eq","","",30,null],[13,"I16x8Ne","","",30,null],[13,"I16x8LtS","","",30,null],[13,"I16x8LtU","","",30,null],[13,"I16x8GtS","","",30,null],[13,"I16x8GtU","","",30,null],[13,"I16x8LeS","","",30,null],[13,"I16x8LeU","","",30,null],[13,"I16x8GeS","","",30,null],[13,"I16x8GeU","","",30,null],[13,"I32x4Eq","","",30,null],[13,"I32x4Ne","","",30,null],[13,"I32x4LtS","","",30,null],[13,"I32x4LtU","","",30,null],[13,"I32x4GtS","","",30,null],[13,"I32x4GtU","","",30,null],[13,"I32x4LeS","","",30,null],[13,"I32x4LeU","","",30,null],[13,"I32x4GeS","","",30,null],[13,"I32x4GeU","","",30,null],[13,"F32x4Eq","","",30,null],[13,"F32x4Ne","","",30,null],[13,"F32x4Lt","","",30,null],[13,"F32x4Gt","","",30,null],[13,"F32x4Le","","",30,null],[13,"F32x4Ge","","",30,null],[13,"F64x2Eq","","",30,null],[13,"F64x2Ne","","",30,null],[13,"F64x2Lt","","",30,null],[13,"F64x2Gt","","",30,null],[13,"F64x2Le","","",30,null],[13,"F64x2Ge","","",30,null],[13,"V128Not","","",30,null],[13,"V128And","","",30,null],[13,"V128AndNot","","",30,null],[13,"V128Or","","",30,null],[13,"V128Xor","","",30,null],[13,"V128Bitselect","","",30,null],[13,"I8x16Neg","","",30,null],[13,"I8x16AnyTrue","","",30,null],[13,"I8x16AllTrue","","",30,null],[13,"I8x16Shl","","",30,null],[13,"I8x16ShrS","","",30,null],[13,"I8x16ShrU","","",30,null],[13,"I8x16Add","","",30,null],[13,"I8x16AddSaturateS","","",30,null],[13,"I8x16AddSaturateU","","",30,null],[13,"I8x16Sub","","",30,null],[13,"I8x16SubSaturateS","","",30,null],[13,"I8x16SubSaturateU","","",30,null],[13,"I8x16Mul","","",30,null],[13,"I16x8Neg","","",30,null],[13,"I16x8AnyTrue","","",30,null],[13,"I16x8AllTrue","","",30,null],[13,"I16x8Shl","","",30,null],[13,"I16x8ShrS","","",30,null],[13,"I16x8ShrU","","",30,null],[13,"I16x8Add","","",30,null],[13,"I16x8AddSaturateS","","",30,null],[13,"I16x8AddSaturateU","","",30,null],[13,"I16x8Sub","","",30,null],[13,"I16x8SubSaturateS","","",30,null],[13,"I16x8SubSaturateU","","",30,null],[13,"I16x8Mul","","",30,null],[13,"I32x4Neg","","",30,null],[13,"I32x4AnyTrue","","",30,null],[13,"I32x4AllTrue","","",30,null],[13,"I32x4Shl","","",30,null],[13,"I32x4ShrS","","",30,null],[13,"I32x4ShrU","","",30,null],[13,"I32x4Add","","",30,null],[13,"I32x4Sub","","",30,null],[13,"I32x4Mul","","",30,null],[13,"I64x2Neg","","",30,null],[13,"I64x2AnyTrue","","",30,null],[13,"I64x2AllTrue","","",30,null],[13,"I64x2Shl","","",30,null],[13,"I64x2ShrS","","",30,null],[13,"I64x2ShrU","","",30,null],[13,"I64x2Add","","",30,null],[13,"I64x2Sub","","",30,null],[13,"I64x2Mul","","",30,null],[13,"F32x4Abs","","",30,null],[13,"F32x4Neg","","",30,null],[13,"F32x4Sqrt","","",30,null],[13,"F32x4Add","","",30,null],[13,"F32x4Sub","","",30,null],[13,"F32x4Mul","","",30,null],[13,"F32x4Div","","",30,null],[13,"F32x4Min","","",30,null],[13,"F32x4Max","","",30,null],[13,"F64x2Abs","","",30,null],[13,"F64x2Neg","","",30,null],[13,"F64x2Sqrt","","",30,null],[13,"F64x2Add","","",30,null],[13,"F64x2Sub","","",30,null],[13,"F64x2Mul","","",30,null],[13,"F64x2Div","","",30,null],[13,"F64x2Min","","",30,null],[13,"F64x2Max","","",30,null],[13,"I32x4TruncSatF32x4S","","",30,null],[13,"I32x4TruncSatF32x4U","","",30,null],[13,"I64x2TruncSatF64x2S","","",30,null],[13,"I64x2TruncSatF64x2U","","",30,null],[13,"F32x4ConvertI32x4S","","",30,null],[13,"F32x4ConvertI32x4U","","",30,null],[13,"F64x2ConvertI64x2S","","",30,null],[13,"F64x2ConvertI64x2U","","",30,null],[13,"V8x16Swizzle","","",30,null],[13,"V8x16Shuffle","","",30,null],[12,"lanes","wasmparser::Operator","",30,null],[13,"V8x16LoadSplat","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"V16x8LoadSplat","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"V32x4LoadSplat","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"V64x2LoadSplat","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I8x16NarrowI16x8S","wasmparser","",30,null],[13,"I8x16NarrowI16x8U","","",30,null],[13,"I16x8NarrowI32x4S","","",30,null],[13,"I16x8NarrowI32x4U","","",30,null],[13,"I16x8WidenLowI8x16S","","",30,null],[13,"I16x8WidenHighI8x16S","","",30,null],[13,"I16x8WidenLowI8x16U","","",30,null],[13,"I16x8WidenHighI8x16U","","",30,null],[13,"I32x4WidenLowI16x8S","","",30,null],[13,"I32x4WidenHighI16x8S","","",30,null],[13,"I32x4WidenLowI16x8U","","",30,null],[13,"I32x4WidenHighI16x8U","","",30,null],[13,"I16x8Load8x8S","","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I16x8Load8x8U","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I32x4Load16x4S","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I32x4Load16x4U","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64x2Load32x2S","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I64x2Load32x2U","wasmparser","",30,null],[12,"memarg","wasmparser::Operator","",30,null],[13,"I8x16RoundingAverageU","wasmparser","",30,null],[13,"I16x8RoundingAverageU","","",30,null],[4,"RelocType","","",null,null],[13,"FunctionIndexLEB","","",31,null],[13,"TableIndexSLEB","","",31,null],[13,"TableIndexI32","","",31,null],[13,"GlobalAddrLEB","","",31,null],[13,"GlobalAddrSLEB","","",31,null],[13,"GlobalAddrI32","","",31,null],[13,"TypeIndexLEB","","",31,null],[13,"GlobalIndexLEB","","",31,null],[4,"SectionCode","","Section code as defined [here].",null,null],[13,"Custom","","",32,null],[12,"name","wasmparser::SectionCode","",32,null],[12,"kind","","",32,null],[13,"Type","wasmparser","",32,null],[13,"Import","","",32,null],[13,"Function","","",32,null],[13,"Table","","",32,null],[13,"Memory","","",32,null],[13,"Global","","",32,null],[13,"Export","","",32,null],[13,"Start","","",32,null],[13,"Element","","",32,null],[13,"Code","","",32,null],[13,"Data","","",32,null],[13,"DataCount","","",32,null],[4,"Type","","Types as defined [here].",null,null],[13,"I32","","",33,null],[13,"I64","","",33,null],[13,"F32","","",33,null],[13,"F64","","",33,null],[13,"V128","","",33,null],[13,"AnyFunc","","",33,null],[13,"AnyRef","","",33,null],[13,"Func","","",33,null],[13,"EmptyBlockType","","",33,null],[13,"Null","","",33,null],[4,"TypeOrFuncType","","Either a value type or a function type.",null,null],[13,"Type","","A value type.",34,null],[13,"FuncType","","A function type (referenced as an index into the types…",34,null],[4,"CustomSectionContent","","",null,null],[13,"Name","","",35,null],[13,"Producers","","",35,null],[13,"Linking","","",35,null],[13,"Reloc","","",35,null],[13,"SourceMappingURL","","",35,null],[4,"DataKind","","",null,null],[13,"Passive","","",36,null],[13,"Active","","",36,null],[12,"memory_index","wasmparser::DataKind","",36,null],[12,"init_expr","","",36,null],[4,"ElementKind","wasmparser","",null,null],[13,"Passive","","",37,null],[12,"ty","wasmparser::ElementKind","",37,null],[12,"items","","",37,null],[13,"Active","wasmparser","",37,null],[12,"table_index","wasmparser::ElementKind","",37,null],[12,"init_expr","","",37,null],[12,"items","","",37,null],[4,"Name","wasmparser","",null,null],[13,"Module","","",38,null],[13,"Function","","",38,null],[13,"Local","","",38,null],[4,"PassiveElementItem","","",null,null],[13,"Null","","",39,null],[13,"Func","","",39,null],[4,"SectionContent","","",null,null],[13,"Type","","",40,null],[13,"Function","","",40,null],[13,"Code","","",40,null],[13,"Export","","",40,null],[13,"Import","","",40,null],[13,"Global","","",40,null],[13,"Memory","","",40,null],[13,"Data","","",40,null],[13,"Table","","",40,null],[13,"Element","","",40,null],[13,"Start","","",40,null],[13,"DataCount","","",40,null],[13,"Custom","","",40,null],[12,"name","wasmparser::SectionContent","",40,null],[12,"binary","","",40,null],[12,"content","","",40,null],[5,"validate","wasmparser","Test whether the given buffer contains a valid WebAssembly…",null,[[["option",["validatingparserconfig"]],["validatingparserconfig"]],["result"]]],[5,"validate_function_body","","Test whether the given buffer contains a valid WebAssembly…",null,[[["u32"],["usize"],["operatorvalidatorconfig"],["wasmmoduleresources"],["option",["operatorvalidatorconfig"]]],["result"]]],[11,"new","","Constructs a new instance of `Range`.",0,[[["usize"]],["range"]]],[11,"slice","","Returns a new slice between `start` and `end - 1` from…",0,[[["self"]]]],[11,"new","","Constructs `BinaryReader` type.",41,[[],["binaryreader"]]],[11,"new_with_offset","","Constructs a `BinaryReader` with an explicit starting…",41,[[["usize"]],["binaryreader"]]],[11,"original_position","","",41,[[["self"]],["usize"]]],[11,"range","","Returns a range from the starting offset to the end of the…",41,[[["self"]],["range"]]],[11,"read_type","","",41,[[["self"]],[["type"],["result",["type"]]]]],[11,"read_local_count","","Read a `count` indicating the number of times to call…",41,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"read_local_decl","","Read a `(count, value_type)` declaration of local…",41,[[["self"],["usize"]],["result"]]],[11,"eof","","Returns whether the `BinaryReader` has reached the end of…",41,[[["self"]],["bool"]]],[11,"current_position","","Returns the `BinaryReader`'s current position.",41,[[["self"]],["usize"]]],[11,"bytes_remaining","","Returns the number of bytes remaining in the `BinaryReader`.",41,[[["self"]],["usize"]]],[11,"read_bytes","","Advances the `BinaryReader` `size` bytes, and returns a…",41,[[["self"],["usize"]],["result"]]],[11,"read_u32","","Advances the `BinaryReader` four bytes and returns a…",41,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"read_u64","","Advances the `BinaryReader` eight bytes and returns a…",41,[[["self"]],[["result",["u64"]],["u64"]]]],[11,"read_u8","","Advances the `BinaryReader` a single byte, and returns the…",41,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"read_var_u8","","Advances the `BinaryReader` up to two bytes to parse a…",41,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"read_var_u32","","Advances the `BinaryReader` up to four bytes to parse a…",41,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"skip_var_32","","Advances the `BinaryReader` up to four bytes over a…",41,[[["self"]],["result"]]],[11,"skip_type","","Alias method for `BinaryReader::skip_var_u32`.",41,[[["self"]],["result"]]],[11,"skip_bytes","","Advances the `BinaryReader` `len` bytes, skipping the…",41,[[["self"],["usize"]],["result"]]],[11,"skip_string","","Advances the `BinaryReader` past a WebAssembly string.…",41,[[["self"]],["result"]]],[11,"read_var_i32","","Advances the `BinaryReader` up to four bytes to parse a…",41,[[["self"]],[["result",["i32"]],["i32"]]]],[11,"read_var_s33","","Advances the `BinaryReader` up to four bytes to parse a…",41,[[["self"]],[["i64"],["result",["i64"]]]]],[11,"read_var_i64","","Advances the `BinaryReader` up to eight bytes to parse a…",41,[[["self"]],[["i64"],["result",["i64"]]]]],[11,"read_f32","","Advances the `BinaryReader` up to four bytes to parse a…",41,[[["self"]],[["ieee32"],["result",["ieee32"]]]]],[11,"read_f64","","Advances the `BinaryReader` up to four bytes to parse a…",41,[[["self"]],[["ieee64"],["result",["ieee64"]]]]],[11,"read_string","","Reads a WebAssembly string from the module. # Errors If…",41,[[["self"]],[["str"],["result",["str"]]]]],[11,"read_operator","","Reads the next available `Operator`. # Errors If…",41,[[["self"]],[["result",["operator"]],["operator"]]]],[11,"len","","Returns the number of `br_table` entries, not including…",42,[[["self"]],["usize"]]],[11,"is_empty","","Returns whether `BrTable` doesn't have any labels apart…",42,[[["self"]],["bool"]]],[11,"read_table","","Reads br_table entries.",42,[[["self"]],["result"]]],[11,"new","","Constructs `Parser` type.",43,[[],["parser"]]],[11,"eof","","",43,[[["self"]],["bool"]]],[11,"current_position","","",43,[[["self"]],["usize"]]],[11,"bits","","",44,[[],["u32"]]],[11,"bits","","",45,[[],["u64"]]],[11,"bytes","","",46,[[["self"]]]],[11,"new","","",47,[[["usize"]],["self"]]],[11,"get_binary_reader","","",47,[[["self"]],["binaryreader"]]],[11,"get_locals_reader","","",47,[[["self"]],[["localsreader"],["result",["localsreader"]]]]],[11,"get_operators_reader","","",47,[[["self"]],[["operatorsreader"],["result",["operatorsreader"]]]]],[11,"range","","",47,[[["self"]],["range"]]],[11,"get_count","","",48,[[["self"]],["u32"]]],[11,"original_position","","",48,[[["self"]],["usize"]]],[11,"read","","",48,[[["self"]],["result"]]],[11,"new","","",49,[[["usize"]],[["codesectionreader"],["result",["codesectionreader"]]]]],[11,"original_position","","",49,[[["self"]],["usize"]]],[11,"get_count","","",49,[[["self"]],["u32"]]],[11,"read","","Reads content of the code section.",49,[[["self"]],[["result",["functionbody"]],["functionbody"]]]],[11,"new","","",50,[[["usize"]],[["datasectionreader"],["result",["datasectionreader"]]]]],[11,"original_position","","",50,[[["self"]],["usize"]]],[11,"get_count","","",50,[[["self"]],["u32"]]],[11,"read","","Reads content of the data section.",50,[[["self"]],[["result",["data"]],["data"]]]],[11,"get_items_reader","","",51,[[["self"]],[["result",["activeelementitemsreader"]],["activeelementitemsreader"]]]],[11,"new","","",52,[[["usize"]],[["result",["activeelementitemsreader"]],["activeelementitemsreader"]]]],[11,"original_position","","",52,[[["self"]],["usize"]]],[11,"get_count","","",52,[[["self"]],["u32"]]],[11,"read","","",52,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"get_items_reader","","",53,[[["self"]],[["result",["passiveelementitemsreader"]],["passiveelementitemsreader"]]]],[11,"new","","",54,[[["u32"],["usize"]],[["passiveelementitemsreader"],["result",["passiveelementitemsreader"]]]]],[11,"get_count","","",54,[[["self"]],["u32"]]],[11,"read","","",54,[[["self"]],[["result",["passiveelementitem"]],["passiveelementitem"]]]],[11,"new","","",55,[[["usize"]],[["elementsectionreader"],["result",["elementsectionreader"]]]]],[11,"original_position","","",55,[[["self"]],["usize"]]],[11,"get_count","","",55,[[["self"]],["u32"]]],[11,"read","","Reads content of the element section.",55,[[["self"]],[["element"],["result",["element"]]]]],[11,"new","","",56,[[["usize"]],[["result",["exportsectionreader"]],["exportsectionreader"]]]],[11,"original_position","","",56,[[["self"]],["usize"]]],[11,"get_count","","",56,[[["self"]],["u32"]]],[11,"read","","Reads content of the export section.",56,[[["self"]],[["export"],["result",["export"]]]]],[11,"new","","",57,[[["usize"]],[["functionsectionreader"],["result",["functionsectionreader"]]]]],[11,"original_position","","",57,[[["self"]],["usize"]]],[11,"get_count","","",57,[[["self"]],["u32"]]],[11,"read","","Reads function type index from the function section.",57,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"new","","",58,[[["usize"]],[["result",["globalsectionreader"]],["globalsectionreader"]]]],[11,"original_position","","",58,[[["self"]],["usize"]]],[11,"get_count","","",58,[[["self"]],["u32"]]],[11,"read","","Reads content of the global section.",58,[[["self"]],[["global"],["result",["global"]]]]],[11,"new","","",59,[[["usize"]],[["result",["importsectionreader"]],["importsectionreader"]]]],[11,"original_position","","",59,[[["self"]],["usize"]]],[11,"get_count","","",59,[[["self"]],["u32"]]],[11,"read","","Reads content of the import section.",59,[[["self"]],[["result",["import"]],["import"]]]],[11,"new","","",60,[[["usize"]],["initexpr"]]],[11,"get_binary_reader","","",60,[[["self"]],["binaryreader"]]],[11,"get_operators_reader","","",60,[[["self"]],["operatorsreader"]]],[11,"new","","",61,[[["usize"]],[["result",["linkingsectionreader"]],["linkingsectionreader"]]]],[11,"get_count","","",61,[[["self"]],["u32"]]],[11,"original_position","","",61,[[["self"]],["usize"]]],[11,"read","","",61,[[["self"]],[["linkingtype"],["result",["linkingtype"]]]]],[11,"new","","",62,[[["usize"]],[["result",["memorysectionreader"]],["memorysectionreader"]]]],[11,"original_position","","",62,[[["self"]],["usize"]]],[11,"get_count","","",62,[[["self"]],["u32"]]],[11,"read","","Reads content of the memory section.",62,[[["self"]],[["memorytype"],["result",["memorytype"]]]]],[11,"get_type_section_reader","","Creates reader for the type section. Available when the…",21,[[["self"]],[["result",["typesectionreader"]],["typesectionreader"]]]],[11,"get_function_section_reader","","Creates reader for the function section. Available when…",21,[[["self"]],[["result",["functionsectionreader"]],["functionsectionreader"]]]],[11,"get_code_section_reader","","Creates reader for the code section. Available when the…",21,[[["self"]],[["codesectionreader"],["result",["codesectionreader"]]]]],[11,"get_export_section_reader","","Creates reader for the export section. Available when the…",21,[[["self"]],[["result",["exportsectionreader"]],["exportsectionreader"]]]],[11,"get_import_section_reader","","Creates reader for the import section. Available when the…",21,[[["self"]],[["result",["importsectionreader"]],["importsectionreader"]]]],[11,"get_global_section_reader","","Creates reader for the global section. Available when the…",21,[[["self"]],[["result",["globalsectionreader"]],["globalsectionreader"]]]],[11,"get_memory_section_reader","","Creates reader for the memory section. Available when the…",21,[[["self"]],[["memorysectionreader"],["result",["memorysectionreader"]]]]],[11,"get_data_section_reader","","Creates reader for the data section. Available when the…",21,[[["self"]],[["datasectionreader"],["result",["datasectionreader"]]]]],[11,"get_table_section_reader","","Creates reader for the table section. Available when the…",21,[[["self"]],[["result",["tablesectionreader"]],["tablesectionreader"]]]],[11,"get_element_section_reader","","Creates reader for the element section. Available when the…",21,[[["self"]],[["result",["elementsectionreader"]],["elementsectionreader"]]]],[11,"get_name_section_reader","","",21,[[["self"]],[["result",["namesectionreader"]],["namesectionreader"]]]],[11,"get_producers_section_reader","","",21,[[["self"]],[["producerssectionreader"],["result",["producerssectionreader"]]]]],[11,"get_linking_section_reader","","",21,[[["self"]],[["linkingsectionreader"],["result",["linkingsectionreader"]]]]],[11,"get_reloc_section_reader","","",21,[[["self"]],[["result",["relocsectionreader"]],["relocsectionreader"]]]],[11,"get_start_section_content","","",21,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"get_data_count_section_content","","",21,[[["self"]],[["result",["u32"]],["u32"]]]],[11,"get_sourcemappingurl_section_content","","",21,[[["self"]],[["str"],["result",["str"]]]]],[11,"get_binary_reader","","",21,[[["self"]],["binaryreader"]]],[11,"range","","",21,[[["self"]],["range"]]],[11,"content","","",21,[[["self"]],[["sectioncontent"],["result",["sectioncontent"]]]]],[11,"new","","",63,[[],[["modulereader"],["result",["modulereader"]]]]],[11,"get_version","","",63,[[["self"]],["u32"]]],[11,"current_position","","",63,[[["self"]],["usize"]]],[11,"eof","","",63,[[["self"]],["bool"]]],[11,"read","","Reads next top-level record from the WebAssembly binary…",63,[[["self"]],[["result",["section"]],["section"]]]],[11,"skip_custom_sections","","Skips custom sections.",63,[[["self"]],["result"]]],[11,"original_position","","",64,[[["self"]],["usize"]]],[11,"get_count","","",64,[[["self"]],["u32"]]],[11,"read","","",64,[[["self"]],[["result",["naming"]],["naming"]]]],[11,"new","","",65,[[["usize"]],[["result",["namesectionreader"]],["namesectionreader"]]]],[11,"eof","","",65,[[["self"]],["bool"]]],[11,"original_position","","",65,[[["self"]],["usize"]]],[11,"read","","",65,[[["self"]],[["result",["name"]],["name"]]]],[11,"eof","","",66,[[["self"]],["bool"]]],[11,"original_position","","",66,[[["self"]],["usize"]]],[11,"ensure_end","","",66,[[["self"]],["result"]]],[11,"read","","",66,[[["self"]],[["result",["operator"]],["operator"]]]],[11,"into_iter_with_offsets","","",66,[[],["operatorsiteratorwithoffsets"]]],[11,"read_with_offset","","",66,[[["self"]],["result"]]],[11,"get_producer_field_values_reader","","",18,[[["self"]],[["result",["producersfieldvaluesreader"]],["producersfieldvaluesreader"]]]],[11,"new","","Creates reader for the producers section.",67,[[["usize"]],[["result",["producerssectionreader"]],["producerssectionreader"]]]],[11,"original_position","","",67,[[["self"]],["usize"]]],[11,"get_count","","",67,[[["self"]],["u32"]]],[11,"read","","",67,[[["self"]],[["result",["producersfield"]],["producersfield"]]]],[11,"new","","",68,[[["usize"]],[["result",["relocsectionreader"]],["relocsectionreader"]]]],[11,"get_count","","",68,[[["self"]],["u32"]]],[11,"get_section_code","","",68,[[["self"]],["sectioncode"]]],[11,"original_position","","",68,[[["self"]],["usize"]]],[11,"read","","",68,[[["self"]],[["result",["reloc"]],["reloc"]]]],[11,"new","","",69,[[["r"]],["sectioniterator"]]],[11,"new","","",70,[[["r"]],["sectioniteratorlimited"]]],[11,"new","","",71,[[["usize"]],[["tablesectionreader"],["result",["tablesectionreader"]]]]],[11,"original_position","","",71,[[["self"]],["usize"]]],[11,"get_count","","",71,[[["self"]],["u32"]]],[11,"read","","Reads content of the table section.",71,[[["self"]],[["result",["tabletype"]],["tabletype"]]]],[11,"new","","",72,[[["usize"]],[["result",["typesectionreader"]],["typesectionreader"]]]],[11,"original_position","","",72,[[["self"]],["usize"]]],[11,"get_count","","",72,[[["self"]],["u32"]]],[11,"read","","Reads content of the type section.",72,[[["self"]],[["functype"],["result",["functype"]]]]],[11,"new","","",73,[[["option",["validatingparserconfig"]],["validatingparserconfig"]],["validatingparser"]]],[11,"get_resources","","",73,[[["self"]],["wasmmoduleresources"]]],[11,"create_validating_operator_parser","","",73,[[["self"]],["validatingoperatorparser"]]],[11,"eof","","",74,[[["self"]],["bool"]]],[11,"current_position","","",74,[[["self"]],["usize"]]],[11,"is_dead_code","","",74,[[["self"]],["bool"]]],[11,"next","","Creates a BinaryReader when current state is…",74,[[["self"],["wasmmoduleresources"]],[["operator"],["result",["operator"]]]]],[6,"Result","","",null,null],[8,"WasmDecoder","","",null,null],[10,"read","","",75,[[["self"]],["parserstate"]]],[10,"push_input","","",75,[[["self"],["parserinput"]]]],[10,"read_with_input","","",75,[[["self"],["parserinput"]],["parserstate"]]],[10,"create_binary_reader","","",75,[[["self"]],["binaryreader"]]],[10,"last_state","","",75,[[["self"]],["parserstate"]]],[8,"WasmModuleResources","","",null,null],[10,"types","","",76,[[["self"]]]],[10,"tables","","",76,[[["self"]]]],[10,"memories","","",76,[[["self"]]]],[10,"globals","","",76,[[["self"]]]],[10,"func_type_indices","","",76,[[["self"]]]],[10,"element_count","","",76,[[["self"]],["u32"]]],[10,"data_count","","",76,[[["self"]],["u32"]]],[8,"SectionReader","","",null,null],[16,"Item","","",77,null],[10,"read","","",77,[[["self"]],["result"]]],[10,"eof","","",77,[[["self"]],["bool"]]],[10,"original_position","","",77,[[["self"]],["usize"]]],[11,"ensure_end","","",77,[[["self"]],["result"]]],[8,"SectionWithLimitedItems","","",null,null],[10,"get_count","","",78,[[["self"]],["u32"]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"to_owned","","",41,[[["self"]],["t"]]],[11,"clone_into","","",41,[[["self"],["t"]]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"to_string","","",3,[[["self"]],["string"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"to_owned","","",42,[[["self"]],["t"]]],[11,"clone_into","","",42,[[["self"],["t"]]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"to_owned","","",44,[[["self"]],["t"]]],[11,"clone_into","","",44,[[["self"],["t"]]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"to_owned","","",46,[[["self"]],["t"]]],[11,"clone_into","","",46,[[["self"],["t"]]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",51,[[["t"]],["t"]]],[11,"into","","",51,[[],["u"]]],[11,"to_owned","","",51,[[["self"]],["t"]]],[11,"clone_into","","",51,[[["self"],["t"]]]],[11,"try_from","","",51,[[["u"]],["result"]]],[11,"try_into","","",51,[[],["result"]]],[11,"borrow","","",51,[[["self"]],["t"]]],[11,"borrow_mut","","",51,[[["self"]],["t"]]],[11,"type_id","","",51,[[["self"]],["typeid"]]],[11,"from","","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"into_iter","","",52,[[],["i"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",49,[[["t"]],["t"]]],[11,"into","","",49,[[],["u"]]],[11,"into_iter","","",49,[[],["i"]]],[11,"try_from","","",49,[[["u"]],["result"]]],[11,"try_into","","",49,[[],["result"]]],[11,"borrow","","",49,[[["self"]],["t"]]],[11,"borrow_mut","","",49,[[["self"]],["t"]]],[11,"type_id","","",49,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"into_iter","","",50,[[],["i"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"to_owned","","",14,[[["self"]],["t"]]],[11,"clone_into","","",14,[[["self"],["t"]]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"into_iter","","",55,[[],["i"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"to_owned","","",15,[[["self"]],["t"]]],[11,"clone_into","","",15,[[["self"],["t"]]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"into_iter","","",56,[[],["i"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"into_iter","","",57,[[],["i"]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"into_iter","","",58,[[],["i"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_owned","","",17,[[["self"]],["t"]]],[11,"clone_into","","",17,[[["self"],["t"]]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"into_iter","","",59,[[],["i"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"into_iter","","",61,[[],["i"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"into_iter","","",48,[[],["i"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"into_iter","","",62,[[],["i"]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"into_iter","","",63,[[],["i"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"into_iter","","",65,[[],["i"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"into_iter","","",66,[[],["i"]]],[11,"to_owned","","",66,[[["self"]],["t"]]],[11,"clone_into","","",66,[[["self"],["t"]]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"into_iter","","",54,[[],["i"]]],[11,"to_owned","","",54,[[["self"]],["t"]]],[11,"clone_into","","",54,[[["self"],["t"]]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"into_iter","","",67,[[],["i"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"into_iter","","",68,[[],["i"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"into_iter","","",69,[[],["i"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"into_iter","","",70,[[],["i"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"into_iter","","",71,[[],["i"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"into_iter","","",72,[[],["i"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"from","","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"to_owned","","",28,[[["self"]],["t"]]],[11,"clone_into","","",28,[[["self"],["t"]]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"to_owned","","",29,[[["self"]],["t"]]],[11,"clone_into","","",29,[[["self"],["t"]]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"to_owned","","",30,[[["self"]],["t"]]],[11,"clone_into","","",30,[[["self"],["t"]]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"to_owned","","",31,[[["self"]],["t"]]],[11,"clone_into","","",31,[[["self"],["t"]]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"to_owned","","",32,[[["self"]],["t"]]],[11,"clone_into","","",32,[[["self"],["t"]]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_owned","","",33,[[["self"]],["t"]]],[11,"clone_into","","",33,[[["self"],["t"]]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"to_owned","","",34,[[["self"]],["t"]]],[11,"clone_into","","",34,[[["self"],["t"]]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"to_owned","","",36,[[["self"]],["t"]]],[11,"clone_into","","",36,[[["self"],["t"]]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"to_owned","","",38,[[["self"]],["t"]]],[11,"clone_into","","",38,[[["self"],["t"]]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"to_owned","","",39,[[["self"]],["t"]]],[11,"clone_into","","",39,[[["self"],["t"]]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"read","","Reads next record from the WebAssembly binary data. The…",43,[[["self"]],["parserstate"]]],[11,"push_input","","",43,[[["self"],["parserinput"]]]],[11,"create_binary_reader","","Creates a BinaryReader when current state is…",43,[[["self"]],["binaryreader"]]],[11,"read_with_input","","Reads next record from the WebAssembly binary data. It…",43,[[["self"],["parserinput"]],["parserstate"]]],[11,"last_state","","",43,[[["self"]],["parserstate"]]],[11,"read","","",73,[[["self"]],["parserstate"]]],[11,"push_input","","",73,[[["self"],["parserinput"]]]],[11,"read_with_input","","",73,[[["self"],["parserinput"]],["parserstate"]]],[11,"create_binary_reader","","",73,[[["self"]],["binaryreader"]]],[11,"last_state","","",73,[[["self"]],["parserstate"]]],[11,"read","","",49,[[["self"]],["result"]]],[11,"eof","","",49,[[["self"]],["bool"]]],[11,"original_position","","",49,[[["self"]],["usize"]]],[11,"read","","",50,[[["self"]],["result"]]],[11,"eof","","",50,[[["self"]],["bool"]]],[11,"original_position","","",50,[[["self"]],["usize"]]],[11,"read","","",55,[[["self"]],["result"]]],[11,"eof","","",55,[[["self"]],["bool"]]],[11,"original_position","","",55,[[["self"]],["usize"]]],[11,"read","","",56,[[["self"]],["result"]]],[11,"eof","","",56,[[["self"]],["bool"]]],[11,"original_position","","",56,[[["self"]],["usize"]]],[11,"read","","",57,[[["self"]],["result"]]],[11,"eof","","",57,[[["self"]],["bool"]]],[11,"original_position","","",57,[[["self"]],["usize"]]],[11,"read","","",58,[[["self"]],["result"]]],[11,"eof","","",58,[[["self"]],["bool"]]],[11,"original_position","","",58,[[["self"]],["usize"]]],[11,"read","","",59,[[["self"]],["result"]]],[11,"eof","","",59,[[["self"]],["bool"]]],[11,"original_position","","",59,[[["self"]],["usize"]]],[11,"read","","",61,[[["self"]],["result"]]],[11,"eof","","",61,[[["self"]],["bool"]]],[11,"original_position","","",61,[[["self"]],["usize"]]],[11,"read","","",62,[[["self"]],["result"]]],[11,"eof","","",62,[[["self"]],["bool"]]],[11,"original_position","","",62,[[["self"]],["usize"]]],[11,"read","","",65,[[["self"]],["result"]]],[11,"eof","","",65,[[["self"]],["bool"]]],[11,"original_position","","",65,[[["self"]],["usize"]]],[11,"read","","",67,[[["self"]],["result"]]],[11,"eof","","",67,[[["self"]],["bool"]]],[11,"original_position","","",67,[[["self"]],["usize"]]],[11,"read","","",68,[[["self"]],["result"]]],[11,"eof","","",68,[[["self"]],["bool"]]],[11,"original_position","","",68,[[["self"]],["usize"]]],[11,"read","","",71,[[["self"]],["result"]]],[11,"eof","","",71,[[["self"]],["bool"]]],[11,"original_position","","",71,[[["self"]],["usize"]]],[11,"read","","",72,[[["self"]],["result"]]],[11,"eof","","",72,[[["self"]],["bool"]]],[11,"original_position","","",72,[[["self"]],["usize"]]],[11,"get_count","","",49,[[["self"]],["u32"]]],[11,"get_count","","",50,[[["self"]],["u32"]]],[11,"get_count","","",55,[[["self"]],["u32"]]],[11,"get_count","","",56,[[["self"]],["u32"]]],[11,"get_count","","",57,[[["self"]],["u32"]]],[11,"get_count","","",58,[[["self"]],["u32"]]],[11,"get_count","","",59,[[["self"]],["u32"]]],[11,"get_count","","",61,[[["self"]],["u32"]]],[11,"get_count","","",62,[[["self"]],["u32"]]],[11,"get_count","","",67,[[["self"]],["u32"]]],[11,"get_count","","",68,[[["self"]],["u32"]]],[11,"get_count","","",71,[[["self"]],["u32"]]],[11,"get_count","","",72,[[["self"]],["u32"]]],[11,"into_iter","","",48,[[]]],[11,"into_iter","","Implements iterator over the code section.",49,[[]]],[11,"into_iter","","",50,[[]]],[11,"into_iter","","",52,[[]]],[11,"into_iter","","",54,[[]]],[11,"into_iter","","",55,[[]]],[11,"into_iter","","",56,[[]]],[11,"into_iter","","",57,[[]]],[11,"into_iter","","",58,[[]]],[11,"into_iter","","",59,[[]]],[11,"into_iter","","",61,[[]]],[11,"into_iter","","",62,[[]]],[11,"into_iter","","",63,[[]]],[11,"into_iter","","",65,[[]]],[11,"into_iter","","Reads content of the code section.",66,[[]]],[11,"into_iter","","",67,[[]]],[11,"into_iter","","",68,[[]]],[11,"into_iter","","",71,[[]]],[11,"into_iter","","Implements iterator over the type section.",72,[[]]],[11,"next","","",69,[[["self"]],["option"]]],[11,"next","","",70,[[["self"]],["option"]]],[11,"size_hint","","",70,[[["self"]]]],[11,"clone","","",0,[[["self"]],["range"]]],[11,"clone","","",41,[[["self"]],["binaryreader"]]],[11,"clone","","",12,[[["self"]],["operatorvalidatorconfig"]]],[11,"clone","","",23,[[["self"]],["parserinput"]]],[11,"clone","","",3,[[["self"]],["binaryreadererror"]]],[11,"clone","","",25,[[["self"]],["customsectionkind"]]],[11,"clone","","",32,[[["self"]],["sectioncode"]]],[11,"clone","","",33,[[["self"]],["type"]]],[11,"clone","","",34,[[["self"]],["typeorfunctype"]]],[11,"clone","","",26,[[["self"]],["externalkind"]]],[11,"clone","","",4,[[["self"]],["functype"]]],[11,"clone","","",9,[[["self"]],["resizablelimits"]]],[11,"clone","","",10,[[["self"]],["tabletype"]]],[11,"clone","","",7,[[["self"]],["memorytype"]]],[11,"clone","","",5,[[["self"]],["globaltype"]]],[11,"clone","","",27,[[["self"]],["importsectionentrytype"]]],[11,"clone","","",6,[[["self"]],["memoryimmediate"]]],[11,"clone","","",8,[[["self"]],["naming"]]],[11,"clone","","",29,[[["self"]],["nametype"]]],[11,"clone","","",28,[[["self"]],["linkingtype"]]],[11,"clone","","",31,[[["self"]],["reloctype"]]],[11,"clone","","",42,[[["self"]],["brtable"]]],[11,"clone","","",44,[[["self"]],["ieee32"]]],[11,"clone","","",45,[[["self"]],["ieee64"]]],[11,"clone","","",46,[[["self"]],["v128"]]],[11,"clone","","",30,[[["self"]],["operator"]]],[11,"clone","","",13,[[["self"]],["data"]]],[11,"clone","","",36,[[["self"]],["datakind"]]],[11,"clone","","",14,[[["self"]],["element"]]],[11,"clone","","",37,[[["self"]],["elementkind"]]],[11,"clone","","",51,[[["self"]],["activeelementitems"]]],[11,"clone","","",53,[[["self"]],["passiveelementitems"]]],[11,"clone","","",39,[[["self"]],["passiveelementitem"]]],[11,"clone","","",54,[[["self"]],["passiveelementitemsreader"]]],[11,"clone","","",15,[[["self"]],["export"]]],[11,"clone","","",16,[[["self"]],["global"]]],[11,"clone","","",17,[[["self"]],["import"]]],[11,"clone","","",60,[[["self"]],["initexpr"]]],[11,"clone","","",38,[[["self"]],["name"]]],[11,"clone","","",66,[[["self"]],["operatorsreader"]]],[11,"clone","","",19,[[["self"]],["producersfieldvalue"]]],[11,"clone","","",18,[[["self"]],["producersfield"]]],[11,"clone","","",20,[[["self"]],["reloc"]]],[11,"clone","","",11,[[["self"]],["validatingparserconfig"]]],[11,"cmp","","",0,[[["range"],["self"]],["ordering"]]],[11,"cmp","","",25,[[["customsectionkind"],["self"]],["ordering"]]],[11,"cmp","","",32,[[["self"],["sectioncode"]],["ordering"]]],[11,"eq","","",0,[[["range"],["self"]],["bool"]]],[11,"ne","","",0,[[["range"],["self"]],["bool"]]],[11,"eq","","",25,[[["customsectionkind"],["self"]],["bool"]]],[11,"eq","","",32,[[["self"],["sectioncode"]],["bool"]]],[11,"ne","","",32,[[["self"],["sectioncode"]],["bool"]]],[11,"eq","","",33,[[["type"],["self"]],["bool"]]],[11,"eq","","",34,[[["typeorfunctype"],["self"]],["bool"]]],[11,"ne","","",34,[[["typeorfunctype"],["self"]],["bool"]]],[11,"eq","","",44,[[["self"],["ieee32"]],["bool"]]],[11,"ne","","",44,[[["self"],["ieee32"]],["bool"]]],[11,"eq","","",45,[[["ieee64"],["self"]],["bool"]]],[11,"ne","","",45,[[["ieee64"],["self"]],["bool"]]],[11,"eq","","",46,[[["self"],["v128"]],["bool"]]],[11,"ne","","",46,[[["self"],["v128"]],["bool"]]],[11,"partial_cmp","","",0,[[["range"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",0,[[["range"],["self"]],["bool"]]],[11,"le","","",0,[[["range"],["self"]],["bool"]]],[11,"gt","","",0,[[["range"],["self"]],["bool"]]],[11,"ge","","",0,[[["range"],["self"]],["bool"]]],[11,"partial_cmp","","",25,[[["customsectionkind"],["self"]],[["ordering"],["option",["ordering"]]]]],[11,"partial_cmp","","",32,[[["self"],["sectioncode"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",32,[[["self"],["sectioncode"]],["bool"]]],[11,"le","","",32,[[["self"],["sectioncode"]],["bool"]]],[11,"gt","","",32,[[["self"],["sectioncode"]],["bool"]]],[11,"ge","","",32,[[["self"],["sectioncode"]],["bool"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",41,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",32,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",33,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",34,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",26,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",27,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",29,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",28,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",31,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",42,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",44,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",45,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",46,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",30,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",47,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",36,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",51,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",39,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",60,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",38,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"hash","","",0,[[["self"],["__h"]]]],[11,"hash","","",44,[[["self"],["__h"]]]],[11,"hash","","",45,[[["self"],["__h"]]]],[11,"hash","","",46,[[["self"],["__h"]]]],[11,"ensure_end","","",77,[[["self"]],["result"]]]],"p":[[3,"Range"],[3,"LocalName"],[3,"RelocEntry"],[3,"BinaryReaderError"],[3,"FuncType"],[3,"GlobalType"],[3,"MemoryImmediate"],[3,"MemoryType"],[3,"Naming"],[3,"ResizableLimits"],[3,"TableType"],[3,"ValidatingParserConfig"],[3,"OperatorValidatorConfig"],[3,"Data"],[3,"Element"],[3,"Export"],[3,"Global"],[3,"Import"],[3,"ProducersField"],[3,"ProducersFieldValue"],[3,"Reloc"],[3,"Section"],[4,"NameEntry"],[4,"ParserInput"],[4,"ParserState"],[4,"CustomSectionKind"],[4,"ExternalKind"],[4,"ImportSectionEntryType"],[4,"LinkingType"],[4,"NameType"],[4,"Operator"],[4,"RelocType"],[4,"SectionCode"],[4,"Type"],[4,"TypeOrFuncType"],[4,"CustomSectionContent"],[4,"DataKind"],[4,"ElementKind"],[4,"Name"],[4,"PassiveElementItem"],[4,"SectionContent"],[3,"BinaryReader"],[3,"BrTable"],[3,"Parser"],[3,"Ieee32"],[3,"Ieee64"],[3,"V128"],[3,"FunctionBody"],[3,"LocalsReader"],[3,"CodeSectionReader"],[3,"DataSectionReader"],[3,"ActiveElementItems"],[3,"ActiveElementItemsReader"],[3,"PassiveElementItems"],[3,"PassiveElementItemsReader"],[3,"ElementSectionReader"],[3,"ExportSectionReader"],[3,"FunctionSectionReader"],[3,"GlobalSectionReader"],[3,"ImportSectionReader"],[3,"InitExpr"],[3,"LinkingSectionReader"],[3,"MemorySectionReader"],[3,"ModuleReader"],[3,"NamingReader"],[3,"NameSectionReader"],[3,"OperatorsReader"],[3,"ProducersSectionReader"],[3,"RelocSectionReader"],[3,"SectionIterator"],[3,"SectionIteratorLimited"],[3,"TableSectionReader"],[3,"TypeSectionReader"],[3,"ValidatingParser"],[3,"ValidatingOperatorParser"],[8,"WasmDecoder"],[8,"WasmModuleResources"],[8,"SectionReader"],[8,"SectionWithLimitedItems"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);