initSidebarItems({"constant":[["VERSION","The current version of this crate."]],"enum":[["Backend","Enum used to select which compiler should be used to generate code."],["Export","Kind of WebAssembly export."],["Value","Represents a WebAssembly value."]],"fn":[["compile","Compile WebAssembly binary code into a [`Module`]. This function is useful if it is necessary to compile a module before it can be instantiated (otherwise, the [`instantiate`] function should be used)."],["compile_with","Compile a [`Module`] using the provided compiler from WebAssembly binary code. This function is useful if it is necessary to a compile a module before it can be instantiated and must be used if you wish to use a different backend from the default."],["compile_with_config","The same as `compile` but takes a `CompilerConfig` for the purpose of changing the compiler's behavior"],["compile_with_config_with","The same as `compile_with_config` but takes a `Compiler` for the purpose of changing the backend."],["compiler_for_backend","Get the `Compiler` as a trait object for the given `Backend`. Returns `Option` because support for the requested `Compiler` may not be enabled by feature flags."],["default_compiler","Get a single instance of the default compiler to use."],["instantiate","Compile and instantiate WebAssembly code without creating a [`Module`]."],["validate","Perform validation as defined by the WebAssembly specification. Returns `true` if validation succeeded, `false` if validation failed."]],"macro":[["func","Helper macro to create a new `Func` object using the provided function pointer."],["imports","Generate an [`ImportObject`] safely."]],"mod":[["cache","The cache module provides the common data structures used by compiler backends to allow serializing compiled wasm code to a binary format.  The binary format can be persisted, and loaded to allow skipping compilation and fast startup."],["error","The error module contains the data structures and helper functions used to implement errors that are produced and returned from the wasmer runtime."],["memory","The memory module contains the implementation data structures and helper functions used to manipulate and access wasm memory."],["types","Various types."],["units","Various unit types."],["wasm","Various types exposed by the Wasmer Runtime."]],"struct":[["Array","Array."],["CompilerConfig","Configuration data for the compiler"],["Ctx","The context of the currently running WebAssembly instance."],["DynFunc","A representation of an exported WebAssembly function."],["Features","Controls which experimental features will be enabled."],["Func","Represents a function that can be used by WebAssembly."],["Global","Container with a descriptor and a reference to a global value."],["ImportObject","All of the import data used when instantiating."],["Instance","An instantiated WebAssembly module."],["Item","Item."],["Memory","A shared or unshared wasm linear memory."],["MiddlewareChain","A container for a chain of middlewares."],["Module","A compiled WebAssembly module."],["StreamingCompiler","A streaming compiler which is designed to generated code for a module based on a stream of wasm parser events."],["Table","Container with a descriptor and a reference to a table storage."],["WasmPtr","A pointer to a Wasm item."]],"trait":[["Compiler",""],["LikeNamespace","This trait represents objects that act as a namespace for imports. For example, an `Instance` or `ImportObject` could be considered namespaces that could provide imports to an instance."]]});