{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3","program":"/Users/rodydavis/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","generic_array","/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=633462ba3d5f5d31","-C","extra-filename=-633462ba3d5f5d31","--out-dir","/Users/rodydavis/Developer/GitHub/packages/flutter_wasm_interop/example/target/rls/debug/deps","-L","dependency=/Users/rodydavis/Developer/GitHub/packages/flutter_wasm_interop/example/target/rls/debug/deps","--extern","typenum=/Users/rodydavis/Developer/GitHub/packages/flutter_wasm_interop/example/target/rls/debug/deps/libtypenum-6da89051fa4bb45d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/rodydavis/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/rodydavis/Developer/GitHub/packages/flutter_wasm_interop/example/target/rls/debug/deps/libgeneric_array-633462ba3d5f5d31.rmeta"},"prelude":{"crate_id":{"name":"generic_array","disambiguator":[2488594752882917105,5982529802820243295]},"crate_root":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src","external_crates":[{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[5459908120384850477,15760959269387734159]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[11826469219384905814,12486183027959381912]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[5497990426549684121,15109235050116755313]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","num":4,"id":{"name":"typenum","disambiguator":[16734149054362612021,1323568987175997655]}}],"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":0,"byte_end":16877,"line_start":1,"line_end":632,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":185},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":1545,"byte_end":1561,"line_start":71,"line_end":71,"column_start":15,"column_end":31},"alias_span":null,"name":"GenericArrayIter","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":0,"byte_end":16877,"line_start":1,"line_end":632,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":26},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":101},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":112},{"krate":0,"index":130},{"krate":0,"index":175},{"krate":0,"index":231},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":329},{"krate":0,"index":332},{"krate":0,"index":338},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":351},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":362},{"krate":0,"index":366},{"krate":0,"index":370},{"krate":0,"index":373},{"krate":0,"index":376},{"krate":0,"index":381},{"krate":0,"index":385},{"krate":0,"index":390},{"krate":0,"index":396},{"krate":0,"index":400},{"krate":0,"index":405},{"krate":0,"index":410},{"krate":0,"index":414},{"krate":0,"index":421},{"krate":0,"index":428},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":452},{"krate":0,"index":457},{"krate":0,"index":473},{"krate":0,"index":480},{"krate":0,"index":485},{"krate":0,"index":490},{"krate":0,"index":494},{"krate":0,"index":499}],"decl_id":null,"docs":" This crate implements a structure that can be used as a generic array type.use\n Core Rust array types `[T; N]` can't be used generically with\n respect to `N`, so for example this:","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":978,"byte_end":1000,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"no_std","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":1001,"byte_end":1011,"line_start":40,"line_end":40,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":112},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/arr.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"arr","qualname":"::arr","value":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/arr.rs","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":120},{"krate":0,"index":125},{"krate":0,"index":128},{"krate":0,"index":129}],"decl_id":null,"docs":" Implementation for `arr!` macro.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":116},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/arr.rs","byte_start":24396,"byte_end":24405,"line_start":8,"line_end":8,"column_start":11,"column_end":20},"name":"AddLength","qualname":"::arr::AddLength","value":"AddLength<T, N: ArrayLength<T>>: ArrayLength<T>","parent":null,"children":[{"krate":0,"index":119}],"decl_id":null,"docs":" Helper trait for `arr!` macro\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":119},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/arr.rs","byte_start":24480,"byte_end":24486,"line_start":10,"line_end":10,"column_start":10,"column_end":16},"name":"Output","qualname":"::arr::AddLength::Output","value":"type Output: ArrayLength<T>;","parent":{"krate":0,"index":116},"children":[],"decl_id":null,"docs":" Resulting length\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":125},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/arr.rs","byte_start":24746,"byte_end":24749,"line_start":23,"line_end":23,"column_start":10,"column_end":13},"name":"Inc","qualname":"::arr::Inc","value":"<U as AddLength<T, U1>>::Output","parent":null,"children":[],"decl_id":null,"docs":" Helper type for `arr!` macro\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":130},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/functional.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"functional","qualname":"::functional","value":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/functional.rs","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":138},{"krate":0,"index":144},{"krate":0,"index":150},{"krate":0,"index":154},{"krate":0,"index":167},{"krate":0,"index":171}],"decl_id":null,"docs":" Functional programming with generic sequences","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":134},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/functional.rs","byte_start":26370,"byte_end":26391,"line_start":11,"line_end":11,"column_start":18,"column_end":39},"name":"MappedGenericSequence","qualname":"::functional::MappedGenericSequence","value":"MappedGenericSequence<T, U>: GenericSequence<T>","parent":null,"children":[{"krate":0,"index":137}],"decl_id":null,"docs":" Defines the relationship between one generic sequence and another,\n for operations such as `map` and `zip`.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":137},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/functional.rs","byte_start":26498,"byte_end":26504,"line_start":16,"line_end":16,"column_start":10,"column_end":16},"name":"Mapped","qualname":"::functional::MappedGenericSequence::Mapped","value":"type Mapped: GenericSequence<U, Length = Self::Length>;","parent":{"krate":0,"index":134},"children":[],"decl_id":null,"docs":" Mapped sequence type\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":150},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/functional.rs","byte_start":27273,"byte_end":27287,"line_start":38,"line_end":38,"column_start":10,"column_end":24},"name":"MappedSequence","qualname":"::functional::MappedSequence","value":"<<S as MappedGenericSequence<T, U>>::Mapped as GenericSequence<U>>::Sequence","parent":null,"children":[],"decl_id":null,"docs":" Accessor type for a mapped generic sequence\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":154},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/functional.rs","byte_start":27464,"byte_end":27482,"line_start":42,"line_end":42,"column_start":18,"column_end":36},"name":"FunctionalSequence","qualname":"::functional::FunctionalSequence","value":"FunctionalSequence<T>: GenericSequence<T>","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":164}],"decl_id":null,"docs":" Defines functional programming methods for generic sequences\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/functional.rs","byte_start":27773,"byte_end":27776,"line_start":47,"line_end":47,"column_start":8,"column_end":11},"name":"map","qualname":"::functional::FunctionalSequence::map","value":"fn <U, F> (self, f: F) -> MappedSequence<Self, T, U>","parent":{"krate":0,"index":154},"children":[],"decl_id":null,"docs":" Maps a `GenericSequence` to another `GenericSequence`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/functional.rs","byte_start":28415,"byte_end":28418,"line_start":62,"line_end":62,"column_start":8,"column_end":11},"name":"zip","qualname":"::functional::FunctionalSequence::zip","value":"fn <B, Rhs, U, F> (self, rhs: Rhs, f: F) -> MappedSequence<Self, T, U>","parent":{"krate":0,"index":154},"children":[],"decl_id":null,"docs":" Combines two `GenericSequence` instances and iterates through both of them,\n initializing a new `GenericSequence` with the result of the zipped mapping function.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/functional.rs","byte_start":28398,"byte_end":28407,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/functional.rs","byte_start":28978,"byte_end":28982,"line_start":76,"line_end":76,"column_start":8,"column_end":12},"name":"fold","qualname":"::functional::FunctionalSequence::fold","value":"fn <U, F> (self, init: U, f: F) -> U","parent":{"krate":0,"index":154},"children":[],"decl_id":null,"docs":" Folds (or reduces) a sequence of data into a single value.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":175},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/iter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iter","qualname":"::iter","value":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/iter.rs","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":191},{"krate":0,"index":196},{"krate":0,"index":202},{"krate":0,"index":206},{"krate":0,"index":210},{"krate":0,"index":214},{"krate":0,"index":223},{"krate":0,"index":227}],"decl_id":null,"docs":" `GenericArray` iterator implementation.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":185},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/iter.rs","byte_start":29566,"byte_end":29582,"line_start":8,"line_end":8,"column_start":12,"column_end":28},"name":"GenericArrayIter","qualname":"::iter::GenericArrayIter","value":"GenericArrayIter {  }","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190}],"decl_id":null,"docs":" An iterator that moves out of a `GenericArray`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/iter.rs","byte_start":30240,"byte_end":30248,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<GenericArrayIter<T, N>>::as_slice","value":"fn (&self) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining items of this iterator as a slice\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/iter.rs","byte_start":30219,"byte_end":30228,"line_start":34,"line_end":34,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/iter.rs","byte_start":30430,"byte_end":30442,"line_start":41,"line_end":41,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<GenericArrayIter<T, N>>::as_mut_slice","value":"fn (&mut self) -> &mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining items of this iterator as a mutable slice\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/iter.rs","byte_start":30409,"byte_end":30418,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":231},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sequence","qualname":"::sequence","value":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":236},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":257},{"krate":0,"index":259},{"krate":0,"index":267},{"krate":0,"index":275},{"krate":0,"index":280},{"krate":0,"index":285},{"krate":0,"index":291},{"krate":0,"index":297},{"krate":0,"index":303},{"krate":0,"index":310},{"krate":0,"index":316}],"decl_id":null,"docs":" Useful traits for manipulating sequences of data stored in `GenericArray`s\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":240},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":34161,"byte_end":34176,"line_start":11,"line_end":11,"column_start":18,"column_end":33},"name":"GenericSequence","qualname":"::sequence::GenericSequence","value":"GenericSequence<T>: Sized + IntoIterator","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":251}],"decl_id":null,"docs":" Defines some sequence with an associated length and iteration capabilities.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":242},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":34254,"byte_end":34260,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"Length","qualname":"::sequence::GenericSequence::Length","value":"type Length: ArrayLength<T>;","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" `GenericArray` associated length\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":243},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":34390,"byte_end":34398,"line_start":16,"line_end":16,"column_start":10,"column_end":18},"name":"Sequence","qualname":"::sequence::GenericSequence::Sequence","value":"type Sequence: GenericSequence<T, Length = Self::Length> + FromIterator<T>;","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Concrete sequence type used in conjuction with reference implementations of `GenericSequence`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":34679,"byte_end":34687,"line_start":22,"line_end":22,"column_start":8,"column_end":16},"name":"generate","qualname":"::sequence::GenericSequence::generate","value":"fn <F> (f: F) -> Self::Sequence","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Initializes a new sequence instance using the given function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":34782,"byte_end":34794,"line_start":27,"line_end":27,"column_start":8,"column_end":20},"name":"inverted_zip","qualname":"::sequence::GenericSequence::inverted_zip","value":"fn <B, U, F> (self, lhs: GenericArray<B, Self::Length>, mut f: F) -> MappedSequence<GenericArray<B, Self::Length>, B, U>","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":35753,"byte_end":35766,"line_start":59,"line_end":59,"column_start":8,"column_end":21},"name":"inverted_zip2","qualname":"::sequence::GenericSequence::inverted_zip2","value":"fn <B, Lhs, U, F> (self, lhs: Lhs, mut f: F) -> MappedSequence<Lhs, B, U>","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":257},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":36421,"byte_end":36433,"line_start":74,"line_end":74,"column_start":10,"column_end":22},"name":"SequenceItem","qualname":"::sequence::SequenceItem","value":"<T as IntoIterator>::Item","parent":null,"children":[],"decl_id":null,"docs":" Accessor for `GenericSequence` item type, which is really `IntoIterator::Item`","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":275},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":37325,"byte_end":37333,"line_start":112,"line_end":112,"column_start":18,"column_end":26},"name":"Lengthen","qualname":"::sequence::Lengthen","value":"Lengthen<T>: Sized + GenericSequence<T>","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279}],"decl_id":null,"docs":" Defines any `GenericSequence` which can be lengthened or extended by appending\n or prepending an element to it.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":277},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":37440,"byte_end":37446,"line_start":114,"line_end":114,"column_start":10,"column_end":16},"name":"Longer","qualname":"::sequence::Lengthen::Longer","value":"type Longer: Shorten<T, Shorter = Self>;","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":" `GenericSequence` that has one more element than `Self`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":37752,"byte_end":37758,"line_start":127,"line_end":127,"column_start":8,"column_end":14},"name":"append","qualname":"::sequence::Lengthen::append","value":"fn (self, last: T) -> Self::Longer","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":" Returns a new array with the given element appended to the end of it.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":38071,"byte_end":38078,"line_start":140,"line_end":140,"column_start":8,"column_end":15},"name":"prepend","qualname":"::sequence::Lengthen::prepend","value":"fn (self, first: T) -> Self::Longer","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":" Returns a new array with the given element prepended to the front of it.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":280},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":38346,"byte_end":38353,"line_start":147,"line_end":147,"column_start":18,"column_end":25},"name":"Shorten","qualname":"::sequence::Shorten","value":"Shorten<T>: Sized + GenericSequence<T>","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284}],"decl_id":null,"docs":" Defines a `GenericSequence` which can be shortened by removing the first or last element from it.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":282},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":38460,"byte_end":38467,"line_start":149,"line_end":149,"column_start":10,"column_end":17},"name":"Shorter","qualname":"::sequence::Shorten::Shorter","value":"type Shorter: Lengthen<T, Longer = Self>;","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":" `GenericSequence` that has one less element than `Self`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":38815,"byte_end":38823,"line_start":163,"line_end":163,"column_start":8,"column_end":16},"name":"pop_back","qualname":"::sequence::Shorten::pop_back","value":"fn (self) -> (Self::Shorter, T)","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":" Returns a new array without the last element, and the last element.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":39166,"byte_end":39175,"line_start":176,"line_end":176,"column_start":8,"column_end":17},"name":"pop_front","qualname":"::sequence::Shorten::pop_front","value":"fn (self) -> (T, Self::Shorter)","parent":{"krate":0,"index":280},"children":[],"decl_id":null,"docs":" Returns a new array without the first element, and the first element.\n Example:","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":297},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":41059,"byte_end":41064,"line_start":248,"line_end":248,"column_start":18,"column_end":23},"name":"Split","qualname":"::sequence::Split","value":"Split<T, K>: GenericSequence<T>","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302}],"decl_id":null,"docs":" Defines a `GenericSequence` that can be split into two parts at a given pivot index.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":300},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":41179,"byte_end":41184,"line_start":253,"line_end":253,"column_start":10,"column_end":15},"name":"First","qualname":"::sequence::Split::First","value":"type First: GenericSequence<T>;","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" First part of the resulting split array\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":301},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":41264,"byte_end":41270,"line_start":255,"line_end":255,"column_start":10,"column_end":16},"name":"Second","qualname":"::sequence::Split::Second","value":"type Second: GenericSequence<T>;","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Second part of the resulting split array\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":41387,"byte_end":41392,"line_start":258,"line_end":258,"column_start":8,"column_end":13},"name":"split","qualname":"::sequence::Split::split","value":"fn (self) -> (Self::First, Self::Second)","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Splits an array at the given index, returning the separate parts of the array.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":310},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":42115,"byte_end":42121,"line_start":285,"line_end":285,"column_start":18,"column_end":24},"name":"Concat","qualname":"::sequence::Concat","value":"Concat<T, M>: GenericSequence<T>","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315}],"decl_id":null,"docs":" Defines `GenericSequence`s which can be joined together, forming a larger array.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":313},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":42236,"byte_end":42240,"line_start":290,"line_end":290,"column_start":10,"column_end":14},"name":"Rest","qualname":"::sequence::Concat::Rest","value":"type Rest: GenericSequence<T, Length = M>;","parent":{"krate":0,"index":310},"children":[],"decl_id":null,"docs":" Sequence to be concatenated with `self`\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":314},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":42340,"byte_end":42346,"line_start":293,"line_end":293,"column_start":10,"column_end":16},"name":"Output","qualname":"::sequence::Concat::Output","value":"type Output: GenericSequence<T>;","parent":{"krate":0,"index":310},"children":[],"decl_id":null,"docs":" Resulting sequence formed by the concatenation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":42421,"byte_end":42427,"line_start":296,"line_end":296,"column_start":8,"column_end":14},"name":"concat","qualname":"::sequence::Concat::concat","value":"fn (self, rest: Self::Rest) -> Self::Output","parent":{"krate":0,"index":310},"children":[],"decl_id":null,"docs":" Concatenate, or join, two sequences.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":326},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":1683,"byte_end":1694,"line_start":75,"line_end":75,"column_start":18,"column_end":29},"name":"ArrayLength","qualname":"::ArrayLength","value":"ArrayLength<T>: Unsigned","parent":null,"children":[{"krate":0,"index":328}],"decl_id":null,"docs":" Trait making `GenericArray` work, marking types to be used as length of an array\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":328},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":1786,"byte_end":1795,"line_start":77,"line_end":77,"column_start":10,"column_end":19},"name":"ArrayType","qualname":"::ArrayLength::ArrayType","value":"type ArrayType;","parent":{"krate":0,"index":326},"children":[],"decl_id":null,"docs":" Associated type representing the array type for the number\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":332},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":2010,"byte_end":2030,"line_start":89,"line_end":89,"column_start":12,"column_end":32},"name":"GenericArrayImplEven","qualname":"::GenericArrayImplEven","value":"GenericArrayImplEven {  }","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337}],"decl_id":null,"docs":" Internal type used to generate a struct of appropriate size\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":1953,"byte_end":1972,"line_start":86,"line_end":86,"column_start":1,"column_end":20}},{"value":"repr(C)","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":1973,"byte_end":1983,"line_start":87,"line_end":87,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":345},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":2573,"byte_end":2592,"line_start":111,"line_end":111,"column_start":12,"column_end":31},"name":"GenericArrayImplOdd","qualname":"::GenericArrayImplOdd","value":"GenericArrayImplOdd {  }","parent":null,"children":[{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350}],"decl_id":null,"docs":" Internal type used to generate a struct of appropriate size\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":2516,"byte_end":2535,"line_start":108,"line_end":108,"column_start":1,"column_end":20}},{"value":"repr(C)","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":2536,"byte_end":2546,"line_start":109,"line_end":109,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":366},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":3406,"byte_end":3418,"line_start":141,"line_end":141,"column_start":12,"column_end":24},"name":"GenericArray","qualname":"::GenericArray","value":"GenericArray {  }","parent":null,"children":[{"krate":0,"index":369}],"decl_id":null,"docs":" Struct representing a generic array - `GenericArray<T, N>` works like [T; N]\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":3375,"byte_end":3394,"line_start":140,"line_end":140,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":385},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":4364,"byte_end":4376,"line_start":176,"line_end":176,"column_start":12,"column_end":24},"name":"ArrayBuilder","qualname":"::ArrayBuilder","value":"ArrayBuilder {  }","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":389}],"decl_id":null,"docs":" Creates an array one element at a time using a mutable iterator\n you can write to with `ptr::write`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":4569,"byte_end":4572,"line_start":184,"line_end":184,"column_start":19,"column_end":22},"name":"new","qualname":"<ArrayBuilder<T, N>>::new","value":"fn () -> ArrayBuilder<T, N>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":4541,"byte_end":4550,"line_start":183,"line_end":183,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":4997,"byte_end":5010,"line_start":197,"line_end":197,"column_start":19,"column_end":32},"name":"iter_position","qualname":"<ArrayBuilder<T, N>>::iter_position","value":"fn (&mut self) -> (slice::IterMut<T>, &mut usize)","parent":null,"children":[],"decl_id":null,"docs":" Creates a mutable iterator for writing to the array using `ptr::write`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":4969,"byte_end":4978,"line_start":196,"line_end":196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":5270,"byte_end":5280,"line_start":205,"line_end":205,"column_start":19,"column_end":29},"name":"into_inner","qualname":"<ArrayBuilder<T, N>>::into_inner","value":"fn (self) -> GenericArray<T, N>","parent":null,"children":[],"decl_id":null,"docs":" When done writing (assuming all elements have been written to),\n get the inner array.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":5242,"byte_end":5251,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":400},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":5839,"byte_end":5852,"line_start":229,"line_end":229,"column_start":12,"column_end":25},"name":"ArrayConsumer","qualname":"::ArrayConsumer","value":"ArrayConsumer {  }","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404}],"decl_id":null,"docs":" Consumes an array.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":6046,"byte_end":6049,"line_start":237,"line_end":237,"column_start":19,"column_end":22},"name":"new","qualname":"<ArrayConsumer<T, N>>::new","value":"fn (array: GenericArray<T, N>) -> ArrayConsumer<T, N>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":6018,"byte_end":6027,"line_start":236,"line_end":236,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":6467,"byte_end":6480,"line_start":250,"line_end":250,"column_start":19,"column_end":32},"name":"iter_position","qualname":"<ArrayConsumer<T, N>>::iter_position","value":"fn (&mut self) -> (slice::Iter<T>, &mut usize)","parent":null,"children":[],"decl_id":null,"docs":" Creates an iterator and mutable reference to the internal position\n to keep track of consumed elements.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":6439,"byte_end":6448,"line_start":249,"line_end":249,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":12800,"byte_end":12808,"line_start":489,"line_end":489,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<GenericArray<T, N>>::as_slice","value":"fn (&self) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice containing the entire array.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":12779,"byte_end":12788,"line_start":488,"line_end":488,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":12941,"byte_end":12953,"line_start":495,"line_end":495,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<GenericArray<T, N>>::as_mut_slice","value":"fn (&mut self) -> &mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a mutable slice containing the entire array.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":12920,"byte_end":12929,"line_start":494,"line_end":494,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":13188,"byte_end":13198,"line_start":503,"line_end":503,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<GenericArray<T, N>>::from_slice","value":"fn (slice: &[T]) -> &GenericArray<T, N>","parent":null,"children":[],"decl_id":null,"docs":" Converts slice to a generic array reference with inferred length;","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":13167,"byte_end":13176,"line_start":502,"line_end":502,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":13436,"byte_end":13450,"line_start":511,"line_end":511,"column_start":12,"column_end":26},"name":"from_mut_slice","qualname":"<GenericArray<T, N>>::from_mut_slice","value":"fn (slice: &mut [T]) -> &mut GenericArray<T, N>","parent":null,"children":[],"decl_id":null,"docs":" Converts mutable slice to a mutable generic array reference","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":13415,"byte_end":13424,"line_start":510,"line_end":510,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":14614,"byte_end":14630,"line_start":548,"line_end":548,"column_start":12,"column_end":28},"name":"clone_from_slice","qualname":"<GenericArray<T, N>>::clone_from_slice","value":"fn (list: &[T]) -> GenericArray<T, N>","parent":null,"children":[],"decl_id":null,"docs":" Construct a `GenericArray` from a slice by cloning its content","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":14593,"byte_end":14602,"line_start":547,"line_end":547,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":15059,"byte_end":15074,"line_start":561,"line_end":561,"column_start":12,"column_end":27},"name":"from_exact_iter","qualname":"<GenericArray<T, N>>::from_exact_iter","value":"fn <I> (iter: I) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `GenericArray` instance from an iterator with a known exact size.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":499},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":15952,"byte_end":15961,"line_start":594,"line_end":594,"column_start":15,"column_end":24},"name":"transmute","qualname":"::transmute","value":"fn <A, B> (a: A) -> B","parent":null,"children":[],"decl_id":null,"docs":" A reimplementation of the `transmute` function, avoiding problems\n when the compiler can't prove equal sizes.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":15913,"byte_end":15922,"line_start":592,"line_end":592,"column_start":1,"column_end":10}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/hex.rs","byte_start":17608,"byte_end":17620,"line_start":28,"line_end":28,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":18}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/hex.rs","byte_start":19090,"byte_end":19102,"line_start":66,"line_end":66,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/impls.rs","byte_start":20764,"byte_end":20776,"line_start":9,"line_end":9,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/impls.rs","byte_start":20933,"byte_end":20945,"line_start":19,"line_end":19,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/impls.rs","byte_start":21093,"byte_end":21105,"line_start":28,"line_end":28,"column_start":27,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/impls.rs","byte_start":21206,"byte_end":21218,"line_start":35,"line_end":35,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/impls.rs","byte_start":21353,"byte_end":21365,"line_start":43,"line_end":43,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/impls.rs","byte_start":21444,"byte_end":21456,"line_start":49,"line_end":49,"column_start":39,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/impls.rs","byte_start":21670,"byte_end":21682,"line_start":58,"line_end":58,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/impls.rs","byte_start":21869,"byte_end":21881,"line_start":67,"line_end":67,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/impls.rs","byte_start":22042,"byte_end":22054,"line_start":76,"line_end":76,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/impls.rs","byte_start":22202,"byte_end":22214,"line_start":86,"line_end":86,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/impls.rs","byte_start":22374,"byte_end":22386,"line_start":96,"line_end":96,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/impls.rs","byte_start":22530,"byte_end":22542,"line_start":106,"line_end":106,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/impls.rs","byte_start":22698,"byte_end":22710,"line_start":116,"line_end":116,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/arr.rs","byte_start":24544,"byte_end":24546,"line_start":13,"line_end":13,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/iter.rs","byte_start":30097,"byte_end":30113,"line_start":29,"line_end":29,"column_start":12,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/iter.rs","byte_start":30573,"byte_end":30585,"line_start":46,"line_end":46,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/iter.rs","byte_start":30960,"byte_end":30976,"line_start":63,"line_end":63,"column_start":39,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/iter.rs","byte_start":31203,"byte_end":31219,"line_start":74,"line_end":74,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/iter.rs","byte_start":31542,"byte_end":31558,"line_start":90,"line_end":90,"column_start":29,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/iter.rs","byte_start":32186,"byte_end":32202,"line_start":115,"line_end":115,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/iter.rs","byte_start":33275,"byte_end":33291,"line_start":166,"line_end":166,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/iter.rs","byte_start":33617,"byte_end":33633,"line_start":181,"line_end":181,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":39258,"byte_end":39270,"line_start":179,"line_end":179,"column_start":51,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":40118,"byte_end":40130,"line_start":213,"line_end":213,"column_start":50,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":41471,"byte_end":41483,"line_start":261,"line_end":261,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":42510,"byte_end":42522,"line_start":299,"line_end":299,"column_start":39,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":1834,"byte_end":1839,"line_start":80,"line_end":80,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":2138,"byte_end":2158,"line_start":95,"line_end":95,"column_start":36,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":2421,"byte_end":2441,"line_start":105,"line_end":105,"column_start":33,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":2684,"byte_end":2703,"line_start":117,"line_end":117,"column_start":36,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":2967,"byte_end":2986,"line_start":127,"line_end":127,"column_start":33,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":3050,"byte_end":3054,"line_start":129,"line_end":129,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":3199,"byte_end":3203,"line_start":134,"line_end":134,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":3519,"byte_end":3531,"line_start":145,"line_end":145,"column_start":50,"column_end":62},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":3590,"byte_end":3602,"line_start":146,"line_end":146,"column_start":50,"column_end":62},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":3634,"byte_end":3646,"line_start":148,"line_end":148,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":3882,"byte_end":3894,"line_start":160,"line_end":160,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":4497,"byte_end":4509,"line_start":181,"line_end":181,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":5469,"byte_end":5481,"line_start":214,"line_end":214,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":5973,"byte_end":5986,"line_start":234,"line_end":234,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":408},{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":6619,"byte_end":6632,"line_start":255,"line_end":255,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":7408,"byte_end":7420,"line_start":289,"line_end":289,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":8365,"byte_end":8377,"line_start":328,"line_end":328,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":441},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":10991,"byte_end":11003,"line_start":417,"line_end":417,"column_start":54,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":11199,"byte_end":11211,"line_start":425,"line_end":425,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":464},{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":12671,"byte_end":12683,"line_start":483,"line_end":483,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":14391,"byte_end":14403,"line_start":540,"line_end":540,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":14805,"byte_end":14817,"line_start":554,"line_end":554,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":1454,"byte_end":1457,"line_start":65,"line_end":65,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":112}},{"kind":"Mod","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":1467,"byte_end":1477,"line_start":66,"line_end":66,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":130}},{"kind":"Mod","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":1487,"byte_end":1491,"line_start":67,"line_end":67,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":175}},{"kind":"Mod","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":1501,"byte_end":1509,"line_start":68,"line_end":68,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":231}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/hex.rs","byte_start":17608,"byte_end":17620,"line_start":28,"line_end":28,"column_start":44,"column_end":56},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":7647}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/hex.rs","byte_start":19090,"byte_end":19102,"line_start":66,"line_end":66,"column_start":44,"column_end":56},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":7649}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/impls.rs","byte_start":20764,"byte_end":20776,"line_start":9,"line_end":9,"column_start":33,"column_end":45},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":2206}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/impls.rs","byte_start":20933,"byte_end":20945,"line_start":19,"line_end":19,"column_start":29,"column_end":41},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":2181}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/impls.rs","byte_start":21093,"byte_end":21105,"line_start":28,"line_end":28,"column_start":27,"column_end":39},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":1543}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/impls.rs","byte_start":21206,"byte_end":21218,"line_start":35,"line_end":35,"column_start":37,"column_end":49},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":2040}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/impls.rs","byte_start":21353,"byte_end":21365,"line_start":43,"line_end":43,"column_start":23,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":2045}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/impls.rs","byte_start":21444,"byte_end":21456,"line_start":49,"line_end":49,"column_start":39,"column_end":51},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":2077}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/impls.rs","byte_start":21670,"byte_end":21682,"line_start":58,"line_end":58,"column_start":25,"column_end":37},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":2066}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/impls.rs","byte_start":21869,"byte_end":21881,"line_start":67,"line_end":67,"column_start":29,"column_end":41},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":7636}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/impls.rs","byte_start":22042,"byte_end":22054,"line_start":76,"line_end":76,"column_start":28,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":2325}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/impls.rs","byte_start":22202,"byte_end":22214,"line_start":86,"line_end":86,"column_start":31,"column_end":43},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":2328}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/impls.rs","byte_start":22374,"byte_end":22386,"line_start":96,"line_end":96,"column_start":27,"column_end":39},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":2249}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/impls.rs","byte_start":22530,"byte_end":22542,"line_start":106,"line_end":106,"column_start":27,"column_end":39},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":2252}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/impls.rs","byte_start":22698,"byte_end":22710,"line_start":116,"line_end":116,"column_start":27,"column_end":39},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":7278}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/arr.rs","byte_start":24429,"byte_end":24440,"line_start":8,"line_end":8,"column_start":44,"column_end":55},"kind":"SuperTrait","from":{"krate":0,"index":326},"to":{"krate":0,"index":116}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/arr.rs","byte_start":24544,"byte_end":24546,"line_start":13,"line_end":13,"column_start":38,"column_end":40},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":122},"to":{"krate":0,"index":116}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/functional.rs","byte_start":26399,"byte_end":26414,"line_start":11,"line_end":11,"column_start":47,"column_end":62},"kind":"SuperTrait","from":{"krate":0,"index":240},"to":{"krate":0,"index":134}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/functional.rs","byte_start":27487,"byte_end":27502,"line_start":42,"line_end":42,"column_start":41,"column_end":56},"kind":"SuperTrait","from":{"krate":0,"index":240},"to":{"krate":0,"index":154}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/iter.rs","byte_start":30097,"byte_end":30113,"line_start":29,"line_end":29,"column_start":12,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":185},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/iter.rs","byte_start":30573,"byte_end":30585,"line_start":46,"line_end":46,"column_start":29,"column_end":41},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":3951}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/iter.rs","byte_start":30960,"byte_end":30976,"line_start":63,"line_end":63,"column_start":39,"column_end":55},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":185},"to":{"krate":1,"index":7636}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/iter.rs","byte_start":31203,"byte_end":31219,"line_start":74,"line_end":74,"column_start":21,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":185},"to":{"krate":1,"index":1726}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/iter.rs","byte_start":31542,"byte_end":31558,"line_start":90,"line_end":90,"column_start":29,"column_end":45},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":185},"to":{"krate":1,"index":2181}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/iter.rs","byte_start":32186,"byte_end":32202,"line_start":115,"line_end":115,"column_start":25,"column_end":41},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":185},"to":{"krate":1,"index":3653}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/iter.rs","byte_start":33275,"byte_end":33291,"line_start":166,"line_end":166,"column_start":36,"column_end":52},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":185},"to":{"krate":1,"index":3910}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/iter.rs","byte_start":33617,"byte_end":33633,"line_start":181,"line_end":181,"column_start":34,"column_end":50},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":185},"to":{"krate":1,"index":3939}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":34181,"byte_end":34186,"line_start":11,"line_end":11,"column_start":38,"column_end":43},"kind":"SuperTrait","from":{"krate":1,"index":1538},"to":{"krate":0,"index":240}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":34189,"byte_end":34201,"line_start":11,"line_end":11,"column_start":46,"column_end":58},"kind":"SuperTrait","from":{"krate":1,"index":3951},"to":{"krate":0,"index":240}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":37338,"byte_end":37343,"line_start":112,"line_end":112,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":1,"index":1538},"to":{"krate":0,"index":275}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":37346,"byte_end":37361,"line_start":112,"line_end":112,"column_start":39,"column_end":54},"kind":"SuperTrait","from":{"krate":0,"index":240},"to":{"krate":0,"index":275}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":38358,"byte_end":38363,"line_start":147,"line_end":147,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":1538},"to":{"krate":0,"index":280}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":38366,"byte_end":38381,"line_start":147,"line_end":147,"column_start":38,"column_end":53},"kind":"SuperTrait","from":{"krate":0,"index":240},"to":{"krate":0,"index":280}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":39258,"byte_end":39270,"line_start":179,"line_end":179,"column_start":51,"column_end":63},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":366},"to":{"krate":0,"index":275}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":40118,"byte_end":40130,"line_start":213,"line_end":213,"column_start":50,"column_end":62},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":366},"to":{"krate":0,"index":280}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":41072,"byte_end":41087,"line_start":248,"line_end":248,"column_start":31,"column_end":46},"kind":"SuperTrait","from":{"krate":0,"index":240},"to":{"krate":0,"index":297}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":41471,"byte_end":41483,"line_start":261,"line_end":261,"column_start":38,"column_end":50},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":366},"to":{"krate":0,"index":297}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":42129,"byte_end":42144,"line_start":285,"line_end":285,"column_start":32,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":240},"to":{"krate":0,"index":310}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/sequence.rs","byte_start":42510,"byte_end":42522,"line_start":299,"line_end":299,"column_start":39,"column_end":51},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":366},"to":{"krate":0,"index":310}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":1699,"byte_end":1707,"line_start":75,"line_end":75,"column_start":34,"column_end":42},"kind":"SuperTrait","from":{"krate":4,"index":502},"to":{"krate":0,"index":326}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":1834,"byte_end":1839,"line_start":80,"line_end":80,"column_start":35,"column_end":40},"kind":{"Impl":{"id":28}},"from":{"krate":4,"index":5928},"to":{"krate":0,"index":326}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":2138,"byte_end":2158,"line_start":95,"line_end":95,"column_start":36,"column_end":56},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":332},"to":{"krate":1,"index":2181}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":2421,"byte_end":2441,"line_start":105,"line_end":105,"column_start":33,"column_end":53},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":332},"to":{"krate":1,"index":1543}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":2684,"byte_end":2703,"line_start":117,"line_end":117,"column_start":36,"column_end":55},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":345},"to":{"krate":1,"index":2181}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":2967,"byte_end":2986,"line_start":127,"line_end":127,"column_start":33,"column_end":52},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":345},"to":{"krate":1,"index":1543}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":3050,"byte_end":3054,"line_start":129,"line_end":129,"column_start":54,"column_end":58},"kind":{"Impl":{"id":33}},"from":{"krate":4,"index":5877},"to":{"krate":0,"index":326}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":3199,"byte_end":3203,"line_start":134,"line_end":134,"column_start":54,"column_end":58},"kind":{"Impl":{"id":34}},"from":{"krate":4,"index":5877},"to":{"krate":0,"index":326}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":3519,"byte_end":3531,"line_start":145,"line_end":145,"column_start":50,"column_end":62},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":1533}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":3590,"byte_end":3602,"line_start":146,"line_end":146,"column_start":50,"column_end":62},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":1545}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":3634,"byte_end":3646,"line_start":148,"line_end":148,"column_start":22,"column_end":34},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":1704}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":3882,"byte_end":3894,"line_start":160,"line_end":160,"column_start":25,"column_end":37},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":1715}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":4497,"byte_end":4509,"line_start":181,"line_end":181,"column_start":28,"column_end":40},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":5469,"byte_end":5481,"line_start":214,"line_end":214,"column_start":37,"column_end":49},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":385},"to":{"krate":1,"index":1726}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":5973,"byte_end":5986,"line_start":234,"line_end":234,"column_start":28,"column_end":41},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":6619,"byte_end":6632,"line_start":255,"line_end":255,"column_start":37,"column_end":50},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":400},"to":{"krate":1,"index":1726}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":7408,"byte_end":7420,"line_start":289,"line_end":289,"column_start":32,"column_end":44},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":366},"to":{"krate":1,"index":3947}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":8365,"byte_end":8377,"line_start":328,"line_end":328,"column_start":42,"column_end":54},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":366},"to":{"krate":0,"index":240}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":10991,"byte_end":11003,"line_start":417,"line_end":417,"column_start":54,"column_end":66},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":366},"to":{"krate":0,"index":134}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":11199,"byte_end":11211,"line_start":425,"line_end":425,"column_start":45,"column_end":57},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":366},"to":{"krate":0,"index":154}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":12671,"byte_end":12683,"line_start":483,"line_end":483,"column_start":12,"column_end":24},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":14391,"byte_end":14403,"line_start":540,"line_end":540,"column_start":19,"column_end":31},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.12.3/src/lib.rs","byte_start":14805,"byte_end":14817,"line_start":554,"line_end":554,"column_start":12,"column_end":24},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":366},"to":{"krate":4294967295,"index":4294967295}}]}