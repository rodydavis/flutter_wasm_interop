{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0","program":"/Users/rodydavis/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--edition=2018","--crate-name","wasmer_clif_fork_wasm","/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"basic-blocks\"","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=2eedab9e83bb9cb7","-C","extra-filename=-2eedab9e83bb9cb7","--out-dir","/Users/rodydavis/Developer/GitHub/packages/flutter_wasm_interop/example/target/rls/debug/deps","-L","dependency=/Users/rodydavis/Developer/GitHub/packages/flutter_wasm_interop/example/target/rls/debug/deps","--extern","cranelift_codegen=/Users/rodydavis/Developer/GitHub/packages/flutter_wasm_interop/example/target/rls/debug/deps/libcranelift_codegen-6264f06b421a658f.rmeta","--extern","cranelift_entity=/Users/rodydavis/Developer/GitHub/packages/flutter_wasm_interop/example/target/rls/debug/deps/libcranelift_entity-fec312bedc4ceb2b.rmeta","--extern","log=/Users/rodydavis/Developer/GitHub/packages/flutter_wasm_interop/example/target/rls/debug/deps/liblog-93eb147a2edf3ff9.rmeta","--extern","thiserror=/Users/rodydavis/Developer/GitHub/packages/flutter_wasm_interop/example/target/rls/debug/deps/libthiserror-c6b5f394b40cc1ed.rmeta","--extern","wasmer_clif_fork_frontend=/Users/rodydavis/Developer/GitHub/packages/flutter_wasm_interop/example/target/rls/debug/deps/libwasmer_clif_fork_frontend-3beba44eba86b376.rmeta","--extern","wasmparser=/Users/rodydavis/Developer/GitHub/packages/flutter_wasm_interop/example/target/rls/debug/deps/libwasmparser-c2ffd3094e3a34e4.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/rodydavis/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/rodydavis/Developer/GitHub/packages/flutter_wasm_interop/example/target/rls/debug/deps/libwasmer_clif_fork_wasm-2eedab9e83bb9cb7.rmeta"},"prelude":{"crate_id":{"name":"wasmer_clif_fork_wasm","disambiguator":[12569869883157464162,13033304910077340694]},"crate_root":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src","external_crates":[{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[5459908120384850477,15760959269387734159]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[11826469219384905814,12486183027959381912]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[5497990426549684121,15109235050116755313]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","num":4,"id":{"name":"std","disambiguator":[5808000563841838002,6875932327897409807]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9495953968349266340,8510226981626586408]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[423181384897816611,2293857470463835221]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5608331764705855408,15392280463108098182]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14701876030349379005,4369912422515260820]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[8984243875435576741,4446548522921354]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[4101421024496600006,15821692231896539213]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[3079379191059796654,13101802771042696873]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[7173097494859913114,11426318732171342333]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12351377766094969309,8390201886823579403]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[2739304812783641882,6504751215723634061]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/code_translator.rs","num":15,"id":{"name":"cranelift_codegen","disambiguator":[8137594953696592169,2434923929662806093]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/code_translator.rs","num":16,"id":{"name":"cranelift_bforest","disambiguator":[16839861756975015430,17480968280561536471]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","num":17,"id":{"name":"cranelift_entity","disambiguator":[17753184904274736661,13260828292095518975]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/func_translator.rs","num":18,"id":{"name":"log","disambiguator":[1733674285016593233,15249908543282869660]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/code_translator.rs","num":19,"id":{"name":"cfg_if","disambiguator":[10201928301582868305,15717936632155057518]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/code_translator.rs","num":20,"id":{"name":"cranelift_codegen_shared","disambiguator":[12159334638876363809,11181374470640890765]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/code_translator.rs","num":21,"id":{"name":"target_lexicon","disambiguator":[8710467849870275380,14539867229973532926]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","num":22,"id":{"name":"thiserror","disambiguator":[644983917941971274,9005274455038075708]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/code_translator.rs","num":23,"id":{"name":"thiserror_impl","disambiguator":[162727662940899118,1051987824536435867]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/code_translator.rs","num":24,"id":{"name":"byteorder","disambiguator":[1239690670661025595,7182013389202797911]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/code_translator.rs","num":25,"id":{"name":"smallvec","disambiguator":[11988265583603314485,13440539531608910145]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/code_translator.rs","num":26,"id":{"name":"wasmer_clif_fork_frontend","disambiguator":[12787430569537561941,13529711990078411672]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/code_translator.rs","num":27,"id":{"name":"wasmparser","disambiguator":[15232056790050899799,6076728262175896472]}}],"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","byte_start":0,"byte_end":2527,"line_start":1,"line_end":76,"column_start":1,"column_end":53}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":58},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","byte_start":1756,"byte_end":1774,"line_start":60,"line_end":60,"column_start":33,"column_end":51},"alias_span":null,"name":"translate_operator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":139},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","byte_start":1806,"byte_end":1822,"line_start":62,"line_end":62,"column_start":5,"column_end":21},"alias_span":null,"name":"DummyEnvironment","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":240},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","byte_start":1824,"byte_end":1839,"line_start":62,"line_end":62,"column_start":23,"column_end":38},"alias_span":null,"name":"FuncEnvironment","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":587},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","byte_start":1841,"byte_end":1855,"line_start":62,"line_end":62,"column_start":40,"column_end":54},"alias_span":null,"name":"GlobalVariable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":262},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","byte_start":1857,"byte_end":1874,"line_start":62,"line_end":62,"column_start":56,"column_end":73},"alias_span":null,"name":"ModuleEnvironment","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":618},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","byte_start":1876,"byte_end":1886,"line_start":62,"line_end":62,"column_start":75,"column_end":85},"alias_span":null,"name":"ReturnMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":235},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","byte_start":1892,"byte_end":1909,"line_start":63,"line_end":63,"column_start":5,"column_end":22},"alias_span":null,"name":"TargetEnvironment","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":598},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","byte_start":1911,"byte_end":1920,"line_start":63,"line_end":63,"column_start":24,"column_end":33},"alias_span":null,"name":"WasmError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":233},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","byte_start":1922,"byte_end":1932,"line_start":63,"line_end":63,"column_start":35,"column_end":45},"alias_span":null,"name":"WasmResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":342},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","byte_start":1970,"byte_end":1984,"line_start":65,"line_end":65,"column_start":34,"column_end":48},"alias_span":null,"name":"declare_locals","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":330},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","byte_start":1986,"byte_end":2000,"line_start":65,"line_end":65,"column_start":50,"column_end":64},"alias_span":null,"name":"FuncTranslator","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":373},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","byte_start":2037,"byte_end":2053,"line_start":66,"line_end":66,"column_start":35,"column_end":51},"alias_span":null,"name":"translate_module","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":482},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","byte_start":2089,"byte_end":2109,"line_start":67,"line_end":67,"column_start":35,"column_end":55},"alias_span":null,"name":"FuncTranslationState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":666},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","byte_start":2147,"byte_end":2169,"line_start":68,"line_end":68,"column_start":37,"column_end":59},"alias_span":null,"name":"ModuleTranslationState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":552},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","byte_start":2211,"byte_end":2232,"line_start":70,"line_end":70,"column_start":5,"column_end":26},"alias_span":null,"name":"get_vmctx_value_label","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":704},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","byte_start":2234,"byte_end":2250,"line_start":70,"line_end":70,"column_start":28,"column_end":44},"alias_span":null,"name":"DefinedFuncIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":806},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","byte_start":2252,"byte_end":2270,"line_start":70,"line_end":70,"column_start":46,"column_end":64},"alias_span":null,"name":"DefinedGlobalIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":772},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","byte_start":2272,"byte_end":2290,"line_start":70,"line_end":70,"column_start":66,"column_end":84},"alias_span":null,"name":"DefinedMemoryIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":738},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","byte_start":2296,"byte_end":2313,"line_start":71,"line_end":71,"column_start":5,"column_end":22},"alias_span":null,"name":"DefinedTableIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":670},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","byte_start":2315,"byte_end":2324,"line_start":71,"line_end":71,"column_start":24,"column_end":33},"alias_span":null,"name":"FuncIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":976},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","byte_start":2326,"byte_end":2332,"line_start":71,"line_end":71,"column_start":35,"column_end":41},"alias_span":null,"name":"Global","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":874},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","byte_start":2334,"byte_end":2345,"line_start":71,"line_end":71,"column_start":43,"column_end":54},"alias_span":null,"name":"GlobalIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":988},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","byte_start":2347,"byte_end":2357,"line_start":71,"line_end":71,"column_start":56,"column_end":66},"alias_span":null,"name":"GlobalInit","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1045},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","byte_start":2359,"byte_end":2365,"line_start":71,"line_end":71,"column_start":68,"column_end":74},"alias_span":null,"name":"Memory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":908},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","byte_start":2367,"byte_end":2378,"line_start":71,"line_end":71,"column_start":76,"column_end":87},"alias_span":null,"name":"MemoryIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":942},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","byte_start":2384,"byte_end":2398,"line_start":72,"line_end":72,"column_start":5,"column_end":19},"alias_span":null,"name":"SignatureIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1019},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","byte_start":2400,"byte_end":2405,"line_start":72,"line_end":72,"column_start":21,"column_end":26},"alias_span":null,"name":"Table","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1031},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","byte_start":2407,"byte_end":2423,"line_start":72,"line_end":72,"column_start":28,"column_end":44},"alias_span":null,"name":"TableElementType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":840},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","byte_start":2425,"byte_end":2435,"line_start":72,"line_end":72,"column_start":46,"column_end":56},"alias_span":null,"name":"TableIndex","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","byte_start":0,"byte_end":2527,"line_start":1,"line_end":76,"column_start":1,"column_end":53},"name":"","qualname":"::","value":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":11},{"krate":0,"index":78},{"krate":0,"index":303},{"krate":0,"index":349},{"krate":0,"index":375},{"krate":0,"index":451},{"krate":0,"index":531},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":564},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":586}],"decl_id":null,"docs":" Performs translation from a wasm module in binary format to the in-memory form\n of Cranelift IR. More particularly, it translates the code of all the functions bodies and\n interacts with an environment implementing the\n [`ModuleEnvironment`](trait.ModuleEnvironment.html)\n trait to deal with tables, globals and linear memory.","sig":null,"attributes":[{"value":"deny(missing_docs, trivial_numeric_casts, unused_extern_crates)","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","byte_start":578,"byte_end":645,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"warn(unused_import_braces)","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","byte_start":646,"byte_end":676,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"deny(unstable_features)","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","byte_start":706,"byte_end":729,"line_start":14,"line_end":14,"column_start":30,"column_end":53}},{"value":"no_std","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","byte_start":1212,"byte_end":1222,"line_start":30,"line_end":30,"column_start":1,"column_end":11}}]},{"kind":"Function","id":{"krate":0,"index":58},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/code_translator.rs","byte_start":5042,"byte_end":5060,"line_start":50,"line_end":50,"column_start":8,"column_end":26},"name":"translate_operator","qualname":"::code_translator::translate_operator","value":"fn <FE> (module_translation_state: &ModuleTranslationState, op: &Operator, builder: &mut FunctionBuilder, state: &mut FuncTranslationState, environ: &mut FE) -> WasmResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Translates wasm operators into Cranelift IR instructions. Returns `true` if it inserted\n a return.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":117},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":86840,"byte_end":86850,"line_start":34,"line_end":34,"column_start":12,"column_end":22},"name":"Exportable","qualname":"::environ::dummy::Exportable","value":"Exportable { entity, export_names }","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120}],"decl_id":null,"docs":" A collection of names under which a given entity is exported.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":119},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":86887,"byte_end":86893,"line_start":36,"line_end":36,"column_start":9,"column_end":15},"name":"entity","qualname":"::environ::dummy::Exportable::entity","value":"T","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" A wasm entity.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":120},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":86957,"byte_end":86969,"line_start":39,"line_end":39,"column_start":9,"column_end":21},"name":"export_names","qualname":"::environ::dummy::Exportable::export_names","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":117},"children":[],"decl_id":null,"docs":" Names under which the entity is exported.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":87022,"byte_end":87025,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<Exportable<T>>::new","value":"fn (entity: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":124},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":87325,"byte_end":87340,"line_start":54,"line_end":54,"column_start":12,"column_end":27},"name":"DummyModuleInfo","qualname":"::environ::dummy::DummyModuleInfo","value":"DummyModuleInfo { signatures, imported_funcs, imported_globals, imported_tables, imported_memories, functions, function_bodies, tables, memories, globals, start_func }","parent":null,"children":[{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136}],"decl_id":null,"docs":" The main state belonging to a `DummyEnvironment`. This is split out from\n `DummyEnvironment` to allow it to be borrowed separately from the\n `FuncTranslator` field.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":126},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":87514,"byte_end":87524,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"name":"signatures","qualname":"::environ::dummy::DummyModuleInfo::signatures","value":"cranelift_entity::primary::PrimaryMap<translation_utils::SignatureIndex, cranelift_codegen::ir::extfunc::Signature>","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Signatures as provided by `declare_signature`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":127},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":87669,"byte_end":87683,"line_start":62,"line_end":62,"column_start":9,"column_end":23},"name":"imported_funcs","qualname":"::environ::dummy::DummyModuleInfo::imported_funcs","value":"std::vec::Vec<(std::string::String, std::string::String)>","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Module and field names of imported functions as provided by `declare_func_import`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":128},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":87808,"byte_end":87824,"line_start":65,"line_end":65,"column_start":9,"column_end":25},"name":"imported_globals","qualname":"::environ::dummy::DummyModuleInfo::imported_globals","value":"std::vec::Vec<(std::string::String, std::string::String)>","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Module and field names of imported globals as provided by `declare_global_import`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":129},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":87947,"byte_end":87962,"line_start":68,"line_end":68,"column_start":9,"column_end":24},"name":"imported_tables","qualname":"::environ::dummy::DummyModuleInfo::imported_tables","value":"std::vec::Vec<(std::string::String, std::string::String)>","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Module and field names of imported tables as provided by `declare_table_import`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":130},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":88088,"byte_end":88105,"line_start":71,"line_end":71,"column_start":9,"column_end":26},"name":"imported_memories","qualname":"::environ::dummy::DummyModuleInfo::imported_memories","value":"std::vec::Vec<(std::string::String, std::string::String)>","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Module and field names of imported memories as provided by `declare_memory_import`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":131},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":88178,"byte_end":88187,"line_start":74,"line_end":74,"column_start":9,"column_end":18},"name":"functions","qualname":"::environ::dummy::DummyModuleInfo::functions","value":"cranelift_entity::primary::PrimaryMap<translation_utils::FuncIndex, environ::dummy::Exportable<translation_utils::SignatureIndex>>","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Functions, imported and local.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":132},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":88274,"byte_end":88289,"line_start":77,"line_end":77,"column_start":9,"column_end":24},"name":"function_bodies","qualname":"::environ::dummy::DummyModuleInfo::function_bodies","value":"cranelift_entity::primary::PrimaryMap<translation_utils::DefinedFuncIndex, cranelift_codegen::ir::function::Function>","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Function bodies.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":133},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":88391,"byte_end":88397,"line_start":80,"line_end":80,"column_start":9,"column_end":15},"name":"tables","qualname":"::environ::dummy::DummyModuleInfo::tables","value":"cranelift_entity::primary::PrimaryMap<translation_utils::TableIndex, environ::dummy::Exportable<translation_utils::Table>>","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Tables as provided by `declare_table`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":134},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":88501,"byte_end":88509,"line_start":83,"line_end":83,"column_start":9,"column_end":17},"name":"memories","qualname":"::environ::dummy::DummyModuleInfo::memories","value":"cranelift_entity::primary::PrimaryMap<translation_utils::MemoryIndex, environ::dummy::Exportable<translation_utils::Memory>>","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Memories as provided by `declare_memory`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":135},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":88614,"byte_end":88621,"line_start":86,"line_end":86,"column_start":9,"column_end":16},"name":"globals","qualname":"::environ::dummy::DummyModuleInfo::globals","value":"cranelift_entity::primary::PrimaryMap<translation_utils::GlobalIndex, environ::dummy::Exportable<translation_utils::Global>>","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" Globals as provided by `declare_global`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":136},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":88705,"byte_end":88715,"line_start":89,"line_end":89,"column_start":9,"column_end":19},"name":"start_func","qualname":"::environ::dummy::DummyModuleInfo::start_func","value":"core::option::Option<translation_utils::FuncIndex>","parent":{"krate":0,"index":124},"children":[],"decl_id":null,"docs":" The start function.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":88823,"byte_end":88826,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"new","qualname":"<DummyModuleInfo>::new","value":"fn (config: TargetFrontendConfig) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `DummyModuleInfo` instance.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":139},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":89628,"byte_end":89644,"line_start":115,"line_end":115,"column_start":12,"column_end":28},"name":"DummyEnvironment","qualname":"::environ::dummy::DummyEnvironment","value":"DummyEnvironment { info, func_bytecode_sizes }","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145}],"decl_id":null,"docs":" This `ModuleEnvironment` implementation is a \"naïve\" one, doing essentially nothing and\n emitting placeholders when forced to. Don't try to execute code translated for this\n environment, essentially here for translation debug purposes.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":140},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":89683,"byte_end":89687,"line_start":117,"line_end":117,"column_start":9,"column_end":13},"name":"info","qualname":"::environ::dummy::DummyEnvironment::info","value":"environ::dummy::DummyModuleInfo","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Module information.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":142},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":89829,"byte_end":89848,"line_start":123,"line_end":123,"column_start":9,"column_end":28},"name":"func_bytecode_sizes","qualname":"::environ::dummy::DummyEnvironment::func_bytecode_sizes","value":"std::vec::Vec<usize>","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Vector of wasm bytecode size for each function.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":90180,"byte_end":90183,"line_start":137,"line_end":137,"column_start":12,"column_end":15},"name":"new","qualname":"<DummyEnvironment>::new","value":"fn (config: TargetFrontendConfig, return_mode: ReturnMode, debug_info: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `DummyEnvironment` instance.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":90649,"byte_end":90657,"line_start":150,"line_end":150,"column_start":12,"column_end":20},"name":"func_env","qualname":"<DummyEnvironment>::func_env","value":"fn (&self) -> DummyFuncEnvironment","parent":null,"children":[],"decl_id":null,"docs":" Return a `DummyFuncEnvironment` for translating functions within this\n `DummyEnvironment`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":90978,"byte_end":90998,"line_start":159,"line_end":159,"column_start":12,"column_end":32},"name":"get_num_func_imports","qualname":"<DummyEnvironment>::get_num_func_imports","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of imported functions within this `DummyEnvironment`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":91187,"byte_end":91200,"line_start":165,"line_end":165,"column_start":12,"column_end":25},"name":"get_func_name","qualname":"<DummyEnvironment>::get_func_name","value":"fn (&self, func_index: FuncIndex) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Return the name of the function, if a name for the function with\n the corresponding index exists.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":152},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":91409,"byte_end":91429,"line_start":171,"line_end":171,"column_start":12,"column_end":32},"name":"DummyFuncEnvironment","qualname":"::environ::dummy::DummyFuncEnvironment","value":"DummyFuncEnvironment { mod_info }","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155}],"decl_id":null,"docs":" The `FuncEnvironment` implementation for use by the `DummyEnvironment`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":154},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":91460,"byte_end":91468,"line_start":172,"line_end":172,"column_start":9,"column_end":17},"name":"mod_info","qualname":"::environ::dummy::DummyFuncEnvironment::mod_info","value":"&'dummy_environment environ::dummy::DummyModuleInfo","parent":{"krate":0,"index":152},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":91619,"byte_end":91622,"line_start":178,"line_end":178,"column_start":12,"column_end":15},"name":"new","qualname":"<DummyFuncEnvironment>::new","value":"fn (mod_info: &'dummy_environment DummyModuleInfo, return_mode: ReturnMode) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":588},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":107002,"byte_end":107007,"line_start":28,"line_end":28,"column_start":5,"column_end":10},"name":"Const","qualname":"::environ::spec::GlobalVariable::Const","value":"GlobalVariable::Const(ir::Value)","parent":{"krate":0,"index":587},"children":[],"decl_id":null,"docs":" This is a constant global with a value known at compile time.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":591},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":107113,"byte_end":107119,"line_start":31,"line_end":31,"column_start":5,"column_end":11},"name":"Memory","qualname":"::environ::spec::GlobalVariable::Memory","value":"GlobalVariable::Memory { gv, offset, ty }","parent":{"krate":0,"index":587},"children":[],"decl_id":null,"docs":" This is a variable in memory that should be referenced through a `GlobalValue`.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":587},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":106911,"byte_end":106925,"line_start":26,"line_end":26,"column_start":10,"column_end":24},"name":"GlobalVariable","qualname":"::environ::spec::GlobalVariable","value":"GlobalVariable::{Const, Memory}","parent":null,"children":[{"krate":0,"index":588},{"krate":0,"index":591}],"decl_id":null,"docs":" The value of a WebAssembly global variable.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":599},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":107866,"byte_end":107884,"line_start":52,"line_end":52,"column_start":5,"column_end":23},"name":"InvalidWebAssembly","qualname":"::environ::spec::WasmError::InvalidWebAssembly","value":"WasmError::InvalidWebAssembly { message, offset }","parent":{"krate":0,"index":598},"children":[],"decl_id":null,"docs":" The input WebAssembly code is invalid.","sig":null,"attributes":[{"value":"error(\"Invalid input WebAssembly code at offset {offset}: {message}\")","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":107789,"byte_end":107861,"line_start":51,"line_end":51,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":602},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":108296,"byte_end":108307,"line_start":63,"line_end":63,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::environ::spec::WasmError::Unsupported","value":"WasmError::Unsupported(std::string::String)","parent":{"krate":0,"index":598},"children":[],"decl_id":null,"docs":" A feature used by the WebAssembly code is not supported by the embedding environment.","sig":null,"attributes":[{"value":"error(\"Unsupported feature: {0}\")","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":108255,"byte_end":108291,"line_start":62,"line_end":62,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":605},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":108709,"byte_end":108726,"line_start":72,"line_end":72,"column_start":5,"column_end":22},"name":"ImplLimitExceeded","qualname":"::environ::spec::WasmError::ImplLimitExceeded","value":"WasmError::ImplLimitExceeded","parent":{"krate":0,"index":598},"children":[],"decl_id":null,"docs":" An implementation limit was exceeded.","sig":null,"attributes":[{"value":"error(\"Implementation limit exceeded\")","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":108663,"byte_end":108704,"line_start":71,"line_end":71,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":607},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":108797,"byte_end":108801,"line_start":76,"line_end":76,"column_start":5,"column_end":9},"name":"User","qualname":"::environ::spec::WasmError::User","value":"WasmError::User(std::string::String)","parent":{"krate":0,"index":598},"children":[],"decl_id":null,"docs":" Any user-defined error.\n","sig":null,"attributes":[{"value":"error(\"User error: {0}\")","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":108765,"byte_end":108792,"line_start":75,"line_end":75,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":598},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":107548,"byte_end":107557,"line_start":46,"line_end":46,"column_start":10,"column_end":19},"name":"WasmError","qualname":"::environ::spec::WasmError","value":"WasmError::{InvalidWebAssembly, Unsupported, ImplLimitExceeded, User}","parent":null,"children":[{"krate":0,"index":599},{"krate":0,"index":602},{"krate":0,"index":605},{"krate":0,"index":607}],"decl_id":null,"docs":" A WebAssembly translation error.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":233},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":109452,"byte_end":109462,"line_start":95,"line_end":95,"column_start":10,"column_end":20},"name":"WasmResult","qualname":"::environ::spec::WasmResult","value":"Result<T, WasmError>","parent":null,"children":[],"decl_id":null,"docs":" A convenient alias for a `Result` that uses `WasmError` as the error type.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":619},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":109646,"byte_end":109659,"line_start":101,"line_end":101,"column_start":5,"column_end":18},"name":"NormalReturns","qualname":"::environ::spec::ReturnMode::NormalReturns","value":"ReturnMode::NormalReturns","parent":{"krate":0,"index":618},"children":[],"decl_id":null,"docs":" Use normal return instructions as needed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":621},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":109733,"byte_end":109750,"line_start":103,"line_end":103,"column_start":5,"column_end":22},"name":"FallthroughReturn","qualname":"::environ::spec::ReturnMode::FallthroughReturn","value":"ReturnMode::FallthroughReturn","parent":{"krate":0,"index":618},"children":[],"decl_id":null,"docs":" Use a single fallthrough return at the end of the function.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":618},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":109579,"byte_end":109589,"line_start":99,"line_end":99,"column_start":10,"column_end":20},"name":"ReturnMode","qualname":"::environ::spec::ReturnMode","value":"ReturnMode::{NormalReturns, FallthroughReturn}","parent":null,"children":[{"krate":0,"index":619},{"krate":0,"index":621}],"decl_id":null,"docs":" How to return from functions.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":235},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":109825,"byte_end":109842,"line_start":107,"line_end":107,"column_start":11,"column_end":28},"name":"TargetEnvironment","qualname":"::environ::spec::TargetEnvironment","value":"TargetEnvironment","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239}],"decl_id":null,"docs":" Environment affecting the translation of a WebAssembly.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":109933,"byte_end":109946,"line_start":109,"line_end":109,"column_start":8,"column_end":21},"name":"target_config","qualname":"::environ::spec::TargetEnvironment::target_config","value":"fn (&self) -> TargetFrontendConfig","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Get the information needed to produce Cranelift IR for the given target.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":110150,"byte_end":110162,"line_start":114,"line_end":114,"column_start":8,"column_end":20},"name":"pointer_type","qualname":"::environ::spec::TargetEnvironment::pointer_type","value":"fn (&self) -> ir::Type","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Get the Cranelift integer type to use for native pointers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":110329,"byte_end":110342,"line_start":119,"line_end":119,"column_start":8,"column_end":21},"name":"pointer_bytes","qualname":"::environ::spec::TargetEnvironment::pointer_bytes","value":"fn (&self) -> u8","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Get the size of a native pointer, in bytes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":110584,"byte_end":110598,"line_start":126,"line_end":126,"column_start":8,"column_end":22},"name":"reference_type","qualname":"::environ::spec::TargetEnvironment::reference_type","value":"fn (&self) -> ir::Type","parent":{"krate":0,"index":235},"children":[],"decl_id":null,"docs":" Get the Cranelift reference type to use for native references.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":240},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":111131,"byte_end":111146,"line_start":140,"line_end":140,"column_start":11,"column_end":26},"name":"FuncEnvironment","qualname":"::environ::spec::FuncEnvironment","value":"FuncEnvironment: TargetEnvironment","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261}],"decl_id":null,"docs":" Environment affecting the translation of a single WebAssembly function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":111404,"byte_end":111415,"line_start":144,"line_end":144,"column_start":8,"column_end":19},"name":"return_mode","qualname":"::environ::spec::FuncEnvironment::return_mode","value":"fn (&self) -> ReturnMode","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Should the code be structured to use a single `fallthrough_return` instruction at the end\n of the function body, rather than `return` instructions as needed? This is used by VMs\n to append custom epilogues.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":111846,"byte_end":111857,"line_start":155,"line_end":155,"column_start":8,"column_end":19},"name":"make_global","qualname":"::environ::spec::FuncEnvironment::make_global","value":"fn (&mut self, func: &mut ir::Function, index: GlobalIndex) -> WasmResult<GlobalVariable>","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Set up the necessary preamble definitions in `func` to access the global variable\n identified by `index`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":112187,"byte_end":112196,"line_start":165,"line_end":165,"column_start":8,"column_end":17},"name":"make_heap","qualname":"::environ::spec::FuncEnvironment::make_heap","value":"fn (&mut self, func: &mut ir::Function, index: MemoryIndex) -> WasmResult<ir::Heap>","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Set up the necessary preamble definitions in `func` to access the linear memory identified\n by `index`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":112479,"byte_end":112489,"line_start":171,"line_end":171,"column_start":8,"column_end":18},"name":"make_table","qualname":"::environ::spec::FuncEnvironment::make_table","value":"fn (&mut self, func: &mut ir::Function, index: TableIndex) -> WasmResult<ir::Table>","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Set up the necessary preamble definitions in `func` to access the table identified\n by `index`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":113084,"byte_end":113101,"line_start":182,"line_end":182,"column_start":8,"column_end":25},"name":"make_indirect_sig","qualname":"::environ::spec::FuncEnvironment::make_indirect_sig","value":"fn (&mut self, func: &mut ir::Function, index: SignatureIndex) -> WasmResult<ir::SigRef>","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Set up a signature definition in the preamble of `func` that can be used for an indirect\n call with signature `index`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":113853,"byte_end":113869,"line_start":199,"line_end":199,"column_start":8,"column_end":24},"name":"make_direct_func","qualname":"::environ::spec::FuncEnvironment::make_direct_func","value":"fn (&mut self, func: &mut ir::Function, index: FuncIndex) -> WasmResult<ir::FuncRef>","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Set up an external function definition in the preamble of `func` that can be used to\n directly call the function `index`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":114535,"byte_end":114558,"line_start":215,"line_end":215,"column_start":8,"column_end":31},"name":"translate_call_indirect","qualname":"::environ::spec::FuncEnvironment::translate_call_indirect","value":"fn (&mut self, pos: FuncCursor, table_index: TableIndex, table: ir::Table, sig_index: SignatureIndex, sig_ref: ir::SigRef, callee: ir::Value, call_args: &[ir::Value]) -> WasmResult<ir::Inst>","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Translate a `call_indirect` WebAssembly instruction at `pos`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":115171,"byte_end":115185,"line_start":233,"line_end":233,"column_start":8,"column_end":22},"name":"translate_call","qualname":"::environ::spec::FuncEnvironment::translate_call","value":"fn (&mut self, mut pos: FuncCursor, _callee_index: FuncIndex, callee: ir::FuncRef, call_args: &[ir::Value]) -> WasmResult<ir::Inst>","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Translate a `call` WebAssembly instruction at `pos`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":115776,"byte_end":115797,"line_start":251,"line_end":251,"column_start":8,"column_end":29},"name":"translate_memory_grow","qualname":"::environ::spec::FuncEnvironment::translate_memory_grow","value":"fn (&mut self, pos: FuncCursor, index: MemoryIndex, heap: ir::Heap, val: ir::Value) -> WasmResult<ir::Value>","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Translate a `memory.grow` WebAssembly instruction.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":116237,"byte_end":116258,"line_start":265,"line_end":265,"column_start":8,"column_end":29},"name":"translate_memory_size","qualname":"::environ::spec::FuncEnvironment::translate_memory_size","value":"fn (&mut self, pos: FuncCursor, index: MemoryIndex, heap: ir::Heap) -> WasmResult<ir::Value>","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Translates a `memory.size` WebAssembly instruction.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":116616,"byte_end":116637,"line_start":276,"line_end":276,"column_start":8,"column_end":29},"name":"translate_memory_copy","qualname":"::environ::spec::FuncEnvironment::translate_memory_copy","value":"fn (&mut self, pos: FuncCursor, index: MemoryIndex, heap: ir::Heap, dst: ir::Value, src: ir::Value, len: ir::Value) -> WasmResult<()>","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Translate a `memory.copy` WebAssembly instruction.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":117060,"byte_end":117081,"line_start":290,"line_end":290,"column_start":8,"column_end":29},"name":"translate_memory_fill","qualname":"::environ::spec::FuncEnvironment::translate_memory_fill","value":"fn (&mut self, pos: FuncCursor, index: MemoryIndex, heap: ir::Heap, dst: ir::Value, val: ir::Value, len: ir::Value) -> WasmResult<()>","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Translate a `memory.fill` WebAssembly instruction.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":117566,"byte_end":117587,"line_start":305,"line_end":305,"column_start":8,"column_end":29},"name":"translate_memory_init","qualname":"::environ::spec::FuncEnvironment::translate_memory_init","value":"fn (&mut self, pos: FuncCursor, index: MemoryIndex, heap: ir::Heap, seg_index: u32, dst: ir::Value, src: ir::Value, len: ir::Value) -> WasmResult<()>","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Translate a `memory.init` WebAssembly instruction.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":117871,"byte_end":117890,"line_start":317,"line_end":317,"column_start":8,"column_end":27},"name":"translate_data_drop","qualname":"::environ::spec::FuncEnvironment::translate_data_drop","value":"fn (&mut self, pos: FuncCursor, seg_index: u32) -> WasmResult<()>","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Translate a `data.drop` WebAssembly instruction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":118020,"byte_end":118040,"line_start":320,"line_end":320,"column_start":8,"column_end":28},"name":"translate_table_size","qualname":"::environ::spec::FuncEnvironment::translate_table_size","value":"fn (&mut self, pos: FuncCursor, index: TableIndex, table: ir::Table) -> WasmResult<ir::Value>","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Translate a `table.size` WebAssembly instruction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":118237,"byte_end":118257,"line_start":328,"line_end":328,"column_start":8,"column_end":28},"name":"translate_table_copy","qualname":"::environ::spec::FuncEnvironment::translate_table_copy","value":"fn (&mut self, pos: FuncCursor, dst_table_index: TableIndex, dst_table: ir::Table, src_table_index: TableIndex, src_table: ir::Table, dst: ir::Value, src: ir::Value, len: ir::Value) -> WasmResult<()>","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Translate a `table.copy` WebAssembly instruction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":118600,"byte_end":118620,"line_start":341,"line_end":341,"column_start":8,"column_end":28},"name":"translate_table_init","qualname":"::environ::spec::FuncEnvironment::translate_table_init","value":"fn (&mut self, pos: FuncCursor, seg_index: u32, table_index: TableIndex, table: ir::Table, dst: ir::Value, src: ir::Value, len: ir::Value) -> WasmResult<()>","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Translate a `table.init` WebAssembly instruction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":118911,"byte_end":118930,"line_start":353,"line_end":353,"column_start":8,"column_end":27},"name":"translate_elem_drop","qualname":"::environ::spec::FuncEnvironment::translate_elem_drop","value":"fn (&mut self, pos: FuncCursor, seg_index: u32) -> WasmResult<()>","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Translate a `elem.drop` WebAssembly instruction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":119177,"byte_end":119198,"line_start":359,"line_end":359,"column_start":8,"column_end":29},"name":"translate_loop_header","qualname":"::environ::spec::FuncEnvironment::translate_loop_header","value":"fn (&mut self, _pos: FuncCursor) -> WasmResult<()>","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Emit code at the beginning of every wasm loop.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":119494,"byte_end":119519,"line_start":366,"line_end":366,"column_start":8,"column_end":33},"name":"before_translate_operator","qualname":"::environ::spec::FuncEnvironment::before_translate_operator","value":"fn (&mut self, _op: &Operator, _builder: &mut FunctionBuilder, _state: &FuncTranslationState) -> WasmResult<()>","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Optional callback for the `FunctionEnvironment` performing this translation to maintain\n internal state or prepare custom state for the operator to translate\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":119879,"byte_end":119903,"line_start":377,"line_end":377,"column_start":8,"column_end":32},"name":"after_translate_operator","qualname":"::environ::spec::FuncEnvironment::after_translate_operator","value":"fn (&mut self, _op: &Operator, _builder: &mut FunctionBuilder, _state: &FuncTranslationState) -> WasmResult<()>","parent":{"krate":0,"index":240},"children":[],"decl_id":null,"docs":" Optional callback for the `FunctionEnvironment` performing this translation to maintain\n internal state or finalize custom state for the operator that was translated\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":262},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":120337,"byte_end":120354,"line_start":390,"line_end":390,"column_start":11,"column_end":28},"name":"ModuleEnvironment","qualname":"::environ::spec::ModuleEnvironment","value":"ModuleEnvironment<'data>: TargetEnvironment","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293}],"decl_id":null,"docs":" An object satisfying the `ModuleEnvironment` trait can be passed as argument to the\n [`translate_module`](fn.translate_module.html) function. These methods should not be called\n by the user, they are only for `cranelift-wasm` internal use.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":120547,"byte_end":120565,"line_start":393,"line_end":393,"column_start":8,"column_end":26},"name":"reserve_signatures","qualname":"::environ::spec::ModuleEnvironment::reserve_signatures","value":"fn (&mut self, _num: u32) -> WasmResult<()>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Provides the number of signatures up front. By default this does nothing, but\n implementations can use this to preallocate memory if desired.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":120695,"byte_end":120712,"line_start":398,"line_end":398,"column_start":8,"column_end":25},"name":"declare_signature","qualname":"::environ::spec::ModuleEnvironment::declare_signature","value":"fn (&mut self, sig: ir::Signature) -> WasmResult<()>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Declares a function signature to the environment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":120925,"byte_end":120940,"line_start":402,"line_end":402,"column_start":8,"column_end":23},"name":"reserve_imports","qualname":"::environ::spec::ModuleEnvironment::reserve_imports","value":"fn (&mut self, _num: u32) -> WasmResult<()>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Provides the number of imports up front. By default this does nothing, but\n implementations can use this to preallocate memory if desired.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":121067,"byte_end":121086,"line_start":407,"line_end":407,"column_start":8,"column_end":27},"name":"declare_func_import","qualname":"::environ::spec::ModuleEnvironment::declare_func_import","value":"fn (&mut self, sig_index: SignatureIndex, module: &'data str, field: &'data str) -> WasmResult<()>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Declares a function import to the environment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":121282,"byte_end":121302,"line_start":415,"line_end":415,"column_start":8,"column_end":28},"name":"declare_table_import","qualname":"::environ::spec::ModuleEnvironment::declare_table_import","value":"fn (&mut self, table: Table, module: &'data str, field: &'data str) -> WasmResult<()>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Declares a table import to the environment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":121486,"byte_end":121507,"line_start":423,"line_end":423,"column_start":8,"column_end":29},"name":"declare_memory_import","qualname":"::environ::spec::ModuleEnvironment::declare_memory_import","value":"fn (&mut self, memory: Memory, module: &'data str, field: &'data str) -> WasmResult<()>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Declares a memory import to the environment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":121693,"byte_end":121714,"line_start":431,"line_end":431,"column_start":8,"column_end":29},"name":"declare_global_import","qualname":"::environ::spec::ModuleEnvironment::declare_global_import","value":"fn (&mut self, global: Global, module: &'data str, field: &'data str) -> WasmResult<()>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Declares a global import to the environment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":121920,"byte_end":121934,"line_start":439,"line_end":439,"column_start":8,"column_end":22},"name":"finish_imports","qualname":"::environ::spec::ModuleEnvironment::finish_imports","value":"fn (&mut self) -> WasmResult<()>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Notifies the implementation that all imports have been declared.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":122159,"byte_end":122177,"line_start":445,"line_end":445,"column_start":8,"column_end":26},"name":"reserve_func_types","qualname":"::environ::spec::ModuleEnvironment::reserve_func_types","value":"fn (&mut self, _num: u32) -> WasmResult<()>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Provides the number of defined functions up front. By default this does nothing, but\n implementations can use this to preallocate memory if desired.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":122322,"byte_end":122339,"line_start":450,"line_end":450,"column_start":8,"column_end":25},"name":"declare_func_type","qualname":"::environ::spec::ModuleEnvironment::declare_func_type","value":"fn (&mut self, sig_index: SignatureIndex) -> WasmResult<()>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Declares the type (signature) of a local function in the module.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":122566,"byte_end":122580,"line_start":454,"line_end":454,"column_start":8,"column_end":22},"name":"reserve_tables","qualname":"::environ::spec::ModuleEnvironment::reserve_tables","value":"fn (&mut self, _num: u32) -> WasmResult<()>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Provides the number of defined tables up front. By default this does nothing, but\n implementations can use this to preallocate memory if desired.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":122697,"byte_end":122710,"line_start":459,"line_end":459,"column_start":8,"column_end":21},"name":"declare_table","qualname":"::environ::spec::ModuleEnvironment::declare_table","value":"fn (&mut self, table: Table) -> WasmResult<()>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Declares a table to the environment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":122926,"byte_end":122942,"line_start":463,"line_end":463,"column_start":8,"column_end":24},"name":"reserve_memories","qualname":"::environ::spec::ModuleEnvironment::reserve_memories","value":"fn (&mut self, _num: u32) -> WasmResult<()>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Provides the number of defined memories up front. By default this does nothing, but\n implementations can use this to preallocate memory if desired.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":123059,"byte_end":123073,"line_start":468,"line_end":468,"column_start":8,"column_end":22},"name":"declare_memory","qualname":"::environ::spec::ModuleEnvironment::declare_memory","value":"fn (&mut self, memory: Memory) -> WasmResult<()>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Declares a memory to the environment\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":123290,"byte_end":123305,"line_start":472,"line_end":472,"column_start":8,"column_end":23},"name":"reserve_globals","qualname":"::environ::spec::ModuleEnvironment::reserve_globals","value":"fn (&mut self, _num: u32) -> WasmResult<()>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Provides the number of defined globals up front. By default this does nothing, but\n implementations can use this to preallocate memory if desired.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":123423,"byte_end":123437,"line_start":477,"line_end":477,"column_start":8,"column_end":22},"name":"declare_global","qualname":"::environ::spec::ModuleEnvironment::declare_global","value":"fn (&mut self, global: Global) -> WasmResult<()>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Declares a global to the environment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":123646,"byte_end":123661,"line_start":481,"line_end":481,"column_start":8,"column_end":23},"name":"reserve_exports","qualname":"::environ::spec::ModuleEnvironment::reserve_exports","value":"fn (&mut self, _num: u32) -> WasmResult<()>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Provides the number of exports up front. By default this does nothing, but\n implementations can use this to preallocate memory if desired.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":123788,"byte_end":123807,"line_start":486,"line_end":486,"column_start":8,"column_end":27},"name":"declare_func_export","qualname":"::environ::spec::ModuleEnvironment::declare_func_export","value":"fn (&mut self, func_index: FuncIndex, name: &'data str) -> WasmResult<()>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Declares a function export to the environment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":123939,"byte_end":123959,"line_start":489,"line_end":489,"column_start":8,"column_end":28},"name":"declare_table_export","qualname":"::environ::spec::ModuleEnvironment::declare_table_export","value":"fn (&mut self, table_index: TableIndex, name: &'data str) -> WasmResult<()>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Declares a table export to the environment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":124102,"byte_end":124123,"line_start":493,"line_end":493,"column_start":8,"column_end":29},"name":"declare_memory_export","qualname":"::environ::spec::ModuleEnvironment::declare_memory_export","value":"fn (&mut self, memory_index: MemoryIndex, name: &'data str) -> WasmResult<()>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Declares a memory export to the environment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":124291,"byte_end":124312,"line_start":500,"line_end":500,"column_start":8,"column_end":29},"name":"declare_global_export","qualname":"::environ::spec::ModuleEnvironment::declare_global_export","value":"fn (&mut self, global_index: GlobalIndex, name: &'data str) -> WasmResult<()>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Declares a global export to the environment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":124500,"byte_end":124514,"line_start":507,"line_end":507,"column_start":8,"column_end":22},"name":"finish_exports","qualname":"::environ::spec::ModuleEnvironment::finish_exports","value":"fn (&mut self) -> WasmResult<()>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Notifies the implementation that all exports have been declared.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":124621,"byte_end":124639,"line_start":512,"line_end":512,"column_start":8,"column_end":26},"name":"declare_start_func","qualname":"::environ::spec::ModuleEnvironment::declare_start_func","value":"fn (&mut self, index: FuncIndex) -> WasmResult<()>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Declares the optional start function.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":124863,"byte_end":124885,"line_start":516,"line_end":516,"column_start":8,"column_end":30},"name":"reserve_table_elements","qualname":"::environ::spec::ModuleEnvironment::reserve_table_elements","value":"fn (&mut self, _num: u32) -> WasmResult<()>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Provides the number of element initializers up front. By default this does nothing, but\n implementations can use this to preallocate memory if desired.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":125032,"byte_end":125054,"line_start":521,"line_end":521,"column_start":8,"column_end":30},"name":"declare_table_elements","qualname":"::environ::spec::ModuleEnvironment::declare_table_elements","value":"fn (&mut self, table_index: TableIndex, base: Option<GlobalIndex>, offset: usize, elements: Box<[FuncIndex]>) -> WasmResult<()>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Fills a declared table with references to functions in the module.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":125437,"byte_end":125457,"line_start":533,"line_end":533,"column_start":8,"column_end":28},"name":"define_function_body","qualname":"::environ::spec::ModuleEnvironment::define_function_body","value":"fn (&mut self, module_translation_state: &ModuleTranslationState, body_bytes: &'data [u8], body_offset: usize) -> WasmResult<()>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Provides the contents of a function body.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":125795,"byte_end":125820,"line_start":542,"line_end":542,"column_start":8,"column_end":33},"name":"reserve_data_initializers","qualname":"::environ::spec::ModuleEnvironment::reserve_data_initializers","value":"fn (&mut self, _num: u32) -> WasmResult<()>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Provides the number of data initializers up front. By default this does nothing, but\n implementations can use this to preallocate memory if desired.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":125960,"byte_end":125987,"line_start":547,"line_end":547,"column_start":8,"column_end":35},"name":"declare_data_initialization","qualname":"::environ::spec::ModuleEnvironment::declare_data_initialization","value":"fn (&mut self, memory_index: MemoryIndex, base: Option<GlobalIndex>, offset: usize, data: &'data [u8]) -> WasmResult<()>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Fills a declared memory with bytes at module instantiation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":126384,"byte_end":126401,"line_start":559,"line_end":559,"column_start":8,"column_end":25},"name":"declare_func_name","qualname":"::environ::spec::ModuleEnvironment::declare_func_name","value":"fn (&mut self, _func_index: FuncIndex, _name: &'data str) -> WasmResult<()>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Declares the name of a function to the environment.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":126577,"byte_end":126591,"line_start":564,"line_end":564,"column_start":8,"column_end":22},"name":"custom_section","qualname":"::environ::spec::ModuleEnvironment::custom_section","value":"fn (&mut self, _name: &'data str, _data: &'data [u8]) -> WasmResult<()>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Indicates that a custom section has been found in the wasm file\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":330},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/func_translator.rs","byte_start":127855,"byte_end":127869,"line_start":24,"line_end":24,"column_start":12,"column_end":26},"name":"FuncTranslator","qualname":"::func_translator::FuncTranslator","value":"FuncTranslator { func_ctx, state }","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":332}],"decl_id":null,"docs":" WebAssembly to Cranelift IR function translator.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":331},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/func_translator.rs","byte_start":127897,"byte_end":127905,"line_start":26,"line_end":26,"column_start":9,"column_end":17},"name":"func_ctx","qualname":"::func_translator::FuncTranslator::func_ctx","value":"wasmer_clif_fork_frontend::frontend::FunctionBuilderContext","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Func ctx\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":332},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/func_translator.rs","byte_start":127965,"byte_end":127970,"line_start":28,"line_end":28,"column_start":9,"column_end":14},"name":"state","qualname":"::func_translator::FuncTranslator::state","value":"state::func_state::FuncTranslationState","parent":{"krate":0,"index":330},"children":[],"decl_id":null,"docs":" Translation state\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/func_translator.rs","byte_start":128063,"byte_end":128066,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FuncTranslator>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new translator.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/func_translator.rs","byte_start":129163,"byte_end":129172,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"translate","qualname":"<FuncTranslator>::translate","value":"fn <FE> (&mut self, module_translation_state: &ModuleTranslationState, code: &[u8], code_offset: usize, func: &mut ir::Function, environ: &mut FE) -> WasmResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Translate a binary WebAssembly function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/func_translator.rs","byte_start":129690,"byte_end":129711,"line_start":75,"line_end":75,"column_start":12,"column_end":33},"name":"translate_from_reader","qualname":"<FuncTranslator>::translate_from_reader","value":"fn <FE> (&mut self, module_translation_state: &ModuleTranslationState, mut reader: BinaryReader, func: &mut ir::Function, environ: &mut FE) -> WasmResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Translate a binary WebAssembly function from a `BinaryReader`.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":342},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/func_translator.rs","byte_start":133859,"byte_end":133873,"line_start":180,"line_end":180,"column_start":8,"column_end":22},"name":"declare_locals","qualname":"::func_translator::declare_locals","value":"fn <FE> (builder: &mut FunctionBuilder, count: u32, wasm_type: wasmparser::Type, next_local: &mut usize, environ: &mut FE) -> WasmResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Declare `count` local variables of the same type, starting from `next_local`.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":373},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/module_translator.rs","byte_start":143065,"byte_end":143081,"line_start":15,"line_end":15,"column_start":8,"column_end":24},"name":"translate_module","qualname":"::module_translator::translate_module","value":"fn <'data> (data: &'data [u8], environ: &mut dyn ModuleEnvironment<'data>) -> WasmResult<ModuleTranslationState>","parent":null,"children":[],"decl_id":null,"docs":" Translate a sequence of bytes forming a valid Wasm binary into a list of valid Cranelift IR\n [`Function`](cranelift_codegen::ir::Function).\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":635},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/state/func_state.rs","byte_start":162144,"byte_end":162150,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"NoElse","qualname":"::state::func_state::ElseData::NoElse","value":"ElseData::NoElse { branch_inst }","parent":{"krate":0,"index":634},"children":[],"decl_id":null,"docs":" The `if` does not already have an `else` block.","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":637},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/state/func_state.rs","byte_start":162762,"byte_end":162770,"line_start":36,"line_end":36,"column_start":5,"column_end":13},"name":"WithElse","qualname":"::state::func_state::ElseData::WithElse","value":"ElseData::WithElse { else_block }","parent":{"krate":0,"index":634},"children":[],"decl_id":null,"docs":" We have already allocated an `else` block.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":634},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/state/func_state.rs","byte_start":161962,"byte_end":161970,"line_start":18,"line_end":18,"column_start":10,"column_end":18},"name":"ElseData","qualname":"::state::func_state::ElseData","value":"ElseData::{NoElse, WithElse}","parent":null,"children":[{"krate":0,"index":635},{"krate":0,"index":637}],"decl_id":null,"docs":" Information about the presence of an associated `else` for an `if`, or the\n lack thereof.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":642},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/state/func_state.rs","byte_start":163532,"byte_end":163534,"line_start":54,"line_end":54,"column_start":5,"column_end":7},"name":"If","qualname":"::state::func_state::ControlStackFrame::If","value":"ControlStackFrame::If { destination, else_data, num_param_values, num_return_values, original_stack_size, exit_is_branched_to, blocktype, head_is_reachable, consequent_ends_reachable }","parent":{"krate":0,"index":641},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":652},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/state/func_state.rs","byte_start":164427,"byte_end":164432,"line_start":74,"line_end":74,"column_start":5,"column_end":10},"name":"Block","qualname":"::state::func_state::ControlStackFrame::Block","value":"ControlStackFrame::Block { destination, num_param_values, num_return_values, original_stack_size, exit_is_branched_to }","parent":{"krate":0,"index":641},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":658},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/state/func_state.rs","byte_start":164610,"byte_end":164614,"line_start":81,"line_end":81,"column_start":5,"column_end":9},"name":"Loop","qualname":"::state::func_state::ControlStackFrame::Loop","value":"ControlStackFrame::Loop { destination, header, num_param_values, num_return_values, original_stack_size }","parent":{"krate":0,"index":641},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":641},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/state/func_state.rs","byte_start":163508,"byte_end":163525,"line_start":53,"line_end":53,"column_start":10,"column_end":27},"name":"ControlStackFrame","qualname":"::state::func_state::ControlStackFrame","value":"ControlStackFrame::{If, Block, Loop}","parent":null,"children":[{"krate":0,"index":642},{"krate":0,"index":652},{"krate":0,"index":658}],"decl_id":null,"docs":" A control stack frame can be an `if`, a `block` or a `loop`, each one having the following\n fields:","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/state/func_state.rs","byte_start":164863,"byte_end":164880,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"num_return_values","qualname":"<ControlStackFrame>::num_return_values","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/state/func_state.rs","byte_start":165204,"byte_end":165220,"line_start":105,"line_end":105,"column_start":12,"column_end":28},"name":"num_param_values","qualname":"<ControlStackFrame>::num_param_values","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/state/func_state.rs","byte_start":165540,"byte_end":165554,"line_start":118,"line_end":118,"column_start":12,"column_end":26},"name":"following_code","qualname":"<ControlStackFrame>::following_code","value":"fn (&self) -> Ebb","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/state/func_state.rs","byte_start":165768,"byte_end":165782,"line_start":125,"line_end":125,"column_start":12,"column_end":26},"name":"br_destination","qualname":"<ControlStackFrame>::br_destination","value":"fn (&self) -> Ebb","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/state/func_state.rs","byte_start":165988,"byte_end":166007,"line_start":131,"line_end":131,"column_start":12,"column_end":31},"name":"original_stack_size","qualname":"<ControlStackFrame>::original_stack_size","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/state/func_state.rs","byte_start":166387,"byte_end":166394,"line_start":147,"line_end":147,"column_start":12,"column_end":19},"name":"is_loop","qualname":"<ControlStackFrame>::is_loop","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/state/func_state.rs","byte_start":166560,"byte_end":166579,"line_start":154,"line_end":154,"column_start":12,"column_end":31},"name":"exit_is_branched_to","qualname":"<ControlStackFrame>::exit_is_branched_to","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/state/func_state.rs","byte_start":166902,"byte_end":166922,"line_start":168,"line_end":168,"column_start":12,"column_end":32},"name":"set_branched_to_exit","qualname":"<ControlStackFrame>::set_branched_to_exit","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":482},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/state/func_state.rs","byte_start":167523,"byte_end":167543,"line_start":188,"line_end":188,"column_start":12,"column_end":32},"name":"FuncTranslationState","qualname":"::state::func_state::FuncTranslationState","value":"FuncTranslationState { stack, control_stack, reachable }","parent":null,"children":[{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490}],"decl_id":null,"docs":" Contains information passed along during a function's translation and that records:","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":483},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/state/func_state.rs","byte_start":167665,"byte_end":167670,"line_start":191,"line_end":191,"column_start":9,"column_end":14},"name":"stack","qualname":"::state::func_state::FuncTranslationState::stack","value":"std::vec::Vec<cranelift_codegen::ir::entities::Value>","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" A stack of values corresponding to the active values in the input wasm function at this\n point.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":484},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/state/func_state.rs","byte_start":167784,"byte_end":167797,"line_start":193,"line_end":193,"column_start":9,"column_end":22},"name":"control_stack","qualname":"::state::func_state::FuncTranslationState::control_stack","value":"std::vec::Vec<state::func_state::ControlStackFrame>","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" A stack of active control flow operations at this point in the input wasm function.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":485},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/state/func_state.rs","byte_start":167972,"byte_end":167981,"line_start":196,"line_end":196,"column_start":9,"column_end":18},"name":"reachable","qualname":"::state::func_state::FuncTranslationState::reachable","value":"bool","parent":{"krate":0,"index":482},"children":[],"decl_id":null,"docs":" Is the current translation state still reachable? This is false when translating operators\n like End, Return, or Unreachable.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/state/func_state.rs","byte_start":169117,"byte_end":169126,"line_start":222,"line_end":222,"column_start":12,"column_end":21},"name":"reachable","qualname":"<FuncTranslationState>::reachable","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True if the current translation state expresses reachable code, false if it is unreachable.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/state/func_state.rs","byte_start":169096,"byte_end":169105,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/state/func_state.rs","byte_start":170223,"byte_end":170233,"line_start":257,"line_end":257,"column_start":12,"column_end":22},"name":"initialize","qualname":"<FuncTranslationState>::initialize","value":"fn (&mut self, sig: &ir::Signature, exit_block: Ebb) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Initialize the state for compiling a function with the given signature.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":666},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/state/module_state.rs","byte_start":179392,"byte_end":179414,"line_start":16,"line_end":16,"column_start":12,"column_end":34},"name":"ModuleTranslationState","qualname":"::state::module_state::ModuleTranslationState","value":"ModuleTranslationState { wasm_types }","parent":null,"children":[{"krate":0,"index":667}],"decl_id":null,"docs":" Contains information decoded from the Wasm module that must be referenced\n during each Wasm function's translation.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":667},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/state/module_state.rs","byte_start":179649,"byte_end":179659,"line_start":21,"line_end":21,"column_start":9,"column_end":19},"name":"wasm_types","qualname":"::state::module_state::ModuleTranslationState::wasm_types","value":"cranelift_entity::primary::PrimaryMap<translation_utils::SignatureIndex, (std::boxed::Box<[wasmparser::primitives::Type]>, std::boxed::Box<[wasmparser::primitives::Type]>)>","parent":{"krate":0,"index":666},"children":[],"decl_id":null,"docs":" A map containing a Wasm module's original, raw signatures.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/state/module_state.rs","byte_start":179768,"byte_end":179771,"line_start":26,"line_end":26,"column_start":12,"column_end":15},"name":"new","qualname":"<ModuleTranslationState>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty ModuleTranslationState.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":670},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/translation_utils.rs","byte_start":180542,"byte_end":180551,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"FuncIndex","qualname":"::translation_utils::FuncIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Index type of a function (imported or defined) inside the WebAssembly module.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":704},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/translation_utils.rs","byte_start":180731,"byte_end":180747,"line_start":22,"line_end":22,"column_start":12,"column_end":28},"name":"DefinedFuncIndex","qualname":"::translation_utils::DefinedFuncIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Index type of a defined function inside the WebAssembly module.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":738},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/translation_utils.rs","byte_start":180931,"byte_end":180948,"line_start":27,"line_end":27,"column_start":12,"column_end":29},"name":"DefinedTableIndex","qualname":"::translation_utils::DefinedTableIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Index type of a defined table inside the WebAssembly module.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":772},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/translation_utils.rs","byte_start":181134,"byte_end":181152,"line_start":32,"line_end":32,"column_start":12,"column_end":30},"name":"DefinedMemoryIndex","qualname":"::translation_utils::DefinedMemoryIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Index type of a defined memory inside the WebAssembly module.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":806},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/translation_utils.rs","byte_start":181339,"byte_end":181357,"line_start":37,"line_end":37,"column_start":12,"column_end":30},"name":"DefinedGlobalIndex","qualname":"::translation_utils::DefinedGlobalIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Index type of a defined global inside the WebAssembly module.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":840},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/translation_utils.rs","byte_start":181557,"byte_end":181567,"line_start":42,"line_end":42,"column_start":12,"column_end":22},"name":"TableIndex","qualname":"::translation_utils::TableIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Index type of a table (imported or defined) inside the WebAssembly module.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":874},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/translation_utils.rs","byte_start":181769,"byte_end":181780,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"GlobalIndex","qualname":"::translation_utils::GlobalIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Index type of a global variable (imported or defined) inside the WebAssembly module.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":908},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/translation_utils.rs","byte_start":181981,"byte_end":181992,"line_start":52,"line_end":52,"column_start":12,"column_end":23},"name":"MemoryIndex","qualname":"::translation_utils::MemoryIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Index type of a linear memory (imported or defined) inside the WebAssembly module.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":942},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/translation_utils.rs","byte_start":182189,"byte_end":182203,"line_start":57,"line_end":57,"column_start":12,"column_end":26},"name":"SignatureIndex","qualname":"::translation_utils::SignatureIndex","value":"","parent":null,"children":[],"decl_id":null,"docs":" Index type of a signature (imported or defined) inside the WebAssembly module.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":976},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/translation_utils.rs","byte_start":182312,"byte_end":182318,"line_start":62,"line_end":62,"column_start":12,"column_end":18},"name":"Global","qualname":"::translation_utils::Global","value":"Global { ty, mutability, initializer }","parent":null,"children":[{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979}],"decl_id":null,"docs":" WebAssembly global.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":977},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/translation_utils.rs","byte_start":182381,"byte_end":182383,"line_start":64,"line_end":64,"column_start":9,"column_end":11},"name":"ty","qualname":"::translation_utils::Global::ty","value":"cranelift_codegen::ir::types::Type","parent":{"krate":0,"index":976},"children":[],"decl_id":null,"docs":" The type of the value stored in the global.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":978},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/translation_utils.rs","byte_start":182470,"byte_end":182480,"line_start":66,"line_end":66,"column_start":9,"column_end":19},"name":"mutability","qualname":"::translation_utils::Global::mutability","value":"bool","parent":{"krate":0,"index":976},"children":[],"decl_id":null,"docs":" A flag indicating whether the value may change at runtime.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":979},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/translation_utils.rs","byte_start":182537,"byte_end":182548,"line_start":68,"line_end":68,"column_start":9,"column_end":20},"name":"initializer","qualname":"::translation_utils::Global::initializer","value":"translation_utils::GlobalInit","parent":{"krate":0,"index":976},"children":[],"decl_id":null,"docs":" The source of the initial value.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":989},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/translation_utils.rs","byte_start":182740,"byte_end":182748,"line_start":75,"line_end":75,"column_start":5,"column_end":13},"name":"I32Const","qualname":"::translation_utils::GlobalInit::I32Const","value":"GlobalInit::I32Const(i32)","parent":{"krate":0,"index":988},"children":[],"decl_id":null,"docs":" An `i32.const`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":992},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/translation_utils.rs","byte_start":182783,"byte_end":182791,"line_start":77,"line_end":77,"column_start":5,"column_end":13},"name":"I64Const","qualname":"::translation_utils::GlobalInit::I64Const","value":"GlobalInit::I64Const(i64)","parent":{"krate":0,"index":988},"children":[],"decl_id":null,"docs":" An `i64.const`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":995},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/translation_utils.rs","byte_start":182826,"byte_end":182834,"line_start":79,"line_end":79,"column_start":5,"column_end":13},"name":"F32Const","qualname":"::translation_utils::GlobalInit::F32Const","value":"GlobalInit::F32Const(u32)","parent":{"krate":0,"index":988},"children":[],"decl_id":null,"docs":" An `f32.const`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":998},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/translation_utils.rs","byte_start":182869,"byte_end":182877,"line_start":81,"line_end":81,"column_start":5,"column_end":13},"name":"F64Const","qualname":"::translation_utils::GlobalInit::F64Const","value":"GlobalInit::F64Const(u64)","parent":{"krate":0,"index":988},"children":[],"decl_id":null,"docs":" An `f64.const`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1001},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/translation_utils.rs","byte_start":182908,"byte_end":182917,"line_start":83,"line_end":83,"column_start":5,"column_end":14},"name":"V128Const","qualname":"::translation_utils::GlobalInit::V128Const","value":"GlobalInit::V128Const(V128Imm)","parent":{"krate":0,"index":988},"children":[],"decl_id":null,"docs":" A `vconst`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1004},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/translation_utils.rs","byte_start":182974,"byte_end":182983,"line_start":85,"line_end":85,"column_start":5,"column_end":14},"name":"GetGlobal","qualname":"::translation_utils::GlobalInit::GetGlobal","value":"GlobalInit::GetGlobal(GlobalIndex)","parent":{"krate":0,"index":988},"children":[],"decl_id":null,"docs":" A `get_global` of another global.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1007},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/translation_utils.rs","byte_start":183024,"byte_end":183036,"line_start":87,"line_end":87,"column_start":5,"column_end":17},"name":"RefNullConst","qualname":"::translation_utils::GlobalInit::RefNullConst","value":"GlobalInit::RefNullConst","parent":{"krate":0,"index":988},"children":[],"decl_id":null,"docs":" A `ref.null`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1009},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/translation_utils.rs","byte_start":183125,"byte_end":183131,"line_start":89,"line_end":89,"column_start":5,"column_end":11},"name":"Import","qualname":"::translation_utils::GlobalInit::Import","value":"GlobalInit::Import","parent":{"krate":0,"index":988},"children":[],"decl_id":null,"docs":"< The global is imported from, and thus initialized by, a different module.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":988},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/translation_utils.rs","byte_start":182699,"byte_end":182709,"line_start":73,"line_end":73,"column_start":10,"column_end":20},"name":"GlobalInit","qualname":"::translation_utils::GlobalInit","value":"GlobalInit::{I32Const, I64Const, F32Const, F64Const, V128Const, GetGlobal, RefNullConst, Import}","parent":null,"children":[{"krate":0,"index":989},{"krate":0,"index":992},{"krate":0,"index":995},{"krate":0,"index":998},{"krate":0,"index":1001},{"krate":0,"index":1004},{"krate":0,"index":1007},{"krate":0,"index":1009}],"decl_id":null,"docs":" Globals are initialized via the `const` operators or by referring to another import.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1019},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/translation_utils.rs","byte_start":183206,"byte_end":183211,"line_start":94,"line_end":94,"column_start":12,"column_end":17},"name":"Table","qualname":"::translation_utils::Table","value":"Table { ty, minimum, maximum }","parent":null,"children":[{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022}],"decl_id":null,"docs":" WebAssembly table.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1020},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/translation_utils.rs","byte_start":183280,"byte_end":183282,"line_start":96,"line_end":96,"column_start":9,"column_end":11},"name":"ty","qualname":"::translation_utils::Table::ty","value":"translation_utils::TableElementType","parent":{"krate":0,"index":1019},"children":[],"decl_id":null,"docs":" The type of data stored in elements of the table.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1021},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/translation_utils.rs","byte_start":183363,"byte_end":183370,"line_start":98,"line_end":98,"column_start":9,"column_end":16},"name":"minimum","qualname":"::translation_utils::Table::minimum","value":"u32","parent":{"krate":0,"index":1019},"children":[],"decl_id":null,"docs":" The minimum number of elements in the table.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1022},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/translation_utils.rs","byte_start":183438,"byte_end":183445,"line_start":100,"line_end":100,"column_start":9,"column_end":16},"name":"maximum","qualname":"::translation_utils::Table::maximum","value":"core::option::Option<u32>","parent":{"krate":0,"index":1019},"children":[],"decl_id":null,"docs":" The maximum number of elements in the table.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1032},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/translation_utils.rs","byte_start":183621,"byte_end":183624,"line_start":107,"line_end":107,"column_start":5,"column_end":8},"name":"Val","qualname":"::translation_utils::TableElementType::Val","value":"TableElementType::Val(ir::Type)","parent":{"krate":0,"index":1031},"children":[],"decl_id":null,"docs":" A scalar type.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1035},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/translation_utils.rs","byte_start":183660,"byte_end":183664,"line_start":109,"line_end":109,"column_start":5,"column_end":9},"name":"Func","qualname":"::translation_utils::TableElementType::Func","value":"TableElementType::Func","parent":{"krate":0,"index":1031},"children":[],"decl_id":null,"docs":" A function.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1031},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/translation_utils.rs","byte_start":183575,"byte_end":183591,"line_start":105,"line_end":105,"column_start":10,"column_end":26},"name":"TableElementType","qualname":"::translation_utils::TableElementType","value":"TableElementType::{Val, Func}","parent":null,"children":[{"krate":0,"index":1032},{"krate":0,"index":1035}],"decl_id":null,"docs":" WebAssembly table element. Can be a function or a scalar type.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1045},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/translation_utils.rs","byte_start":183747,"byte_end":183753,"line_start":114,"line_end":114,"column_start":12,"column_end":18},"name":"Memory","qualname":"::translation_utils::Memory","value":"Memory { minimum, maximum, shared }","parent":null,"children":[{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048}],"decl_id":null,"docs":" WebAssembly linear memory.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1046},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/translation_utils.rs","byte_start":183815,"byte_end":183822,"line_start":116,"line_end":116,"column_start":9,"column_end":16},"name":"minimum","qualname":"::translation_utils::Memory::minimum","value":"u32","parent":{"krate":0,"index":1045},"children":[],"decl_id":null,"docs":" The minimum number of pages in the memory.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1047},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/translation_utils.rs","byte_start":183888,"byte_end":183895,"line_start":118,"line_end":118,"column_start":9,"column_end":16},"name":"maximum","qualname":"::translation_utils::Memory::maximum","value":"core::option::Option<u32>","parent":{"krate":0,"index":1045},"children":[],"decl_id":null,"docs":" The maximum number of pages in the memory.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1048},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/translation_utils.rs","byte_start":183985,"byte_end":183991,"line_start":120,"line_end":120,"column_start":9,"column_end":15},"name":"shared","qualname":"::translation_utils::Memory::shared","value":"bool","parent":{"krate":0,"index":1045},"children":[],"decl_id":null,"docs":" Whether the memory may be shared between multiple threads.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":552},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/translation_utils.rs","byte_start":188494,"byte_end":188515,"line_start":234,"line_end":234,"column_start":8,"column_end":29},"name":"get_vmctx_value_label","qualname":"::translation_utils::get_vmctx_value_label","value":"fn () -> ir::ValueLabel","parent":null,"children":[],"decl_id":null,"docs":" Special VMContext value label. It is tracked as 0xffff_fffe label.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":586},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/lib.rs","byte_start":2485,"byte_end":2492,"line_start":76,"line_end":76,"column_start":11,"column_end":18},"name":"VERSION","qualname":"::VERSION","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" Version number of this crate.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":86995,"byte_end":87005,"line_start":42,"line_end":42,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":88744,"byte_end":88759,"line_start":92,"line_end":92,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":90099,"byte_end":90115,"line_start":135,"line_end":135,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":91565,"byte_end":91585,"line_start":177,"line_end":177,"column_start":26,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":92232,"byte_end":92252,"line_start":197,"line_end":197,"column_start":48,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":92412,"byte_end":92432,"line_start":203,"line_end":203,"column_start":46,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":100457,"byte_end":100473,"line_start":461,"line_end":461,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":100605,"byte_end":100621,"line_start":467,"line_end":467,"column_start":42,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":109130,"byte_end":109139,"line_start":86,"line_end":86,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/func_translator.rs","byte_start":128002,"byte_end":128016,"line_start":31,"line_end":31,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/state/func_state.rs","byte_start":164832,"byte_end":164849,"line_start":91,"line_end":91,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/state/func_state.rs","byte_start":168969,"byte_end":168989,"line_start":219,"line_end":219,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/state/func_state.rs","byte_start":169181,"byte_end":169201,"line_start":227,"line_end":227,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/state/func_state.rs","byte_start":175011,"byte_end":175031,"line_start":406,"line_end":406,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":510},{"krate":0,"index":512},{"krate":0,"index":514},{"krate":0,"index":516},{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/state/module_state.rs","byte_start":179680,"byte_end":179702,"line_start":24,"line_end":24,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":86995,"byte_end":87005,"line_start":42,"line_end":42,"column_start":9,"column_end":19},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":88744,"byte_end":88759,"line_start":92,"line_end":92,"column_start":6,"column_end":21},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":90099,"byte_end":90115,"line_start":135,"line_end":135,"column_start":6,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":91565,"byte_end":91585,"line_start":177,"line_end":177,"column_start":26,"column_end":46},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":92232,"byte_end":92252,"line_start":197,"line_end":197,"column_start":48,"column_end":68},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":152},"to":{"krate":0,"index":235}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":92412,"byte_end":92432,"line_start":203,"line_end":203,"column_start":46,"column_end":66},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":152},"to":{"krate":0,"index":240}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":100457,"byte_end":100473,"line_start":461,"line_end":461,"column_start":28,"column_end":44},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":139},"to":{"krate":0,"index":235}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/dummy.rs","byte_start":100605,"byte_end":100621,"line_start":467,"line_end":467,"column_start":42,"column_end":58},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":139},"to":{"krate":0,"index":262}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":109130,"byte_end":109139,"line_start":86,"line_end":86,"column_start":34,"column_end":43},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":598},"to":{"krate":1,"index":2258}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":111148,"byte_end":111165,"line_start":140,"line_end":140,"column_start":28,"column_end":45},"kind":"SuperTrait","from":{"krate":0,"index":235},"to":{"krate":0,"index":240}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/environ/spec.rs","byte_start":120363,"byte_end":120380,"line_start":390,"line_end":390,"column_start":37,"column_end":54},"kind":"SuperTrait","from":{"krate":0,"index":235},"to":{"krate":0,"index":262}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/func_translator.rs","byte_start":128002,"byte_end":128016,"line_start":31,"line_end":31,"column_start":6,"column_end":20},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/state/func_state.rs","byte_start":164832,"byte_end":164849,"line_start":91,"line_end":91,"column_start":6,"column_end":23},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/state/func_state.rs","byte_start":168969,"byte_end":168989,"line_start":219,"line_end":219,"column_start":6,"column_end":26},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/state/func_state.rs","byte_start":169181,"byte_end":169201,"line_start":227,"line_end":227,"column_start":6,"column_end":26},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/state/func_state.rs","byte_start":175011,"byte_end":175031,"line_start":406,"line_end":406,"column_start":6,"column_end":26},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/wasmer-clif-fork-wasm-0.52.0/src/state/module_state.rs","byte_start":179680,"byte_end":179702,"line_start":24,"line_end":24,"column_start":6,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":666},"to":{"krate":4294967295,"index":4294967295}}]}