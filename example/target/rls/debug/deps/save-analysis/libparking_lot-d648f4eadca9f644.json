{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0","program":"/Users/rodydavis/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--edition=2018","--crate-name","parking_lot","/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=d648f4eadca9f644","-C","extra-filename=-d648f4eadca9f644","--out-dir","/Users/rodydavis/Developer/GitHub/packages/flutter_wasm_interop/example/target/rls/debug/deps","-L","dependency=/Users/rodydavis/Developer/GitHub/packages/flutter_wasm_interop/example/target/rls/debug/deps","--extern","lock_api=/Users/rodydavis/Developer/GitHub/packages/flutter_wasm_interop/example/target/rls/debug/deps/liblock_api-86ce2a0ff5ef497d.rmeta","--extern","parking_lot_core=/Users/rodydavis/Developer/GitHub/packages/flutter_wasm_interop/example/target/rls/debug/deps/libparking_lot_core-a1ae8eb039e32f63.rmeta","--cap-lints","allow","--cfg","has_sized_atomics","--cfg","has_checked_instant","--error-format=json","--sysroot","/Users/rodydavis/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/rodydavis/Developer/GitHub/packages/flutter_wasm_interop/example/target/rls/debug/deps/libparking_lot-d648f4eadca9f644.rmeta"},"prelude":{"crate_id":{"name":"parking_lot","disambiguator":[12032488119474810272,5209423619141172864]},"crate_root":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src","external_crates":[{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5808000563841838002,6875932327897409807]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","num":2,"id":{"name":"core","disambiguator":[5459908120384850477,15760959269387734159]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11826469219384905814,12486183027959381912]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5497990426549684121,15109235050116755313]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9495953968349266340,8510226981626586408]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[423181384897816611,2293857470463835221]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5608331764705855408,15392280463108098182]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14701876030349379005,4369912422515260820]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[8984243875435576741,4446548522921354]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[4101421024496600006,15821692231896539213]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[3079379191059796654,13101802771042696873]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[7173097494859913114,11426318732171342333]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12351377766094969309,8390201886823579403]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[2739304812783641882,6504751215723634061]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","num":15,"id":{"name":"lock_api","disambiguator":[2168007584467776147,11622147113987953292]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","num":16,"id":{"name":"scopeguard","disambiguator":[15270720583694984572,2301021778427417115]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","num":17,"id":{"name":"parking_lot_core","disambiguator":[10710242718798679110,12783673885871055474]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","num":18,"id":{"name":"smallvec","disambiguator":[12066243005935483268,12735559333158773301]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","num":19,"id":{"name":"maybe_uninit","disambiguator":[15254710769028076937,5077428055350973326]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","num":20,"id":{"name":"cfg_if","disambiguator":[10201928301582868305,15717936632155057518]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","num":21,"id":{"name":"libc","disambiguator":[6972560698302431441,6153506463651802689]}}],"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":333,"byte_end":1398,"line_start":8,"line_end":43,"column_start":1,"column_end":3}},"imports":[{"kind":"Use","ref_id":{"krate":15,"index":0},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":892,"byte_end":900,"line_start":31,"line_end":31,"column_start":11,"column_end":19},"alias_span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":904,"byte_end":912,"line_start":31,"line_end":31,"column_start":23,"column_end":31},"name":"lock_api","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":30},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":938,"byte_end":945,"line_start":32,"line_end":32,"column_start":25,"column_end":32},"alias_span":null,"name":"Condvar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":400},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":947,"byte_end":964,"line_start":32,"line_end":32,"column_start":34,"column_end":51},"alias_span":null,"name":"WaitTimeoutResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":75},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":989,"byte_end":1005,"line_start":33,"line_end":33,"column_start":23,"column_end":39},"alias_span":null,"name":"MappedMutexGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":70},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":1007,"byte_end":1012,"line_start":33,"line_end":33,"column_start":41,"column_end":46},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":72},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":1014,"byte_end":1024,"line_start":33,"line_end":33,"column_start":48,"column_end":58},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":100},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":1048,"byte_end":1052,"line_start":34,"line_end":34,"column_start":22,"column_end":26},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":415},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":1054,"byte_end":1063,"line_start":34,"line_end":34,"column_start":28,"column_end":37},"alias_span":null,"name":"OnceState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":153},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":1091,"byte_end":1099,"line_start":35,"line_end":35,"column_start":26,"column_end":34},"alias_span":null,"name":"RawMutex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":225},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":1127,"byte_end":1136,"line_start":36,"line_end":36,"column_start":27,"column_end":36},"alias_span":null,"name":"RawRwLock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":336},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":1167,"byte_end":1192,"line_start":38,"line_end":38,"column_start":5,"column_end":30},"alias_span":null,"name":"MappedReentrantMutexGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":325},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":1194,"byte_end":1205,"line_start":38,"line_end":38,"column_start":32,"column_end":43},"alias_span":null,"name":"RawThreadId","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":331},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":1207,"byte_end":1221,"line_start":38,"line_end":38,"column_start":45,"column_end":59},"alias_span":null,"name":"ReentrantMutex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":333},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":1223,"byte_end":1242,"line_start":38,"line_end":38,"column_start":61,"column_end":80},"alias_span":null,"name":"ReentrantMutexGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":350},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":1275,"byte_end":1296,"line_start":41,"line_end":41,"column_start":5,"column_end":26},"alias_span":null,"name":"MappedRwLockReadGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":353},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":1298,"byte_end":1320,"line_start":41,"line_end":41,"column_start":28,"column_end":50},"alias_span":null,"name":"MappedRwLockWriteGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":342},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":1322,"byte_end":1328,"line_start":41,"line_end":41,"column_start":52,"column_end":58},"alias_span":null,"name":"RwLock","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":344},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":1330,"byte_end":1345,"line_start":41,"line_end":41,"column_start":60,"column_end":75},"alias_span":null,"name":"RwLockReadGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":356},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":1351,"byte_end":1376,"line_start":42,"line_end":42,"column_start":5,"column_end":30},"alias_span":null,"name":"RwLockUpgradableReadGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":347},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":1378,"byte_end":1394,"line_start":42,"line_end":42,"column_start":32,"column_end":48},"alias_span":null,"name":"RwLockWriteGuard","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":333,"byte_end":1398,"line_start":8,"line_end":43,"column_start":1,"column_end":3},"name":"","qualname":"::","value":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":56},{"krate":0,"index":67},{"krate":0,"index":78},{"krate":0,"index":127},{"krate":0,"index":179},{"krate":0,"index":319},{"krate":0,"index":339},{"krate":0,"index":359},{"krate":0,"index":371},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":379},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":393}],"decl_id":null,"docs":" This library provides implementations of `Mutex`, `RwLock`, `Condvar` and\n `Once` that are smaller, faster and more flexible than those in the Rust\n standard library. It also provides a `ReentrantMutex` type.\n","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":553,"byte_end":575,"line_start":12,"line_end":12,"column_start":1,"column_end":23}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/lib.rs","byte_start":576,"byte_end":602,"line_start":13,"line_end":13,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":400},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":2252,"byte_end":2269,"line_start":22,"line_end":22,"column_start":12,"column_end":29},"name":"WaitTimeoutResult","qualname":"::condvar::WaitTimeoutResult","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type indicating whether a timed wait on a condition variable returned\n due to a time out or not.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":2390,"byte_end":2399,"line_start":27,"line_end":27,"column_start":12,"column_end":21},"name":"timed_out","qualname":"<WaitTimeoutResult>::timed_out","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the wait was known to have timed out.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":2369,"byte_end":2378,"line_start":26,"line_end":26,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":30},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":4550,"byte_end":4557,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"Condvar","qualname":"::condvar::Condvar","value":"Condvar {  }","parent":null,"children":[{"krate":0,"index":31}],"decl_id":null,"docs":" A Condition Variable","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":4735,"byte_end":4738,"line_start":93,"line_end":93,"column_start":18,"column_end":21},"name":"new","qualname":"<Condvar>::new","value":"fn () -> Condvar","parent":null,"children":[],"decl_id":null,"docs":" Creates a new condition variable which is ready to be waited on and\n notified.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":4708,"byte_end":4717,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":5543,"byte_end":5553,"line_start":121,"line_end":121,"column_start":12,"column_end":22},"name":"notify_one","qualname":"<Condvar>::notify_one","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Wakes up one blocked thread on this condvar.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":5522,"byte_end":5531,"line_start":120,"line_end":120,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":8006,"byte_end":8016,"line_start":182,"line_end":182,"column_start":12,"column_end":22},"name":"notify_all","qualname":"<Condvar>::notify_all","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Wakes up all blocked threads on this condvar.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":7985,"byte_end":7994,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":11029,"byte_end":11033,"line_start":252,"line_end":252,"column_start":12,"column_end":16},"name":"wait","qualname":"<Condvar>::wait","value":"fn <T> (&self, mutex_guard: &mut MutexGuard<'_, T>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until this condition variable receives a\n notification.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":11008,"byte_end":11017,"line_start":251,"line_end":251,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":12308,"byte_end":12318,"line_start":280,"line_end":280,"column_start":12,"column_end":22},"name":"wait_until","qualname":"<Condvar>::wait_until","value":"fn <T> (&self, mutex_guard: &mut MutexGuard<'_, T>, timeout: Instant) -> WaitTimeoutResult","parent":null,"children":[],"decl_id":null,"docs":" Waits on this condition variable for a notification, timing out after\n the specified time instant.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":12287,"byte_end":12296,"line_start":279,"line_end":279,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":16677,"byte_end":16685,"line_start":381,"line_end":381,"column_start":12,"column_end":20},"name":"wait_for","qualname":"<Condvar>::wait_for","value":"fn <T> (&self, mutex_guard: &mut MutexGuard<'_, T>, timeout: Duration) -> WaitTimeoutResult","parent":null,"children":[],"decl_id":null,"docs":" Waits on this condition variable for a notification, timing out after a\n specified duration.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":16656,"byte_end":16665,"line_start":380,"line_end":380,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":59},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/elision.rs","byte_start":25192,"byte_end":25199,"line_start":12,"line_end":12,"column_start":10,"column_end":17},"name":"IntType","qualname":"::elision::AtomicElisionExt::IntType","value":"type IntType;","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":70},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":31933,"byte_end":31938,"line_start":88,"line_end":88,"column_start":10,"column_end":15},"name":"Mutex","qualname":"::mutex::Mutex","value":"lock_api::Mutex<RawMutex, T>","parent":null,"children":[],"decl_id":null,"docs":" A mutual exclusion primitive useful for protecting shared data","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":72},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":32253,"byte_end":32263,"line_start":95,"line_end":95,"column_start":10,"column_end":20},"name":"MutexGuard","qualname":"::mutex::MutexGuard","value":"lock_api::MutexGuard<'a, RawMutex, T>","parent":null,"children":[],"decl_id":null,"docs":" An RAII implementation of a \"scoped lock\" of a mutex. When this structure is\n dropped (falls out of scope), the lock will be unlocked.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":75},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/mutex.rs","byte_start":32687,"byte_end":32703,"line_start":104,"line_end":104,"column_start":10,"column_end":26},"name":"MappedMutexGuard","qualname":"::mutex::MappedMutexGuard","value":"lock_api::MappedMutexGuard<'a, RawMutex, T>","parent":null,"children":[],"decl_id":null,"docs":" An RAII mutex guard returned by `MutexGuard::map`, which can point to a\n subfield of the protected data.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":416},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":39012,"byte_end":39015,"line_start":33,"line_end":33,"column_start":5,"column_end":8},"name":"New","qualname":"::once::OnceState::New","value":"OnceState::New","parent":{"krate":0,"index":415},"children":[],"decl_id":null,"docs":" A closure has not been executed yet\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":418},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":39067,"byte_end":39075,"line_start":36,"line_end":36,"column_start":5,"column_end":13},"name":"Poisoned","qualname":"::once::OnceState::Poisoned","value":"OnceState::Poisoned","parent":{"krate":0,"index":415},"children":[],"decl_id":null,"docs":" A closure was executed but panicked.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":420},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":39133,"byte_end":39143,"line_start":39,"line_end":39,"column_start":5,"column_end":15},"name":"InProgress","qualname":"::once::OnceState::InProgress","value":"OnceState::InProgress","parent":{"krate":0,"index":415},"children":[],"decl_id":null,"docs":" A thread is currently executing a closure.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":422},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":39196,"byte_end":39200,"line_start":42,"line_end":42,"column_start":5,"column_end":9},"name":"Done","qualname":"::once::OnceState::Done","value":"OnceState::Done","parent":{"krate":0,"index":415},"children":[],"decl_id":null,"docs":" A closure has completed successfully.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":415},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":38952,"byte_end":38961,"line_start":31,"line_end":31,"column_start":10,"column_end":19},"name":"OnceState","qualname":"::once::OnceState","value":"OnceState::{New, Poisoned, InProgress, Done}","parent":null,"children":[{"krate":0,"index":416},{"krate":0,"index":418},{"krate":0,"index":420},{"krate":0,"index":422}],"decl_id":null,"docs":" Current state of a `Once`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":39480,"byte_end":39488,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"poisoned","qualname":"<OnceState>::poisoned","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the associated `Once` has been poisoned.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":39459,"byte_end":39468,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":39726,"byte_end":39730,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"done","qualname":"<OnceState>::done","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the associated `Once` has successfully executed a\n closure.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":39705,"byte_end":39714,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":100},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":40553,"byte_end":40557,"line_start":92,"line_end":92,"column_start":12,"column_end":16},"name":"Once","qualname":"::once::Once","value":"","parent":null,"children":[],"decl_id":null,"docs":" A synchronization primitive which can be used to run a one-time\n initialization. Useful for one-time initialization for globals, FFI or\n related functionality.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":40649,"byte_end":40652,"line_start":97,"line_end":97,"column_start":18,"column_end":21},"name":"new","qualname":"<Once>::new","value":"fn () -> Once","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Once` value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":40622,"byte_end":40631,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":40778,"byte_end":40783,"line_start":103,"line_end":103,"column_start":12,"column_end":17},"name":"state","qualname":"<Once>::state","value":"fn (&self) -> OnceState","parent":null,"children":[],"decl_id":null,"docs":" Returns the current state of this `Once`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":40757,"byte_end":40766,"line_start":102,"line_end":102,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":43056,"byte_end":43065,"line_start":166,"line_end":166,"column_start":12,"column_end":21},"name":"call_once","qualname":"<Once>::call_once","value":"fn <F> (&self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs an initialization routine once and only once. The given closure\n will be executed if this is the first time `call_once` has been called,\n and otherwise the routine will *not* be invoked.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":43035,"byte_end":43044,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":43816,"byte_end":43831,"line_start":188,"line_end":188,"column_start":12,"column_end":27},"name":"call_once_force","qualname":"<Once>::call_once_force","value":"fn <F> (&self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs the same function as `call_once` except ignores poisoning.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":43795,"byte_end":43804,"line_start":187,"line_end":187,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":153},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_mutex.rs","byte_start":53426,"byte_end":53434,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"RawMutex","qualname":"::raw_mutex::RawMutex","value":"RawMutex {  }","parent":null,"children":[{"krate":0,"index":154}],"decl_id":null,"docs":" Raw mutex type backed by the parking lot.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":225},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":64337,"byte_end":64346,"line_start":59,"line_end":59,"column_start":12,"column_end":21},"name":"RawRwLock","qualname":"::raw_rwlock::RawRwLock","value":"RawRwLock {  }","parent":null,"children":[{"krate":0,"index":226}],"decl_id":null,"docs":" Raw reader-writer lock type backed by the parking lot.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":325},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/remutex.rs","byte_start":98496,"byte_end":98507,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"RawThreadId","qualname":"::remutex::RawThreadId","value":"","parent":null,"children":[],"decl_id":null,"docs":" Implementation of the `GetThreadId` trait for `lock_api::ReentrantMutex`.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":331},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/remutex.rs","byte_start":99511,"byte_end":99525,"line_start":40,"line_end":40,"column_start":10,"column_end":24},"name":"ReentrantMutex","qualname":"::remutex::ReentrantMutex","value":"lock_api::ReentrantMutex<RawMutex, RawThreadId, T>","parent":null,"children":[],"decl_id":null,"docs":" A mutex which can be recursively locked by a single thread.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":333},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/remutex.rs","byte_start":99856,"byte_end":99875,"line_start":47,"line_end":47,"column_start":10,"column_end":29},"name":"ReentrantMutexGuard","qualname":"::remutex::ReentrantMutexGuard","value":"lock_api::ReentrantMutexGuard<'a, RawMutex, RawThreadId, T>","parent":null,"children":[],"decl_id":null,"docs":" An RAII implementation of a \"scoped lock\" of a reentrant mutex. When this structure\n is dropped (falls out of scope), the lock will be unlocked.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":336},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/remutex.rs","byte_start":100348,"byte_end":100373,"line_start":56,"line_end":56,"column_start":10,"column_end":35},"name":"MappedReentrantMutexGuard","qualname":"::remutex::MappedReentrantMutexGuard","value":"lock_api::MappedReentrantMutexGuard<'a, RawMutex, RawThreadId, T>","parent":null,"children":[],"decl_id":null,"docs":" An RAII mutex guard returned by `ReentrantMutexGuard::map`, which can point to a\n subfield of the protected data.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":342},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":106434,"byte_end":106440,"line_start":89,"line_end":89,"column_start":10,"column_end":16},"name":"RwLock","qualname":"::rwlock::RwLock","value":"lock_api::RwLock<RawRwLock, T>","parent":null,"children":[],"decl_id":null,"docs":" A reader-writer lock","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":344},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":106574,"byte_end":106589,"line_start":93,"line_end":93,"column_start":10,"column_end":25},"name":"RwLockReadGuard","qualname":"::rwlock::RwLockReadGuard","value":"lock_api::RwLockReadGuard<'a, RawRwLock, T>","parent":null,"children":[],"decl_id":null,"docs":" RAII structure used to release the shared read access of a lock when\n dropped.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":347},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":106744,"byte_end":106760,"line_start":97,"line_end":97,"column_start":10,"column_end":26},"name":"RwLockWriteGuard","qualname":"::rwlock::RwLockWriteGuard","value":"lock_api::RwLockWriteGuard<'a, RawRwLock, T>","parent":null,"children":[],"decl_id":null,"docs":" RAII structure used to release the exclusive write access of a lock when\n dropped.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":350},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":107210,"byte_end":107231,"line_start":106,"line_end":106,"column_start":10,"column_end":31},"name":"MappedRwLockReadGuard","qualname":"::rwlock::MappedRwLockReadGuard","value":"lock_api::MappedRwLockReadGuard<'a, RawRwLock, T>","parent":null,"children":[],"decl_id":null,"docs":" An RAII read lock guard returned by `RwLockReadGuard::map`, which can point to a\n subfield of the protected data.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":353},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":107690,"byte_end":107712,"line_start":115,"line_end":115,"column_start":10,"column_end":32},"name":"MappedRwLockWriteGuard","qualname":"::rwlock::MappedRwLockWriteGuard","value":"lock_api::MappedRwLockWriteGuard<'a, RawRwLock, T>","parent":null,"children":[],"decl_id":null,"docs":" An RAII write lock guard returned by `RwLockWriteGuard::map`, which can point to a\n subfield of the protected data.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":356},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/rwlock.rs","byte_start":107874,"byte_end":107899,"line_start":119,"line_end":119,"column_start":10,"column_end":35},"name":"RwLockUpgradableReadGuard","qualname":"::rwlock::RwLockUpgradableReadGuard","value":"lock_api::RwLockUpgradableReadGuard<'a, RawRwLock, T>","parent":null,"children":[],"decl_id":null,"docs":" RAII structure used to release the upgradable read access of a lock when\n dropped.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":2283,"byte_end":2300,"line_start":24,"line_end":24,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":4600,"byte_end":4607,"line_start":89,"line_end":89,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":16983,"byte_end":16990,"line_start":391,"line_end":391,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":17089,"byte_end":17096,"line_start":398,"line_end":398,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/elision.rs","byte_start":25958,"byte_end":25969,"line_start":34,"line_end":34,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":39210,"byte_end":39219,"line_start":45,"line_end":45,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":40575,"byte_end":40579,"line_start":94,"line_end":94,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":47650,"byte_end":47660,"line_start":289,"line_end":289,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":48862,"byte_end":48866,"line_start":321,"line_end":321,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":48959,"byte_end":48963,"line_start":328,"line_end":328,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_mutex.rs","byte_start":53491,"byte_end":53499,"line_start":39,"line_end":39,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_mutex.rs","byte_start":54878,"byte_end":54886,"line_start":89,"line_end":89,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_mutex.rs","byte_start":55364,"byte_end":55372,"line_start":108,"line_end":108,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_mutex.rs","byte_start":56363,"byte_end":56371,"line_start":147,"line_end":147,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":176},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":64407,"byte_end":64416,"line_start":63,"line_end":63,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":66361,"byte_end":66370,"line_start":135,"line_end":135,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":67226,"byte_end":67235,"line_start":169,"line_end":169,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":67560,"byte_end":67569,"line_start":181,"line_end":181,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":69226,"byte_end":69235,"line_start":246,"line_end":246,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":69795,"byte_end":69804,"line_start":267,"line_end":267,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":70536,"byte_end":70545,"line_start":295,"line_end":295,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":72366,"byte_end":72375,"line_start":365,"line_end":365,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":264}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":73200,"byte_end":73209,"line_start":395,"line_end":395,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":266},{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":73865,"byte_end":73874,"line_start":418,"line_end":418,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":75192,"byte_end":75201,"line_start":464,"line_end":464,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":297},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":306},{"krate":0,"index":311},{"krate":0,"index":317},{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/remutex.rs","byte_start":98538,"byte_end":98549,"line_start":15,"line_end":15,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/util.rs","byte_start":120823,"byte_end":120829,"line_start":15,"line_end":15,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":2283,"byte_end":2300,"line_start":24,"line_end":24,"column_start":6,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":4600,"byte_end":4607,"line_start":89,"line_end":89,"column_start":6,"column_end":13},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":30},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":16983,"byte_end":16990,"line_start":391,"line_end":391,"column_start":18,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/condvar.rs","byte_start":17089,"byte_end":17096,"line_start":398,"line_end":398,"column_start":21,"column_end":28},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/elision.rs","byte_start":25958,"byte_end":25969,"line_start":34,"line_end":34,"column_start":27,"column_end":38},"kind":{"Impl":{"id":4}},"from":{"krate":2,"index":28483},"to":{"krate":0,"index":58}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":39210,"byte_end":39219,"line_start":45,"line_end":45,"column_start":6,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":415},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":40575,"byte_end":40579,"line_start":94,"line_end":94,"column_start":6,"column_end":10},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":100},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":47650,"byte_end":47660,"line_start":289,"line_end":289,"column_start":27,"column_end":37},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":116},"to":{"krate":2,"index":1726}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":48862,"byte_end":48866,"line_start":321,"line_end":321,"column_start":18,"column_end":22},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":100},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/once.rs","byte_start":48959,"byte_end":48963,"line_start":328,"line_end":328,"column_start":21,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":100},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_mutex.rs","byte_start":53491,"byte_end":53499,"line_start":39,"line_end":39,"column_start":31,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":153},"to":{"krate":15,"index":19}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_mutex.rs","byte_start":54878,"byte_end":54886,"line_start":89,"line_end":89,"column_start":30,"column_end":38},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":153},"to":{"krate":15,"index":25}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_mutex.rs","byte_start":55364,"byte_end":55372,"line_start":108,"line_end":108,"column_start":31,"column_end":39},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":153},"to":{"krate":15,"index":28}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_mutex.rs","byte_start":56363,"byte_end":56371,"line_start":147,"line_end":147,"column_start":6,"column_end":14},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":64407,"byte_end":64416,"line_start":63,"line_end":63,"column_start":32,"column_end":41},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":225},"to":{"krate":15,"index":436}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":66361,"byte_end":66370,"line_start":135,"line_end":135,"column_start":31,"column_end":40},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":225},"to":{"krate":15,"index":445}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":67226,"byte_end":67235,"line_start":169,"line_end":169,"column_start":36,"column_end":45},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":225},"to":{"krate":15,"index":450}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":67560,"byte_end":67569,"line_start":181,"line_end":181,"column_start":32,"column_end":41},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":225},"to":{"krate":15,"index":452}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":69226,"byte_end":69235,"line_start":246,"line_end":246,"column_start":36,"column_end":45},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":225},"to":{"krate":15,"index":459}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":69795,"byte_end":69804,"line_start":267,"line_end":267,"column_start":41,"column_end":50},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":225},"to":{"krate":15,"index":462}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":70536,"byte_end":70545,"line_start":295,"line_end":295,"column_start":34,"column_end":43},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":225},"to":{"krate":15,"index":465}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":72366,"byte_end":72375,"line_start":365,"line_end":365,"column_start":38,"column_end":47},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":225},"to":{"krate":15,"index":471}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":73200,"byte_end":73209,"line_start":395,"line_end":395,"column_start":43,"column_end":52},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":225},"to":{"krate":15,"index":474}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":73865,"byte_end":73874,"line_start":418,"line_end":418,"column_start":39,"column_end":48},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":225},"to":{"krate":15,"index":477}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/raw_rwlock.rs","byte_start":75192,"byte_end":75201,"line_start":464,"line_end":464,"column_start":6,"column_end":15},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/remutex.rs","byte_start":98538,"byte_end":98549,"line_start":15,"line_end":15,"column_start":29,"column_end":40},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":325},"to":{"krate":15,"index":218}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/parking_lot-0.9.0/src/util.rs","byte_start":120823,"byte_end":120829,"line_start":15,"line_end":15,"column_start":35,"column_end":41},"kind":{"Impl":{"id":26}},"from":{"krate":2,"index":29481},"to":{"krate":0,"index":363}}]}