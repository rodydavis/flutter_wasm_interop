{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3","program":"/Users/rodydavis/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","raw_cpuid","/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=240df5c84df3a59f","-C","extra-filename=-240df5c84df3a59f","--out-dir","/Users/rodydavis/Developer/GitHub/packages/flutter_wasm_interop/example/target/rls/debug/deps","-L","dependency=/Users/rodydavis/Developer/GitHub/packages/flutter_wasm_interop/example/target/rls/debug/deps","--extern","bitflags=/Users/rodydavis/Developer/GitHub/packages/flutter_wasm_interop/example/target/rls/debug/deps/libbitflags-06be412b6bf32758.rmeta","--cap-lints","allow","--cfg","feature=\"use_arch\"","--error-format=json","--sysroot","/Users/rodydavis/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/rodydavis/Developer/GitHub/packages/flutter_wasm_interop/example/target/rls/debug/deps/libraw_cpuid-240df5c84df3a59f.rmeta"},"prelude":{"crate_id":{"name":"raw_cpuid","disambiguator":[6807075264418310710,4072630936720662798]},"crate_root":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src","external_crates":[{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[5459908120384850477,15760959269387734159]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[11826469219384905814,12486183027959381912]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[5497990426549684121,15109235050116755313]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","num":4,"id":{"name":"bitflags","disambiguator":[9896633610425871187,16061992971720893451]}}],"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":0,"byte_end":141457,"line_start":1,"line_end":4392,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":0,"byte_end":141457,"line_start":1,"line_end":4392,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":297},{"krate":0,"index":301},{"krate":0,"index":299},{"krate":0,"index":303},{"krate":0,"index":314},{"krate":0,"index":312},{"krate":0,"index":310},{"krate":0,"index":308},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":315},{"krate":0,"index":321},{"krate":0,"index":319},{"krate":0,"index":73},{"krate":0,"index":323},{"krate":0,"index":331},{"krate":0,"index":329},{"krate":0,"index":76},{"krate":0,"index":333},{"krate":0,"index":350},{"krate":0,"index":348},{"krate":0,"index":346},{"krate":0,"index":79},{"krate":0,"index":351},{"krate":0,"index":360},{"krate":0,"index":358},{"krate":0,"index":356},{"krate":0,"index":354},{"krate":0,"index":81},{"krate":0,"index":83},{"krate":0,"index":85},{"krate":0,"index":87},{"krate":0,"index":361},{"krate":0,"index":366},{"krate":0,"index":364},{"krate":0,"index":89},{"krate":0,"index":368},{"krate":0,"index":374},{"krate":0,"index":372},{"krate":0,"index":92},{"krate":0,"index":433},{"krate":0,"index":456},{"krate":0,"index":455},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":446},{"krate":0,"index":440},{"krate":0,"index":438},{"krate":0,"index":435},{"krate":0,"index":458},{"krate":0,"index":519},{"krate":0,"index":521},{"krate":0,"index":523},{"krate":0,"index":525},{"krate":0,"index":527},{"krate":0,"index":590},{"krate":0,"index":593},{"krate":0,"index":595},{"krate":0,"index":598},{"krate":0,"index":600},{"krate":0,"index":603},{"krate":0,"index":605},{"krate":0,"index":608},{"krate":0,"index":610},{"krate":0,"index":613},{"krate":0,"index":616},{"krate":0,"index":801},{"krate":0,"index":805},{"krate":0,"index":803},{"krate":0,"index":102},{"krate":0,"index":807},{"krate":0,"index":818},{"krate":0,"index":816},{"krate":0,"index":814},{"krate":0,"index":812},{"krate":0,"index":819},{"krate":0,"index":836},{"krate":0,"index":837},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":831},{"krate":0,"index":105},{"krate":0,"index":107},{"krate":0,"index":839},{"krate":0,"index":846},{"krate":0,"index":844},{"krate":0,"index":121},{"krate":0,"index":848},{"krate":0,"index":855},{"krate":0,"index":853},{"krate":0,"index":134},{"krate":0,"index":877},{"krate":0,"index":900},{"krate":0,"index":899},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":890},{"krate":0,"index":884},{"krate":0,"index":882},{"krate":0,"index":879},{"krate":0,"index":902},{"krate":0,"index":927},{"krate":0,"index":929},{"krate":0,"index":931},{"krate":0,"index":933},{"krate":0,"index":935},{"krate":0,"index":962},{"krate":0,"index":965},{"krate":0,"index":967},{"krate":0,"index":970},{"krate":0,"index":972},{"krate":0,"index":975},{"krate":0,"index":977},{"krate":0,"index":980},{"krate":0,"index":982},{"krate":0,"index":985},{"krate":0,"index":988},{"krate":0,"index":1065},{"krate":0,"index":1088},{"krate":0,"index":1087},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1078},{"krate":0,"index":1072},{"krate":0,"index":1070},{"krate":0,"index":1067},{"krate":0,"index":1090},{"krate":0,"index":1096},{"krate":0,"index":1098},{"krate":0,"index":1100},{"krate":0,"index":1102},{"krate":0,"index":1104},{"krate":0,"index":1112},{"krate":0,"index":1115},{"krate":0,"index":1117},{"krate":0,"index":1120},{"krate":0,"index":1122},{"krate":0,"index":1125},{"krate":0,"index":1127},{"krate":0,"index":1130},{"krate":0,"index":1132},{"krate":0,"index":1135},{"krate":0,"index":1138},{"krate":0,"index":1158},{"krate":0,"index":1165},{"krate":0,"index":1163},{"krate":0,"index":136},{"krate":0,"index":1205},{"krate":0,"index":1228},{"krate":0,"index":1227},{"krate":0,"index":1223},{"krate":0,"index":1224},{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":1218},{"krate":0,"index":1212},{"krate":0,"index":1210},{"krate":0,"index":1207},{"krate":0,"index":1230},{"krate":0,"index":1265},{"krate":0,"index":1267},{"krate":0,"index":1269},{"krate":0,"index":1271},{"krate":0,"index":1273},{"krate":0,"index":1310},{"krate":0,"index":1313},{"krate":0,"index":1315},{"krate":0,"index":1318},{"krate":0,"index":1320},{"krate":0,"index":1323},{"krate":0,"index":1325},{"krate":0,"index":1328},{"krate":0,"index":1330},{"krate":0,"index":1333},{"krate":0,"index":1336},{"krate":0,"index":1443},{"krate":0,"index":1466},{"krate":0,"index":1465},{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":1456},{"krate":0,"index":1450},{"krate":0,"index":1448},{"krate":0,"index":1445},{"krate":0,"index":1468},{"krate":0,"index":1479},{"krate":0,"index":1481},{"krate":0,"index":1483},{"krate":0,"index":1485},{"krate":0,"index":1487},{"krate":0,"index":1500},{"krate":0,"index":1503},{"krate":0,"index":1505},{"krate":0,"index":1508},{"krate":0,"index":1510},{"krate":0,"index":1513},{"krate":0,"index":1515},{"krate":0,"index":1518},{"krate":0,"index":1520},{"krate":0,"index":1523},{"krate":0,"index":1526},{"krate":0,"index":1561},{"krate":0,"index":1565},{"krate":0,"index":1563},{"krate":0,"index":138},{"krate":0,"index":1567},{"krate":0,"index":1574},{"krate":0,"index":1572},{"krate":0,"index":140},{"krate":0,"index":1584},{"krate":0,"index":1607},{"krate":0,"index":1606},{"krate":0,"index":1602},{"krate":0,"index":1603},{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1597},{"krate":0,"index":1591},{"krate":0,"index":1589},{"krate":0,"index":1586},{"krate":0,"index":1609},{"krate":0,"index":1620},{"krate":0,"index":1622},{"krate":0,"index":1624},{"krate":0,"index":1626},{"krate":0,"index":1628},{"krate":0,"index":1641},{"krate":0,"index":1644},{"krate":0,"index":1646},{"krate":0,"index":1649},{"krate":0,"index":1651},{"krate":0,"index":1654},{"krate":0,"index":1656},{"krate":0,"index":1659},{"krate":0,"index":1661},{"krate":0,"index":1664},{"krate":0,"index":1667},{"krate":0,"index":1702},{"krate":0,"index":1706},{"krate":0,"index":1704},{"krate":0,"index":1708},{"krate":0,"index":1713},{"krate":0,"index":147},{"krate":0,"index":149},{"krate":0,"index":1715},{"krate":0,"index":1730},{"krate":0,"index":1731},{"krate":0,"index":1727},{"krate":0,"index":1728},{"krate":0,"index":1725},{"krate":0,"index":155},{"krate":0,"index":157},{"krate":0,"index":1733},{"krate":0,"index":1756},{"krate":0,"index":1755},{"krate":0,"index":1751},{"krate":0,"index":1752},{"krate":0,"index":1748},{"krate":0,"index":1749},{"krate":0,"index":1746},{"krate":0,"index":1740},{"krate":0,"index":1738},{"krate":0,"index":1735},{"krate":0,"index":1758},{"krate":0,"index":1772},{"krate":0,"index":1774},{"krate":0,"index":1776},{"krate":0,"index":1778},{"krate":0,"index":1780},{"krate":0,"index":1796},{"krate":0,"index":1799},{"krate":0,"index":1801},{"krate":0,"index":1804},{"krate":0,"index":1806},{"krate":0,"index":1809},{"krate":0,"index":1811},{"krate":0,"index":1814},{"krate":0,"index":1816},{"krate":0,"index":1819},{"krate":0,"index":1822},{"krate":0,"index":1866},{"krate":0,"index":1889},{"krate":0,"index":1888},{"krate":0,"index":1884},{"krate":0,"index":1885},{"krate":0,"index":1881},{"krate":0,"index":1882},{"krate":0,"index":1879},{"krate":0,"index":1873},{"krate":0,"index":1871},{"krate":0,"index":1868},{"krate":0,"index":1891},{"krate":0,"index":1897},{"krate":0,"index":1899},{"krate":0,"index":1901},{"krate":0,"index":1903},{"krate":0,"index":1905},{"krate":0,"index":1913},{"krate":0,"index":1916},{"krate":0,"index":1918},{"krate":0,"index":1921},{"krate":0,"index":1923},{"krate":0,"index":1926},{"krate":0,"index":1928},{"krate":0,"index":1931},{"krate":0,"index":1933},{"krate":0,"index":1936},{"krate":0,"index":1939},{"krate":0,"index":1959},{"krate":0,"index":1970},{"krate":0,"index":1968},{"krate":0,"index":160},{"krate":0,"index":1983},{"krate":0,"index":1989},{"krate":0,"index":1987},{"krate":0,"index":169},{"krate":0,"index":1991},{"krate":0,"index":1998},{"krate":0,"index":1996},{"krate":0,"index":172},{"krate":0,"index":2000},{"krate":0,"index":2005},{"krate":0,"index":2003},{"krate":0,"index":178},{"krate":0,"index":2008},{"krate":0,"index":2014},{"krate":0,"index":2012},{"krate":0,"index":181},{"krate":0,"index":2019},{"krate":0,"index":2023},{"krate":0,"index":2021},{"krate":0,"index":184},{"krate":0,"index":2028},{"krate":0,"index":2035},{"krate":0,"index":2033},{"krate":0,"index":188},{"krate":0,"index":2038},{"krate":0,"index":2044},{"krate":0,"index":2042},{"krate":0,"index":192},{"krate":0,"index":2046},{"krate":0,"index":2052},{"krate":0,"index":2050},{"krate":0,"index":196},{"krate":0,"index":2055},{"krate":0,"index":2066},{"krate":0,"index":2064},{"krate":0,"index":199},{"krate":0,"index":2072},{"krate":0,"index":2076},{"krate":0,"index":2074},{"krate":0,"index":205},{"krate":0,"index":2078},{"krate":0,"index":2082},{"krate":0,"index":208},{"krate":0,"index":2084},{"krate":0,"index":2091},{"krate":0,"index":2089},{"krate":0,"index":210},{"krate":0,"index":2093},{"krate":0,"index":2101},{"krate":0,"index":2099},{"krate":0,"index":213},{"krate":0,"index":2114},{"krate":0,"index":2118},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":2120},{"krate":0,"index":2126},{"krate":0,"index":2124},{"krate":0,"index":229},{"krate":0,"index":2128},{"krate":0,"index":2133},{"krate":0,"index":2131},{"krate":0,"index":233},{"krate":0,"index":2135},{"krate":0,"index":2142},{"krate":0,"index":2140},{"krate":0,"index":236},{"krate":0,"index":2149},{"krate":0,"index":2164},{"krate":0,"index":243},{"krate":0,"index":2166},{"krate":0,"index":2173},{"krate":0,"index":2171},{"krate":0,"index":245},{"krate":0,"index":2175},{"krate":0,"index":2180},{"krate":0,"index":2178},{"krate":0,"index":251},{"krate":0,"index":2182},{"krate":0,"index":2187},{"krate":0,"index":2185},{"krate":0,"index":254},{"krate":0,"index":257},{"krate":0,"index":259},{"krate":0,"index":261},{"krate":0,"index":2189},{"krate":0,"index":2210},{"krate":0,"index":2207},{"krate":0,"index":2208},{"krate":0,"index":2203},{"krate":0,"index":2204},{"krate":0,"index":263},{"krate":0,"index":2212},{"krate":0,"index":2218},{"krate":0,"index":2216},{"krate":0,"index":2220},{"krate":0,"index":2249},{"krate":0,"index":2250},{"krate":0,"index":2246},{"krate":0,"index":2247},{"krate":0,"index":2244},{"krate":0,"index":267},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":2252},{"krate":0,"index":2275},{"krate":0,"index":2274},{"krate":0,"index":2270},{"krate":0,"index":2271},{"krate":0,"index":2267},{"krate":0,"index":2268},{"krate":0,"index":2265},{"krate":0,"index":2259},{"krate":0,"index":2257},{"krate":0,"index":2254},{"krate":0,"index":2277},{"krate":0,"index":2284},{"krate":0,"index":2286},{"krate":0,"index":2288},{"krate":0,"index":2290},{"krate":0,"index":2292},{"krate":0,"index":2301},{"krate":0,"index":2304},{"krate":0,"index":2306},{"krate":0,"index":2309},{"krate":0,"index":2311},{"krate":0,"index":2314},{"krate":0,"index":2316},{"krate":0,"index":2319},{"krate":0,"index":2321},{"krate":0,"index":2324},{"krate":0,"index":2327},{"krate":0,"index":2350},{"krate":0,"index":2373},{"krate":0,"index":2372},{"krate":0,"index":2368},{"krate":0,"index":2369},{"krate":0,"index":2365},{"krate":0,"index":2366},{"krate":0,"index":2363},{"krate":0,"index":2357},{"krate":0,"index":2355},{"krate":0,"index":2352},{"krate":0,"index":2375},{"krate":0,"index":2384},{"krate":0,"index":2386},{"krate":0,"index":2388},{"krate":0,"index":2390},{"krate":0,"index":2392},{"krate":0,"index":2403},{"krate":0,"index":2406},{"krate":0,"index":2408},{"krate":0,"index":2411},{"krate":0,"index":2413},{"krate":0,"index":2416},{"krate":0,"index":2418},{"krate":0,"index":2421},{"krate":0,"index":2423},{"krate":0,"index":2426},{"krate":0,"index":2429},{"krate":0,"index":2458},{"krate":0,"index":2465},{"krate":0,"index":2463},{"krate":0,"index":292},{"krate":0,"index":2471},{"krate":0,"index":2494},{"krate":0,"index":2493},{"krate":0,"index":2489},{"krate":0,"index":2490},{"krate":0,"index":2486},{"krate":0,"index":2487},{"krate":0,"index":2484},{"krate":0,"index":2478},{"krate":0,"index":2476},{"krate":0,"index":2473},{"krate":0,"index":2496},{"krate":0,"index":2504},{"krate":0,"index":2506},{"krate":0,"index":2508},{"krate":0,"index":2510},{"krate":0,"index":2512},{"krate":0,"index":2522},{"krate":0,"index":2525},{"krate":0,"index":2527},{"krate":0,"index":2530},{"krate":0,"index":2532},{"krate":0,"index":2535},{"krate":0,"index":2537},{"krate":0,"index":2540},{"krate":0,"index":2542},{"krate":0,"index":2545},{"krate":0,"index":2548}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}},{"value":"crate_name = \"raw_cpuid\"","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":11,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":29}},{"value":"crate_type = \"lib\"","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":40,"byte_end":62,"line_start":3,"line_end":3,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":5},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":849,"byte_end":861,"line_start":41,"line_end":41,"column_start":9,"column_end":21},"name":"native_cpuid","qualname":"::native_cpuid","value":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8}],"decl_id":null,"docs":" Uses Rust's `cpuid` function from the `arch` module.\n","sig":null,"attributes":[{"value":"cfg(feature = \"use_arch\")","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":812,"byte_end":840,"line_start":40,"line_end":40,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":8},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":1041,"byte_end":1052,"line_start":49,"line_end":49,"column_start":12,"column_end":23},"name":"cpuid_count","qualname":"::native_cpuid::cpuid_count","value":"fn (a: u32, c: u32) -> CpuIdResult","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":297},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":2936,"byte_end":2941,"line_start":133,"line_end":133,"column_start":12,"column_end":17},"name":"CpuId","qualname":"::CpuId","value":"CpuId {  }","parent":null,"children":[{"krate":0,"index":298}],"decl_id":null,"docs":" Main type used to query for information about the CPU we're running on.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":303},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":3155,"byte_end":3166,"line_start":140,"line_end":140,"column_start":12,"column_end":23},"name":"CpuIdResult","qualname":"::CpuIdResult","value":"CpuIdResult { eax, ebx, ecx, edx }","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307}],"decl_id":null,"docs":" Low-level data-structure to store result of cpuid instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":304},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":3211,"byte_end":3214,"line_start":142,"line_end":142,"column_start":9,"column_end":12},"name":"eax","qualname":"::CpuIdResult::eax","value":"u32","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Return value EAX register\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":305},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":3263,"byte_end":3266,"line_start":144,"line_end":144,"column_start":9,"column_end":12},"name":"ebx","qualname":"::CpuIdResult::ebx","value":"u32","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Return value EBX register\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":306},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":3315,"byte_end":3318,"line_start":146,"line_end":146,"column_start":9,"column_end":12},"name":"ecx","qualname":"::CpuIdResult::ecx","value":"u32","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Return value ECX register\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":307},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":3367,"byte_end":3370,"line_start":148,"line_end":148,"column_start":9,"column_end":12},"name":"edx","qualname":"::CpuIdResult::edx","value":"u32","parent":{"krate":0,"index":303},"children":[],"decl_id":null,"docs":" Return value EDX register\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":4407,"byte_end":4410,"line_start":177,"line_end":177,"column_start":12,"column_end":15},"name":"new","qualname":"<CpuId>::new","value":"fn () -> CpuId","parent":null,"children":[],"decl_id":null,"docs":" Return new CPUID struct.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":4805,"byte_end":4820,"line_start":191,"line_end":191,"column_start":12,"column_end":27},"name":"get_vendor_info","qualname":"<CpuId>::get_vendor_info","value":"fn (&self) -> Option<VendorInfo>","parent":null,"children":[],"decl_id":null,"docs":" Return information about vendor.\n This is typically a ASCII readable string such as\n GenuineIntel for Intel CPUs or AuthenticAMD for AMD CPUs.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":5213,"byte_end":5229,"line_start":205,"line_end":205,"column_start":12,"column_end":28},"name":"get_feature_info","qualname":"<CpuId>::get_feature_info","value":"fn (&self) -> Option<FeatureInfo>","parent":null,"children":[],"decl_id":null,"docs":" Query a set of features that are available on this CPU.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":5821,"byte_end":5835,"line_start":222,"line_end":222,"column_start":12,"column_end":26},"name":"get_cache_info","qualname":"<CpuId>::get_cache_info","value":"fn (&self) -> Option<CacheInfoIter>","parent":null,"children":[],"decl_id":null,"docs":" Query basic information about caches. This will just return an index\n into a static table of cache descriptions (see `CACHE_INFO_TABLE`).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":6271,"byte_end":6291,"line_start":238,"line_end":238,"column_start":12,"column_end":32},"name":"get_processor_serial","qualname":"<CpuId>::get_processor_serial","value":"fn (&self) -> Option<ProcessorSerial>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve serial number of processor.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":6820,"byte_end":6840,"line_start":253,"line_end":253,"column_start":12,"column_end":32},"name":"get_cache_parameters","qualname":"<CpuId>::get_cache_parameters","value":"fn (&self) -> Option<CacheParametersIter>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve more elaborate information about caches (as opposed\n to `get_cache_info`). This will tell us about associativity,\n set size, line size etc. for each level of the cache hierarchy.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":7117,"byte_end":7139,"line_start":262,"line_end":262,"column_start":12,"column_end":34},"name":"get_monitor_mwait_info","qualname":"<CpuId>::get_monitor_mwait_info","value":"fn (&self) -> Option<MonitorMwaitInfo>","parent":null,"children":[],"decl_id":null,"docs":" Information about how monitor/mwait works on this CPU.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":7606,"byte_end":7628,"line_start":277,"line_end":277,"column_start":12,"column_end":34},"name":"get_thermal_power_info","qualname":"<CpuId>::get_thermal_power_info","value":"fn (&self) -> Option<ThermalPowerInfo>","parent":null,"children":[],"decl_id":null,"docs":" Query information about thermal and power management features of the CPU.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":8141,"byte_end":8166,"line_start":292,"line_end":292,"column_start":12,"column_end":37},"name":"get_extended_feature_info","qualname":"<CpuId>::get_extended_feature_info","value":"fn (&self) -> Option<ExtendedFeatures>","parent":null,"children":[],"decl_id":null,"docs":" Find out about more features supported by this CPU.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":8708,"byte_end":8736,"line_start":308,"line_end":308,"column_start":12,"column_end":40},"name":"get_direct_cache_access_info","qualname":"<CpuId>::get_direct_cache_access_info","value":"fn (&self) -> Option<DirectCacheAccessInfo>","parent":null,"children":[],"decl_id":null,"docs":" Direct cache access info.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":9092,"byte_end":9123,"line_start":318,"line_end":318,"column_start":12,"column_end":43},"name":"get_performance_monitoring_info","qualname":"<CpuId>::get_performance_monitoring_info","value":"fn (&self) -> Option<PerformanceMonitoringInfo>","parent":null,"children":[],"decl_id":null,"docs":" Info about performance monitoring (how many counters etc.).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":9657,"byte_end":9683,"line_start":333,"line_end":333,"column_start":12,"column_end":38},"name":"get_extended_topology_info","qualname":"<CpuId>::get_extended_topology_info","value":"fn (&self) -> Option<ExtendedTopologyIter>","parent":null,"children":[],"decl_id":null,"docs":" Information about topology (how many cores and what kind of cores).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":9969,"byte_end":9992,"line_start":342,"line_end":342,"column_start":12,"column_end":35},"name":"get_extended_state_info","qualname":"<CpuId>::get_extended_state_info","value":"fn (&self) -> Option<ExtendedStateInfo>","parent":null,"children":[],"decl_id":null,"docs":" Information for saving/restoring extended register state.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":10685,"byte_end":10708,"line_start":362,"line_end":362,"column_start":12,"column_end":35},"name":"get_rdt_monitoring_info","qualname":"<CpuId>::get_rdt_monitoring_info","value":"fn (&self) -> Option<RdtMonitoringInfo>","parent":null,"children":[],"decl_id":null,"docs":" Quality of service informations.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":11079,"byte_end":11102,"line_start":376,"line_end":376,"column_start":12,"column_end":35},"name":"get_rdt_allocation_info","qualname":"<CpuId>::get_rdt_allocation_info","value":"fn (&self) -> Option<RdtAllocationInfo>","parent":null,"children":[],"decl_id":null,"docs":" Quality of service enforcement information.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":11362,"byte_end":11374,"line_start":386,"line_end":386,"column_start":12,"column_end":24},"name":"get_sgx_info","qualname":"<CpuId>::get_sgx_info","value":"fn (&self) -> Option<SgxInfo>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":12187,"byte_end":12211,"line_start":409,"line_end":409,"column_start":12,"column_end":36},"name":"get_processor_trace_info","qualname":"<CpuId>::get_processor_trace_info","value":"fn (&self) -> Option<ProcessorTraceInfo>","parent":null,"children":[],"decl_id":null,"docs":" Intel Processor Trace Enumeration Information.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":12818,"byte_end":12830,"line_start":431,"line_end":431,"column_start":12,"column_end":24},"name":"get_tsc_info","qualname":"<CpuId>::get_tsc_info","value":"fn (&self) -> Option<TscInfo>","parent":null,"children":[],"decl_id":null,"docs":" Time Stamp Counter/Core Crystal Clock Information.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":13217,"byte_end":13245,"line_start":445,"line_end":445,"column_start":12,"column_end":40},"name":"get_processor_frequency_info","qualname":"<CpuId>::get_processor_frequency_info","value":"fn (&self) -> Option<ProcessorFrequencyInfo>","parent":null,"children":[],"decl_id":null,"docs":" Processor Frequency Information.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":13603,"byte_end":13641,"line_start":458,"line_end":458,"column_start":12,"column_end":50},"name":"deterministic_address_translation_info","qualname":"<CpuId>::deterministic_address_translation_info","value":"fn (&self) -> Option<DatIter>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":13991,"byte_end":14010,"line_start":470,"line_end":470,"column_start":12,"column_end":31},"name":"get_soc_vendor_info","qualname":"<CpuId>::get_soc_vendor_info","value":"fn (&self) -> Option<SoCVendorInfo>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":14382,"byte_end":14401,"line_start":484,"line_end":484,"column_start":12,"column_end":31},"name":"get_hypervisor_info","qualname":"<CpuId>::get_hypervisor_info","value":"fn (&self) -> Option<HypervisorInfo>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":14772,"byte_end":14798,"line_start":495,"line_end":495,"column_start":12,"column_end":38},"name":"get_extended_function_info","qualname":"<CpuId>::get_extended_function_info","value":"fn (&self) -> Option<ExtendedFunctionInfo>","parent":null,"children":[],"decl_id":null,"docs":" Extended functionality of CPU described here (including more supported features).\n This also contains a more detailed CPU model identifier.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":16819,"byte_end":16845,"line_start":570,"line_end":570,"column_start":12,"column_end":38},"name":"get_memory_encryption_info","qualname":"<CpuId>::get_memory_encryption_info","value":"fn (&self) -> Option<MemoryEncryptionInfo>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":315},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":17379,"byte_end":17389,"line_start":588,"line_end":588,"column_start":12,"column_end":22},"name":"VendorInfo","qualname":"::VendorInfo","value":"VendorInfo {  }","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":17529,"byte_end":17538,"line_start":596,"line_end":596,"column_start":12,"column_end":21},"name":"as_string","qualname":"<VendorInfo>::as_string","value":"fn <'a> (&'a self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Return vendor identification as human readable string.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":323},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":18038,"byte_end":18051,"line_start":609,"line_end":609,"column_start":12,"column_end":25},"name":"CacheInfoIter","qualname":"::CacheInfoIter","value":"CacheInfoIter {  }","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328}],"decl_id":null,"docs":" Used to iterate over cache information contained in cpuid instruction.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":334},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":19326,"byte_end":19333,"line_start":660,"line_end":660,"column_start":5,"column_end":12},"name":"General","qualname":"::CacheInfoType::General","value":"CacheInfoType::General","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":336},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":19339,"byte_end":19344,"line_start":661,"line_end":661,"column_start":5,"column_end":10},"name":"Cache","qualname":"::CacheInfoType::Cache","value":"CacheInfoType::Cache","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":338},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":19350,"byte_end":19353,"line_start":662,"line_end":662,"column_start":5,"column_end":8},"name":"TLB","qualname":"::CacheInfoType::TLB","value":"CacheInfoType::TLB","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":340},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":19359,"byte_end":19363,"line_start":663,"line_end":663,"column_start":5,"column_end":9},"name":"STLB","qualname":"::CacheInfoType::STLB","value":"CacheInfoType::STLB","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":342},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":19369,"byte_end":19373,"line_start":664,"line_end":664,"column_start":5,"column_end":9},"name":"DTLB","qualname":"::CacheInfoType::DTLB","value":"CacheInfoType::DTLB","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":344},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":19379,"byte_end":19387,"line_start":665,"line_end":665,"column_start":5,"column_end":13},"name":"Prefetch","qualname":"::CacheInfoType::Prefetch","value":"CacheInfoType::Prefetch","parent":{"krate":0,"index":333},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":333},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":19306,"byte_end":19319,"line_start":659,"line_end":659,"column_start":10,"column_end":23},"name":"CacheInfoType","qualname":"::CacheInfoType","value":"CacheInfoType::{General, Cache, TLB, STLB, DTLB, Prefetch}","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":336},{"krate":0,"index":338},{"krate":0,"index":340},{"krate":0,"index":342},{"krate":0,"index":344}],"decl_id":null,"docs":" What type of cache are we dealing with?\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":351},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":19703,"byte_end":19712,"line_start":677,"line_end":677,"column_start":12,"column_end":21},"name":"CacheInfo","qualname":"::CacheInfo","value":"CacheInfo { num, typ }","parent":null,"children":[{"krate":0,"index":352},{"krate":0,"index":353}],"decl_id":null,"docs":" Describes any kind of cache (TLB, Data and Instruction caches plus prefetchers).\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":352},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":19762,"byte_end":19765,"line_start":679,"line_end":679,"column_start":9,"column_end":12},"name":"num","qualname":"::CacheInfo::num","value":"u8","parent":{"krate":0,"index":351},"children":[],"decl_id":null,"docs":" Number as retrieved from cpuid\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":353},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":19798,"byte_end":19801,"line_start":681,"line_end":681,"column_start":9,"column_end":12},"name":"typ","qualname":"::CacheInfo::typ","value":"CacheInfoType","parent":{"krate":0,"index":351},"children":[],"decl_id":null,"docs":" Cache type\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":19902,"byte_end":19906,"line_start":686,"line_end":686,"column_start":12,"column_end":16},"name":"desc","qualname":"<CacheInfo>::desc","value":"fn (&self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Description of the cache (from Intel Manual)\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":85},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":30996,"byte_end":31012,"line_start":822,"line_end":822,"column_start":11,"column_end":27},"name":"CACHE_INFO_TABLE","qualname":"::CACHE_INFO_TABLE","value":"[CacheInfo; 108]","parent":null,"children":[],"decl_id":null,"docs":" This table is taken from Intel manual (Section CPUID instruction).\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":361},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":39553,"byte_end":39568,"line_start":1265,"line_end":1265,"column_start":12,"column_end":27},"name":"ProcessorSerial","qualname":"::ProcessorSerial","value":"ProcessorSerial {  }","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":39792,"byte_end":39804,"line_start":1273,"line_end":1273,"column_start":12,"column_end":24},"name":"serial_lower","qualname":"<ProcessorSerial>::serial_lower","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Bits 00-31 of 96 bit processor serial number.\n (Available in Pentium III processor only; otherwise, the value in this register is reserved.)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":40012,"byte_end":40025,"line_start":1279,"line_end":1279,"column_start":12,"column_end":25},"name":"serial_middle","qualname":"<ProcessorSerial>::serial_middle","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Bits 32-63 of 96 bit processor serial number.\n (Available in Pentium III processor only; otherwise, the value in this register is reserved.)\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":368},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":40172,"byte_end":40183,"line_start":1286,"line_end":1286,"column_start":12,"column_end":23},"name":"FeatureInfo","qualname":"::FeatureInfo","value":"FeatureInfo {  }","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":40323,"byte_end":40341,"line_start":1294,"line_end":1294,"column_start":12,"column_end":30},"name":"extended_family_id","qualname":"<FeatureInfo>::extended_family_id","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Version Information: Extended Family\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":40460,"byte_end":40477,"line_start":1299,"line_end":1299,"column_start":12,"column_end":29},"name":"extended_model_id","qualname":"<FeatureInfo>::extended_model_id","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Version Information: Extended Model\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":40588,"byte_end":40597,"line_start":1304,"line_end":1304,"column_start":12,"column_end":21},"name":"family_id","qualname":"<FeatureInfo>::family_id","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Version Information: Family\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":40706,"byte_end":40714,"line_start":1309,"line_end":1309,"column_start":12,"column_end":20},"name":"model_id","qualname":"<FeatureInfo>::model_id","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Version Information: Model\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":40828,"byte_end":40839,"line_start":1314,"line_end":1314,"column_start":12,"column_end":23},"name":"stepping_id","qualname":"<FeatureInfo>::stepping_id","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Version Information: Stepping ID\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":40932,"byte_end":40943,"line_start":1319,"line_end":1319,"column_start":12,"column_end":23},"name":"brand_index","qualname":"<FeatureInfo>::brand_index","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Brand Index\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":41083,"byte_end":41105,"line_start":1324,"line_end":1324,"column_start":12,"column_end":34},"name":"cflush_cache_line_size","qualname":"<FeatureInfo>::cflush_cache_line_size","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" CLFLUSH line size (Value ∗ 8 = cache line size in bytes)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":41203,"byte_end":41224,"line_start":1329,"line_end":1329,"column_start":12,"column_end":33},"name":"initial_local_apic_id","qualname":"<FeatureInfo>::initial_local_apic_id","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Initial APIC ID\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":41390,"byte_end":41415,"line_start":1334,"line_end":1334,"column_start":12,"column_end":37},"name":"max_logical_processor_ids","qualname":"<FeatureInfo>::max_logical_processor_ids","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Maximum number of addressable IDs for logical processors in this physical package.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":41637,"byte_end":41645,"line_start":1341,"line_end":1341,"column_start":9,"column_end":17},"name":"has_sse3","qualname":"<FeatureInfo>::has_sse3","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Streaming SIMD Extensions 3 (SSE3). A value of 1 indicates the processor supports this technology.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":41845,"byte_end":41858,"line_start":1349,"line_end":1349,"column_start":9,"column_end":22},"name":"has_pclmulqdq","qualname":"<FeatureInfo>::has_pclmulqdq","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"PCLMULQDQ. A value of 1 indicates the processor supports the PCLMULQDQ instruction\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":42070,"byte_end":42081,"line_start":1357,"line_end":1357,"column_start":9,"column_end":20},"name":"has_ds_area","qualname":"<FeatureInfo>::has_ds_area","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"64-bit DS Area. A value of 1 indicates the processor supports DS area using 64-bit layout\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":42258,"byte_end":42275,"line_start":1364,"line_end":1364,"column_start":9,"column_end":26},"name":"has_monitor_mwait","qualname":"<FeatureInfo>::has_monitor_mwait","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"MONITOR/MWAIT. A value of 1 indicates the processor supports this feature.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":42582,"byte_end":42589,"line_start":1373,"line_end":1373,"column_start":9,"column_end":16},"name":"has_cpl","qualname":"<FeatureInfo>::has_cpl","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"CPL Qualified Debug Store. A value of 1 indicates the processor supports the extensions to the  Debug Store feature to allow for branch message storage qualified by CPL.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":42803,"byte_end":42810,"line_start":1381,"line_end":1381,"column_start":9,"column_end":16},"name":"has_vmx","qualname":"<FeatureInfo>::has_vmx","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Virtual Machine Extensions. A value of 1 indicates that the processor supports this technology.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":43065,"byte_end":43072,"line_start":1389,"line_end":1389,"column_start":9,"column_end":16},"name":"has_smx","qualname":"<FeatureInfo>::has_smx","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Safer Mode Extensions. A value of 1 indicates that the processor supports this technology. See Chapter 5, Safer Mode Extensions Reference.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":43295,"byte_end":43303,"line_start":1397,"line_end":1397,"column_start":9,"column_end":17},"name":"has_eist","qualname":"<FeatureInfo>::has_eist","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Enhanced Intel SpeedStep® technology. A value of 1 indicates that the processor supports this technology.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":43510,"byte_end":43517,"line_start":1405,"line_end":1405,"column_start":9,"column_end":16},"name":"has_tm2","qualname":"<FeatureInfo>::has_tm2","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Thermal Monitor 2. A value of 1 indicates whether the processor supports this technology.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":43826,"byte_end":43835,"line_start":1414,"line_end":1414,"column_start":9,"column_end":18},"name":"has_ssse3","qualname":"<FeatureInfo>::has_ssse3","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"A value of 1 indicates the presence of the Supplemental Streaming SIMD Extensions 3 (SSSE3). A value of 0 indicates the instruction extensions are not present in the processor\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":44245,"byte_end":44255,"line_start":1424,"line_end":1424,"column_start":9,"column_end":19},"name":"has_cnxtid","qualname":"<FeatureInfo>::has_cnxtid","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"L1 Context ID. A value of 1 indicates the L1 data cache mode can be set to either adaptive mode or shared mode. A value of 0 indicates this feature is not supported. See definition of the IA32_MISC_ENABLE MSR Bit 24 (L1 Data Cache Context Mode) for details.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":44452,"byte_end":44459,"line_start":1432,"line_end":1432,"column_start":9,"column_end":16},"name":"has_fma","qualname":"<FeatureInfo>::has_fma","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"A value of 1 indicates the processor supports FMA extensions using YMM state.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":44736,"byte_end":44750,"line_start":1441,"line_end":1441,"column_start":9,"column_end":23},"name":"has_cmpxchg16b","qualname":"<FeatureInfo>::has_cmpxchg16b","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"CMPXCHG16B Available. A value of 1 indicates that the feature is available. See the CMPXCHG8B/CMPXCHG16B Compare and Exchange Bytes section. 14\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":45041,"byte_end":45049,"line_start":1450,"line_end":1450,"column_start":9,"column_end":17},"name":"has_pdcm","qualname":"<FeatureInfo>::has_pdcm","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Perfmon and Debug Capability: A value of 1 indicates the processor supports the performance   and debug feature indication MSR IA32_PERF_CAPABILITIES.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":45293,"byte_end":45301,"line_start":1458,"line_end":1458,"column_start":9,"column_end":17},"name":"has_pcid","qualname":"<FeatureInfo>::has_pcid","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Process-context identifiers. A value of 1 indicates that the processor supports PCIDs and the software may set CR4.PCIDE to 1.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":45522,"byte_end":45529,"line_start":1466,"line_end":1466,"column_start":9,"column_end":16},"name":"has_dca","qualname":"<FeatureInfo>::has_dca","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"A value of 1 indicates the processor supports the ability to prefetch data from a memory mapped device.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":45687,"byte_end":45696,"line_start":1473,"line_end":1473,"column_start":9,"column_end":18},"name":"has_sse41","qualname":"<FeatureInfo>::has_sse41","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"A value of 1 indicates that the processor supports SSE4.1.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":45856,"byte_end":45865,"line_start":1480,"line_end":1480,"column_start":9,"column_end":18},"name":"has_sse42","qualname":"<FeatureInfo>::has_sse42","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"A value of 1 indicates that the processor supports SSE4.2.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":46033,"byte_end":46043,"line_start":1487,"line_end":1487,"column_start":9,"column_end":19},"name":"has_x2apic","qualname":"<FeatureInfo>::has_x2apic","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"A value of 1 indicates that the processor supports x2APIC feature.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":46215,"byte_end":46224,"line_start":1494,"line_end":1494,"column_start":9,"column_end":18},"name":"has_movbe","qualname":"<FeatureInfo>::has_movbe","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"A value of 1 indicates that the processor supports MOVBE instruction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":46400,"byte_end":46410,"line_start":1501,"line_end":1501,"column_start":9,"column_end":19},"name":"has_popcnt","qualname":"<FeatureInfo>::has_popcnt","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"A value of 1 indicates that the processor supports the POPCNT instruction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":46645,"byte_end":46661,"line_start":1509,"line_end":1509,"column_start":9,"column_end":25},"name":"has_tsc_deadline","qualname":"<FeatureInfo>::has_tsc_deadline","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"A value of 1 indicates that the processors local APIC timer supports one-shot operation using a TSC deadline value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":46871,"byte_end":46880,"line_start":1517,"line_end":1517,"column_start":9,"column_end":18},"name":"has_aesni","qualname":"<FeatureInfo>::has_aesni","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"A value of 1 indicates that the processor supports the AESNI instruction extensions.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":47160,"byte_end":47169,"line_start":1526,"line_end":1526,"column_start":9,"column_end":18},"name":"has_xsave","qualname":"<FeatureInfo>::has_xsave","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"A value of 1 indicates that the processor supports the XSAVE/XRSTOR processor extended states feature, the XSETBV/XGETBV instructions, and XCR0.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":47466,"byte_end":47476,"line_start":1535,"line_end":1535,"column_start":9,"column_end":19},"name":"has_oxsave","qualname":"<FeatureInfo>::has_oxsave","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"A value of 1 indicates that the OS has enabled XSETBV/XGETBV instructions to access XCR0, and support for processor extended state management using XSAVE/XRSTOR.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":47674,"byte_end":47681,"line_start":1543,"line_end":1543,"column_start":9,"column_end":16},"name":"has_avx","qualname":"<FeatureInfo>::has_avx","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"A value of 1 indicates the processor supports the AVX instruction extensions.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":47891,"byte_end":47899,"line_start":1551,"line_end":1551,"column_start":9,"column_end":17},"name":"has_f16c","qualname":"<FeatureInfo>::has_f16c","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"A value of 1 indicates that processor supports 16-bit floating-point conversion instructions.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":48066,"byte_end":48076,"line_start":1558,"line_end":1558,"column_start":9,"column_end":19},"name":"has_rdrand","qualname":"<FeatureInfo>::has_rdrand","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"A value of 1 indicates that processor supports RDRAND instruction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":48242,"byte_end":48249,"line_start":1565,"line_end":1565,"column_start":9,"column_end":16},"name":"has_fpu","qualname":"<FeatureInfo>::has_fpu","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Floating Point Unit On-Chip. The processor contains an x87 FPU.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":48685,"byte_end":48692,"line_start":1575,"line_end":1575,"column_start":9,"column_end":16},"name":"has_vme","qualname":"<FeatureInfo>::has_vme","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Virtual 8086 Mode Enhancements. Virtual 8086 mode enhancements, including CR4.VME for controlling the feature, CR4.PVI for protected mode virtual interrupts, software interrupt indirection, expansion of the TSS with the software indirection bitmap, and EFLAGS.VIF and EFLAGS.VIP flags.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":48955,"byte_end":48961,"line_start":1583,"line_end":1583,"column_start":9,"column_end":15},"name":"has_de","qualname":"<FeatureInfo>::has_de","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Debugging Extensions. Support for I/O breakpoints, including CR4.DE for controlling the feature, and optional trapping of accesses to DR4 and DR5.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":49314,"byte_end":49321,"line_start":1592,"line_end":1592,"column_start":9,"column_end":16},"name":"has_pse","qualname":"<FeatureInfo>::has_pse","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Page Size Extension. Large pages of size 4 MByte are supported, including CR4.PSE for controlling the feature, the defined dirty bit in PDE (Page Directory Entries), optional reserved bit trapping in CR3, PDEs, and PTEs.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":49538,"byte_end":49545,"line_start":1600,"line_end":1600,"column_start":9,"column_end":16},"name":"has_tsc","qualname":"<FeatureInfo>::has_tsc","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Time Stamp Counter. The RDTSC instruction is supported, including CR4.TSD for controlling privilege.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":49828,"byte_end":49835,"line_start":1609,"line_end":1609,"column_start":9,"column_end":16},"name":"has_msr","qualname":"<FeatureInfo>::has_msr","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Model Specific Registers RDMSR and WRMSR Instructions. The RDMSR and WRMSR instructions are supported. Some of the MSRs are implementation dependent.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":50231,"byte_end":50238,"line_start":1619,"line_end":1619,"column_start":9,"column_end":16},"name":"has_pae","qualname":"<FeatureInfo>::has_pae","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Physical Address Extension. Physical addresses greater than 32 bits are supported: extended page table entry formats, an extra level in the page translation tables is defined, 2-MByte pages are supported instead of 4 Mbyte pages if PAE bit is 1.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":50848,"byte_end":50855,"line_start":1631,"line_end":1631,"column_start":9,"column_end":16},"name":"has_mce","qualname":"<FeatureInfo>::has_mce","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Machine Check Exception. Exception 18 is defined for Machine Checks, including CR4.MCE for controlling the feature. This feature does not define the model-specific implementations of machine-check error logging, reporting, and processor shutdowns. Machine Check exception handlers may have to depend on processor version to do model specific processing of the exception, or test for the presence of the Machine Check feature.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":51094,"byte_end":51107,"line_start":1639,"line_end":1639,"column_start":9,"column_end":22},"name":"has_cmpxchg8b","qualname":"<FeatureInfo>::has_cmpxchg8b","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"CMPXCHG8B Instruction. The compare-and-exchange 8 bytes (64 bits) instruction is supported (implicitly locked and atomic).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":51502,"byte_end":51510,"line_start":1649,"line_end":1649,"column_start":9,"column_end":17},"name":"has_apic","qualname":"<FeatureInfo>::has_apic","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"APIC On-Chip. The processor contains an Advanced Programmable Interrupt Controller (APIC), responding to memory mapped commands in the physical address range FFFE0000H to FFFE0FFFH (by default - some processors permit the APIC to be relocated).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":51722,"byte_end":51742,"line_start":1657,"line_end":1657,"column_start":9,"column_end":29},"name":"has_sysenter_sysexit","qualname":"<FeatureInfo>::has_sysenter_sysexit","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"SYSENTER and SYSEXIT Instructions. The SYSENTER and SYSEXIT and associated MSRs are supported.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":52088,"byte_end":52096,"line_start":1666,"line_end":1666,"column_start":9,"column_end":17},"name":"has_mtrr","qualname":"<FeatureInfo>::has_mtrr","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Memory Type Range Registers. MTRRs are supported. The MTRRcap MSR contains feature bits that describe what memory types are supported, how many variable MTRRs are supported, and whether fixed MTRRs are supported.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":52446,"byte_end":52453,"line_start":1675,"line_end":1675,"column_start":9,"column_end":16},"name":"has_pge","qualname":"<FeatureInfo>::has_pge","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Page Global Bit. The global bit is supported in paging-structure entries that map a page, indicating TLB entries that are common to different processes and need not be flushed. The CR4.PGE bit controls this feature.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":52830,"byte_end":52837,"line_start":1685,"line_end":1685,"column_start":9,"column_end":16},"name":"has_mca","qualname":"<FeatureInfo>::has_mca","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Machine Check Architecture. A value of 1 indicates the Machine Check Architecture of reporting machine errors is supported. The MCG_CAP MSR contains feature bits describing how many banks of error reporting MSRs are supported.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":53183,"byte_end":53191,"line_start":1694,"line_end":1694,"column_start":9,"column_end":17},"name":"has_cmov","qualname":"<FeatureInfo>::has_cmov","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Conditional Move Instructions. The conditional move instruction CMOV is supported. In addition, if x87 FPU is present as indicated by the CPUID.FPU feature bit, then the FCOMI and FCMOV instructions are supported\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":53579,"byte_end":53586,"line_start":1704,"line_end":1704,"column_start":9,"column_end":16},"name":"has_pat","qualname":"<FeatureInfo>::has_pat","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Page Attribute Table. Page Attribute Table is supported. This feature augments the Memory Type Range Registers (MTRRs), allowing an operating system to specify attributes of memory accessed through a linear address on a 4KB granularity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":54092,"byte_end":54101,"line_start":1715,"line_end":1715,"column_start":9,"column_end":18},"name":"has_pse36","qualname":"<FeatureInfo>::has_pse36","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"36-Bit Page Size Extension. 4-MByte pages addressing physical memory beyond 4 GBytes are supported with 32-bit paging. This feature indicates that upper bits of the physical address of a 4-MByte page are encoded in bits 20:13 of the page-directory entry. Such physical addresses are limited by MAXPHYADDR and may be up to 40 bits in size.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":54346,"byte_end":54353,"line_start":1723,"line_end":1723,"column_start":9,"column_end":16},"name":"has_psn","qualname":"<FeatureInfo>::has_psn","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Processor Serial Number. The processor supports the 96-bit processor identification number feature and the feature is enabled.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":54507,"byte_end":54518,"line_start":1730,"line_end":1730,"column_start":9,"column_end":20},"name":"has_clflush","qualname":"<FeatureInfo>::has_clflush","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"CLFLUSH Instruction. CLFLUSH Instruction is supported.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":55059,"byte_end":55065,"line_start":1742,"line_end":1742,"column_start":9,"column_end":15},"name":"has_ds","qualname":"<FeatureInfo>::has_ds","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Debug Store. The processor supports the ability to write debug information into a memory resident buffer. This feature is used by the branch trace store (BTS) and processor event-based sampling (PEBS) facilities (see Chapter 23, Introduction to Virtual-Machine Extensions, in the Intel® 64 and IA-32 Architectures Software Developers Manual, Volume 3C).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":55452,"byte_end":55460,"line_start":1752,"line_end":1752,"column_start":9,"column_end":17},"name":"has_acpi","qualname":"<FeatureInfo>::has_acpi","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Thermal Monitor and Software Controlled Clock Facilities. The processor implements internal MSRs that allow processor temperature to be monitored and processor performance to be modulated in predefined duty cycles under software control.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":55631,"byte_end":55638,"line_start":1759,"line_end":1759,"column_start":9,"column_end":16},"name":"has_mmx","qualname":"<FeatureInfo>::has_mmx","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Intel MMX Technology. The processor supports the Intel MMX technology.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":56100,"byte_end":56117,"line_start":1770,"line_end":1770,"column_start":9,"column_end":26},"name":"has_fxsave_fxstor","qualname":"<FeatureInfo>::has_fxsave_fxstor","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"FXSAVE and FXRSTOR Instructions. The FXSAVE and FXRSTOR instructions are supported for fast save and restore of the floating point context. Presence of this bit also indicates that CR4.OSFXSR is available for an operating system to indicate that it supports the FXSAVE and FXRSTOR instructions.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":56265,"byte_end":56272,"line_start":1777,"line_end":1777,"column_start":9,"column_end":16},"name":"has_sse","qualname":"<FeatureInfo>::has_sse","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"SSE. The processor supports the SSE extensions.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":56421,"byte_end":56429,"line_start":1784,"line_end":1784,"column_start":9,"column_end":17},"name":"has_sse2","qualname":"<FeatureInfo>::has_sse2","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"SSE2. The processor supports the SSE2 extensions.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":56726,"byte_end":56732,"line_start":1793,"line_end":1793,"column_start":9,"column_end":15},"name":"has_ss","qualname":"<FeatureInfo>::has_ss","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Self Snoop. The processor supports the management of conflicting memory types by performing a snoop of its own cache structure for transactions issued to the bus.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":57275,"byte_end":57282,"line_start":1805,"line_end":1805,"column_start":9,"column_end":16},"name":"has_htt","qualname":"<FeatureInfo>::has_htt","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Max APIC IDs reserved field is Valid. A value of 0 for HTT indicates there is only a single logical processor in the package and software should assume only a single APIC ID is reserved.  A value of 1 for HTT indicates the value in CPUID.1.EBX\\[23:16\\] (the Maximum number of addressable IDs for logical processors in this package) is valid for the package.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":57503,"byte_end":57509,"line_start":1813,"line_end":1813,"column_start":9,"column_end":15},"name":"has_tm","qualname":"<FeatureInfo>::has_tm","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Thermal Monitor. The processor implements the thermal monitor automatic thermal control circuitry (TCC).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":58026,"byte_end":58033,"line_start":1824,"line_end":1824,"column_start":9,"column_end":16},"name":"has_pbe","qualname":"<FeatureInfo>::has_pbe","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Pending Break Enable. The processor supports the use of the FERR#/PBE# pin when the processor is in the stop-clock state (STPCLK# is asserted) to signal the processor that an interrupt is pending and that the processor should return to normal operation to handle the interrupt. Bit 10 (PBE enable) in the IA32_MISC_ENABLE MSR enables this capability.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":801},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":69889,"byte_end":69908,"line_start":1960,"line_end":1960,"column_start":12,"column_end":31},"name":"CacheParametersIter","qualname":"::CacheParametersIter","value":"CacheParametersIter {  }","parent":null,"children":[{"krate":0,"index":802}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":807},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":70756,"byte_end":70770,"line_start":1992,"line_end":1992,"column_start":12,"column_end":26},"name":"CacheParameter","qualname":"::CacheParameter","value":"CacheParameter {  }","parent":null,"children":[{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":820},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":70986,"byte_end":70990,"line_start":2003,"line_end":2003,"column_start":5,"column_end":9},"name":"Null","qualname":"::CacheType::Null","value":"CacheType::Null","parent":{"krate":0,"index":819},"children":[],"decl_id":null,"docs":" Null - No more caches\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":823},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":71019,"byte_end":71023,"line_start":2005,"line_end":2005,"column_start":5,"column_end":9},"name":"Data","qualname":"::CacheType::Data","value":"CacheType::Data","parent":{"krate":0,"index":819},"children":[],"decl_id":null,"docs":" Data cache\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":825},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":71055,"byte_end":71066,"line_start":2007,"line_end":2007,"column_start":5,"column_end":16},"name":"Instruction","qualname":"::CacheType::Instruction","value":"CacheType::Instruction","parent":{"krate":0,"index":819},"children":[],"decl_id":null,"docs":" Instruction cache\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":827},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":71107,"byte_end":71114,"line_start":2009,"line_end":2009,"column_start":5,"column_end":12},"name":"Unified","qualname":"::CacheType::Unified","value":"CacheType::Unified","parent":{"krate":0,"index":819},"children":[],"decl_id":null,"docs":" Data and Instruction cache\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":829},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":71144,"byte_end":71152,"line_start":2011,"line_end":2011,"column_start":5,"column_end":13},"name":"Reserved","qualname":"::CacheType::Reserved","value":"CacheType::Reserved","parent":{"krate":0,"index":819},"children":[],"decl_id":null,"docs":" 4-31 = Reserved\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":819},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":70940,"byte_end":70949,"line_start":2001,"line_end":2001,"column_start":10,"column_end":19},"name":"CacheType","qualname":"::CacheType","value":"CacheType::{Null, Data, Instruction, Unified, Reserved}","parent":null,"children":[{"krate":0,"index":820},{"krate":0,"index":823},{"krate":0,"index":825},{"krate":0,"index":827},{"krate":0,"index":829}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":71303,"byte_end":71313,"line_start":2022,"line_end":2022,"column_start":12,"column_end":22},"name":"cache_type","qualname":"<CacheParameter>::cache_type","value":"fn (&self) -> CacheType","parent":null,"children":[],"decl_id":null,"docs":" Cache Type\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":71652,"byte_end":71657,"line_start":2034,"line_end":2034,"column_start":12,"column_end":17},"name":"level","qualname":"<CacheParameter>::level","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Cache Level (starts at 1)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":71803,"byte_end":71823,"line_start":2039,"line_end":2039,"column_start":12,"column_end":32},"name":"is_self_initializing","qualname":"<CacheParameter>::is_self_initializing","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Self Initializing cache level (does not need SW initialization).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":71929,"byte_end":71949,"line_start":2044,"line_end":2044,"column_start":12,"column_end":32},"name":"is_fully_associative","qualname":"<CacheParameter>::is_fully_associative","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Fully Associative cache\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":72107,"byte_end":72126,"line_start":2049,"line_end":2049,"column_start":12,"column_end":31},"name":"max_cores_for_cache","qualname":"<CacheParameter>::max_cores_for_cache","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Maximum number of addressable IDs for logical processors sharing this cache\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":72299,"byte_end":72320,"line_start":2054,"line_end":2054,"column_start":12,"column_end":33},"name":"max_cores_for_package","qualname":"<CacheParameter>::max_cores_for_package","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Maximum number of addressable IDs for processor cores in the physical package\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":72455,"byte_end":72474,"line_start":2059,"line_end":2059,"column_start":12,"column_end":31},"name":"coherency_line_size","qualname":"<CacheParameter>::coherency_line_size","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" System Coherency Line Size (Bits 11-00)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":72606,"byte_end":72630,"line_start":2064,"line_end":2064,"column_start":12,"column_end":36},"name":"physical_line_partitions","qualname":"<CacheParameter>::physical_line_partitions","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Physical Line partitions (Bits 21-12)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":72760,"byte_end":72773,"line_start":2069,"line_end":2069,"column_start":12,"column_end":25},"name":"associativity","qualname":"<CacheParameter>::associativity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Ways of associativity (Bits 31-22)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":72896,"byte_end":72900,"line_start":2074,"line_end":2074,"column_start":12,"column_end":16},"name":"sets","qualname":"<CacheParameter>::sets","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Number of Sets (Bits 31-00)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":73260,"byte_end":73284,"line_start":2081,"line_end":2081,"column_start":12,"column_end":36},"name":"is_write_back_invalidate","qualname":"<CacheParameter>::is_write_back_invalidate","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Write-Back Invalidate/Invalidate (Bit 0)\n False: WBINVD/INVD from threads sharing this cache acts upon lower level caches for threads sharing this cache.\n True: WBINVD/INVD is not guaranteed to act upon lower level caches of non-originating threads sharing this cache.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":73511,"byte_end":73523,"line_start":2088,"line_end":2088,"column_start":12,"column_end":24},"name":"is_inclusive","qualname":"<CacheParameter>::is_inclusive","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Cache Inclusiveness (Bit 1)\n False: Cache is not inclusive of lower cache levels.\n True: Cache is inclusive of lower cache levels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":73769,"byte_end":73789,"line_start":2095,"line_end":2095,"column_start":12,"column_end":32},"name":"has_complex_indexing","qualname":"<CacheParameter>::has_complex_indexing","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Complex Cache Indexing (Bit 2)\n False: Direct mapped cache.\n True: A complex function is used to index the cache, potentially using all address bits.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":839},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":73958,"byte_end":73974,"line_start":2102,"line_end":2102,"column_start":12,"column_end":28},"name":"MonitorMwaitInfo","qualname":"::MonitorMwaitInfo","value":"MonitorMwaitInfo {  }","parent":null,"children":[{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":843}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":74160,"byte_end":74181,"line_start":2111,"line_end":2111,"column_start":12,"column_end":33},"name":"smallest_monitor_line","qualname":"<MonitorMwaitInfo>::smallest_monitor_line","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Smallest monitor-line size in bytes (default is processor's monitor granularity)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":74344,"byte_end":74364,"line_start":2116,"line_end":2116,"column_start":12,"column_end":32},"name":"largest_monitor_line","qualname":"<MonitorMwaitInfo>::largest_monitor_line","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Largest monitor-line size in bytes (default is processor's monitor granularity\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":74530,"byte_end":74550,"line_start":2121,"line_end":2121,"column_start":12,"column_end":32},"name":"extensions_supported","qualname":"<MonitorMwaitInfo>::extensions_supported","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"  Enumeration of Monitor-Mwait extensions (beyond EAX and EBX registers) supported\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":74718,"byte_end":74743,"line_start":2126,"line_end":2126,"column_start":12,"column_end":37},"name":"interrupts_as_break_event","qualname":"<MonitorMwaitInfo>::interrupts_as_break_event","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"  Supports treating interrupts as break-event for MWAIT, even when interrupts disabled\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":74888,"byte_end":74907,"line_start":2131,"line_end":2131,"column_start":12,"column_end":31},"name":"supported_c0_states","qualname":"<MonitorMwaitInfo>::supported_c0_states","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Number of C0 sub C-states supported using MWAIT (Bits 03 - 00)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":75053,"byte_end":75072,"line_start":2136,"line_end":2136,"column_start":12,"column_end":31},"name":"supported_c1_states","qualname":"<MonitorMwaitInfo>::supported_c1_states","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Number of C1 sub C-states supported using MWAIT (Bits 07 - 04)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":75218,"byte_end":75237,"line_start":2141,"line_end":2141,"column_start":12,"column_end":31},"name":"supported_c2_states","qualname":"<MonitorMwaitInfo>::supported_c2_states","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Number of C2 sub C-states supported using MWAIT (Bits 11 - 08)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":75384,"byte_end":75403,"line_start":2146,"line_end":2146,"column_start":12,"column_end":31},"name":"supported_c3_states","qualname":"<MonitorMwaitInfo>::supported_c3_states","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Number of C3 sub C-states supported using MWAIT (Bits 15 - 12)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":75551,"byte_end":75570,"line_start":2151,"line_end":2151,"column_start":12,"column_end":31},"name":"supported_c4_states","qualname":"<MonitorMwaitInfo>::supported_c4_states","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Number of C4 sub C-states supported using MWAIT (Bits 19 - 16)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":75718,"byte_end":75737,"line_start":2156,"line_end":2156,"column_start":12,"column_end":31},"name":"supported_c5_states","qualname":"<MonitorMwaitInfo>::supported_c5_states","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Number of C5 sub C-states supported using MWAIT (Bits 23 - 20)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":75885,"byte_end":75904,"line_start":2161,"line_end":2161,"column_start":12,"column_end":31},"name":"supported_c6_states","qualname":"<MonitorMwaitInfo>::supported_c6_states","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Number of C6 sub C-states supported using MWAIT (Bits 27 - 24)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":76052,"byte_end":76071,"line_start":2166,"line_end":2166,"column_start":12,"column_end":31},"name":"supported_c7_states","qualname":"<MonitorMwaitInfo>::supported_c7_states","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Number of C7 sub C-states supported using MWAIT (Bits 31 - 28)\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":848},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":76243,"byte_end":76259,"line_start":2173,"line_end":2173,"column_start":12,"column_end":28},"name":"ThermalPowerInfo","qualname":"::ThermalPowerInfo","value":"ThermalPowerInfo {  }","parent":null,"children":[{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":76461,"byte_end":76478,"line_start":2182,"line_end":2182,"column_start":12,"column_end":29},"name":"dts_irq_threshold","qualname":"<ThermalPowerInfo>::dts_irq_threshold","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Number of Interrupt Thresholds in Digital Thermal Sensor\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":76630,"byte_end":76637,"line_start":2188,"line_end":2188,"column_start":9,"column_end":16},"name":"has_dts","qualname":"<ThermalPowerInfo>::has_dts","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Digital temperature sensor is supported if set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":76842,"byte_end":76857,"line_start":2196,"line_end":2196,"column_start":9,"column_end":24},"name":"has_turbo_boost","qualname":"<ThermalPowerInfo>::has_turbo_boost","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Intel Turbo Boost Technology Available (see description of IA32_MISC_ENABLE\\[38\\]).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":77028,"byte_end":77036,"line_start":2203,"line_end":2203,"column_start":9,"column_end":17},"name":"has_arat","qualname":"<ThermalPowerInfo>::has_arat","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"ARAT. APIC-Timer-always-running feature is supported if set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":77200,"byte_end":77207,"line_start":2210,"line_end":2210,"column_start":9,"column_end":16},"name":"has_pln","qualname":"<ThermalPowerInfo>::has_pln","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"PLN. Power limit notification controls are supported if set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":77374,"byte_end":77382,"line_start":2217,"line_end":2217,"column_start":9,"column_end":17},"name":"has_ecmd","qualname":"<ThermalPowerInfo>::has_ecmd","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"ECMD. Clock modulation duty cycle extension is supported if set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":77538,"byte_end":77545,"line_start":2224,"line_end":2224,"column_start":9,"column_end":16},"name":"has_ptm","qualname":"<ThermalPowerInfo>::has_ptm","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"PTM. Package thermal management is supported if set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":77792,"byte_end":77799,"line_start":2232,"line_end":2232,"column_start":9,"column_end":16},"name":"has_hwp","qualname":"<ThermalPowerInfo>::has_hwp","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"HWP. HWP base registers (IA32_PM_ENABLE[bit 0], IA32_HWP_CAPABILITIES, IA32_HWP_REQUEST, IA32_HWP_STATUS) are supported if set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":77963,"byte_end":77983,"line_start":2239,"line_end":2239,"column_start":9,"column_end":29},"name":"has_hwp_notification","qualname":"<ThermalPowerInfo>::has_hwp_notification","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"HWP Notification. IA32_HWP_INTERRUPT MSR is supported if set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":78169,"byte_end":78192,"line_start":2246,"line_end":2246,"column_start":9,"column_end":32},"name":"has_hwp_activity_window","qualname":"<ThermalPowerInfo>::has_hwp_activity_window","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"HWP Activity Window. IA32_HWP_REQUEST[bits 41:32] is supported if set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":78407,"byte_end":78444,"line_start":2254,"line_end":2254,"column_start":9,"column_end":46},"name":"has_hwp_energy_performance_preference","qualname":"<ThermalPowerInfo>::has_hwp_energy_performance_preference","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"HWP Energy Performance Preference. IA32_HWP_REQUEST[bits 31:24] is supported if set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":78649,"byte_end":78678,"line_start":2261,"line_end":2261,"column_start":9,"column_end":38},"name":"has_hwp_package_level_request","qualname":"<ThermalPowerInfo>::has_hwp_package_level_request","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"HWP Package Level Request. IA32_HWP_REQUEST_PKG MSR is supported if set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":868},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":78920,"byte_end":78927,"line_start":2269,"line_end":2269,"column_start":9,"column_end":16},"name":"has_hdc","qualname":"<ThermalPowerInfo>::has_hdc","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"HDC. HDC base registers IA32_PKG_HDC_CTL, IA32_PM_CTL1, IA32_THREAD_STALL MSRs are supported if set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":79079,"byte_end":79095,"line_start":2276,"line_end":2276,"column_start":9,"column_end":25},"name":"has_turbo_boost3","qualname":"<ThermalPowerInfo>::has_turbo_boost3","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Intel® Turbo Boost Max Technology 3.0 available.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":79273,"byte_end":79293,"line_start":2283,"line_end":2283,"column_start":9,"column_end":29},"name":"has_hwp_capabilities","qualname":"<ThermalPowerInfo>::has_hwp_capabilities","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"HWP Capabilities. Highest Performance change is supported if set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":79447,"byte_end":79468,"line_start":2290,"line_end":2290,"column_start":9,"column_end":30},"name":"has_hwp_peci_override","qualname":"<ThermalPowerInfo>::has_hwp_peci_override","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"HWP PECI override is supported if set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":79618,"byte_end":79634,"line_start":2297,"line_end":2297,"column_start":9,"column_end":25},"name":"has_flexible_hwp","qualname":"<ThermalPowerInfo>::has_flexible_hwp","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Flexible HWP is supported if set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":79812,"byte_end":79836,"line_start":2304,"line_end":2304,"column_start":9,"column_end":33},"name":"has_hwp_fast_access_mode","qualname":"<ThermalPowerInfo>::has_hwp_fast_access_mode","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Fast access mode for the IA32_HWP_REQUEST MSR is supported if set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":80027,"byte_end":80064,"line_start":2311,"line_end":2311,"column_start":9,"column_end":46},"name":"has_ignore_idle_processor_hwp_request","qualname":"<ThermalPowerInfo>::has_ignore_idle_processor_hwp_request","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Ignoring Idle Logical Processor HWP request is supported if set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":80562,"byte_end":80583,"line_start":2322,"line_end":2322,"column_start":9,"column_end":30},"name":"has_hw_coord_feedback","qualname":"<ThermalPowerInfo>::has_hw_coord_feedback","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Hardware Coordination Feedback Capability (Presence of IA32_MPERF and IA32_APERF). The capability to provide a measure of delivered processor performance (since last reset of the counters), as a percentage of expected processor performance at frequency specified in CPUID Brand String Bits 02 - 01\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":80924,"byte_end":80944,"line_start":2331,"line_end":2331,"column_start":9,"column_end":29},"name":"has_energy_bias_pref","qualname":"<ThermalPowerInfo>::has_energy_bias_pref","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"The processor supports performance-energy bias preference if CPUID.06H:ECX.SETBH[bit 3] is set and it also implies the presence of a new architectural MSR called IA32_ENERGY_PERF_BIAS (1B0H)\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1158},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":84547,"byte_end":84563,"line_start":2401,"line_end":2401,"column_start":12,"column_end":28},"name":"ExtendedFeatures","qualname":"::ExtendedFeatures","value":"ExtendedFeatures {  }","parent":null,"children":[{"krate":0,"index":1159},{"krate":0,"index":1160},{"krate":0,"index":1161},{"krate":0,"index":1162}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":84784,"byte_end":84796,"line_start":2411,"line_end":2411,"column_start":9,"column_end":21},"name":"has_fsgsbase","qualname":"<ExtendedFeatures>::has_fsgsbase","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"FSGSBASE. Supports RDFSBASE/RDGSBASE/WRFSBASE/WRGSBASE if 1.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1168},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":84938,"byte_end":84956,"line_start":2418,"line_end":2418,"column_start":9,"column_end":27},"name":"has_tsc_adjust_msr","qualname":"<ExtendedFeatures>::has_tsc_adjust_msr","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"IA32_TSC_ADJUST MSR is supported if 1.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":85049,"byte_end":85057,"line_start":2423,"line_end":2423,"column_start":31,"column_end":39},"name":"has_bmi1","qualname":"<ExtendedFeatures>::has_bmi1","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"BMI1\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":85122,"byte_end":85129,"line_start":2425,"line_end":2425,"column_start":30,"column_end":37},"name":"has_hle","qualname":"<ExtendedFeatures>::has_hle","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"HLE\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1171},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":85194,"byte_end":85202,"line_start":2427,"line_end":2427,"column_start":31,"column_end":39},"name":"has_avx2","qualname":"<ExtendedFeatures>::has_avx2","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"AVX2\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1172},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":85355,"byte_end":85362,"line_start":2431,"line_end":2431,"column_start":9,"column_end":16},"name":"has_fdp","qualname":"<ExtendedFeatures>::has_fdp","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"FDP_EXCPTN_ONLY. x87 FPU Data Pointer updated only on x87 exceptions if 1.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1173},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":85518,"byte_end":85526,"line_start":2438,"line_end":2438,"column_start":9,"column_end":17},"name":"has_smep","qualname":"<ExtendedFeatures>::has_smep","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"SMEP. Supports Supervisor-Mode Execution Prevention if 1.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1174},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":85613,"byte_end":85621,"line_start":2443,"line_end":2443,"column_start":31,"column_end":39},"name":"has_bmi2","qualname":"<ExtendedFeatures>::has_bmi2","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"BMI2\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1175},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":85739,"byte_end":85758,"line_start":2447,"line_end":2447,"column_start":9,"column_end":28},"name":"has_rep_movsb_stosb","qualname":"<ExtendedFeatures>::has_rep_movsb_stosb","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Supports Enhanced REP MOVSB/STOSB if 1.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1176},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":85991,"byte_end":86002,"line_start":2455,"line_end":2455,"column_start":9,"column_end":20},"name":"has_invpcid","qualname":"<ExtendedFeatures>::has_invpcid","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"INVPCID. If 1, supports INVPCID instruction for system software that manages process-context identifiers.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1177},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":86091,"byte_end":86098,"line_start":2460,"line_end":2460,"column_start":30,"column_end":37},"name":"has_rtm","qualname":"<ExtendedFeatures>::has_rtm","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"RTM\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1178},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":86248,"byte_end":86256,"line_start":2464,"line_end":2464,"column_start":9,"column_end":17},"name":"has_rdtm","qualname":"<ExtendedFeatures>::has_rdtm","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Supports Intel Resource Director Technology (RDT) Monitoring capability.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1179},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":86397,"byte_end":86421,"line_start":2471,"line_end":2471,"column_start":9,"column_end":33},"name":"has_fpu_cs_ds_deprecated","qualname":"<ExtendedFeatures>::has_fpu_cs_ds_deprecated","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Deprecates FPU CS and FPU DS values if 1.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1180},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":86590,"byte_end":86597,"line_start":2478,"line_end":2478,"column_start":9,"column_end":16},"name":"has_mpx","qualname":"<ExtendedFeatures>::has_mpx","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"MPX. Supports Intel Memory Protection Extensions if 1.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1181},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":86768,"byte_end":86776,"line_start":2485,"line_end":2485,"column_start":9,"column_end":17},"name":"has_rdta","qualname":"<ExtendedFeatures>::has_rdta","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Supports Intel Resource Director Technology (RDT) Allocation capability.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1182},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":86892,"byte_end":86902,"line_start":2492,"line_end":2492,"column_start":9,"column_end":19},"name":"has_rdseed","qualname":"<ExtendedFeatures>::has_rdseed","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Supports RDSEED.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1183},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":87175,"byte_end":87185,"line_start":2503,"line_end":2503,"column_start":9,"column_end":19},"name":"has_rdseet","qualname":"<ExtendedFeatures>::has_rdseet","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Supports RDSEED (deprecated alias).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1184},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":87300,"byte_end":87307,"line_start":2510,"line_end":2510,"column_start":9,"column_end":16},"name":"has_adx","qualname":"<ExtendedFeatures>::has_adx","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Supports ADX.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1185},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":87492,"byte_end":87500,"line_start":2516,"line_end":2516,"column_start":17,"column_end":25},"name":"has_smap","qualname":"<ExtendedFeatures>::has_smap","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"SMAP. Supports Supervisor-Mode Access Prevention (and the CLAC/STAC instructions) if 1.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1186},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":87631,"byte_end":87645,"line_start":2522,"line_end":2522,"column_start":9,"column_end":23},"name":"has_clflushopt","qualname":"<ExtendedFeatures>::has_clflushopt","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Supports CLFLUSHOPT.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1187},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":87782,"byte_end":87801,"line_start":2529,"line_end":2529,"column_start":9,"column_end":28},"name":"has_processor_trace","qualname":"<ExtendedFeatures>::has_processor_trace","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Supports Intel Processor Trace.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1188},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":87938,"byte_end":87945,"line_start":2536,"line_end":2536,"column_start":9,"column_end":16},"name":"has_sha","qualname":"<ExtendedFeatures>::has_sha","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Supports SHA Instructions.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1189},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":88112,"byte_end":88119,"line_start":2543,"line_end":2543,"column_start":9,"column_end":16},"name":"has_sgx","qualname":"<ExtendedFeatures>::has_sgx","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Supports Intel® Software Guard Extensions (Intel® SGX Extensions).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1190},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":88235,"byte_end":88246,"line_start":2550,"line_end":2550,"column_start":9,"column_end":20},"name":"has_avx512f","qualname":"<ExtendedFeatures>::has_avx512f","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Supports AVX512F.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1191},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":88367,"byte_end":88379,"line_start":2557,"line_end":2557,"column_start":9,"column_end":21},"name":"has_avx512dq","qualname":"<ExtendedFeatures>::has_avx512dq","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Supports AVX512DQ.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1192},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":88494,"byte_end":88509,"line_start":2564,"line_end":2564,"column_start":9,"column_end":24},"name":"has_avx512_ifma","qualname":"<ExtendedFeatures>::has_avx512_ifma","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"AVX512_IFMA\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1193},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":88624,"byte_end":88636,"line_start":2571,"line_end":2571,"column_start":9,"column_end":21},"name":"has_avx512pf","qualname":"<ExtendedFeatures>::has_avx512pf","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"AVX512PF\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1194},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":88747,"byte_end":88759,"line_start":2577,"line_end":2577,"column_start":9,"column_end":21},"name":"has_avx512er","qualname":"<ExtendedFeatures>::has_avx512er","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"AVX512ER\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1195},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":88871,"byte_end":88883,"line_start":2584,"line_end":2584,"column_start":9,"column_end":21},"name":"has_avx512cd","qualname":"<ExtendedFeatures>::has_avx512cd","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"AVX512CD\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1196},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":88995,"byte_end":89007,"line_start":2591,"line_end":2591,"column_start":9,"column_end":21},"name":"has_avx512bw","qualname":"<ExtendedFeatures>::has_avx512bw","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"AVX512BW\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1197},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":89119,"byte_end":89131,"line_start":2598,"line_end":2598,"column_start":9,"column_end":21},"name":"has_avx512vl","qualname":"<ExtendedFeatures>::has_avx512vl","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"AVX512VL\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1198},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":89222,"byte_end":89230,"line_start":2603,"line_end":2603,"column_start":31,"column_end":39},"name":"has_clwb","qualname":"<ExtendedFeatures>::has_clwb","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"CLWB\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1199},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":89352,"byte_end":89367,"line_start":2607,"line_end":2607,"column_start":9,"column_end":24},"name":"has_prefetchwt1","qualname":"<ExtendedFeatures>::has_prefetchwt1","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Has PREFETCHWT1 (Intel® Xeon Phi™ only).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1200},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":89521,"byte_end":89529,"line_start":2614,"line_end":2614,"column_start":9,"column_end":17},"name":"has_umip","qualname":"<ExtendedFeatures>::has_umip","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Supports user-mode instruction prevention if 1.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1201},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":89674,"byte_end":89681,"line_start":2621,"line_end":2621,"column_start":9,"column_end":16},"name":"has_pku","qualname":"<ExtendedFeatures>::has_pku","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Supports protection keys for user-mode pages.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1202},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":89861,"byte_end":89870,"line_start":2628,"line_end":2628,"column_start":9,"column_end":18},"name":"has_ospke","qualname":"<ExtendedFeatures>::has_ospke","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"OS has set CR4.PKE to enable protection keys (and the RDPKRU/WRPKRU instructions.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1203},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":90008,"byte_end":90017,"line_start":2635,"line_end":2635,"column_start":9,"column_end":18},"name":"has_rdpid","qualname":"<ExtendedFeatures>::has_rdpid","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"RDPID and IA32_TSC_AUX are available.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1204},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":90152,"byte_end":90162,"line_start":2642,"line_end":2642,"column_start":9,"column_end":19},"name":"has_sgx_lc","qualname":"<ExtendedFeatures>::has_sgx_lc","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Supports SGX Launch Configuration.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":90318,"byte_end":90329,"line_start":2648,"line_end":2648,"column_start":12,"column_end":23},"name":"mawau_value","qualname":"<ExtendedFeatures>::mawau_value","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The value of MAWAU used by the BNDLDX and BNDSTX instructions in 64-bit mode.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1561},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":94360,"byte_end":94381,"line_start":2758,"line_end":2758,"column_start":12,"column_end":33},"name":"DirectCacheAccessInfo","qualname":"::DirectCacheAccessInfo","value":"DirectCacheAccessInfo {  }","parent":null,"children":[{"krate":0,"index":1562}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":94516,"byte_end":94533,"line_start":2764,"line_end":2764,"column_start":12,"column_end":29},"name":"get_dca_cap_value","qualname":"<DirectCacheAccessInfo>::get_dca_cap_value","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Value of bits \\[31:0\\] of IA32_PLATFORM_DCA_CAP MSR (address 1F8H)\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1567},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":94680,"byte_end":94705,"line_start":2771,"line_end":2771,"column_start":12,"column_end":37},"name":"PerformanceMonitoringInfo","qualname":"::PerformanceMonitoringInfo","value":"PerformanceMonitoringInfo {  }","parent":null,"children":[{"krate":0,"index":1568},{"krate":0,"index":1569},{"krate":0,"index":1570},{"krate":0,"index":1571}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":94915,"byte_end":94925,"line_start":2780,"line_end":2780,"column_start":12,"column_end":22},"name":"version_id","qualname":"<PerformanceMonitoringInfo>::version_id","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Version ID of architectural performance monitoring. (Bits 07 - 00)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":95100,"byte_end":95118,"line_start":2785,"line_end":2785,"column_start":12,"column_end":30},"name":"number_of_counters","qualname":"<PerformanceMonitoringInfo>::number_of_counters","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Number of general-purpose performance monitoring counter per logical processor. (Bits 15- 08)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":95277,"byte_end":95294,"line_start":2790,"line_end":2790,"column_start":12,"column_end":29},"name":"counter_bit_width","qualname":"<PerformanceMonitoringInfo>::counter_bit_width","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Bit width of general-purpose, performance monitoring counter. (Bits 23 - 16)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":95475,"byte_end":95485,"line_start":2795,"line_end":2795,"column_start":12,"column_end":22},"name":"ebx_length","qualname":"<PerformanceMonitoringInfo>::ebx_length","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Length of EBX bit vector to enumerate architectural performance monitoring events. (Bits 31 - 24)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":95650,"byte_end":95673,"line_start":2800,"line_end":2800,"column_start":12,"column_end":35},"name":"fixed_function_counters","qualname":"<PerformanceMonitoringInfo>::fixed_function_counters","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Number of fixed-function performance counters (if Version ID > 1). (Bits 04 - 00)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":95838,"byte_end":95871,"line_start":2805,"line_end":2805,"column_start":12,"column_end":45},"name":"fixed_function_counters_bit_width","qualname":"<PerformanceMonitoringInfo>::fixed_function_counters_bit_width","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Bit width of fixed-function performance counters (if Version ID > 1). (Bits 12- 05)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1576},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":96000,"byte_end":96026,"line_start":2811,"line_end":2811,"column_start":9,"column_end":35},"name":"has_any_thread_deprecation","qualname":"<PerformanceMonitoringInfo>::has_any_thread_deprecation","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"AnyThread deprecation\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1577},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":96139,"byte_end":96165,"line_start":2818,"line_end":2818,"column_start":9,"column_end":35},"name":"is_core_cyc_ev_unavailable","qualname":"<PerformanceMonitoringInfo>::is_core_cyc_ev_unavailable","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Core cycle event not available if 1.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1578},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":96342,"byte_end":96368,"line_start":2825,"line_end":2825,"column_start":9,"column_end":35},"name":"is_inst_ret_ev_unavailable","qualname":"<PerformanceMonitoringInfo>::is_inst_ret_ev_unavailable","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Instruction retired event not available if 1.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1579},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":96542,"byte_end":96569,"line_start":2832,"line_end":2832,"column_start":9,"column_end":36},"name":"is_ref_cycle_ev_unavailable","qualname":"<PerformanceMonitoringInfo>::is_ref_cycle_ev_unavailable","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Reference cycles event not available if 1.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1580},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":96752,"byte_end":96779,"line_start":2839,"line_end":2839,"column_start":9,"column_end":36},"name":"is_cache_ref_ev_unavailable","qualname":"<PerformanceMonitoringInfo>::is_cache_ref_ev_unavailable","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Last-level cache reference event not available if 1.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1581},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":96961,"byte_end":96992,"line_start":2846,"line_end":2846,"column_start":9,"column_end":40},"name":"is_ll_cache_miss_ev_unavailable","qualname":"<PerformanceMonitoringInfo>::is_ll_cache_miss_ev_unavailable","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Last-level cache misses event not available if 1.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1582},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":97181,"byte_end":97214,"line_start":2853,"line_end":2853,"column_start":9,"column_end":42},"name":"is_branch_inst_ret_ev_unavailable","qualname":"<PerformanceMonitoringInfo>::is_branch_inst_ret_ev_unavailable","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Branch instruction retired event not available if 1.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1583},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":97404,"byte_end":97436,"line_start":2860,"line_end":2860,"column_start":9,"column_end":41},"name":"is_branch_midpred_ev_unavailable","qualname":"<PerformanceMonitoringInfo>::is_branch_midpred_ev_unavailable","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Branch mispredict retired event not available if 1.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1702},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":98755,"byte_end":98775,"line_start":2891,"line_end":2891,"column_start":12,"column_end":32},"name":"ExtendedTopologyIter","qualname":"::ExtendedTopologyIter","value":"ExtendedTopologyIter {  }","parent":null,"children":[{"krate":0,"index":1703}],"decl_id":null,"docs":" Iterates over the system topology in order to retrieve more\n system information at each level of the topology.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1708},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":99003,"byte_end":99024,"line_start":2899,"line_end":2899,"column_start":12,"column_end":33},"name":"ExtendedTopologyLevel","qualname":"::ExtendedTopologyLevel","value":"ExtendedTopologyLevel {  }","parent":null,"children":[{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1711},{"krate":0,"index":1712}],"decl_id":null,"docs":" Gives detailed information about the current level in the topology\n (how many cores, what type etc.).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":99694,"byte_end":99704,"line_start":2921,"line_end":2921,"column_start":12,"column_end":22},"name":"processors","qualname":"<ExtendedTopologyLevel>::processors","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Number of logical processors at this level type.\n The number reflects configuration as shipped.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":99802,"byte_end":99814,"line_start":2926,"line_end":2926,"column_start":12,"column_end":24},"name":"level_number","qualname":"<ExtendedTopologyLevel>::level_number","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Level number.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":99906,"byte_end":99916,"line_start":2931,"line_end":2931,"column_start":12,"column_end":22},"name":"level_type","qualname":"<ExtendedTopologyLevel>::level_type","value":"fn (&self) -> TopologyType","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":100220,"byte_end":100229,"line_start":2941,"line_end":2941,"column_start":12,"column_end":21},"name":"x2apic_id","qualname":"<ExtendedTopologyLevel>::x2apic_id","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" x2APIC ID the current logical processor. (Bits 31-00)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":100477,"byte_end":100505,"line_start":2947,"line_end":2947,"column_start":12,"column_end":40},"name":"shift_right_for_next_apic_id","qualname":"<ExtendedTopologyLevel>::shift_right_for_next_apic_id","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Number of bits to shift right on x2APIC ID to get a unique topology ID of the next level type. (Bits 04-00)\n All logical processors with the same next level ID share current level.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1716},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":100781,"byte_end":100788,"line_start":2956,"line_end":2956,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::TopologyType::Invalid","value":"TopologyType::Invalid","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1719},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":100849,"byte_end":100852,"line_start":2958,"line_end":2958,"column_start":5,"column_end":8},"name":"SMT","qualname":"::TopologyType::SMT","value":"TopologyType::SMT","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":" Hyper-thread (Simultaneous multithreading)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1722},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":100862,"byte_end":100866,"line_start":2959,"line_end":2959,"column_start":5,"column_end":9},"name":"Core","qualname":"::TopologyType::Core","value":"TopologyType::Core","parent":{"krate":0,"index":1715},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1715},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":100762,"byte_end":100774,"line_start":2955,"line_end":2955,"column_start":10,"column_end":22},"name":"TopologyType","qualname":"::TopologyType","value":"TopologyType::{Invalid, SMT, Core}","parent":null,"children":[{"krate":0,"index":1716},{"krate":0,"index":1719},{"krate":0,"index":1722}],"decl_id":null,"docs":" What type of core we have at this level in the topology (real CPU or hyper-threaded).\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1959},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":102782,"byte_end":102799,"line_start":3039,"line_end":3039,"column_start":12,"column_end":29},"name":"ExtendedStateInfo","qualname":"::ExtendedStateInfo","value":"ExtendedStateInfo {  }","parent":null,"children":[{"krate":0,"index":1960},{"krate":0,"index":1961},{"krate":0,"index":1962},{"krate":0,"index":1963},{"krate":0,"index":1964},{"krate":0,"index":1965},{"krate":0,"index":1966},{"krate":0,"index":1967}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1972},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":103065,"byte_end":103089,"line_start":3053,"line_end":3053,"column_start":9,"column_end":33},"name":"xcr0_supports_legacy_x87","qualname":"<ExtendedStateInfo>::xcr0_supports_legacy_x87","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Support for legacy x87 in XCR0.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1973},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":103234,"byte_end":103255,"line_start":3060,"line_end":3060,"column_start":9,"column_end":30},"name":"xcr0_supports_sse_128","qualname":"<ExtendedStateInfo>::xcr0_supports_sse_128","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Support for SSE 128-bit in XCR0.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1974},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":103396,"byte_end":103417,"line_start":3067,"line_end":3067,"column_start":9,"column_end":30},"name":"xcr0_supports_avx_256","qualname":"<ExtendedStateInfo>::xcr0_supports_avx_256","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Support for AVX 256-bit in XCR0.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1975},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":103558,"byte_end":103583,"line_start":3074,"line_end":3074,"column_start":9,"column_end":34},"name":"xcr0_supports_mpx_bndregs","qualname":"<ExtendedStateInfo>::xcr0_supports_mpx_bndregs","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Support for MPX BNDREGS in XCR0.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1976},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":103728,"byte_end":103752,"line_start":3081,"line_end":3081,"column_start":9,"column_end":33},"name":"xcr0_supports_mpx_bndcsr","qualname":"<ExtendedStateInfo>::xcr0_supports_mpx_bndcsr","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Support for MPX BNDCSR in XCR0.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1977},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":103899,"byte_end":103926,"line_start":3088,"line_end":3088,"column_start":9,"column_end":36},"name":"xcr0_supports_avx512_opmask","qualname":"<ExtendedStateInfo>::xcr0_supports_avx512_opmask","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Support for AVX512 OPMASK in XCR0.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1978},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":104076,"byte_end":104106,"line_start":3095,"line_end":3095,"column_start":9,"column_end":39},"name":"xcr0_supports_avx512_zmm_hi256","qualname":"<ExtendedStateInfo>::xcr0_supports_avx512_zmm_hi256","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Support for AVX512 ZMM Hi256 XCR0.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1979},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":104261,"byte_end":104290,"line_start":3102,"line_end":3102,"column_start":9,"column_end":38},"name":"xcr0_supports_avx512_zmm_hi16","qualname":"<ExtendedStateInfo>::xcr0_supports_avx512_zmm_hi16","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Support for AVX512 ZMM Hi16 in XCR0.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1980},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":104433,"byte_end":104451,"line_start":3109,"line_end":3109,"column_start":9,"column_end":27},"name":"xcr0_supports_pkru","qualname":"<ExtendedStateInfo>::xcr0_supports_pkru","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Support for PKRU in XCR0.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1981},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":104585,"byte_end":104605,"line_start":3116,"line_end":3116,"column_start":9,"column_end":29},"name":"ia32_xss_supports_pt","qualname":"<ExtendedStateInfo>::ia32_xss_supports_pt","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Support for PT in IA32_XSS.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1982},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":104738,"byte_end":104759,"line_start":3123,"line_end":3123,"column_start":9,"column_end":30},"name":"ia32_xss_supports_hdc","qualname":"<ExtendedStateInfo>::ia32_xss_supports_hdc","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Support for HDC in IA32_XSS.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":105060,"byte_end":105092,"line_start":3131,"line_end":3131,"column_start":12,"column_end":44},"name":"xsave_area_size_enabled_features","qualname":"<ExtendedStateInfo>::xsave_area_size_enabled_features","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Maximum size (bytes, from the beginning of the XSAVE/XRSTOR save area) required by\n enabled features in XCR0. May be different than ECX if some features at the end of the XSAVE save area\n are not enabled.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":105360,"byte_end":105394,"line_start":3138,"line_end":3138,"column_start":12,"column_end":46},"name":"xsave_area_size_supported_features","qualname":"<ExtendedStateInfo>::xsave_area_size_supported_features","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Maximum size (bytes, from the beginning of the XSAVE/XRSTOR save area) of the\n XSAVE/XRSTOR save area required by all supported features in the processor,\n i.e all the valid bit fields in XCR0.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":105480,"byte_end":105492,"line_start":3143,"line_end":3143,"column_start":12,"column_end":24},"name":"has_xsaveopt","qualname":"<ExtendedStateInfo>::has_xsaveopt","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" CPU has xsaveopt feature.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":105621,"byte_end":105631,"line_start":3148,"line_end":3148,"column_start":12,"column_end":22},"name":"has_xsavec","qualname":"<ExtendedStateInfo>::has_xsavec","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Supports XSAVEC and the compacted form of XRSTOR if set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":105741,"byte_end":105751,"line_start":3153,"line_end":3153,"column_start":12,"column_end":22},"name":"has_xgetbv","qualname":"<ExtendedStateInfo>::has_xgetbv","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Supports XGETBV with ECX = 1 if set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":105870,"byte_end":105888,"line_start":3158,"line_end":3158,"column_start":12,"column_end":30},"name":"has_xsaves_xrstors","qualname":"<ExtendedStateInfo>::has_xsaves_xrstors","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Supports XSAVES/XRSTORS and IA32_XSS if set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":106049,"byte_end":106059,"line_start":3163,"line_end":3163,"column_start":12,"column_end":22},"name":"xsave_size","qualname":"<ExtendedStateInfo>::xsave_size","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The size in bytes of the XSAVE area containing all states enabled by XCRO | IA32_XSS.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":106174,"byte_end":106178,"line_start":3168,"line_end":3168,"column_start":12,"column_end":16},"name":"iter","qualname":"<ExtendedStateInfo>::iter","value":"fn (&self) -> ExtendedStateIter","parent":null,"children":[],"decl_id":null,"docs":" Iterator over extended state enumeration levels >= 2.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1983},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":106472,"byte_end":106489,"line_start":3179,"line_end":3179,"column_start":12,"column_end":29},"name":"ExtendedStateIter","qualname":"::ExtendedStateIter","value":"ExtendedStateIter {  }","parent":null,"children":[{"krate":0,"index":1984},{"krate":0,"index":1985},{"krate":0,"index":1986}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1991},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":107943,"byte_end":107956,"line_start":3222,"line_end":3222,"column_start":12,"column_end":25},"name":"ExtendedState","qualname":"::ExtendedState","value":"ExtendedState { subleaf }","parent":null,"children":[{"krate":0,"index":1992},{"krate":0,"index":1993},{"krate":0,"index":1994},{"krate":0,"index":1995}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1992},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":107967,"byte_end":107974,"line_start":3223,"line_end":3223,"column_start":9,"column_end":16},"name":"subleaf","qualname":"::ExtendedState::subleaf","value":"u32","parent":{"krate":0,"index":1991},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":108284,"byte_end":108288,"line_start":3233,"line_end":3233,"column_start":12,"column_end":16},"name":"size","qualname":"<ExtendedState>::size","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The size in bytes (from the offset specified in EBX) of the save area\n for an extended state feature associated with a valid sub-leaf index, n.\n This field reports 0 if the sub-leaf index, n, is invalid.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":108465,"byte_end":108471,"line_start":3239,"line_end":3239,"column_start":12,"column_end":18},"name":"offset","qualname":"<ExtendedState>::offset","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The offset in bytes of this extended state components save area\n from the beginning of the XSAVE/XRSTOR area.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":108629,"byte_end":108643,"line_start":3245,"line_end":3245,"column_start":12,"column_end":26},"name":"is_in_ia32_xss","qualname":"<ExtendedState>::is_in_ia32_xss","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True if the bit n (corresponding to the sub-leaf index)\n is supported in the IA32_XSS MSR;\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":108750,"byte_end":108760,"line_start":3250,"line_end":3250,"column_start":12,"column_end":22},"name":"is_in_xcr0","qualname":"<ExtendedState>::is_in_xcr0","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True if bit n is supported in XCR0.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":109108,"byte_end":109127,"line_start":3258,"line_end":3258,"column_start":12,"column_end":31},"name":"is_compacted_format","qualname":"<ExtendedState>::is_compacted_format","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true when the compacted format of an XSAVE area is used,\n this extended state component located on the next 64-byte\n boundary following the preceding state component\n (otherwise, it is located immediately following the preceding state component).\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2000},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":109286,"byte_end":109303,"line_start":3265,"line_end":3265,"column_start":12,"column_end":29},"name":"RdtMonitoringInfo","qualname":"::RdtMonitoringInfo","value":"RdtMonitoringInfo {  }","parent":null,"children":[{"krate":0,"index":2001},{"krate":0,"index":2002}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":109577,"byte_end":109587,"line_start":3273,"line_end":3273,"column_start":12,"column_end":22},"name":"rmid_range","qualname":"<RdtMonitoringInfo>::rmid_range","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Maximum range (zero-based) of RMID within this physical processor of all types.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2007},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":109712,"byte_end":109729,"line_start":3279,"line_end":3279,"column_start":9,"column_end":26},"name":"has_l3_monitoring","qualname":"<RdtMonitoringInfo>::has_l3_monitoring","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Supports L3 Cache Intel RDT Monitoring.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":109802,"byte_end":109815,"line_start":3285,"line_end":3285,"column_start":12,"column_end":25},"name":"l3_monitoring","qualname":"<RdtMonitoringInfo>::l3_monitoring","value":"fn (&self) -> Option<L3MonitoringInfo>","parent":null,"children":[],"decl_id":null,"docs":" L3 Cache Monitoring.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2008},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":110258,"byte_end":110274,"line_start":3301,"line_end":3301,"column_start":12,"column_end":28},"name":"L3MonitoringInfo","qualname":"::L3MonitoringInfo","value":"L3MonitoringInfo {  }","parent":null,"children":[{"krate":0,"index":2009},{"krate":0,"index":2010},{"krate":0,"index":2011}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":110444,"byte_end":110461,"line_start":3309,"line_end":3309,"column_start":12,"column_end":29},"name":"conversion_factor","qualname":"<L3MonitoringInfo>::conversion_factor","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Conversion factor from reported IA32_QM_CTR value to occupancy metric (bytes).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":110563,"byte_end":110581,"line_start":3314,"line_end":3314,"column_start":12,"column_end":30},"name":"maximum_rmid_range","qualname":"<L3MonitoringInfo>::maximum_rmid_range","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Maximum range (zero-based) of RMID of L3.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2016},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":110697,"byte_end":110721,"line_start":3320,"line_end":3320,"column_start":9,"column_end":33},"name":"has_occupancy_monitoring","qualname":"<L3MonitoringInfo>::has_occupancy_monitoring","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Supports occupancy monitoring.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2017},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":110835,"byte_end":110865,"line_start":3327,"line_end":3327,"column_start":9,"column_end":39},"name":"has_total_bandwidth_monitoring","qualname":"<L3MonitoringInfo>::has_total_bandwidth_monitoring","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Supports total bandwidth monitoring.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2018},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":110979,"byte_end":111009,"line_start":3334,"line_end":3334,"column_start":9,"column_end":39},"name":"has_local_bandwidth_monitoring","qualname":"<L3MonitoringInfo>::has_local_bandwidth_monitoring","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Supports local bandwidth monitoring.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2019},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":111148,"byte_end":111165,"line_start":3342,"line_end":3342,"column_start":12,"column_end":29},"name":"RdtAllocationInfo","qualname":"::RdtAllocationInfo","value":"RdtAllocationInfo {  }","parent":null,"children":[{"krate":0,"index":2020}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2025},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":111267,"byte_end":111277,"line_start":3347,"line_end":3347,"column_start":58,"column_end":68},"name":"has_l3_cat","qualname":"<RdtAllocationInfo>::has_l3_cat","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Supports L3 Cache Allocation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2026},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":111346,"byte_end":111356,"line_start":3349,"line_end":3349,"column_start":58,"column_end":68},"name":"has_l2_cat","qualname":"<RdtAllocationInfo>::has_l2_cat","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Supports L2 Cache Allocation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2027},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":111450,"byte_end":111481,"line_start":3353,"line_end":3353,"column_start":9,"column_end":40},"name":"has_memory_bandwidth_allocation","qualname":"<RdtAllocationInfo>::has_memory_bandwidth_allocation","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Supports Memory Bandwidth Allocation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":111566,"byte_end":111572,"line_start":3359,"line_end":3359,"column_start":12,"column_end":18},"name":"l3_cat","qualname":"<RdtAllocationInfo>::l3_cat","value":"fn (&self) -> Option<L3CatInfo>","parent":null,"children":[],"decl_id":null,"docs":" L3 Cache Allocation Information.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":111970,"byte_end":111976,"line_start":3374,"line_end":3374,"column_start":12,"column_end":18},"name":"l2_cat","qualname":"<RdtAllocationInfo>::l2_cat","value":"fn (&self) -> Option<L2CatInfo>","parent":null,"children":[],"decl_id":null,"docs":" L2 Cache Allocation Information.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":112352,"byte_end":112379,"line_start":3388,"line_end":3388,"column_start":12,"column_end":39},"name":"memory_bandwidth_allocation","qualname":"<RdtAllocationInfo>::memory_bandwidth_allocation","value":"fn (&self) -> Option<MemBwAllocationInfo>","parent":null,"children":[],"decl_id":null,"docs":" Memory Bandwidth Allocation Information.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2028},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":112907,"byte_end":112916,"line_start":3405,"line_end":3405,"column_start":12,"column_end":21},"name":"L3CatInfo","qualname":"::L3CatInfo","value":"L3CatInfo {  }","parent":null,"children":[{"krate":0,"index":2029},{"krate":0,"index":2030},{"krate":0,"index":2031},{"krate":0,"index":2032}],"decl_id":null,"docs":" L3 Cache Allocation Technology Enumeration Sub-leaf (EAX = 10H, ECX = ResID = 1).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":113072,"byte_end":113092,"line_start":3414,"line_end":3414,"column_start":12,"column_end":32},"name":"capacity_mask_length","qualname":"<L3CatInfo>::capacity_mask_length","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Length of the capacity bit mask using minus-one notation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":113235,"byte_end":113251,"line_start":3419,"line_end":3419,"column_start":12,"column_end":28},"name":"isolation_bitmap","qualname":"<L3CatInfo>::isolation_bitmap","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Bit-granular map of isolation/contention of allocation units.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":113355,"byte_end":113366,"line_start":3424,"line_end":3424,"column_start":12,"column_end":23},"name":"highest_cos","qualname":"<L3CatInfo>::highest_cos","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Highest COS number supported for this Leaf.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2037},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":113529,"byte_end":113557,"line_start":3430,"line_end":3430,"column_start":9,"column_end":37},"name":"has_code_data_prioritization","qualname":"<L3CatInfo>::has_code_data_prioritization","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Is Code and Data Prioritization Technology supported?\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2038},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":113782,"byte_end":113791,"line_start":3439,"line_end":3439,"column_start":12,"column_end":21},"name":"L2CatInfo","qualname":"::L2CatInfo","value":"L2CatInfo {  }","parent":null,"children":[{"krate":0,"index":2039},{"krate":0,"index":2040},{"krate":0,"index":2041}],"decl_id":null,"docs":" L2 Cache Allocation Technology Enumeration Sub-leaf (EAX = 10H, ECX = ResID = 2).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":113933,"byte_end":113953,"line_start":3447,"line_end":3447,"column_start":12,"column_end":32},"name":"capacity_mask_length","qualname":"<L2CatInfo>::capacity_mask_length","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Length of the capacity bit mask using minus-one notation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":114096,"byte_end":114112,"line_start":3452,"line_end":3452,"column_start":12,"column_end":28},"name":"isolation_bitmap","qualname":"<L2CatInfo>::isolation_bitmap","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Bit-granular map of isolation/contention of allocation units.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":114216,"byte_end":114227,"line_start":3457,"line_end":3457,"column_start":12,"column_end":23},"name":"highest_cos","qualname":"<L2CatInfo>::highest_cos","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Highest COS number supported for this Leaf.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2046},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":114481,"byte_end":114500,"line_start":3465,"line_end":3465,"column_start":12,"column_end":31},"name":"MemBwAllocationInfo","qualname":"::MemBwAllocationInfo","value":"MemBwAllocationInfo {  }","parent":null,"children":[{"krate":0,"index":2047},{"krate":0,"index":2048},{"krate":0,"index":2049}],"decl_id":null,"docs":" Memory Bandwidth Allocation Enumeration Sub-leaf (EAX = 10H, ECX = ResID = 3).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":114699,"byte_end":114717,"line_start":3473,"line_end":3473,"column_start":12,"column_end":30},"name":"max_hba_throttling","qualname":"<MemBwAllocationInfo>::max_hba_throttling","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Reports the maximum MBA throttling value supported for the corresponding ResID using minus-one notation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":114845,"byte_end":114856,"line_start":3478,"line_end":3478,"column_start":12,"column_end":23},"name":"highest_cos","qualname":"<MemBwAllocationInfo>::highest_cos","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Highest COS number supported for this Leaf.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2054},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":115025,"byte_end":115050,"line_start":3484,"line_end":3484,"column_start":9,"column_end":34},"name":"has_linear_response_delay","qualname":"<MemBwAllocationInfo>::has_linear_response_delay","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Reports whether the response of the delay values is linear.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2055},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":115276,"byte_end":115283,"line_start":3493,"line_end":3493,"column_start":12,"column_end":19},"name":"SgxInfo","qualname":"::SgxInfo","value":"SgxInfo {  }","parent":null,"children":[{"krate":0,"index":2056},{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2060},{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2063}],"decl_id":null,"docs":" Intel SGX Capability Enumeration Leaf, sub-leaf 0 (EAX = 12H, ECX = 0 and ECX = 1)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2068},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":115465,"byte_end":115473,"line_start":3505,"line_end":3505,"column_start":46,"column_end":54},"name":"has_sgx1","qualname":"<SgxInfo>::has_sgx1","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Has SGX1 support.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2069},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":115529,"byte_end":115537,"line_start":3506,"line_end":3506,"column_start":46,"column_end":54},"name":"has_sgx2","qualname":"<SgxInfo>::has_sgx2","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Has SGX2 support.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2070},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":115674,"byte_end":115729,"line_start":3510,"line_end":3510,"column_start":9,"column_end":64},"name":"has_enclv_leaves_einvirtchild_edecvirtchild_esetcontext","qualname":"<SgxInfo>::has_enclv_leaves_einvirtchild_edecvirtchild_esetcontext","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Supports ENCLV instruction leaves EINCVIRTCHILD, EDECVIRTCHILD, and ESETCONTEXT.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2071},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":115876,"byte_end":115920,"line_start":3517,"line_end":3517,"column_start":9,"column_end":53},"name":"has_encls_leaves_etrackc_erdinfo_eldbc_elduc","qualname":"<SgxInfo>::has_encls_leaves_etrackc_erdinfo_eldbc_elduc","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Supports ENCLS instruction leaves ETRACKC, ERDINFO, ELDBC, and ELDUC.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":116019,"byte_end":116029,"line_start":3523,"line_end":3523,"column_start":12,"column_end":22},"name":"miscselect","qualname":"<SgxInfo>::miscselect","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Bit vector of supported extended SGX features.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":116157,"byte_end":116183,"line_start":3528,"line_end":3528,"column_start":12,"column_end":38},"name":"max_enclave_size_non_64bit","qualname":"<SgxInfo>::max_enclave_size_non_64bit","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"  The maximum supported enclave size in non-64-bit mode is 2^retval.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":116328,"byte_end":116350,"line_start":3533,"line_end":3533,"column_start":12,"column_end":34},"name":"max_enclave_size_64bit","qualname":"<SgxInfo>::max_enclave_size_64bit","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"  The maximum supported enclave size in 64-bit mode is 2^retval.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":116519,"byte_end":116534,"line_start":3538,"line_end":3538,"column_start":12,"column_end":27},"name":"secs_attributes","qualname":"<SgxInfo>::secs_attributes","value":"fn (&self) -> (u64, u64)","parent":null,"children":[],"decl_id":null,"docs":" Reports the valid bits of SECS.ATTRIBUTES\\[127:0\\] that software can set with ECREATE.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":116765,"byte_end":116769,"line_start":3544,"line_end":3544,"column_start":12,"column_end":16},"name":"iter","qualname":"<SgxInfo>::iter","value":"fn (&self) -> SgxSectionIter","parent":null,"children":[],"decl_id":null,"docs":" Iterator over SGX sub-leafs.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2072},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":116996,"byte_end":117010,"line_start":3552,"line_end":3552,"column_start":12,"column_end":26},"name":"SgxSectionIter","qualname":"::SgxSectionIter","value":"SgxSectionIter {  }","parent":null,"children":[{"krate":0,"index":2073}],"decl_id":null,"docs":" Iterator over the SGX sub-leafs (ECX >= 2).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2079},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":117771,"byte_end":117774,"line_start":3579,"line_end":3579,"column_start":5,"column_end":8},"name":"Epc","qualname":"::SgxSectionInfo::Epc","value":"SgxSectionInfo::Epc(EpcSection)","parent":{"krate":0,"index":2078},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2078},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":117679,"byte_end":117693,"line_start":3577,"line_end":3577,"column_start":10,"column_end":24},"name":"SgxSectionInfo","qualname":"::SgxSectionInfo","value":"SgxSectionInfo::{Epc}","parent":null,"children":[{"krate":0,"index":2079}],"decl_id":null,"docs":" Intel SGX EPC Enumeration Leaf, sub-leaves (EAX = 12H, ECX = 2 or higher)\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2084},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":118107,"byte_end":118117,"line_start":3591,"line_end":3591,"column_start":12,"column_end":22},"name":"EpcSection","qualname":"::EpcSection","value":"EpcSection {  }","parent":null,"children":[{"krate":0,"index":2085},{"krate":0,"index":2086},{"krate":0,"index":2087},{"krate":0,"index":2088}],"decl_id":null,"docs":" EBX:EAX and EDX:ECX provide information on the Enclave Page Cache (EPC) section\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":118268,"byte_end":118281,"line_start":3600,"line_end":3600,"column_start":12,"column_end":25},"name":"physical_base","qualname":"<EpcSection>::physical_base","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" The physical address of the base of the EPC section\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":118547,"byte_end":118551,"line_start":3607,"line_end":3607,"column_start":12,"column_end":16},"name":"size","qualname":"<EpcSection>::size","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Size of the corresponding EPC section within the Processor Reserved Memory.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2093},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":118828,"byte_end":118846,"line_start":3616,"line_end":3616,"column_start":12,"column_end":30},"name":"ProcessorTraceInfo","qualname":"::ProcessorTraceInfo","value":"ProcessorTraceInfo {  }","parent":null,"children":[{"krate":0,"index":2094},{"krate":0,"index":2095},{"krate":0,"index":2096},{"krate":0,"index":2097},{"krate":0,"index":2098}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2103},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":119162,"byte_end":119180,"line_start":3629,"line_end":3629,"column_start":9,"column_end":27},"name":"has_rtit_cr3_match","qualname":"<ProcessorTraceInfo>::has_rtit_cr3_match","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"If true, Indicates that IA32_RTIT_CTL.CR3Filter can be set to 1, and that IA32_RTIT_CR3_MATCH MSR can be accessed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2104},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":119328,"byte_end":119372,"line_start":3635,"line_end":3635,"column_start":9,"column_end":53},"name":"has_configurable_psb_and_cycle_accurate_mode","qualname":"<ProcessorTraceInfo>::has_configurable_psb_and_cycle_accurate_mode","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"If true, Indicates support of Configurable PSB and Cycle-Accurate Mode.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2105},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":119583,"byte_end":119609,"line_start":3642,"line_end":3642,"column_start":9,"column_end":35},"name":"has_ip_tracestop_filtering","qualname":"<ProcessorTraceInfo>::has_ip_tracestop_filtering","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"If true, Indicates support of IP Filtering, TraceStop filtering, and preservation of Intel PT MSRs across warm reset.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2106},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":119789,"byte_end":119828,"line_start":3649,"line_end":3649,"column_start":9,"column_end":48},"name":"has_mtc_timing_packet_coefi_suppression","qualname":"<ProcessorTraceInfo>::has_mtc_timing_packet_coefi_suppression","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"If true, Indicates support of MTC timing packet and suppression of COFI-based packets.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2107},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":120066,"byte_end":120077,"line_start":3657,"line_end":3657,"column_start":9,"column_end":20},"name":"has_ptwrite","qualname":"<ProcessorTraceInfo>::has_ptwrite","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Indicates support of PTWRITE. Writes can set IA32_RTIT_CTL\\[12\\] (PTWEn and IA32_RTIT_CTL\\[5\\] (FUPonPTW), and PTWRITE can generate packets\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2108},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":120294,"byte_end":120315,"line_start":3665,"line_end":3665,"column_start":9,"column_end":30},"name":"has_power_event_trace","qualname":"<ProcessorTraceInfo>::has_power_event_trace","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Support of Power Event Trace. Writes can set IA32_RTIT_CTL\\[4\\] (PwrEvtEn) enabling Power Event Trace packet generation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2109},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":120622,"byte_end":120630,"line_start":3675,"line_end":3675,"column_start":9,"column_end":17},"name":"has_topa","qualname":"<ProcessorTraceInfo>::has_topa","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"If true, Tracing can be enabled with IA32_RTIT_CTL.ToPA = 1, hence utilizing the ToPA output scheme; IA32_RTIT_OUTPUT_BASE and IA32_RTIT_OUTPUT_MASK_PTRS MSRs can be accessed.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2110},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":120888,"byte_end":120912,"line_start":3683,"line_end":3683,"column_start":9,"column_end":33},"name":"has_topa_maximum_entries","qualname":"<ProcessorTraceInfo>::has_topa_maximum_entries","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"If true, ToPA tables can hold any number of output entries, up to the maximum allowed by the MaskOrTableOffset field of IA32_RTIT_OUTPUT_MASK_PTRS.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2111},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":121046,"byte_end":121076,"line_start":3689,"line_end":3689,"column_start":9,"column_end":39},"name":"has_single_range_output_scheme","qualname":"<ProcessorTraceInfo>::has_single_range_output_scheme","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"If true, Indicates support of Single-Range Output scheme.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2112},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":121219,"byte_end":121248,"line_start":3695,"line_end":3695,"column_start":9,"column_end":38},"name":"has_trace_transport_subsystem","qualname":"<ProcessorTraceInfo>::has_trace_transport_subsystem","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"If true, Indicates support of output to Trace Transport subsystem.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2113},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":121448,"byte_end":121468,"line_start":3702,"line_end":3702,"column_start":9,"column_end":29},"name":"has_lip_with_cs_base","qualname":"<ProcessorTraceInfo>::has_lip_with_cs_base","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"If true, Generated packets which contain IP payloads have LIP values, which include the CS base component.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":121585,"byte_end":121612,"line_start":3708,"line_end":3708,"column_start":12,"column_end":39},"name":"configurable_address_ranges","qualname":"<ProcessorTraceInfo>::configurable_address_ranges","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Number of configurable Address Ranges for filtering (Bits 2:0).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":121774,"byte_end":121804,"line_start":3713,"line_end":3713,"column_start":12,"column_end":42},"name":"supported_mtc_period_encodings","qualname":"<ProcessorTraceInfo>::supported_mtc_period_encodings","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Bitmap of supported MTC period encodings (Bit 31:16).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":121981,"byte_end":122022,"line_start":3718,"line_end":3718,"column_start":12,"column_end":53},"name":"supported_cycle_threshold_value_encodings","qualname":"<ProcessorTraceInfo>::supported_cycle_threshold_value_encodings","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Bitmap of supported Cycle Threshold value encodings (Bits 15-0).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":122202,"byte_end":122235,"line_start":3723,"line_end":3723,"column_start":12,"column_end":45},"name":"supported_psb_frequency_encodings","qualname":"<ProcessorTraceInfo>::supported_psb_frequency_encodings","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Bitmap of supported Configurable PSB frequency encodings (Bit 31:16)\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2114},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":122499,"byte_end":122506,"line_start":3731,"line_end":3731,"column_start":12,"column_end":19},"name":"TscInfo","qualname":"::TscInfo","value":"TscInfo {  }","parent":null,"children":[{"krate":0,"index":2115},{"krate":0,"index":2116},{"krate":0,"index":2117}],"decl_id":null,"docs":" Time Stamp Counter and Nominal Core Crystal Clock Information Leaf.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":123015,"byte_end":123026,"line_start":3749,"line_end":3749,"column_start":12,"column_end":23},"name":"denominator","qualname":"<TscInfo>::denominator","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" An unsigned integer which is the denominator of the TSC/”core crystal clock” ratio.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":123260,"byte_end":123269,"line_start":3756,"line_end":3756,"column_start":12,"column_end":21},"name":"numerator","qualname":"<TscInfo>::numerator","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" An unsigned integer which is the numerator of the TSC/”core crystal clock” ratio.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":123503,"byte_end":123520,"line_start":3763,"line_end":3763,"column_start":12,"column_end":29},"name":"nominal_frequency","qualname":"<TscInfo>::nominal_frequency","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" An unsigned integer which is the nominal frequency of the core crystal clock in Hz.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":123648,"byte_end":123661,"line_start":3768,"line_end":3768,"column_start":12,"column_end":25},"name":"tsc_frequency","qualname":"<TscInfo>::tsc_frequency","value":"fn (&self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" “TSC frequency” = “core crystal clock frequency” * EBX/EAX.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2120},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":123921,"byte_end":123943,"line_start":3776,"line_end":3776,"column_start":12,"column_end":34},"name":"ProcessorFrequencyInfo","qualname":"::ProcessorFrequencyInfo","value":"ProcessorFrequencyInfo {  }","parent":null,"children":[{"krate":0,"index":2121},{"krate":0,"index":2122},{"krate":0,"index":2123}],"decl_id":null,"docs":" Processor Frequency Information\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":124075,"byte_end":124099,"line_start":3784,"line_end":3784,"column_start":12,"column_end":36},"name":"processor_base_frequency","qualname":"<ProcessorFrequencyInfo>::processor_base_frequency","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Processor Base Frequency (in MHz).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":124211,"byte_end":124234,"line_start":3789,"line_end":3789,"column_start":12,"column_end":35},"name":"processor_max_frequency","qualname":"<ProcessorFrequencyInfo>::processor_max_frequency","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Maximum Frequency (in MHz).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":124354,"byte_end":124367,"line_start":3794,"line_end":3794,"column_start":12,"column_end":25},"name":"bus_frequency","qualname":"<ProcessorFrequencyInfo>::bus_frequency","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Bus (Reference) Frequency (in MHz).\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2128},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":124595,"byte_end":124602,"line_start":3802,"line_end":3802,"column_start":12,"column_end":19},"name":"DatIter","qualname":"::DatIter","value":"DatIter {  }","parent":null,"children":[{"krate":0,"index":2129},{"krate":0,"index":2130}],"decl_id":null,"docs":" Deterministic Address Translation Structure Iterator\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2135},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":125904,"byte_end":125911,"line_start":3842,"line_end":3842,"column_start":12,"column_end":19},"name":"DatInfo","qualname":"::DatInfo","value":"DatInfo {  }","parent":null,"children":[{"krate":0,"index":2136},{"krate":0,"index":2137},{"krate":0,"index":2138},{"krate":0,"index":2139}],"decl_id":null,"docs":" Deterministic Address Translation Structure\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2144},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":126081,"byte_end":126095,"line_start":3852,"line_end":3852,"column_start":9,"column_end":23},"name":"has_4k_entries","qualname":"<DatInfo>::has_4k_entries","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"4K page size entries supported by this structure\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2145},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":126222,"byte_end":126237,"line_start":3859,"line_end":3859,"column_start":9,"column_end":24},"name":"has_2mb_entries","qualname":"<DatInfo>::has_2mb_entries","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"2MB page size entries supported by this structure\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2146},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":126364,"byte_end":126379,"line_start":3866,"line_end":3866,"column_start":9,"column_end":24},"name":"has_4mb_entries","qualname":"<DatInfo>::has_4mb_entries","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"4MB page size entries supported by this structure\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2147},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":126506,"byte_end":126521,"line_start":3873,"line_end":3873,"column_start":9,"column_end":24},"name":"has_1gb_entries","qualname":"<DatInfo>::has_1gb_entries","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"1GB page size entries supported by this structure\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2148},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":126626,"byte_end":126646,"line_start":3880,"line_end":3880,"column_start":9,"column_end":29},"name":"is_fully_associative","qualname":"<DatInfo>::is_fully_associative","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Fully associative structure\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":126789,"byte_end":126801,"line_start":3886,"line_end":3886,"column_start":12,"column_end":24},"name":"partitioning","qualname":"<DatInfo>::partitioning","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Partitioning (0: Soft partitioning between the logical processors sharing this structure).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":126906,"byte_end":126910,"line_start":3891,"line_end":3891,"column_start":12,"column_end":16},"name":"ways","qualname":"<DatInfo>::ways","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Ways of associativity.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":127011,"byte_end":127015,"line_start":3896,"line_end":3896,"column_start":12,"column_end":16},"name":"sets","qualname":"<DatInfo>::sets","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Number of Sets.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":127105,"byte_end":127115,"line_start":3901,"line_end":3901,"column_start":12,"column_end":22},"name":"cache_type","qualname":"<DatInfo>::cache_type","value":"fn (&self) -> DatType","parent":null,"children":[],"decl_id":null,"docs":" Translation cache type field.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":127525,"byte_end":127536,"line_start":3912,"line_end":3912,"column_start":12,"column_end":23},"name":"cache_level","qualname":"<DatInfo>::cache_level","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Translation cache level (starts at 1)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":127705,"byte_end":127724,"line_start":3917,"line_end":3917,"column_start":12,"column_end":31},"name":"max_addressable_ids","qualname":"<DatInfo>::max_addressable_ids","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Maximum number of addressable IDs for logical processors sharing this translation cache\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2150},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":128085,"byte_end":128089,"line_start":3928,"line_end":3928,"column_start":5,"column_end":9},"name":"Null","qualname":"::DatType::Null","value":"DatType::Null","parent":{"krate":0,"index":2149},"children":[],"decl_id":null,"docs":" Null (indicates this sub-leaf is not valid).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2153},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":128105,"byte_end":128112,"line_start":3929,"line_end":3929,"column_start":5,"column_end":12},"name":"DataTLB","qualname":"::DatType::DataTLB","value":"DatType::DataTLB","parent":{"krate":0,"index":2149},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2156},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":128128,"byte_end":128142,"line_start":3930,"line_end":3930,"column_start":5,"column_end":19},"name":"InstructionTLB","qualname":"::DatType::InstructionTLB","value":"DatType::InstructionTLB","parent":{"krate":0,"index":2149},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2159},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":128535,"byte_end":128545,"line_start":3936,"line_end":3936,"column_start":5,"column_end":15},"name":"UnifiedTLB","qualname":"::DatType::UnifiedTLB","value":"DatType::UnifiedTLB","parent":{"krate":0,"index":2149},"children":[],"decl_id":null,"docs":" Some unified TLBs will allow a single TLB entry to satisfy data read/write\n and instruction fetches. Others will require separate entries (e.g., one\n loaded on data read/write and another loaded on an instruction fetch) .\n Please see the Intel® 64 and IA-32 Architectures Optimization Reference Manual\n for details of a particular product.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2162},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":128561,"byte_end":128568,"line_start":3937,"line_end":3937,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::DatType::Unknown","value":"DatType::Unknown","parent":{"krate":0,"index":2149},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2149},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":128018,"byte_end":128025,"line_start":3926,"line_end":3926,"column_start":10,"column_end":17},"name":"DatType","qualname":"::DatType","value":"DatType::{Null, DataTLB, InstructionTLB, UnifiedTLB, Unknown}","parent":null,"children":[{"krate":0,"index":2150},{"krate":0,"index":2153},{"krate":0,"index":2156},{"krate":0,"index":2159},{"krate":0,"index":2162}],"decl_id":null,"docs":" Deterministic Address Translation cache type (EDX bits 04 -- 00)\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2166},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":128765,"byte_end":128778,"line_start":3948,"line_end":3948,"column_start":12,"column_end":25},"name":"SoCVendorInfo","qualname":"::SoCVendorInfo","value":"SoCVendorInfo {  }","parent":null,"children":[{"krate":0,"index":2167},{"krate":0,"index":2168},{"krate":0,"index":2169},{"krate":0,"index":2170}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":128895,"byte_end":128912,"line_start":3957,"line_end":3957,"column_start":12,"column_end":29},"name":"get_soc_vendor_id","qualname":"<SoCVendorInfo>::get_soc_vendor_id","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":128988,"byte_end":129002,"line_start":3961,"line_end":3961,"column_start":12,"column_end":26},"name":"get_project_id","qualname":"<SoCVendorInfo>::get_project_id","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":129054,"byte_end":129069,"line_start":3965,"line_end":3965,"column_start":12,"column_end":27},"name":"get_stepping_id","qualname":"<SoCVendorInfo>::get_stepping_id","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":129121,"byte_end":129137,"line_start":3969,"line_end":3969,"column_start":12,"column_end":28},"name":"get_vendor_brand","qualname":"<SoCVendorInfo>::get_vendor_brand","value":"fn (&self) -> SoCVendorBrand","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":129453,"byte_end":129474,"line_start":3977,"line_end":3977,"column_start":12,"column_end":33},"name":"get_vendor_attributes","qualname":"<SoCVendorInfo>::get_vendor_attributes","value":"fn (&self) -> Option<SoCVendorAttributesIter>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2175},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":129821,"byte_end":129844,"line_start":3991,"line_end":3991,"column_start":12,"column_end":35},"name":"SoCVendorAttributesIter","qualname":"::SoCVendorAttributesIter","value":"SoCVendorAttributesIter {  }","parent":null,"children":[{"krate":0,"index":2176},{"krate":0,"index":2177}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2182},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":130329,"byte_end":130343,"line_start":4011,"line_end":4011,"column_start":12,"column_end":26},"name":"SoCVendorBrand","qualname":"::SoCVendorBrand","value":"SoCVendorBrand {  }","parent":null,"children":[{"krate":0,"index":2183}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":130434,"byte_end":130443,"line_start":4017,"line_end":4017,"column_start":12,"column_end":21},"name":"as_string","qualname":"<SoCVendorBrand>::as_string","value":"fn <'a> (&'a self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":259},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":131045,"byte_end":131059,"line_start":4035,"line_end":4035,"column_start":12,"column_end":26},"name":"HypervisorInfo","qualname":"::HypervisorInfo","value":"HypervisorInfo {  }","parent":null,"children":[{"krate":0,"index":260}],"decl_id":null,"docs":" Information about Hypervisor (https://lwn.net/Articles/301888/)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2190},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":131528,"byte_end":131531,"line_start":4052,"line_end":4052,"column_start":5,"column_end":8},"name":"Xen","qualname":"::Hypervisor::Xen","value":"Hypervisor::Xen","parent":{"krate":0,"index":2189},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2192},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":131537,"byte_end":131543,"line_start":4053,"line_end":4053,"column_start":5,"column_end":11},"name":"VMware","qualname":"::Hypervisor::VMware","value":"Hypervisor::VMware","parent":{"krate":0,"index":2189},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2194},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":131549,"byte_end":131555,"line_start":4054,"line_end":4054,"column_start":5,"column_end":11},"name":"HyperV","qualname":"::Hypervisor::HyperV","value":"Hypervisor::HyperV","parent":{"krate":0,"index":2189},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2196},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":131561,"byte_end":131564,"line_start":4055,"line_end":4055,"column_start":5,"column_end":8},"name":"KVM","qualname":"::Hypervisor::KVM","value":"Hypervisor::KVM","parent":{"krate":0,"index":2189},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2198},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":131570,"byte_end":131577,"line_start":4056,"line_end":4056,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::Hypervisor::Unknown","value":"Hypervisor::Unknown(u32, u32, u32)","parent":{"krate":0,"index":2189},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2189},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":131511,"byte_end":131521,"line_start":4051,"line_end":4051,"column_start":10,"column_end":20},"name":"Hypervisor","qualname":"::Hypervisor","value":"Hypervisor::{Xen, VMware, HyperV, KVM, Unknown}","parent":null,"children":[{"krate":0,"index":2190},{"krate":0,"index":2192},{"krate":0,"index":2194},{"krate":0,"index":2196},{"krate":0,"index":2198}],"decl_id":null,"docs":" Identifies the different Hypervisor products.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":131630,"byte_end":131638,"line_start":4060,"line_end":4060,"column_start":12,"column_end":20},"name":"identify","qualname":"<HypervisorInfo>::identify","value":"fn (&self) -> Hypervisor","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":132251,"byte_end":132264,"line_start":4075,"line_end":4075,"column_start":12,"column_end":25},"name":"tsc_frequency","qualname":"<HypervisorInfo>::tsc_frequency","value":"fn (&self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" TSC frequency in kHz.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":132630,"byte_end":132644,"line_start":4087,"line_end":4087,"column_start":12,"column_end":26},"name":"apic_frequency","qualname":"<HypervisorInfo>::apic_frequency","value":"fn (&self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" (Virtual) Bus (local apic timer) frequency in kHz.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2212},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":133020,"byte_end":133040,"line_start":4100,"line_end":4100,"column_start":12,"column_end":32},"name":"ExtendedFunctionInfo","qualname":"::ExtendedFunctionInfo","value":"ExtendedFunctionInfo {  }","parent":null,"children":[{"krate":0,"index":2213},{"krate":0,"index":2214}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2221},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":133228,"byte_end":133236,"line_start":4108,"line_end":4108,"column_start":5,"column_end":13},"name":"Disabled","qualname":"::L2Associativity::Disabled","value":"L2Associativity::Disabled","parent":{"krate":0,"index":2220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2224},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":133248,"byte_end":133260,"line_start":4109,"line_end":4109,"column_start":5,"column_end":17},"name":"DirectMapped","qualname":"::L2Associativity::DirectMapped","value":"L2Associativity::DirectMapped","parent":{"krate":0,"index":2220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2227},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":133272,"byte_end":133278,"line_start":4110,"line_end":4110,"column_start":5,"column_end":11},"name":"TwoWay","qualname":"::L2Associativity::TwoWay","value":"L2Associativity::TwoWay","parent":{"krate":0,"index":2220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2230},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":133290,"byte_end":133297,"line_start":4111,"line_end":4111,"column_start":5,"column_end":12},"name":"FourWay","qualname":"::L2Associativity::FourWay","value":"L2Associativity::FourWay","parent":{"krate":0,"index":2220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2233},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":133309,"byte_end":133317,"line_start":4112,"line_end":4112,"column_start":5,"column_end":13},"name":"EightWay","qualname":"::L2Associativity::EightWay","value":"L2Associativity::EightWay","parent":{"krate":0,"index":2220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2236},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":133329,"byte_end":133339,"line_start":4113,"line_end":4113,"column_start":5,"column_end":15},"name":"SixteenWay","qualname":"::L2Associativity::SixteenWay","value":"L2Associativity::SixteenWay","parent":{"krate":0,"index":2220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2239},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":133351,"byte_end":133367,"line_start":4114,"line_end":4114,"column_start":5,"column_end":21},"name":"FullyAssiciative","qualname":"::L2Associativity::FullyAssiciative","value":"L2Associativity::FullyAssiciative","parent":{"krate":0,"index":2220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2242},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":133379,"byte_end":133386,"line_start":4115,"line_end":4115,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::L2Associativity::Unknown","value":"L2Associativity::Unknown","parent":{"krate":0,"index":2220},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2220},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":133206,"byte_end":133221,"line_start":4107,"line_end":4107,"column_start":10,"column_end":25},"name":"L2Associativity","qualname":"::L2Associativity","value":"L2Associativity::{Disabled, DirectMapped, TwoWay, FourWay, EightWay, SixteenWay, FullyAssiciative, Unknown}","parent":null,"children":[{"krate":0,"index":2221},{"krate":0,"index":2224},{"krate":0,"index":2227},{"krate":0,"index":2230},{"krate":0,"index":2233},{"krate":0,"index":2236},{"krate":0,"index":2239},{"krate":0,"index":2242}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":133812,"byte_end":133834,"line_start":4134,"line_end":4134,"column_start":12,"column_end":34},"name":"processor_brand_string","qualname":"<ExtendedFunctionInfo>::processor_brand_string","value":"fn <'a> (&'a self) -> Option<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve processor brand string.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":134586,"byte_end":134604,"line_start":4154,"line_end":4154,"column_start":12,"column_end":30},"name":"extended_signature","qualname":"<ExtendedFunctionInfo>::extended_signature","value":"fn (&self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Extended Processor Signature and Feature Bits.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":134824,"byte_end":134839,"line_start":4163,"line_end":4163,"column_start":12,"column_end":27},"name":"cache_line_size","qualname":"<ExtendedFunctionInfo>::cache_line_size","value":"fn (&self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Cache Line size in bytes\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":135074,"byte_end":135090,"line_start":4172,"line_end":4172,"column_start":12,"column_end":28},"name":"l2_associativity","qualname":"<ExtendedFunctionInfo>::l2_associativity","value":"fn (&self) -> Option<L2Associativity>","parent":null,"children":[],"decl_id":null,"docs":" L2 Associativity field\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":135764,"byte_end":135774,"line_start":4190,"line_end":4190,"column_start":12,"column_end":22},"name":"cache_size","qualname":"<ExtendedFunctionInfo>::cache_size","value":"fn (&self) -> Option<u16>","parent":null,"children":[],"decl_id":null,"docs":" Cache size in 1K units\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":136013,"byte_end":136034,"line_start":4199,"line_end":4199,"column_start":12,"column_end":33},"name":"physical_address_bits","qualname":"<ExtendedFunctionInfo>::physical_address_bits","value":"fn (&self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" #Physical Address Bits\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":136245,"byte_end":136264,"line_start":4208,"line_end":4208,"column_start":12,"column_end":31},"name":"linear_address_bits","qualname":"<ExtendedFunctionInfo>::linear_address_bits","value":"fn (&self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" #Linear Address Bits\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":136483,"byte_end":136500,"line_start":4217,"line_end":4217,"column_start":12,"column_end":29},"name":"has_invariant_tsc","qualname":"<ExtendedFunctionInfo>::has_invariant_tsc","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is Invariant TSC available?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":136652,"byte_end":136665,"line_start":4222,"line_end":4222,"column_start":12,"column_end":25},"name":"has_lahf_sahf","qualname":"<ExtendedFunctionInfo>::has_lahf_sahf","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is LAHF/SAHF available in 64-bit mode?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":136916,"byte_end":136925,"line_start":4231,"line_end":4231,"column_start":12,"column_end":21},"name":"has_lzcnt","qualname":"<ExtendedFunctionInfo>::has_lzcnt","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is LZCNT available?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":137176,"byte_end":137189,"line_start":4240,"line_end":4240,"column_start":12,"column_end":25},"name":"has_prefetchw","qualname":"<ExtendedFunctionInfo>::has_prefetchw","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is PREFETCHW available?\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":137453,"byte_end":137471,"line_start":4249,"line_end":4249,"column_start":12,"column_end":30},"name":"has_syscall_sysret","qualname":"<ExtendedFunctionInfo>::has_syscall_sysret","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Are fast system calls available.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":137749,"byte_end":137768,"line_start":4258,"line_end":4258,"column_start":12,"column_end":31},"name":"has_execute_disable","qualname":"<ExtendedFunctionInfo>::has_execute_disable","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is there support for execute disable bit.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":138038,"byte_end":138052,"line_start":4267,"line_end":4267,"column_start":12,"column_end":26},"name":"has_1gib_pages","qualname":"<ExtendedFunctionInfo>::has_1gib_pages","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is there support for 1GiB pages.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":138321,"byte_end":138331,"line_start":4276,"line_end":4276,"column_start":12,"column_end":22},"name":"has_rdtscp","qualname":"<ExtendedFunctionInfo>::has_rdtscp","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check support for rdtscp instruction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":138590,"byte_end":138604,"line_start":4285,"line_end":4285,"column_start":12,"column_end":26},"name":"has_64bit_mode","qualname":"<ExtendedFunctionInfo>::has_64bit_mode","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check support for 64-bit mode.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2458},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":139921,"byte_end":139941,"line_start":4326,"line_end":4326,"column_start":12,"column_end":32},"name":"MemoryEncryptionInfo","qualname":"::MemoryEncryptionInfo","value":"MemoryEncryptionInfo {  }","parent":null,"children":[{"krate":0,"index":2459},{"krate":0,"index":2460},{"krate":0,"index":2461},{"krate":0,"index":2462}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2467},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":140139,"byte_end":140146,"line_start":4336,"line_end":4336,"column_start":9,"column_end":16},"name":"has_sme","qualname":"<MemoryEncryptionInfo>::has_sme","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Secure Memory Encryption is supported if set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2468},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":140301,"byte_end":140308,"line_start":4343,"line_end":4343,"column_start":9,"column_end":16},"name":"has_sev","qualname":"<MemoryEncryptionInfo>::has_sev","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"Secure Encrypted Virtualization is supported if set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2469},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":140450,"byte_end":140468,"line_start":4350,"line_end":4350,"column_start":9,"column_end":27},"name":"has_page_flush_msr","qualname":"<MemoryEncryptionInfo>::has_page_flush_msr","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"The Page Flush MSR is available if set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2470},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":140622,"byte_end":140632,"line_start":4357,"line_end":4357,"column_start":9,"column_end":19},"name":"has_sev_es","qualname":"<MemoryEncryptionInfo>::has_sev_es","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"SEV Encrypted State is supported if set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":140706,"byte_end":140732,"line_start":4362,"line_end":4362,"column_start":12,"column_end":38},"name":"physical_address_reduction","qualname":"<MemoryEncryptionInfo>::physical_address_reduction","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":140806,"byte_end":140820,"line_start":4366,"line_end":4366,"column_start":12,"column_end":26},"name":"c_bit_position","qualname":"<MemoryEncryptionInfo>::c_bit_position","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":140893,"byte_end":140913,"line_start":4370,"line_end":4370,"column_start":12,"column_end":32},"name":"max_encrypted_guests","qualname":"<MemoryEncryptionInfo>::max_encrypted_guests","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":140965,"byte_end":140983,"line_start":4374,"line_end":4374,"column_start":12,"column_end":30},"name":"min_sev_no_es_asid","qualname":"<MemoryEncryptionInfo>::min_sev_no_es_asid","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":4355,"byte_end":4360,"line_start":175,"line_end":175,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":17442,"byte_end":17452,"line_start":594,"line_end":594,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":18149,"byte_end":18162,"line_start":617,"line_end":617,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":19409,"byte_end":19422,"line_start":668,"line_end":668,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":19826,"byte_end":19835,"line_start":684,"line_end":684,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":30454,"byte_end":30463,"line_start":806,"line_end":806,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":39326,"byte_end":39336,"line_start":1257,"line_end":1257,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":39607,"byte_end":39622,"line_start":1270,"line_end":1270,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":40253,"byte_end":40264,"line_start":1292,"line_end":1292,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":69950,"byte_end":69969,"line_start":1964,"line_end":1964,"column_start":19,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":71174,"byte_end":71183,"line_start":2014,"line_end":2014,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":71256,"byte_end":71270,"line_start":2020,"line_end":2020,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":74041,"byte_end":74057,"line_start":2109,"line_end":2109,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":76366,"byte_end":76382,"line_start":2180,"line_end":2180,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":84662,"byte_end":84678,"line_start":2408,"line_end":2408,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":1181},{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":1189},{"krate":0,"index":1190},{"krate":0,"index":1191},{"krate":0,"index":1192},{"krate":0,"index":1193},{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1199},{"krate":0,"index":1200},{"krate":0,"index":1201},{"krate":0,"index":1202},{"krate":0,"index":1203},{"krate":0,"index":1204},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":94406,"byte_end":94427,"line_start":2762,"line_end":2762,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":94801,"byte_end":94826,"line_start":2778,"line_end":2778,"column_start":6,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":1576},{"krate":0,"index":1577},{"krate":0,"index":1578},{"krate":0,"index":1579},{"krate":0,"index":1580},{"krate":0,"index":1581},{"krate":0,"index":1582},{"krate":0,"index":1583}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":99106,"byte_end":99127,"line_start":2906,"line_end":2906,"column_start":21,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":99548,"byte_end":99569,"line_start":2918,"line_end":2918,"column_start":6,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":100892,"byte_end":100904,"line_start":2962,"line_end":2962,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":100999,"byte_end":101019,"line_start":2968,"line_end":2968,"column_start":19,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":102971,"byte_end":102988,"line_start":3050,"line_end":3050,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1972},{"krate":0,"index":1973},{"krate":0,"index":1974},{"krate":0,"index":1975},{"krate":0,"index":1976},{"krate":0,"index":1977},{"krate":0,"index":1978},{"krate":0,"index":1979},{"krate":0,"index":1980},{"krate":0,"index":1981},{"krate":0,"index":1982},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":107243,"byte_end":107260,"line_start":3196,"line_end":3196,"column_start":19,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":108031,"byte_end":108044,"line_start":3229,"line_end":3229,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":109458,"byte_end":109475,"line_start":3271,"line_end":3271,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":2007},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":110327,"byte_end":110343,"line_start":3307,"line_end":3307,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":2016},{"krate":0,"index":2017},{"krate":0,"index":2018}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":111190,"byte_end":111207,"line_start":3346,"line_end":3346,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2025},{"krate":0,"index":2026},{"krate":0,"index":2027},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":112983,"byte_end":112992,"line_start":3412,"line_end":3412,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":2037}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":113844,"byte_end":113853,"line_start":3445,"line_end":3445,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":114553,"byte_end":114572,"line_start":3471,"line_end":3471,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":2054}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":115410,"byte_end":115417,"line_start":3504,"line_end":3504,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2068},{"krate":0,"index":2069},{"krate":0,"index":2070},{"krate":0,"index":2071},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":117052,"byte_end":117066,"line_start":3556,"line_end":3556,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":117808,"byte_end":117822,"line_start":3582,"line_end":3582,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":118184,"byte_end":118194,"line_start":3598,"line_end":3598,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":211},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":118945,"byte_end":118963,"line_start":3624,"line_end":3624,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2103},{"krate":0,"index":2104},{"krate":0,"index":2105},{"krate":0,"index":2106},{"krate":0,"index":2107},{"krate":0,"index":2108},{"krate":0,"index":2109},{"krate":0,"index":2110},{"krate":0,"index":2111},{"krate":0,"index":2112},{"krate":0,"index":2113},{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":122574,"byte_end":122581,"line_start":3737,"line_end":3737,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":122898,"byte_end":122905,"line_start":3747,"line_end":3747,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":123996,"byte_end":124018,"line_start":3782,"line_end":3782,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":124660,"byte_end":124667,"line_start":3807,"line_end":3807,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":125978,"byte_end":125985,"line_start":3849,"line_end":3849,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2144},{"krate":0,"index":2145},{"krate":0,"index":2146},{"krate":0,"index":2147},{"krate":0,"index":2148},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":128590,"byte_end":128597,"line_start":3940,"line_end":3940,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":128868,"byte_end":128881,"line_start":3956,"line_end":3956,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":129902,"byte_end":129925,"line_start":3996,"line_end":3996,"column_start":19,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":130406,"byte_end":130420,"line_start":4016,"line_end":4016,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":130839,"byte_end":130853,"line_start":4028,"line_end":4028,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":131107,"byte_end":131121,"line_start":4039,"line_end":4039,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":131602,"byte_end":131616,"line_start":4059,"line_end":4059,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":133408,"byte_end":133423,"line_start":4118,"line_end":4118,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":133644,"byte_end":133664,"line_start":4128,"line_end":4128,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":140028,"byte_end":140048,"line_start":4333,"line_end":4333,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2467},{"krate":0,"index":2468},{"krate":0,"index":2469},{"krate":0,"index":2470},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":4355,"byte_end":4360,"line_start":175,"line_end":175,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":297},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":17442,"byte_end":17452,"line_start":594,"line_end":594,"column_start":6,"column_end":16},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":315},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":18149,"byte_end":18162,"line_start":617,"line_end":617,"column_start":19,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":323},"to":{"krate":1,"index":3653}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":19409,"byte_end":19422,"line_start":668,"line_end":668,"column_start":18,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":333},"to":{"krate":1,"index":2206}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":19826,"byte_end":19835,"line_start":684,"line_end":684,"column_start":6,"column_end":15},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":30454,"byte_end":30463,"line_start":806,"line_end":806,"column_start":23,"column_end":32},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":351},"to":{"krate":1,"index":7641}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":39326,"byte_end":39336,"line_start":1257,"line_end":1257,"column_start":23,"column_end":33},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":315},"to":{"krate":1,"index":7641}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":39607,"byte_end":39622,"line_start":1270,"line_end":1270,"column_start":6,"column_end":21},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":40253,"byte_end":40264,"line_start":1292,"line_end":1292,"column_start":6,"column_end":17},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":368},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":69950,"byte_end":69969,"line_start":1964,"line_end":1964,"column_start":19,"column_end":38},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":801},"to":{"krate":1,"index":3653}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":71174,"byte_end":71183,"line_start":2014,"line_end":2014,"column_start":18,"column_end":27},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":819},"to":{"krate":1,"index":2206}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":71256,"byte_end":71270,"line_start":2020,"line_end":2020,"column_start":6,"column_end":20},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":807},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":74041,"byte_end":74057,"line_start":2109,"line_end":2109,"column_start":6,"column_end":22},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":76366,"byte_end":76382,"line_start":2180,"line_end":2180,"column_start":6,"column_end":22},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":848},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":84662,"byte_end":84678,"line_start":2408,"line_end":2408,"column_start":6,"column_end":22},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1158},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":94406,"byte_end":94427,"line_start":2762,"line_end":2762,"column_start":6,"column_end":27},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":94801,"byte_end":94826,"line_start":2778,"line_end":2778,"column_start":6,"column_end":31},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":99106,"byte_end":99127,"line_start":2906,"line_end":2906,"column_start":21,"column_end":42},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1708},"to":{"krate":1,"index":7636}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":99548,"byte_end":99569,"line_start":2918,"line_end":2918,"column_start":6,"column_end":27},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":100892,"byte_end":100904,"line_start":2962,"line_end":2962,"column_start":18,"column_end":30},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1715},"to":{"krate":1,"index":2206}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":100999,"byte_end":101019,"line_start":2968,"line_end":2968,"column_start":19,"column_end":39},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1702},"to":{"krate":1,"index":3653}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":102971,"byte_end":102988,"line_start":3050,"line_end":3050,"column_start":6,"column_end":23},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1959},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":107243,"byte_end":107260,"line_start":3196,"line_end":3196,"column_start":19,"column_end":36},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1983},"to":{"krate":1,"index":3653}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":108031,"byte_end":108044,"line_start":3229,"line_end":3229,"column_start":6,"column_end":19},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1991},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":109458,"byte_end":109475,"line_start":3271,"line_end":3271,"column_start":6,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":2000},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":110327,"byte_end":110343,"line_start":3307,"line_end":3307,"column_start":6,"column_end":22},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2008},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":111190,"byte_end":111207,"line_start":3346,"line_end":3346,"column_start":6,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2019},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":112983,"byte_end":112992,"line_start":3412,"line_end":3412,"column_start":6,"column_end":15},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2028},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":113844,"byte_end":113853,"line_start":3445,"line_end":3445,"column_start":6,"column_end":15},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":2038},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":114553,"byte_end":114572,"line_start":3471,"line_end":3471,"column_start":6,"column_end":25},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":2046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":115410,"byte_end":115417,"line_start":3504,"line_end":3504,"column_start":6,"column_end":13},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":117052,"byte_end":117066,"line_start":3556,"line_end":3556,"column_start":19,"column_end":33},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":2072},"to":{"krate":1,"index":3653}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":117808,"byte_end":117822,"line_start":3582,"line_end":3582,"column_start":18,"column_end":32},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2078},"to":{"krate":1,"index":2206}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":118184,"byte_end":118194,"line_start":3598,"line_end":3598,"column_start":6,"column_end":16},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2084},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":118945,"byte_end":118963,"line_start":3624,"line_end":3624,"column_start":6,"column_end":24},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":2093},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":122574,"byte_end":122581,"line_start":3737,"line_end":3737,"column_start":21,"column_end":28},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2114},"to":{"krate":1,"index":7636}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":122898,"byte_end":122905,"line_start":3747,"line_end":3747,"column_start":6,"column_end":13},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":2114},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":123996,"byte_end":124018,"line_start":3782,"line_end":3782,"column_start":6,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":2120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":124660,"byte_end":124667,"line_start":3807,"line_end":3807,"column_start":19,"column_end":26},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":2128},"to":{"krate":1,"index":3653}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":125978,"byte_end":125985,"line_start":3849,"line_end":3849,"column_start":6,"column_end":13},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":2135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":128590,"byte_end":128597,"line_start":3940,"line_end":3940,"column_start":18,"column_end":25},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":2149},"to":{"krate":1,"index":2206}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":128868,"byte_end":128881,"line_start":3956,"line_end":3956,"column_start":6,"column_end":19},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":2166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":129902,"byte_end":129925,"line_start":3996,"line_end":3996,"column_start":19,"column_end":42},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":2175},"to":{"krate":1,"index":3653}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":130406,"byte_end":130420,"line_start":4016,"line_end":4016,"column_start":6,"column_end":20},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":2182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":130839,"byte_end":130853,"line_start":4028,"line_end":4028,"column_start":23,"column_end":37},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":2182},"to":{"krate":1,"index":7641}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":131107,"byte_end":131121,"line_start":4039,"line_end":4039,"column_start":21,"column_end":35},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":259},"to":{"krate":1,"index":7636}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":131602,"byte_end":131616,"line_start":4059,"line_end":4059,"column_start":6,"column_end":20},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":133408,"byte_end":133423,"line_start":4118,"line_end":4118,"column_start":18,"column_end":33},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":2220},"to":{"krate":1,"index":2206}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":133644,"byte_end":133664,"line_start":4128,"line_end":4128,"column_start":6,"column_end":26},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2212},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/raw-cpuid-7.0.3/src/lib.rs","byte_start":140028,"byte_end":140048,"line_start":4333,"line_end":4333,"column_start":6,"column_end":26},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":2458},"to":{"krate":4294967295,"index":4294967295}}]}