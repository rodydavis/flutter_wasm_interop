{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10","program":"/Users/rodydavis/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--edition=2018","--crate-name","blake2b_simd","/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=eb5a62445c00222f","-C","extra-filename=-eb5a62445c00222f","--out-dir","/Users/rodydavis/Developer/GitHub/packages/flutter_wasm_interop/example/target/rls/debug/deps","-L","dependency=/Users/rodydavis/Developer/GitHub/packages/flutter_wasm_interop/example/target/rls/debug/deps","--extern","arrayref=/Users/rodydavis/Developer/GitHub/packages/flutter_wasm_interop/example/target/rls/debug/deps/libarrayref-466001a085515f48.rmeta","--extern","arrayvec=/Users/rodydavis/Developer/GitHub/packages/flutter_wasm_interop/example/target/rls/debug/deps/libarrayvec-cc9b6dc92f1223fe.rmeta","--extern","constant_time_eq=/Users/rodydavis/Developer/GitHub/packages/flutter_wasm_interop/example/target/rls/debug/deps/libconstant_time_eq-739b47a2a39dbabe.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/rodydavis/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/rodydavis/Developer/GitHub/packages/flutter_wasm_interop/example/target/rls/debug/deps/libblake2b_simd-eb5a62445c00222f.rmeta"},"prelude":{"crate_id":{"name":"blake2b_simd","disambiguator":[7493727141357738623,2420015059697221991]},"crate_root":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src","external_crates":[{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5808000563841838002,6875932327897409807]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5459908120384850477,15760959269387734159]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11826469219384905814,12486183027959381912]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5497990426549684121,15109235050116755313]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9495953968349266340,8510226981626586408]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[423181384897816611,2293857470463835221]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5608331764705855408,15392280463108098182]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14701876030349379005,4369912422515260820]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[8984243875435576741,4446548522921354]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[4101421024496600006,15821692231896539213]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[3079379191059796654,13101802771042696873]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[7173097494859913114,11426318732171342333]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12351377766094969309,8390201886823579403]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[2739304812783641882,6504751215723634061]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","num":15,"id":{"name":"arrayref","disambiguator":[17623330587055210969,14338345016868187504]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/many.rs","num":16,"id":{"name":"arrayvec","disambiguator":[6708627378842619678,9509007949927534192]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","num":17,"id":{"name":"constant_time_eq","disambiguator":[2204926925120813939,9378452405456905865]}}],"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":0,"byte_end":22851,"line_start":1,"line_end":674,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":0,"byte_end":22851,"line_start":1,"line_end":674,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":110},{"krate":0,"index":136},{"krate":0,"index":215},{"krate":0,"index":280},{"krate":0,"index":324},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":741},{"krate":0,"index":758},{"krate":0,"index":391},{"krate":0,"index":414},{"krate":0,"index":416},{"krate":0,"index":774},{"krate":0,"index":785},{"krate":0,"index":418},{"krate":0,"index":428},{"krate":0,"index":433},{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":440},{"krate":0,"index":806},{"krate":0,"index":811},{"krate":0,"index":810},{"krate":0,"index":442},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":450},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":455},{"krate":0,"index":457}],"decl_id":null,"docs":" [![GitHub](https://img.shields.io/github/tag/oconnor663/blake2_simd.svg?label=GitHub)](https://github.com/oconnor663/blake2_simd) [![crates.io](https://img.shields.io/crates/v/blake2b_simd.svg)](https://crates.io/crates/blake2b_simd) [![Build Status](https://travis-ci.org/oconnor663/blake2_simd.svg?branch=master)](https://travis-ci.org/oconnor663/blake2_simd)","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":215},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/blake2bp.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"blake2bp","qualname":"::blake2bp","value":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/blake2bp.rs","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":637},{"krate":0,"index":643},{"krate":0,"index":235},{"krate":0,"index":249},{"krate":0,"index":251},{"krate":0,"index":645},{"krate":0,"index":658},{"krate":0,"index":253},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":271},{"krate":0,"index":273},{"krate":0,"index":279}],"decl_id":null,"docs":" BLAKE2bp, a variant of BLAKE2b that uses SIMD more efficiently.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":234},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/blake2bp.rs","byte_start":78296,"byte_end":78304,"line_start":52,"line_end":52,"column_start":8,"column_end":16},"name":"blake2bp","qualname":"::blake2bp::blake2bp","value":"fn (input: &[u8]) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" Compute the BLAKE2bp hash of a slice of bytes all at once, using default\n parameters.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":637},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/blake2bp.rs","byte_start":78901,"byte_end":78907,"line_start":70,"line_end":70,"column_start":12,"column_end":18},"name":"Params","qualname":"::blake2bp::Params","value":"Params {  }","parent":null,"children":[{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":642}],"decl_id":null,"docs":" A parameter builder for BLAKE2bp, just like the [`Params`](../struct.Params.html) type for\n BLAKE2b.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/blake2bp.rs","byte_start":79083,"byte_end":79086,"line_start":79,"line_end":79,"column_start":12,"column_end":15},"name":"new","qualname":"<Params>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `Params::default()`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/blake2bp.rs","byte_start":80935,"byte_end":80939,"line_start":123,"line_end":123,"column_start":12,"column_end":16},"name":"hash","qualname":"<Params>::hash","value":"fn (&self, input: &[u8]) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" Hash an input all at once with these parameters.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/blake2bp.rs","byte_start":82056,"byte_end":82064,"line_start":154,"line_end":154,"column_start":12,"column_end":20},"name":"to_state","qualname":"<Params>::to_state","value":"fn (&self) -> State","parent":null,"children":[],"decl_id":null,"docs":" Construct a BLAKE2bp `State` object based on these parameters.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/blake2bp.rs","byte_start":82361,"byte_end":82372,"line_start":161,"line_end":161,"column_start":12,"column_end":23},"name":"hash_length","qualname":"<Params>::hash_length","value":"fn (&mut self, length: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the length of the final hash, from 1 to `OUTBYTES` (64). Apart from controlling the\n length of the final `Hash`, this is also associated data, and changing it will result in a\n totally different hash.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/blake2bp.rs","byte_start":82776,"byte_end":82779,"line_start":173,"line_end":173,"column_start":12,"column_end":15},"name":"key","qualname":"<Params>::key","value":"fn (&mut self, key: &[u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Use a secret key, so that BLAKE2bp acts as a MAC. The maximum key length is `KEYBYTES`\n (64). An empty key is equivalent to having no key at all.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":645},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/blake2bp.rs","byte_start":84016,"byte_end":84021,"line_start":218,"line_end":218,"column_start":12,"column_end":17},"name":"State","qualname":"::blake2bp::State","value":"State {  }","parent":null,"children":[{"krate":0,"index":646},{"krate":0,"index":649},{"krate":0,"index":651},{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657}],"decl_id":null,"docs":" An incremental hasher for BLAKE2bp, just like the [`State`](../struct.State.html) type for\n BLAKE2b.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/blake2bp.rs","byte_start":84582,"byte_end":84585,"line_start":234,"line_end":234,"column_start":12,"column_end":15},"name":"new","qualname":"<State>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `State::default()` or `Params::default().to_state()`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/blake2bp.rs","byte_start":87309,"byte_end":87315,"line_start":301,"line_end":301,"column_start":12,"column_end":18},"name":"update","qualname":"<State>::update","value":"fn (&mut self, mut input: &[u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add input to the hash. You can call `update` any number of times.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/blake2bp.rs","byte_start":90414,"byte_end":90422,"line_start":365,"line_end":365,"column_start":12,"column_end":20},"name":"finalize","qualname":"<State>::finalize","value":"fn (&self) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" Finalize the state and return a `Hash`. This method is idempotent, and calling it multiple\n times will give the same result. It's also possible to `update` with more input in between.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/blake2bp.rs","byte_start":91769,"byte_end":91774,"line_start":401,"line_end":401,"column_start":12,"column_end":17},"name":"count","qualname":"<State>::count","value":"fn (&self) -> Count","parent":null,"children":[],"decl_id":null,"docs":" Return the total number of bytes input so far.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":324},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/many.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"many","qualname":"::many","value":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/many.rs","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":348},{"krate":0,"index":352},{"krate":0,"index":355},{"krate":0,"index":359},{"krate":0,"index":728},{"krate":0,"index":738},{"krate":0,"index":365},{"krate":0,"index":369},{"krate":0,"index":372}],"decl_id":null,"docs":" Interfaces for hashing multiple inputs at once, using SIMD more\n efficiently.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":342},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/many.rs","byte_start":119207,"byte_end":119217,"line_start":66,"line_end":66,"column_start":11,"column_end":21},"name":"MAX_DEGREE","qualname":"::many::MAX_DEGREE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The largest possible value of [`degree`](fn.degree.html) on the target\n platform.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":343},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/many.rs","byte_start":120591,"byte_end":120597,"line_start":92,"line_end":92,"column_start":8,"column_end":14},"name":"degree","qualname":"::many::degree","value":"fn () -> usize","parent":null,"children":[],"decl_id":null,"docs":" The parallelism degree of the implementation, detected at runtime. If you\n hash your inputs in small batches, making the batch size a multiple of\n `degree` will generally give good performance.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":359},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/many.rs","byte_start":123894,"byte_end":123905,"line_start":208,"line_end":208,"column_start":8,"column_end":19},"name":"update_many","qualname":"::many::update_many","value":"fn <'a, 'b, I, T> (pairs: I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Update any number of `State` objects at once.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":728},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/many.rs","byte_start":126357,"byte_end":126368,"line_start":268,"line_end":268,"column_start":12,"column_end":23},"name":"HashManyJob","qualname":"::many::HashManyJob","value":"HashManyJob {  }","parent":null,"children":[{"krate":0,"index":730},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737}],"decl_id":null,"docs":" A job for the [`hash_many`] function. After calling [`hash_many`] on a\n collection of `HashManyJob` objects, you can call [`to_hash`] on each job\n to get the result.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/many.rs","byte_start":126692,"byte_end":126695,"line_start":282,"line_end":282,"column_start":12,"column_end":15},"name":"new","qualname":"<HashManyJob>::new","value":"fn (params: &Params, input: &'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `HashManyJob` from a set of hashing parameters and an\n input.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/many.rs","byte_start":126671,"byte_end":126680,"line_start":281,"line_end":281,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/many.rs","byte_start":127978,"byte_end":127985,"line_start":321,"line_end":321,"column_start":12,"column_end":19},"name":"to_hash","qualname":"<HashManyJob>::to_hash","value":"fn (&self) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" Get the hash from a finished job. If you call this before calling\n [`hash_many`], it will panic in debug mode.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/many.rs","byte_start":127957,"byte_end":127966,"line_start":320,"line_end":320,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":372},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/many.rs","byte_start":129622,"byte_end":129631,"line_start":381,"line_end":381,"column_start":8,"column_end":17},"name":"hash_many","qualname":"::many::hash_many","value":"fn <'a, 'b, I> (hash_many_jobs: I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Hash any number of complete inputs all at once.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":380},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":2568,"byte_end":2576,"line_start":68,"line_end":68,"column_start":11,"column_end":19},"name":"OUTBYTES","qualname":"::OUTBYTES","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The max hash length.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":381},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":2643,"byte_end":2651,"line_start":70,"line_end":70,"column_start":11,"column_end":19},"name":"KEYBYTES","qualname":"::KEYBYTES","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The max key length.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":382},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":2719,"byte_end":2728,"line_start":72,"line_end":72,"column_start":11,"column_end":20},"name":"SALTBYTES","qualname":"::SALTBYTES","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The max salt length.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":383},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":2807,"byte_end":2820,"line_start":74,"line_end":74,"column_start":11,"column_end":24},"name":"PERSONALBYTES","qualname":"::PERSONALBYTES","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The max personalization length.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":384},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":3053,"byte_end":3063,"line_start":77,"line_end":77,"column_start":11,"column_end":21},"name":"BLOCKBYTES","qualname":"::BLOCKBYTES","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The number input bytes passed to each call to the compression function. Small benchmarks need\n to use an even multiple of `BLOCKBYTES`, or else their apparent throughput will be low.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":390},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":4501,"byte_end":4508,"line_start":117,"line_end":117,"column_start":8,"column_end":15},"name":"blake2b","qualname":"::blake2b","value":"fn (input: &[u8]) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" Compute the BLAKE2b hash of a slice of bytes all at once, using default\n parameters.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":741},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":5498,"byte_end":5504,"line_start":146,"line_end":146,"column_start":12,"column_end":18},"name":"Params","qualname":"::Params","value":"Params {  }","parent":null,"children":[{"krate":0,"index":742},{"krate":0,"index":743},{"krate":0,"index":744},{"krate":0,"index":746},{"krate":0,"index":748},{"krate":0,"index":750},{"krate":0,"index":751},{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":757}],"decl_id":null,"docs":" A parameter builder that exposes all the non-default BLAKE2 features.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":5931,"byte_end":5934,"line_start":165,"line_end":165,"column_start":12,"column_end":15},"name":"new","qualname":"<Params>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `Params::default()`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":5910,"byte_end":5919,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":7506,"byte_end":7510,"line_start":208,"line_end":208,"column_start":12,"column_end":16},"name":"hash","qualname":"<Params>::hash","value":"fn (&self, input: &[u8]) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" Hash an input all at once with these parameters.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":7485,"byte_end":7494,"line_start":207,"line_end":207,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":8189,"byte_end":8197,"line_start":230,"line_end":230,"column_start":12,"column_end":20},"name":"to_state","qualname":"<Params>::to_state","value":"fn (&self) -> State","parent":null,"children":[],"decl_id":null,"docs":" Construct a `State` object based on these parameters, for hashing input\n incrementally.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":8517,"byte_end":8528,"line_start":238,"line_end":238,"column_start":12,"column_end":23},"name":"hash_length","qualname":"<Params>::hash_length","value":"fn (&mut self, length: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the length of the final hash in bytes, from 1 to `OUTBYTES` (64). Apart from\n controlling the length of the final `Hash`, this is also associated data, and changing it\n will result in a totally different hash.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":8496,"byte_end":8505,"line_start":237,"line_end":237,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":8944,"byte_end":8947,"line_start":251,"line_end":251,"column_start":12,"column_end":15},"name":"key","qualname":"<Params>::key","value":"fn (&mut self, key: &[u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Use a secret key, so that BLAKE2 acts as a MAC. The maximum key length is `KEYBYTES` (64).\n An empty key is equivalent to having no key at all.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":8923,"byte_end":8932,"line_start":250,"line_end":250,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":9385,"byte_end":9389,"line_start":262,"line_end":262,"column_start":12,"column_end":16},"name":"salt","qualname":"<Params>::salt","value":"fn (&mut self, salt: &[u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" At most `SALTBYTES` (16). Shorter salts are padded with null bytes. An empty salt is\n equivalent to having no salt at all.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":9364,"byte_end":9373,"line_start":261,"line_end":261,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":9817,"byte_end":9825,"line_start":272,"line_end":272,"column_start":12,"column_end":20},"name":"personal","qualname":"<Params>::personal","value":"fn (&mut self, personalization: &[u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" At most `PERSONALBYTES` (16). Shorter personalizations are padded with null bytes. An empty\n personalization is equivalent to having no personalization at all.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":9796,"byte_end":9805,"line_start":271,"line_end":271,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":10288,"byte_end":10294,"line_start":285,"line_end":285,"column_start":12,"column_end":18},"name":"fanout","qualname":"<Params>::fanout","value":"fn (&mut self, fanout: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" From 0 (meaning unlimited) to 255. The default is 1 (meaning sequential).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":10267,"byte_end":10276,"line_start":284,"line_end":284,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":10524,"byte_end":10533,"line_start":292,"line_end":292,"column_start":12,"column_end":21},"name":"max_depth","qualname":"<Params>::max_depth","value":"fn (&mut self, depth: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" From 0 (meaning BLAKE2X B2 hashes), through 1 (the default, meaning sequential) to 255 (meaning unlimited).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":10503,"byte_end":10512,"line_start":291,"line_end":291,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":10725,"byte_end":10740,"line_start":299,"line_end":299,"column_start":12,"column_end":27},"name":"max_leaf_length","qualname":"<Params>::max_leaf_length","value":"fn (&mut self, length: u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" From 0 (the default, meaning unlimited or sequential) to `2^32 - 1`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":10704,"byte_end":10713,"line_start":298,"line_end":298,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":10954,"byte_end":10965,"line_start":306,"line_end":306,"column_start":12,"column_end":23},"name":"node_offset","qualname":"<Params>::node_offset","value":"fn (&mut self, offset: u64) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" From 0 (the default, meaning first, leftmost, leaf, or sequential) to `2^64 - 1`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":10933,"byte_end":10942,"line_start":305,"line_end":305,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":11150,"byte_end":11160,"line_start":313,"line_end":313,"column_start":12,"column_end":22},"name":"node_depth","qualname":"<Params>::node_depth","value":"fn (&mut self, depth: u8) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" From 0 (the default, meaning leaf or sequential) to 255.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":11129,"byte_end":11138,"line_start":312,"line_end":312,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":11345,"byte_end":11362,"line_start":320,"line_end":320,"column_start":12,"column_end":29},"name":"inner_hash_length","qualname":"<Params>::inner_hash_length","value":"fn (&mut self, length: usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" From 0 (the default, meaning sequential) to `OUTBYTES` (64).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":11324,"byte_end":11333,"line_start":319,"line_end":319,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":11829,"byte_end":11838,"line_start":332,"line_end":332,"column_start":12,"column_end":21},"name":"last_node","qualname":"<Params>::last_node","value":"fn (&mut self, last_node: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates the rightmost node in a row. This can also be changed on the\n `State` object, potentially after hashing has begun. See\n [`State::set_last_node`].","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":11808,"byte_end":11817,"line_start":331,"line_end":331,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":774},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":13342,"byte_end":13347,"line_start":389,"line_end":389,"column_start":12,"column_end":17},"name":"State","qualname":"::State","value":"State {  }","parent":null,"children":[{"krate":0,"index":775},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784}],"decl_id":null,"docs":" An incremental hasher for BLAKE2b.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":13650,"byte_end":13653,"line_start":402,"line_end":402,"column_start":12,"column_end":15},"name":"new","qualname":"<State>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `State::default()` or `Params::default().to_state()`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":15502,"byte_end":15508,"line_start":453,"line_end":453,"column_start":12,"column_end":18},"name":"update","qualname":"<State>::update","value":"fn (&mut self, mut input: &[u8]) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add input to the hash. You can call `update` any number of times.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":16928,"byte_end":16936,"line_start":482,"line_end":482,"column_start":12,"column_end":20},"name":"finalize","qualname":"<State>::finalize","value":"fn (&self) -> Hash","parent":null,"children":[],"decl_id":null,"docs":" Finalize the state and return a `Hash`. This method is idempotent, and calling it multiple\n times will give the same result. It's also possible to `update` with more input in between.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":17919,"byte_end":17932,"line_start":506,"line_end":506,"column_start":12,"column_end":25},"name":"set_last_node","qualname":"<State>::set_last_node","value":"fn (&mut self, last_node: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set a flag indicating that this is the last node of its level in a tree hash. This is\n equivalent to [`Params::last_node`], except that it can be set at any time before calling\n `finalize`. That allows callers to begin hashing a node without knowing ahead of time\n whether it's the last in its level. For more details about the intended use of this flag\n [the BLAKE2 spec].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":18349,"byte_end":18354,"line_start":519,"line_end":519,"column_start":12,"column_end":17},"name":"count","qualname":"<State>::count","value":"fn (&self) -> Count","parent":null,"children":[],"decl_id":null,"docs":" Return the total number of bytes input so far.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":806},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":20072,"byte_end":20076,"line_start":581,"line_end":581,"column_start":12,"column_end":16},"name":"Hash","qualname":"::Hash","value":"Hash {  }","parent":null,"children":[{"krate":0,"index":807},{"krate":0,"index":809}],"decl_id":null,"docs":" A finalized BLAKE2 hash, with constant-time equality.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":20302,"byte_end":20310,"line_start":589,"line_end":589,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Hash>::as_bytes","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Convert the hash to a byte slice. Note that if you're using BLAKE2 as a MAC, you need\n constant time equality, which `&[u8]` doesn't provide.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":20634,"byte_end":20642,"line_start":597,"line_end":597,"column_start":12,"column_end":20},"name":"as_array","qualname":"<Hash>::as_array","value":"fn (&self) -> &[u8; OUTBYTES]","parent":null,"children":[],"decl_id":null,"docs":" Convert the hash to a byte array. Note that if you're using BLAKE2 as a\n MAC, you need constant time equality, which arrays don't provide. This\n panics in debug mode if the length of the hash isn't `OUTBYTES`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":20613,"byte_end":20622,"line_start":596,"line_end":596,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":20904,"byte_end":20910,"line_start":604,"line_end":604,"column_start":12,"column_end":18},"name":"to_hex","qualname":"<Hash>::to_hex","value":"fn (&self) -> HexString","parent":null,"children":[],"decl_id":null,"docs":" Convert the hash to a lowercase hexadecimal\n [`ArrayString`](https://docs.rs/arrayvec/0.4/arrayvec/struct.ArrayString.html).\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":457},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":22580,"byte_end":22590,"line_start":664,"line_end":664,"column_start":9,"column_end":19},"name":"benchmarks","qualname":"::benchmarks","value":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","parent":null,"children":[{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":459},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":22623,"byte_end":22637,"line_start":667,"line_end":667,"column_start":12,"column_end":26},"name":"force_portable","qualname":"::benchmarks::force_portable","value":"fn (params: &mut Params) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":460},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":22745,"byte_end":22768,"line_start":671,"line_end":671,"column_start":12,"column_end":35},"name":"force_portable_blake2bp","qualname":"::benchmarks::force_portable_blake2bp","value":"fn (params: &mut blake2bp::Params) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/blake2bp.rs","byte_start":79020,"byte_end":79026,"line_start":77,"line_end":77,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/blake2bp.rs","byte_start":83059,"byte_end":83065,"line_start":182,"line_end":182,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/blake2bp.rs","byte_start":83144,"byte_end":83150,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/blake2bp.rs","byte_start":84487,"byte_end":84492,"line_start":232,"line_end":232,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/blake2bp.rs","byte_start":92140,"byte_end":92145,"line_start":415,"line_end":415,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/blake2bp.rs","byte_start":92360,"byte_end":92365,"line_start":426,"line_end":426,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/blake2bp.rs","byte_start":92604,"byte_end":92609,"line_start":437,"line_end":437,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/guts.rs","byte_start":98665,"byte_end":98679,"line_start":27,"line_end":27,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/guts.rs","byte_start":102480,"byte_end":102483,"line_start":144,"line_end":144,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/guts.rs","byte_start":102987,"byte_end":102995,"line_start":164,"line_end":164,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/guts.rs","byte_start":103270,"byte_end":103278,"line_start":180,"line_end":180,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/guts.rs","byte_start":103547,"byte_end":103553,"line_start":195,"line_end":195,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/many.rs","byte_start":126556,"byte_end":126567,"line_start":278,"line_end":278,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/many.rs","byte_start":128215,"byte_end":128226,"line_start":330,"line_end":330,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":5854,"byte_end":5860,"line_start":162,"line_end":162,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":396},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":403},{"krate":0,"index":405},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":12052,"byte_end":12058,"line_start":342,"line_end":342,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":12137,"byte_end":12143,"line_start":348,"line_end":348,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":13555,"byte_end":13560,"line_start":400,"line_end":400,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":19235,"byte_end":19240,"line_start":547,"line_end":547,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":19455,"byte_end":19460,"line_start":558,"line_end":558,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":19829,"byte_end":19834,"line_start":571,"line_end":571,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":20127,"byte_end":20131,"line_start":586,"line_end":586,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":21346,"byte_end":21350,"line_start":620,"line_end":620,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":21595,"byte_end":21599,"line_start":627,"line_end":627,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":21732,"byte_end":21736,"line_start":633,"line_end":633,"column_start":13,"column_end":17},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":21762,"byte_end":21766,"line_start":635,"line_end":635,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":21854,"byte_end":21858,"line_start":641,"line_end":641,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":2437,"byte_end":2445,"line_start":57,"line_end":57,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":215}},{"kind":"Mod","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":2465,"byte_end":2469,"line_start":59,"line_end":59,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":324}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/blake2bp.rs","byte_start":79020,"byte_end":79026,"line_start":77,"line_end":77,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/blake2bp.rs","byte_start":83059,"byte_end":83065,"line_start":182,"line_end":182,"column_start":18,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":637},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/blake2bp.rs","byte_start":83144,"byte_end":83150,"line_start":188,"line_end":188,"column_start":21,"column_end":27},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":637},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/blake2bp.rs","byte_start":84487,"byte_end":84492,"line_start":232,"line_end":232,"column_start":6,"column_end":11},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":645},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/blake2bp.rs","byte_start":92140,"byte_end":92145,"line_start":415,"line_end":415,"column_start":25,"column_end":30},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":645},"to":{"krate":1,"index":2903}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/blake2bp.rs","byte_start":92360,"byte_end":92365,"line_start":426,"line_end":426,"column_start":21,"column_end":26},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":645},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/blake2bp.rs","byte_start":92604,"byte_end":92609,"line_start":437,"line_end":437,"column_start":18,"column_end":23},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":645},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/guts.rs","byte_start":98665,"byte_end":98679,"line_start":27,"line_end":27,"column_start":6,"column_end":20},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":678},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/guts.rs","byte_start":102480,"byte_end":102483,"line_start":144,"line_end":144,"column_start":35,"column_end":38},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":297},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/guts.rs","byte_start":102987,"byte_end":102995,"line_start":164,"line_end":164,"column_start":6,"column_end":14},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":686},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/guts.rs","byte_start":103270,"byte_end":103278,"line_start":180,"line_end":180,"column_start":6,"column_end":14},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":696},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/guts.rs","byte_start":103547,"byte_end":103553,"line_start":195,"line_end":195,"column_start":6,"column_end":12},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/many.rs","byte_start":126556,"byte_end":126567,"line_start":278,"line_end":278,"column_start":10,"column_end":21},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":728},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/many.rs","byte_start":128215,"byte_end":128226,"line_start":330,"line_end":330,"column_start":25,"column_end":36},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":728},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":5854,"byte_end":5860,"line_start":162,"line_end":162,"column_start":6,"column_end":12},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":741},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":12052,"byte_end":12058,"line_start":342,"line_end":342,"column_start":18,"column_end":24},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":741},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":12137,"byte_end":12143,"line_start":348,"line_end":348,"column_start":21,"column_end":27},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":741},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":13555,"byte_end":13560,"line_start":400,"line_end":400,"column_start":6,"column_end":11},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":774},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":19235,"byte_end":19240,"line_start":547,"line_end":547,"column_start":25,"column_end":30},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":774},"to":{"krate":1,"index":2903}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":19455,"byte_end":19460,"line_start":558,"line_end":558,"column_start":21,"column_end":26},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":774},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":19829,"byte_end":19834,"line_start":571,"line_end":571,"column_start":18,"column_end":23},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":774},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":20127,"byte_end":20131,"line_start":586,"line_end":586,"column_start":6,"column_end":10},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":806},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":21346,"byte_end":21350,"line_start":620,"line_end":620,"column_start":20,"column_end":24},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":806},"to":{"krate":2,"index":2040}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":21595,"byte_end":21599,"line_start":627,"line_end":627,"column_start":26,"column_end":30},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":806},"to":{"krate":2,"index":2040}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":21732,"byte_end":21736,"line_start":633,"line_end":633,"column_start":13,"column_end":17},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":806},"to":{"krate":2,"index":2045}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":21762,"byte_end":21766,"line_start":635,"line_end":635,"column_start":22,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":806},"to":{"krate":2,"index":2249}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/blake2b_simd-0.5.10/src/lib.rs","byte_start":21854,"byte_end":21858,"line_start":641,"line_end":641,"column_start":21,"column_end":25},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":806},"to":{"krate":2,"index":7636}}]}