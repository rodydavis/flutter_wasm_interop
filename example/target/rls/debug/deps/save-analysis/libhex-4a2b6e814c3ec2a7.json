{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2","program":"/Users/rodydavis/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","hex","/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=4a2b6e814c3ec2a7","-C","extra-filename=-4a2b6e814c3ec2a7","--out-dir","/Users/rodydavis/Developer/GitHub/packages/flutter_wasm_interop/example/target/rls/debug/deps","-L","dependency=/Users/rodydavis/Developer/GitHub/packages/flutter_wasm_interop/example/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/rodydavis/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/rodydavis/Developer/GitHub/packages/flutter_wasm_interop/example/target/rls/debug/deps/libhex-4a2b6e814c3ec2a7.rmeta"},"prelude":{"crate_id":{"name":"hex","disambiguator":[10655807392430053650,5567649764695308562]},"crate_root":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src","external_crates":[{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5808000563841838002,6875932327897409807]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[5459908120384850477,15760959269387734159]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11826469219384905814,12486183027959381912]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[5497990426549684121,15109235050116755313]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9495953968349266340,8510226981626586408]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[423181384897816611,2293857470463835221]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5608331764705855408,15392280463108098182]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14701876030349379005,4369912422515260820]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[8984243875435576741,4446548522921354]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[4101421024496600006,15821692231896539213]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[3079379191059796654,13101802771042696873]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[7173097494859913114,11426318732171342333]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[12351377766094969309,8390201886823579403]}},{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[2739304812783641882,6504751215723634061]}}],"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","byte_start":0,"byte_end":11473,"line_start":1,"line_end":406,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","byte_start":0,"byte_end":11473,"line_start":1,"line_end":406,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":10},{"krate":0,"index":14},{"krate":0,"index":45},{"krate":0,"index":60},{"krate":0,"index":58},{"krate":0,"index":57},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":38},{"krate":0,"index":62},{"krate":0,"index":68},{"krate":0,"index":74},{"krate":0,"index":80},{"krate":0,"index":86},{"krate":0,"index":92},{"krate":0,"index":98},{"krate":0,"index":104},{"krate":0,"index":110},{"krate":0,"index":116},{"krate":0,"index":122},{"krate":0,"index":128},{"krate":0,"index":134},{"krate":0,"index":140},{"krate":0,"index":146},{"krate":0,"index":152},{"krate":0,"index":158},{"krate":0,"index":164},{"krate":0,"index":170},{"krate":0,"index":176},{"krate":0,"index":182},{"krate":0,"index":188},{"krate":0,"index":194},{"krate":0,"index":200},{"krate":0,"index":206},{"krate":0,"index":212},{"krate":0,"index":218},{"krate":0,"index":224},{"krate":0,"index":230},{"krate":0,"index":236},{"krate":0,"index":242},{"krate":0,"index":248},{"krate":0,"index":254},{"krate":0,"index":260},{"krate":0,"index":266},{"krate":0,"index":272},{"krate":0,"index":278},{"krate":0,"index":284},{"krate":0,"index":290},{"krate":0,"index":296},{"krate":0,"index":302},{"krate":0,"index":308},{"krate":0,"index":314},{"krate":0,"index":320},{"krate":0,"index":326},{"krate":0,"index":332},{"krate":0,"index":338},{"krate":0,"index":344},{"krate":0,"index":350},{"krate":0,"index":356},{"krate":0,"index":362},{"krate":0,"index":368},{"krate":0,"index":374},{"krate":0,"index":380},{"krate":0,"index":386},{"krate":0,"index":392},{"krate":0,"index":398},{"krate":0,"index":404},{"krate":0,"index":410},{"krate":0,"index":416},{"krate":0,"index":422},{"krate":0,"index":428},{"krate":0,"index":434},{"krate":0,"index":440},{"krate":0,"index":446},{"krate":0,"index":452},{"krate":0,"index":458},{"krate":0,"index":464},{"krate":0,"index":470},{"krate":0,"index":476},{"krate":0,"index":482},{"krate":0,"index":488},{"krate":0,"index":494},{"krate":0,"index":500},{"krate":0,"index":506},{"krate":0,"index":512},{"krate":0,"index":518},{"krate":0,"index":524},{"krate":0,"index":530},{"krate":0,"index":536},{"krate":0,"index":542},{"krate":0,"index":548},{"krate":0,"index":554},{"krate":0,"index":560},{"krate":0,"index":566},{"krate":0,"index":572},{"krate":0,"index":578},{"krate":0,"index":584},{"krate":0,"index":590},{"krate":0,"index":596},{"krate":0,"index":602},{"krate":0,"index":608},{"krate":0,"index":614},{"krate":0,"index":620},{"krate":0,"index":626},{"krate":0,"index":632},{"krate":0,"index":638},{"krate":0,"index":644},{"krate":0,"index":650},{"krate":0,"index":656},{"krate":0,"index":662},{"krate":0,"index":668},{"krate":0,"index":674},{"krate":0,"index":680},{"krate":0,"index":686},{"krate":0,"index":692},{"krate":0,"index":698},{"krate":0,"index":704},{"krate":0,"index":710},{"krate":0,"index":716},{"krate":0,"index":722},{"krate":0,"index":728},{"krate":0,"index":734},{"krate":0,"index":740},{"krate":0,"index":746},{"krate":0,"index":752},{"krate":0,"index":758},{"krate":0,"index":764},{"krate":0,"index":770},{"krate":0,"index":776},{"krate":0,"index":782},{"krate":0,"index":788},{"krate":0,"index":794},{"krate":0,"index":800},{"krate":0,"index":806},{"krate":0,"index":812},{"krate":0,"index":818},{"krate":0,"index":824},{"krate":0,"index":830},{"krate":0,"index":836},{"krate":0,"index":842},{"krate":0,"index":848},{"krate":0,"index":854},{"krate":0,"index":860},{"krate":0,"index":866},{"krate":0,"index":872},{"krate":0,"index":878},{"krate":0,"index":884},{"krate":0,"index":890},{"krate":0,"index":896},{"krate":0,"index":902},{"krate":0,"index":908},{"krate":0,"index":914},{"krate":0,"index":920},{"krate":0,"index":926},{"krate":0,"index":932},{"krate":0,"index":938},{"krate":0,"index":944},{"krate":0,"index":950},{"krate":0,"index":956},{"krate":0,"index":962},{"krate":0,"index":968},{"krate":0,"index":974},{"krate":0,"index":980},{"krate":0,"index":986},{"krate":0,"index":992},{"krate":0,"index":998},{"krate":0,"index":1004},{"krate":0,"index":1010},{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":43}],"decl_id":null,"docs":" Encoding and decoding hex strings.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":5},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","byte_start":1357,"byte_end":1362,"line_start":47,"line_end":47,"column_start":11,"column_end":16},"name":"ToHex","qualname":"::ToHex","value":"ToHex","parent":null,"children":[{"krate":0,"index":6},{"krate":0,"index":8}],"decl_id":null,"docs":" Encoding values as hex string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","byte_start":1485,"byte_end":1494,"line_start":50,"line_end":50,"column_start":8,"column_end":17},"name":"write_hex","qualname":"::ToHex::write_hex","value":"fn <W> (&self, w: &mut W) -> fmt::Result","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":" Writes the hex string representing `self` into `w`. Lower case letters\n are used (e.g. `f9b4ca`).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","byte_start":1665,"byte_end":1680,"line_start":54,"line_end":54,"column_start":8,"column_end":23},"name":"write_hex_upper","qualname":"::ToHex::write_hex_upper","value":"fn <W> (&self, w: &mut W) -> fmt::Result","parent":{"krate":0,"index":5},"children":[],"decl_id":null,"docs":" Writes the hex string representing `self` into `w`. Upper case letters\n are used (e.g. `F9B4CA`).\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":46},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","byte_start":2655,"byte_end":2674,"line_start":87,"line_end":87,"column_start":5,"column_end":24},"name":"InvalidHexCharacter","qualname":"::FromHexError::InvalidHexCharacter","value":"FromHexError::InvalidHexCharacter { c, index }","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" An invalid character was found. Valid ones are: `0...9`, `a...f`\n or `A...F`.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":49},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","byte_start":2822,"byte_end":2831,"line_start":94,"line_end":94,"column_start":5,"column_end":14},"name":"OddLength","qualname":"::FromHexError::OddLength","value":"FromHexError::OddLength","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" A hex string's length needs to be even, as two digits correspond to\n one byte.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":51},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","byte_start":3004,"byte_end":3023,"line_start":99,"line_end":99,"column_start":5,"column_end":24},"name":"InvalidStringLength","qualname":"::FromHexError::InvalidStringLength","value":"FromHexError::InvalidStringLength","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" If the hex string is decoded into a fixed sized container, such as an\n array, the hex string's length * 2 has to match the container's\n length.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":45},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","byte_start":2543,"byte_end":2555,"line_start":84,"line_end":84,"column_start":10,"column_end":22},"name":"FromHexError","qualname":"::FromHexError","value":"FromHexError::{InvalidHexCharacter, OddLength, InvalidStringLength}","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":51}],"decl_id":null,"docs":" The error type for decoding a hex string into `Vec<u8>` or `[u8; N]`.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":28},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","byte_start":4263,"byte_end":4270,"line_start":146,"line_end":146,"column_start":11,"column_end":18},"name":"FromHex","qualname":"::FromHex","value":"FromHex: Sized","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30}],"decl_id":null,"docs":" Types that can be decoded from a hex string.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":29},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","byte_start":4289,"byte_end":4294,"line_start":147,"line_end":147,"column_start":10,"column_end":15},"name":"Error","qualname":"::FromHex::Error","value":"type Error;","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","byte_start":4573,"byte_end":4581,"line_start":154,"line_end":154,"column_start":8,"column_end":16},"name":"from_hex","qualname":"::FromHex::from_hex","value":"fn <T> (hex: T) -> Result<Self, Self::Error>","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" Creates an instance of type `Self` from the given hex string, or fails\n with a custom error type.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":39},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","byte_start":7679,"byte_end":7685,"line_start":251,"line_end":251,"column_start":8,"column_end":14},"name":"encode","qualname":"::encode","value":"fn <T> (data: T) -> String","parent":null,"children":[],"decl_id":null,"docs":" Encodes `data` as hex string using lowercase characters.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":41},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","byte_start":8234,"byte_end":8246,"line_start":269,"line_end":269,"column_start":8,"column_end":20},"name":"encode_upper","qualname":"::encode_upper","value":"fn <T> (data: T) -> String","parent":null,"children":[],"decl_id":null,"docs":" Encodes `data` as hex string using uppercase characters.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":43},"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","byte_start":8951,"byte_end":8957,"line_start":292,"line_end":292,"column_start":8,"column_end":14},"name":"decode","qualname":"::decode","value":"fn <T> (data: T) -> Result<Vec<u8>, FromHexError>","parent":null,"children":[],"decl_id":null,"docs":" Decodes a hex string into raw bytes.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","byte_start":2043,"byte_end":2044,"line_start":68,"line_end":68,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","byte_start":3050,"byte_end":3062,"line_start":102,"line_end":102,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","byte_start":3379,"byte_end":3391,"line_start":113,"line_end":113,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","byte_start":5006,"byte_end":5009,"line_start":171,"line_end":171,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","byte_start":2043,"byte_end":2044,"line_start":68,"line_end":68,"column_start":32,"column_end":33},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":15},"to":{"krate":0,"index":5}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","byte_start":3050,"byte_end":3062,"line_start":102,"line_end":102,"column_start":23,"column_end":35},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":45},"to":{"krate":1,"index":1616}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","byte_start":3379,"byte_end":3391,"line_start":113,"line_end":113,"column_start":23,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":45},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","byte_start":4272,"byte_end":4277,"line_start":146,"line_end":146,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":1538},"to":{"krate":0,"index":28}},{"span":{"file_name":"/Users/rodydavis/.cargo/registry/src/github.com-1ecc6299db9ec823/hex-0.3.2/src/lib.rs","byte_start":5006,"byte_end":5009,"line_start":171,"line_end":171,"column_start":18,"column_end":21},"kind":{"Impl":{"id":3}},"from":{"krate":5,"index":3846},"to":{"krate":0,"index":28}}]}